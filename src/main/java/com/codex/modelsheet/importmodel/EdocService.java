// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: edoc_service.proto
package com.codex.modelsheet.importmodel;
public final class EdocService {
  private EdocService() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ExportEPackRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ExportEPackRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of objects to be exported.
     * </pre>
     *
     * <code>repeated .ExportEPackRequest.Object object = 1;</code>
     */
    java.util.List<EdocService.ExportEPackRequest.Object> 
        getObjectList();
    /**
     * <pre>
     * List of objects to be exported.
     * </pre>
     *
     * <code>repeated .ExportEPackRequest.Object object = 1;</code>
     */
    EdocService.ExportEPackRequest.Object getObject(int index);
    /**
     * <pre>
     * List of objects to be exported.
     * </pre>
     *
     * <code>repeated .ExportEPackRequest.Object object = 1;</code>
     */
    int getObjectCount();
    /**
     * <pre>
     * List of objects to be exported.
     * </pre>
     *
     * <code>repeated .ExportEPackRequest.Object object = 1;</code>
     */
    java.util.List<? extends EdocService.ExportEPackRequest.ObjectOrBuilder> 
        getObjectOrBuilderList();
    /**
     * <pre>
     * List of objects to be exported.
     * </pre>
     *
     * <code>repeated .ExportEPackRequest.Object object = 1;</code>
     */
    EdocService.ExportEPackRequest.ObjectOrBuilder getObjectOrBuilder(
        int index);

    /**
     * <pre>
     * Flag to control automatic export of dependencies.
     * If true, the dependency objects will also be exported and the term
     * 'requested objects' will refer to union of both explcitly requested and
     * implicitly requested due to dependency.
     * </pre>
     *
     * <code>optional bool export_dependencies = 2 [default = false];</code>
     * @return Whether the exportDependencies field is set.
     */
    boolean hasExportDependencies();
    /**
     * <pre>
     * Flag to control automatic export of dependencies.
     * If true, the dependency objects will also be exported and the term
     * 'requested objects' will refer to union of both explcitly requested and
     * implicitly requested due to dependency.
     * </pre>
     *
     * <code>optional bool export_dependencies = 2 [default = false];</code>
     * @return The exportDependencies.
     */
    boolean getExportDependencies();

    /**
     * <pre>
     * Flag to control automatic export of permissions.
     * If true, the permissions of the objects will also be exported and if the
     * dependencies are also requested, then permissions of those dependencies
     * will be exported as well.
     * </pre>
     *
     * <code>optional bool export_permissions = 3 [default = false];</code>
     * @return Whether the exportPermissions field is set.
     */
    boolean hasExportPermissions();
    /**
     * <pre>
     * Flag to control automatic export of permissions.
     * If true, the permissions of the objects will also be exported and if the
     * dependencies are also requested, then permissions of those dependencies
     * will be exported as well.
     * </pre>
     *
     * <code>optional bool export_permissions = 3 [default = false];</code>
     * @return The exportPermissions.
     */
    boolean getExportPermissions();

    /**
     * <pre>
     * Format type of the EDoc representation.
     * </pre>
     *
     * <code>optional .EDocFormatType.E format_type = 4 [default = YAML];</code>
     * @return Whether the formatType field is set.
     */
    boolean hasFormatType();
    /**
     * <pre>
     * Format type of the EDoc representation.
     * </pre>
     *
     * <code>optional .EDocFormatType.E format_type = 4 [default = YAML];</code>
     * @return The formatType.
     */
    EdocCommon.EDocFormatType.E getFormatType();
  }
  /**
   * <pre>
   * POST API : /callosum/v1/metadata/edoc/exportEPack
   * argument1 request : ExportEPackRequest proto serialized as JSON string
   * Returns ExportEPackResponse proto serialized as JSON string.
   * </pre>
   *
   * Protobuf type {@code ExportEPackRequest}
   */
  public static final class ExportEPackRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ExportEPackRequest)
      ExportEPackRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ExportEPackRequest.newBuilder() to construct.
    private ExportEPackRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ExportEPackRequest() {
      object_ = java.util.Collections.emptyList();
      formatType_ = 1;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ExportEPackRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ExportEPackRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                object_ = new java.util.ArrayList<EdocService.ExportEPackRequest.Object>();
                mutable_bitField0_ |= 0x00000001;
              }
              object_.add(
                  input.readMessage(EdocService.ExportEPackRequest.Object.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              exportDependencies_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              exportPermissions_ = input.readBool();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              EdocCommon.EDocFormatType.E value = EdocCommon.EDocFormatType.E.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                formatType_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          object_ = java.util.Collections.unmodifiableList(object_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EdocService.internal_static_ExportEPackRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EdocService.internal_static_ExportEPackRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EdocService.ExportEPackRequest.class, EdocService.ExportEPackRequest.Builder.class);
    }

    public interface ObjectOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ExportEPackRequest.Object)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Type can have one of the following values:
       * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
       * In addition, following deprecated types are also acceptable for a short
       * duration in future:
       * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
       * * LOGICAL_TABLE - for worksheet, view and table.
       * * PINBOARD_ANSWER_BOOK - for pinboard.
       * * QUESTION_ANSWER_BOOK - for answer.
       * </pre>
       *
       * <code>optional .EDocObjectType.E type = 1;</code>
       * @return Whether the type field is set.
       */
      boolean hasType();
      /**
       * <pre>
       * Type can have one of the following values:
       * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
       * In addition, following deprecated types are also acceptable for a short
       * duration in future:
       * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
       * * LOGICAL_TABLE - for worksheet, view and table.
       * * PINBOARD_ANSWER_BOOK - for pinboard.
       * * QUESTION_ANSWER_BOOK - for answer.
       * </pre>
       *
       * <code>optional .EDocObjectType.E type = 1;</code>
       * @return The type.
       */
      EdocCommon.EDocObjectType.E getType();

      /**
       * <pre>
       * Id of the object to be exported.
       * </pre>
       *
       * <code>optional string id = 2;</code>
       * @return Whether the id field is set.
       */
      boolean hasId();
      /**
       * <pre>
       * Id of the object to be exported.
       * </pre>
       *
       * <code>optional string id = 2;</code>
       * @return The id.
       */
      java.lang.String getId();
      /**
       * <pre>
       * Id of the object to be exported.
       * </pre>
       *
       * <code>optional string id = 2;</code>
       * @return The bytes for id.
       */
      com.google.protobuf.ByteString
          getIdBytes();
    }
    /**
     * Protobuf type {@code ExportEPackRequest.Object}
     */
    public static final class Object extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:ExportEPackRequest.Object)
        ObjectOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Object.newBuilder() to construct.
      private Object(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Object() {
        type_ = 0;
        id_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Object();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Object(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();
                  @SuppressWarnings("deprecation")
                EdocCommon.EDocObjectType.E value = EdocCommon.EDocObjectType.E.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  type_ = rawValue;
                }
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                id_ = bs;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_ExportEPackRequest_Object_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_ExportEPackRequest_Object_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.ExportEPackRequest.Object.class, EdocService.ExportEPackRequest.Object.Builder.class);
      }

      private int bitField0_;
      public static final int TYPE_FIELD_NUMBER = 1;
      private int type_;
      /**
       * <pre>
       * Type can have one of the following values:
       * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
       * In addition, following deprecated types are also acceptable for a short
       * duration in future:
       * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
       * * LOGICAL_TABLE - for worksheet, view and table.
       * * PINBOARD_ANSWER_BOOK - for pinboard.
       * * QUESTION_ANSWER_BOOK - for answer.
       * </pre>
       *
       * <code>optional .EDocObjectType.E type = 1;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Type can have one of the following values:
       * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
       * In addition, following deprecated types are also acceptable for a short
       * duration in future:
       * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
       * * LOGICAL_TABLE - for worksheet, view and table.
       * * PINBOARD_ANSWER_BOOK - for pinboard.
       * * QUESTION_ANSWER_BOOK - for answer.
       * </pre>
       *
       * <code>optional .EDocObjectType.E type = 1;</code>
       * @return The type.
       */
      @java.lang.Override public EdocCommon.EDocObjectType.E getType() {
        @SuppressWarnings("deprecation")
        EdocCommon.EDocObjectType.E result = EdocCommon.EDocObjectType.E.valueOf(type_);
        return result == null ? EdocCommon.EDocObjectType.E.ANSWER : result;
      }

      public static final int ID_FIELD_NUMBER = 2;
      private volatile java.lang.Object id_;
      /**
       * <pre>
       * Id of the object to be exported.
       * </pre>
       *
       * <code>optional string id = 2;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Id of the object to be exported.
       * </pre>
       *
       * <code>optional string id = 2;</code>
       * @return The id.
       */
      @java.lang.Override
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Id of the object to be exported.
       * </pre>
       *
       * <code>optional string id = 2;</code>
       * @return The bytes for id.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeEnum(1, type_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, type_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EdocService.ExportEPackRequest.Object)) {
          return super.equals(obj);
        }
        EdocService.ExportEPackRequest.Object other = (EdocService.ExportEPackRequest.Object) obj;

        if (hasType() != other.hasType()) return false;
        if (hasType()) {
          if (type_ != other.type_) return false;
        }
        if (hasId() != other.hasId()) return false;
        if (hasId()) {
          if (!getId()
              .equals(other.getId())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasType()) {
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + type_;
        }
        if (hasId()) {
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EdocService.ExportEPackRequest.Object parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.ExportEPackRequest.Object parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.ExportEPackRequest.Object parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.ExportEPackRequest.Object parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.ExportEPackRequest.Object parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.ExportEPackRequest.Object parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.ExportEPackRequest.Object parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.ExportEPackRequest.Object parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.ExportEPackRequest.Object parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EdocService.ExportEPackRequest.Object parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.ExportEPackRequest.Object parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.ExportEPackRequest.Object parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EdocService.ExportEPackRequest.Object prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code ExportEPackRequest.Object}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ExportEPackRequest.Object)
          EdocService.ExportEPackRequest.ObjectOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EdocService.internal_static_ExportEPackRequest_Object_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EdocService.internal_static_ExportEPackRequest_Object_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EdocService.ExportEPackRequest.Object.class, EdocService.ExportEPackRequest.Object.Builder.class);
        }

        // Construct using EdocService.ExportEPackRequest.Object.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          type_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EdocService.internal_static_ExportEPackRequest_Object_descriptor;
        }

        @java.lang.Override
        public EdocService.ExportEPackRequest.Object getDefaultInstanceForType() {
          return EdocService.ExportEPackRequest.Object.getDefaultInstance();
        }

        @java.lang.Override
        public EdocService.ExportEPackRequest.Object build() {
          EdocService.ExportEPackRequest.Object result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EdocService.ExportEPackRequest.Object buildPartial() {
          EdocService.ExportEPackRequest.Object result = new EdocService.ExportEPackRequest.Object(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.type_ = type_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.id_ = id_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EdocService.ExportEPackRequest.Object) {
            return mergeFrom((EdocService.ExportEPackRequest.Object)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EdocService.ExportEPackRequest.Object other) {
          if (other == EdocService.ExportEPackRequest.Object.getDefaultInstance()) return this;
          if (other.hasType()) {
            setType(other.getType());
          }
          if (other.hasId()) {
            bitField0_ |= 0x00000002;
            id_ = other.id_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EdocService.ExportEPackRequest.Object parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EdocService.ExportEPackRequest.Object) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int type_ = 0;
        /**
         * <pre>
         * Type can have one of the following values:
         * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
         * In addition, following deprecated types are also acceptable for a short
         * duration in future:
         * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
         * * LOGICAL_TABLE - for worksheet, view and table.
         * * PINBOARD_ANSWER_BOOK - for pinboard.
         * * QUESTION_ANSWER_BOOK - for answer.
         * </pre>
         *
         * <code>optional .EDocObjectType.E type = 1;</code>
         * @return Whether the type field is set.
         */
        @java.lang.Override public boolean hasType() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Type can have one of the following values:
         * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
         * In addition, following deprecated types are also acceptable for a short
         * duration in future:
         * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
         * * LOGICAL_TABLE - for worksheet, view and table.
         * * PINBOARD_ANSWER_BOOK - for pinboard.
         * * QUESTION_ANSWER_BOOK - for answer.
         * </pre>
         *
         * <code>optional .EDocObjectType.E type = 1;</code>
         * @return The type.
         */
        @java.lang.Override
        public EdocCommon.EDocObjectType.E getType() {
          @SuppressWarnings("deprecation")
          EdocCommon.EDocObjectType.E result = EdocCommon.EDocObjectType.E.valueOf(type_);
          return result == null ? EdocCommon.EDocObjectType.E.ANSWER : result;
        }
        /**
         * <pre>
         * Type can have one of the following values:
         * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
         * In addition, following deprecated types are also acceptable for a short
         * duration in future:
         * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
         * * LOGICAL_TABLE - for worksheet, view and table.
         * * PINBOARD_ANSWER_BOOK - for pinboard.
         * * QUESTION_ANSWER_BOOK - for answer.
         * </pre>
         *
         * <code>optional .EDocObjectType.E type = 1;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(EdocCommon.EDocObjectType.E value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Type can have one of the following values:
         * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
         * In addition, following deprecated types are also acceptable for a short
         * duration in future:
         * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
         * * LOGICAL_TABLE - for worksheet, view and table.
         * * PINBOARD_ANSWER_BOOK - for pinboard.
         * * QUESTION_ANSWER_BOOK - for answer.
         * </pre>
         *
         * <code>optional .EDocObjectType.E type = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object id_ = "";
        /**
         * <pre>
         * Id of the object to be exported.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @return Whether the id field is set.
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Id of the object to be exported.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @return The id.
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              id_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Id of the object to be exported.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @return The bytes for id.
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Id of the object to be exported.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Id of the object to be exported.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Id of the object to be exported.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @param value The bytes for id to set.
         * @return This builder for chaining.
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          id_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:ExportEPackRequest.Object)
      }

      // @@protoc_insertion_point(class_scope:ExportEPackRequest.Object)
      private static final EdocService.ExportEPackRequest.Object DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EdocService.ExportEPackRequest.Object();
      }

      public static EdocService.ExportEPackRequest.Object getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Object>
          PARSER = new com.google.protobuf.AbstractParser<Object>() {
        @java.lang.Override
        public Object parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Object(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Object> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Object> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EdocService.ExportEPackRequest.Object getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int OBJECT_FIELD_NUMBER = 1;
    private java.util.List<EdocService.ExportEPackRequest.Object> object_;
    /**
     * <pre>
     * List of objects to be exported.
     * </pre>
     *
     * <code>repeated .ExportEPackRequest.Object object = 1;</code>
     */
    @java.lang.Override
    public java.util.List<EdocService.ExportEPackRequest.Object> getObjectList() {
      return object_;
    }
    /**
     * <pre>
     * List of objects to be exported.
     * </pre>
     *
     * <code>repeated .ExportEPackRequest.Object object = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EdocService.ExportEPackRequest.ObjectOrBuilder> 
        getObjectOrBuilderList() {
      return object_;
    }
    /**
     * <pre>
     * List of objects to be exported.
     * </pre>
     *
     * <code>repeated .ExportEPackRequest.Object object = 1;</code>
     */
    @java.lang.Override
    public int getObjectCount() {
      return object_.size();
    }
    /**
     * <pre>
     * List of objects to be exported.
     * </pre>
     *
     * <code>repeated .ExportEPackRequest.Object object = 1;</code>
     */
    @java.lang.Override
    public EdocService.ExportEPackRequest.Object getObject(int index) {
      return object_.get(index);
    }
    /**
     * <pre>
     * List of objects to be exported.
     * </pre>
     *
     * <code>repeated .ExportEPackRequest.Object object = 1;</code>
     */
    @java.lang.Override
    public EdocService.ExportEPackRequest.ObjectOrBuilder getObjectOrBuilder(
        int index) {
      return object_.get(index);
    }

    public static final int EXPORT_DEPENDENCIES_FIELD_NUMBER = 2;
    private boolean exportDependencies_;
    /**
     * <pre>
     * Flag to control automatic export of dependencies.
     * If true, the dependency objects will also be exported and the term
     * 'requested objects' will refer to union of both explcitly requested and
     * implicitly requested due to dependency.
     * </pre>
     *
     * <code>optional bool export_dependencies = 2 [default = false];</code>
     * @return Whether the exportDependencies field is set.
     */
    @java.lang.Override
    public boolean hasExportDependencies() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Flag to control automatic export of dependencies.
     * If true, the dependency objects will also be exported and the term
     * 'requested objects' will refer to union of both explcitly requested and
     * implicitly requested due to dependency.
     * </pre>
     *
     * <code>optional bool export_dependencies = 2 [default = false];</code>
     * @return The exportDependencies.
     */
    @java.lang.Override
    public boolean getExportDependencies() {
      return exportDependencies_;
    }

    public static final int EXPORT_PERMISSIONS_FIELD_NUMBER = 3;
    private boolean exportPermissions_;
    /**
     * <pre>
     * Flag to control automatic export of permissions.
     * If true, the permissions of the objects will also be exported and if the
     * dependencies are also requested, then permissions of those dependencies
     * will be exported as well.
     * </pre>
     *
     * <code>optional bool export_permissions = 3 [default = false];</code>
     * @return Whether the exportPermissions field is set.
     */
    @java.lang.Override
    public boolean hasExportPermissions() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Flag to control automatic export of permissions.
     * If true, the permissions of the objects will also be exported and if the
     * dependencies are also requested, then permissions of those dependencies
     * will be exported as well.
     * </pre>
     *
     * <code>optional bool export_permissions = 3 [default = false];</code>
     * @return The exportPermissions.
     */
    @java.lang.Override
    public boolean getExportPermissions() {
      return exportPermissions_;
    }

    public static final int FORMAT_TYPE_FIELD_NUMBER = 4;
    private int formatType_;
    /**
     * <pre>
     * Format type of the EDoc representation.
     * </pre>
     *
     * <code>optional .EDocFormatType.E format_type = 4 [default = YAML];</code>
     * @return Whether the formatType field is set.
     */
    @java.lang.Override public boolean hasFormatType() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Format type of the EDoc representation.
     * </pre>
     *
     * <code>optional .EDocFormatType.E format_type = 4 [default = YAML];</code>
     * @return The formatType.
     */
    @java.lang.Override public EdocCommon.EDocFormatType.E getFormatType() {
      @SuppressWarnings("deprecation")
      EdocCommon.EDocFormatType.E result = EdocCommon.EDocFormatType.E.valueOf(formatType_);
      return result == null ? EdocCommon.EDocFormatType.E.YAML : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < object_.size(); i++) {
        output.writeMessage(1, object_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(2, exportDependencies_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(3, exportPermissions_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeEnum(4, formatType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < object_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, object_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, exportDependencies_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, exportPermissions_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, formatType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EdocService.ExportEPackRequest)) {
        return super.equals(obj);
      }
      EdocService.ExportEPackRequest other = (EdocService.ExportEPackRequest) obj;

      if (!getObjectList()
          .equals(other.getObjectList())) return false;
      if (hasExportDependencies() != other.hasExportDependencies()) return false;
      if (hasExportDependencies()) {
        if (getExportDependencies()
            != other.getExportDependencies()) return false;
      }
      if (hasExportPermissions() != other.hasExportPermissions()) return false;
      if (hasExportPermissions()) {
        if (getExportPermissions()
            != other.getExportPermissions()) return false;
      }
      if (hasFormatType() != other.hasFormatType()) return false;
      if (hasFormatType()) {
        if (formatType_ != other.formatType_) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getObjectCount() > 0) {
        hash = (37 * hash) + OBJECT_FIELD_NUMBER;
        hash = (53 * hash) + getObjectList().hashCode();
      }
      if (hasExportDependencies()) {
        hash = (37 * hash) + EXPORT_DEPENDENCIES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getExportDependencies());
      }
      if (hasExportPermissions()) {
        hash = (37 * hash) + EXPORT_PERMISSIONS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getExportPermissions());
      }
      if (hasFormatType()) {
        hash = (37 * hash) + FORMAT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + formatType_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EdocService.ExportEPackRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.ExportEPackRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.ExportEPackRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.ExportEPackRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.ExportEPackRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.ExportEPackRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.ExportEPackRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EdocService.ExportEPackRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EdocService.ExportEPackRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EdocService.ExportEPackRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EdocService.ExportEPackRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EdocService.ExportEPackRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EdocService.ExportEPackRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * POST API : /callosum/v1/metadata/edoc/exportEPack
     * argument1 request : ExportEPackRequest proto serialized as JSON string
     * Returns ExportEPackResponse proto serialized as JSON string.
     * </pre>
     *
     * Protobuf type {@code ExportEPackRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ExportEPackRequest)
        EdocService.ExportEPackRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_ExportEPackRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_ExportEPackRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.ExportEPackRequest.class, EdocService.ExportEPackRequest.Builder.class);
      }

      // Construct using EdocService.ExportEPackRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getObjectFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (objectBuilder_ == null) {
          object_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          objectBuilder_.clear();
        }
        exportDependencies_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        exportPermissions_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        formatType_ = 1;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EdocService.internal_static_ExportEPackRequest_descriptor;
      }

      @java.lang.Override
      public EdocService.ExportEPackRequest getDefaultInstanceForType() {
        return EdocService.ExportEPackRequest.getDefaultInstance();
      }

      @java.lang.Override
      public EdocService.ExportEPackRequest build() {
        EdocService.ExportEPackRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EdocService.ExportEPackRequest buildPartial() {
        EdocService.ExportEPackRequest result = new EdocService.ExportEPackRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (objectBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            object_ = java.util.Collections.unmodifiableList(object_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.object_ = object_;
        } else {
          result.object_ = objectBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.exportDependencies_ = exportDependencies_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.exportPermissions_ = exportPermissions_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.formatType_ = formatType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EdocService.ExportEPackRequest) {
          return mergeFrom((EdocService.ExportEPackRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EdocService.ExportEPackRequest other) {
        if (other == EdocService.ExportEPackRequest.getDefaultInstance()) return this;
        if (objectBuilder_ == null) {
          if (!other.object_.isEmpty()) {
            if (object_.isEmpty()) {
              object_ = other.object_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureObjectIsMutable();
              object_.addAll(other.object_);
            }
            onChanged();
          }
        } else {
          if (!other.object_.isEmpty()) {
            if (objectBuilder_.isEmpty()) {
              objectBuilder_.dispose();
              objectBuilder_ = null;
              object_ = other.object_;
              bitField0_ = (bitField0_ & ~0x00000001);
              objectBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getObjectFieldBuilder() : null;
            } else {
              objectBuilder_.addAllMessages(other.object_);
            }
          }
        }
        if (other.hasExportDependencies()) {
          setExportDependencies(other.getExportDependencies());
        }
        if (other.hasExportPermissions()) {
          setExportPermissions(other.getExportPermissions());
        }
        if (other.hasFormatType()) {
          setFormatType(other.getFormatType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EdocService.ExportEPackRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EdocService.ExportEPackRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<EdocService.ExportEPackRequest.Object> object_ =
        java.util.Collections.emptyList();
      private void ensureObjectIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          object_ = new java.util.ArrayList<EdocService.ExportEPackRequest.Object>(object_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.ExportEPackRequest.Object, EdocService.ExportEPackRequest.Object.Builder, EdocService.ExportEPackRequest.ObjectOrBuilder> objectBuilder_;

      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public java.util.List<EdocService.ExportEPackRequest.Object> getObjectList() {
        if (objectBuilder_ == null) {
          return java.util.Collections.unmodifiableList(object_);
        } else {
          return objectBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public int getObjectCount() {
        if (objectBuilder_ == null) {
          return object_.size();
        } else {
          return objectBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public EdocService.ExportEPackRequest.Object getObject(int index) {
        if (objectBuilder_ == null) {
          return object_.get(index);
        } else {
          return objectBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public Builder setObject(
          int index, EdocService.ExportEPackRequest.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.set(index, value);
          onChanged();
        } else {
          objectBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public Builder setObject(
          int index, EdocService.ExportEPackRequest.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.set(index, builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public Builder addObject(EdocService.ExportEPackRequest.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.add(value);
          onChanged();
        } else {
          objectBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public Builder addObject(
          int index, EdocService.ExportEPackRequest.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.add(index, value);
          onChanged();
        } else {
          objectBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public Builder addObject(
          EdocService.ExportEPackRequest.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.add(builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public Builder addObject(
          int index, EdocService.ExportEPackRequest.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.add(index, builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public Builder addAllObject(
          java.lang.Iterable<? extends EdocService.ExportEPackRequest.Object> values) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, object_);
          onChanged();
        } else {
          objectBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public Builder clearObject() {
        if (objectBuilder_ == null) {
          object_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          objectBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public Builder removeObject(int index) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.remove(index);
          onChanged();
        } else {
          objectBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public EdocService.ExportEPackRequest.Object.Builder getObjectBuilder(
          int index) {
        return getObjectFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public EdocService.ExportEPackRequest.ObjectOrBuilder getObjectOrBuilder(
          int index) {
        if (objectBuilder_ == null) {
          return object_.get(index);  } else {
          return objectBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public java.util.List<? extends EdocService.ExportEPackRequest.ObjectOrBuilder> 
           getObjectOrBuilderList() {
        if (objectBuilder_ != null) {
          return objectBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(object_);
        }
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public EdocService.ExportEPackRequest.Object.Builder addObjectBuilder() {
        return getObjectFieldBuilder().addBuilder(
            EdocService.ExportEPackRequest.Object.getDefaultInstance());
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public EdocService.ExportEPackRequest.Object.Builder addObjectBuilder(
          int index) {
        return getObjectFieldBuilder().addBuilder(
            index, EdocService.ExportEPackRequest.Object.getDefaultInstance());
      }
      /**
       * <pre>
       * List of objects to be exported.
       * </pre>
       *
       * <code>repeated .ExportEPackRequest.Object object = 1;</code>
       */
      public java.util.List<EdocService.ExportEPackRequest.Object.Builder> 
           getObjectBuilderList() {
        return getObjectFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.ExportEPackRequest.Object, EdocService.ExportEPackRequest.Object.Builder, EdocService.ExportEPackRequest.ObjectOrBuilder> 
          getObjectFieldBuilder() {
        if (objectBuilder_ == null) {
          objectBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EdocService.ExportEPackRequest.Object, EdocService.ExportEPackRequest.Object.Builder, EdocService.ExportEPackRequest.ObjectOrBuilder>(
                  object_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          object_ = null;
        }
        return objectBuilder_;
      }

      private boolean exportDependencies_ ;
      /**
       * <pre>
       * Flag to control automatic export of dependencies.
       * If true, the dependency objects will also be exported and the term
       * 'requested objects' will refer to union of both explcitly requested and
       * implicitly requested due to dependency.
       * </pre>
       *
       * <code>optional bool export_dependencies = 2 [default = false];</code>
       * @return Whether the exportDependencies field is set.
       */
      @java.lang.Override
      public boolean hasExportDependencies() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Flag to control automatic export of dependencies.
       * If true, the dependency objects will also be exported and the term
       * 'requested objects' will refer to union of both explcitly requested and
       * implicitly requested due to dependency.
       * </pre>
       *
       * <code>optional bool export_dependencies = 2 [default = false];</code>
       * @return The exportDependencies.
       */
      @java.lang.Override
      public boolean getExportDependencies() {
        return exportDependencies_;
      }
      /**
       * <pre>
       * Flag to control automatic export of dependencies.
       * If true, the dependency objects will also be exported and the term
       * 'requested objects' will refer to union of both explcitly requested and
       * implicitly requested due to dependency.
       * </pre>
       *
       * <code>optional bool export_dependencies = 2 [default = false];</code>
       * @param value The exportDependencies to set.
       * @return This builder for chaining.
       */
      public Builder setExportDependencies(boolean value) {
        bitField0_ |= 0x00000002;
        exportDependencies_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flag to control automatic export of dependencies.
       * If true, the dependency objects will also be exported and the term
       * 'requested objects' will refer to union of both explcitly requested and
       * implicitly requested due to dependency.
       * </pre>
       *
       * <code>optional bool export_dependencies = 2 [default = false];</code>
       * @return This builder for chaining.
       */
      public Builder clearExportDependencies() {
        bitField0_ = (bitField0_ & ~0x00000002);
        exportDependencies_ = false;
        onChanged();
        return this;
      }

      private boolean exportPermissions_ ;
      /**
       * <pre>
       * Flag to control automatic export of permissions.
       * If true, the permissions of the objects will also be exported and if the
       * dependencies are also requested, then permissions of those dependencies
       * will be exported as well.
       * </pre>
       *
       * <code>optional bool export_permissions = 3 [default = false];</code>
       * @return Whether the exportPermissions field is set.
       */
      @java.lang.Override
      public boolean hasExportPermissions() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Flag to control automatic export of permissions.
       * If true, the permissions of the objects will also be exported and if the
       * dependencies are also requested, then permissions of those dependencies
       * will be exported as well.
       * </pre>
       *
       * <code>optional bool export_permissions = 3 [default = false];</code>
       * @return The exportPermissions.
       */
      @java.lang.Override
      public boolean getExportPermissions() {
        return exportPermissions_;
      }
      /**
       * <pre>
       * Flag to control automatic export of permissions.
       * If true, the permissions of the objects will also be exported and if the
       * dependencies are also requested, then permissions of those dependencies
       * will be exported as well.
       * </pre>
       *
       * <code>optional bool export_permissions = 3 [default = false];</code>
       * @param value The exportPermissions to set.
       * @return This builder for chaining.
       */
      public Builder setExportPermissions(boolean value) {
        bitField0_ |= 0x00000004;
        exportPermissions_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flag to control automatic export of permissions.
       * If true, the permissions of the objects will also be exported and if the
       * dependencies are also requested, then permissions of those dependencies
       * will be exported as well.
       * </pre>
       *
       * <code>optional bool export_permissions = 3 [default = false];</code>
       * @return This builder for chaining.
       */
      public Builder clearExportPermissions() {
        bitField0_ = (bitField0_ & ~0x00000004);
        exportPermissions_ = false;
        onChanged();
        return this;
      }

      private int formatType_ = 1;
      /**
       * <pre>
       * Format type of the EDoc representation.
       * </pre>
       *
       * <code>optional .EDocFormatType.E format_type = 4 [default = YAML];</code>
       * @return Whether the formatType field is set.
       */
      @java.lang.Override public boolean hasFormatType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Format type of the EDoc representation.
       * </pre>
       *
       * <code>optional .EDocFormatType.E format_type = 4 [default = YAML];</code>
       * @return The formatType.
       */
      @java.lang.Override
      public EdocCommon.EDocFormatType.E getFormatType() {
        @SuppressWarnings("deprecation")
        EdocCommon.EDocFormatType.E result = EdocCommon.EDocFormatType.E.valueOf(formatType_);
        return result == null ? EdocCommon.EDocFormatType.E.YAML : result;
      }
      /**
       * <pre>
       * Format type of the EDoc representation.
       * </pre>
       *
       * <code>optional .EDocFormatType.E format_type = 4 [default = YAML];</code>
       * @param value The formatType to set.
       * @return This builder for chaining.
       */
      public Builder setFormatType(EdocCommon.EDocFormatType.E value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        formatType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Format type of the EDoc representation.
       * </pre>
       *
       * <code>optional .EDocFormatType.E format_type = 4 [default = YAML];</code>
       * @return This builder for chaining.
       */
      public Builder clearFormatType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        formatType_ = 1;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ExportEPackRequest)
    }

    // @@protoc_insertion_point(class_scope:ExportEPackRequest)
    private static final EdocService.ExportEPackRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EdocService.ExportEPackRequest();
    }

    public static EdocService.ExportEPackRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ExportEPackRequest>
        PARSER = new com.google.protobuf.AbstractParser<ExportEPackRequest>() {
      @java.lang.Override
      public ExportEPackRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExportEPackRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ExportEPackRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExportEPackRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EdocService.ExportEPackRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EPackManifestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EPackManifest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Details of the exported objects in zip file.
     * </pre>
     *
     * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
     */
    java.util.List<EdocService.EPackManifest.ObjectInfo> 
        getObjectList();
    /**
     * <pre>
     * Details of the exported objects in zip file.
     * </pre>
     *
     * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
     */
    EdocService.EPackManifest.ObjectInfo getObject(int index);
    /**
     * <pre>
     * Details of the exported objects in zip file.
     * </pre>
     *
     * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
     */
    int getObjectCount();
    /**
     * <pre>
     * Details of the exported objects in zip file.
     * </pre>
     *
     * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
     */
    java.util.List<? extends EdocService.EPackManifest.ObjectInfoOrBuilder> 
        getObjectOrBuilderList();
    /**
     * <pre>
     * Details of the exported objects in zip file.
     * </pre>
     *
     * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
     */
    EdocService.EPackManifest.ObjectInfoOrBuilder getObjectOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code EPackManifest}
   */
  public static final class EPackManifest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:EPackManifest)
      EPackManifestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EPackManifest.newBuilder() to construct.
    private EPackManifest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EPackManifest() {
      object_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EPackManifest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EPackManifest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                object_ = new java.util.ArrayList<EdocService.EPackManifest.ObjectInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              object_.add(
                  input.readMessage(EdocService.EPackManifest.ObjectInfo.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          object_ = java.util.Collections.unmodifiableList(object_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EdocService.internal_static_EPackManifest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EdocService.internal_static_EPackManifest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EdocService.EPackManifest.class, EdocService.EPackManifest.Builder.class);
    }

    public interface DependencyOrBuilder extends
        // @@protoc_insertion_point(interface_extends:EPackManifest.Dependency)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Name of dependency object.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       * Name of dependency object.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * Name of dependency object.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * File name of dependency object. Populated only if object is exported
       * succesfully
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return Whether the filename field is set.
       */
      boolean hasFilename();
      /**
       * <pre>
       * File name of dependency object. Populated only if object is exported
       * succesfully
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The filename.
       */
      java.lang.String getFilename();
      /**
       * <pre>
       * File name of dependency object. Populated only if object is exported
       * succesfully
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The bytes for filename.
       */
      com.google.protobuf.ByteString
          getFilenameBytes();

      /**
       * <pre>
       * Export status of the dependency object. Populated only if object is not
       * exported.
       * </pre>
       *
       * <code>optional .StatusProto status = 3;</code>
       * @return Whether the status field is set.
       */
      boolean hasStatus();
      /**
       * <pre>
       * Export status of the dependency object. Populated only if object is not
       * exported.
       * </pre>
       *
       * <code>optional .StatusProto status = 3;</code>
       * @return The status.
       */
      Status.StatusProto getStatus();
      /**
       * <pre>
       * Export status of the dependency object. Populated only if object is not
       * exported.
       * </pre>
       *
       * <code>optional .StatusProto status = 3;</code>
       */
      Status.StatusProtoOrBuilder getStatusOrBuilder();
    }
    /**
     * Protobuf type {@code EPackManifest.Dependency}
     */
    public static final class Dependency extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:EPackManifest.Dependency)
        DependencyOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Dependency.newBuilder() to construct.
      private Dependency(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Dependency() {
        name_ = "";
        filename_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Dependency();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Dependency(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                filename_ = bs;
                break;
              }
              case 26: {
                Status.StatusProto.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) != 0)) {
                  subBuilder = status_.toBuilder();
                }
                status_ = input.readMessage(Status.StatusProto.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(status_);
                  status_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_EPackManifest_Dependency_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_EPackManifest_Dependency_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.EPackManifest.Dependency.class, EdocService.EPackManifest.Dependency.Builder.class);
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * Name of dependency object.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Name of dependency object.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Name of dependency object.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FILENAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object filename_;
      /**
       * <pre>
       * File name of dependency object. Populated only if object is exported
       * succesfully
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return Whether the filename field is set.
       */
      @java.lang.Override
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * File name of dependency object. Populated only if object is exported
       * succesfully
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The filename.
       */
      @java.lang.Override
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            filename_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * File name of dependency object. Populated only if object is exported
       * succesfully
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The bytes for filename.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int STATUS_FIELD_NUMBER = 3;
      private Status.StatusProto status_;
      /**
       * <pre>
       * Export status of the dependency object. Populated only if object is not
       * exported.
       * </pre>
       *
       * <code>optional .StatusProto status = 3;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Export status of the dependency object. Populated only if object is not
       * exported.
       * </pre>
       *
       * <code>optional .StatusProto status = 3;</code>
       * @return The status.
       */
      @java.lang.Override
      public Status.StatusProto getStatus() {
        return status_ == null ? Status.StatusProto.getDefaultInstance() : status_;
      }
      /**
       * <pre>
       * Export status of the dependency object. Populated only if object is not
       * exported.
       * </pre>
       *
       * <code>optional .StatusProto status = 3;</code>
       */
      @java.lang.Override
      public Status.StatusProtoOrBuilder getStatusOrBuilder() {
        return status_ == null ? Status.StatusProto.getDefaultInstance() : status_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, filename_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeMessage(3, getStatus());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, filename_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getStatus());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EdocService.EPackManifest.Dependency)) {
          return super.equals(obj);
        }
        EdocService.EPackManifest.Dependency other = (EdocService.EPackManifest.Dependency) obj;

        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasFilename() != other.hasFilename()) return false;
        if (hasFilename()) {
          if (!getFilename()
              .equals(other.getFilename())) return false;
        }
        if (hasStatus() != other.hasStatus()) return false;
        if (hasStatus()) {
          if (!getStatus()
              .equals(other.getStatus())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasFilename()) {
          hash = (37 * hash) + FILENAME_FIELD_NUMBER;
          hash = (53 * hash) + getFilename().hashCode();
        }
        if (hasStatus()) {
          hash = (37 * hash) + STATUS_FIELD_NUMBER;
          hash = (53 * hash) + getStatus().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EdocService.EPackManifest.Dependency parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.EPackManifest.Dependency parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.EPackManifest.Dependency parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.EPackManifest.Dependency parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.EPackManifest.Dependency parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.EPackManifest.Dependency parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.EPackManifest.Dependency parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.EPackManifest.Dependency parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.EPackManifest.Dependency parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EdocService.EPackManifest.Dependency parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.EPackManifest.Dependency parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.EPackManifest.Dependency parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EdocService.EPackManifest.Dependency prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code EPackManifest.Dependency}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:EPackManifest.Dependency)
          EdocService.EPackManifest.DependencyOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EdocService.internal_static_EPackManifest_Dependency_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EdocService.internal_static_EPackManifest_Dependency_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EdocService.EPackManifest.Dependency.class, EdocService.EPackManifest.Dependency.Builder.class);
        }

        // Construct using EdocService.EPackManifest.Dependency.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getStatusFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          filename_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          if (statusBuilder_ == null) {
            status_ = null;
          } else {
            statusBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EdocService.internal_static_EPackManifest_Dependency_descriptor;
        }

        @java.lang.Override
        public EdocService.EPackManifest.Dependency getDefaultInstanceForType() {
          return EdocService.EPackManifest.Dependency.getDefaultInstance();
        }

        @java.lang.Override
        public EdocService.EPackManifest.Dependency build() {
          EdocService.EPackManifest.Dependency result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EdocService.EPackManifest.Dependency buildPartial() {
          EdocService.EPackManifest.Dependency result = new EdocService.EPackManifest.Dependency(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.filename_ = filename_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            if (statusBuilder_ == null) {
              result.status_ = status_;
            } else {
              result.status_ = statusBuilder_.build();
            }
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EdocService.EPackManifest.Dependency) {
            return mergeFrom((EdocService.EPackManifest.Dependency)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EdocService.EPackManifest.Dependency other) {
          if (other == EdocService.EPackManifest.Dependency.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasFilename()) {
            bitField0_ |= 0x00000002;
            filename_ = other.filename_;
            onChanged();
          }
          if (other.hasStatus()) {
            mergeStatus(other.getStatus());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EdocService.EPackManifest.Dependency parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EdocService.EPackManifest.Dependency) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * Name of dependency object.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Name of dependency object.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Name of dependency object.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Name of dependency object.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of dependency object.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of dependency object.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object filename_ = "";
        /**
         * <pre>
         * File name of dependency object. Populated only if object is exported
         * succesfully
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return Whether the filename field is set.
         */
        public boolean hasFilename() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * File name of dependency object. Populated only if object is exported
         * succesfully
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return The filename.
         */
        public java.lang.String getFilename() {
          java.lang.Object ref = filename_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              filename_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * File name of dependency object. Populated only if object is exported
         * succesfully
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return The bytes for filename.
         */
        public com.google.protobuf.ByteString
            getFilenameBytes() {
          java.lang.Object ref = filename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            filename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * File name of dependency object. Populated only if object is exported
         * succesfully
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @param value The filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilename(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          filename_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * File name of dependency object. Populated only if object is exported
         * succesfully
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFilename() {
          bitField0_ = (bitField0_ & ~0x00000002);
          filename_ = getDefaultInstance().getFilename();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * File name of dependency object. Populated only if object is exported
         * succesfully
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @param value The bytes for filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          filename_ = value;
          onChanged();
          return this;
        }

        private Status.StatusProto status_;
        private com.google.protobuf.SingleFieldBuilderV3<
            Status.StatusProto, Status.StatusProto.Builder, Status.StatusProtoOrBuilder> statusBuilder_;
        /**
         * <pre>
         * Export status of the dependency object. Populated only if object is not
         * exported.
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         * @return Whether the status field is set.
         */
        public boolean hasStatus() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Export status of the dependency object. Populated only if object is not
         * exported.
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         * @return The status.
         */
        public Status.StatusProto getStatus() {
          if (statusBuilder_ == null) {
            return status_ == null ? Status.StatusProto.getDefaultInstance() : status_;
          } else {
            return statusBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Export status of the dependency object. Populated only if object is not
         * exported.
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         */
        public Builder setStatus(Status.StatusProto value) {
          if (statusBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            status_ = value;
            onChanged();
          } else {
            statusBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <pre>
         * Export status of the dependency object. Populated only if object is not
         * exported.
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         */
        public Builder setStatus(
            Status.StatusProto.Builder builderForValue) {
          if (statusBuilder_ == null) {
            status_ = builderForValue.build();
            onChanged();
          } else {
            statusBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <pre>
         * Export status of the dependency object. Populated only if object is not
         * exported.
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         */
        public Builder mergeStatus(Status.StatusProto value) {
          if (statusBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0) &&
                status_ != null &&
                status_ != Status.StatusProto.getDefaultInstance()) {
              status_ =
                Status.StatusProto.newBuilder(status_).mergeFrom(value).buildPartial();
            } else {
              status_ = value;
            }
            onChanged();
          } else {
            statusBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <pre>
         * Export status of the dependency object. Populated only if object is not
         * exported.
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         */
        public Builder clearStatus() {
          if (statusBuilder_ == null) {
            status_ = null;
            onChanged();
          } else {
            statusBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <pre>
         * Export status of the dependency object. Populated only if object is not
         * exported.
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         */
        public Status.StatusProto.Builder getStatusBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getStatusFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Export status of the dependency object. Populated only if object is not
         * exported.
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         */
        public Status.StatusProtoOrBuilder getStatusOrBuilder() {
          if (statusBuilder_ != null) {
            return statusBuilder_.getMessageOrBuilder();
          } else {
            return status_ == null ?
                Status.StatusProto.getDefaultInstance() : status_;
          }
        }
        /**
         * <pre>
         * Export status of the dependency object. Populated only if object is not
         * exported.
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            Status.StatusProto, Status.StatusProto.Builder, Status.StatusProtoOrBuilder> 
            getStatusFieldBuilder() {
          if (statusBuilder_ == null) {
            statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                Status.StatusProto, Status.StatusProto.Builder, Status.StatusProtoOrBuilder>(
                    getStatus(),
                    getParentForChildren(),
                    isClean());
            status_ = null;
          }
          return statusBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:EPackManifest.Dependency)
      }

      // @@protoc_insertion_point(class_scope:EPackManifest.Dependency)
      private static final EdocService.EPackManifest.Dependency DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EdocService.EPackManifest.Dependency();
      }

      public static EdocService.EPackManifest.Dependency getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Dependency>
          PARSER = new com.google.protobuf.AbstractParser<Dependency>() {
        @java.lang.Override
        public Dependency parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Dependency(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Dependency> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Dependency> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EdocService.EPackManifest.Dependency getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ObjectInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:EPackManifest.ObjectInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Name of the object. Same as what is displayed in ThoughtSpot App.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       * Name of the object. Same as what is displayed in ThoughtSpot App.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * Name of the object. Same as what is displayed in ThoughtSpot App.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * File name of the exported object file, present in zip file.
       * It is unique across all objects in zip files.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return Whether the filename field is set.
       */
      boolean hasFilename();
      /**
       * <pre>
       * File name of the exported object file, present in zip file.
       * It is unique across all objects in zip files.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The filename.
       */
      java.lang.String getFilename();
      /**
       * <pre>
       * File name of the exported object file, present in zip file.
       * It is unique across all objects in zip files.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The bytes for filename.
       */
      com.google.protobuf.ByteString
          getFilenameBytes();

      /**
       * <pre>
       * status
       * </pre>
       *
       * <code>optional .StatusProto status = 3;</code>
       * @return Whether the status field is set.
       */
      boolean hasStatus();
      /**
       * <pre>
       * status
       * </pre>
       *
       * <code>optional .StatusProto status = 3;</code>
       * @return The status.
       */
      Status.StatusProto getStatus();
      /**
       * <pre>
       * status
       * </pre>
       *
       * <code>optional .StatusProto status = 3;</code>
       */
      Status.StatusProtoOrBuilder getStatusOrBuilder();

      /**
       * <pre>
       * Type can be one of [WORKSHEET, PINBOARD, ANSWER]
       * Note: The value of type is consumed by end user, so it should be simple.
       *       Hence it differs from ExportEPackRequest.Object.type
       * </pre>
       *
       * <code>optional string type = 4;</code>
       * @return Whether the type field is set.
       */
      boolean hasType();
      /**
       * <pre>
       * Type can be one of [WORKSHEET, PINBOARD, ANSWER]
       * Note: The value of type is consumed by end user, so it should be simple.
       *       Hence it differs from ExportEPackRequest.Object.type
       * </pre>
       *
       * <code>optional string type = 4;</code>
       * @return The type.
       */
      java.lang.String getType();
      /**
       * <pre>
       * Type can be one of [WORKSHEET, PINBOARD, ANSWER]
       * Note: The value of type is consumed by end user, so it should be simple.
       *       Hence it differs from ExportEPackRequest.Object.type
       * </pre>
       *
       * <code>optional string type = 4;</code>
       * @return The bytes for type.
       */
      com.google.protobuf.ByteString
          getTypeBytes();

      /**
       * <pre>
       * Guid of the original object. Might be helpful for some users if
       * there are multiple objects with same name. User might want to cross
       * reference guid with URL of objects.
       * </pre>
       *
       * <code>optional string id = 5;</code>
       * @return Whether the id field is set.
       */
      boolean hasId();
      /**
       * <pre>
       * Guid of the original object. Might be helpful for some users if
       * there are multiple objects with same name. User might want to cross
       * reference guid with URL of objects.
       * </pre>
       *
       * <code>optional string id = 5;</code>
       * @return The id.
       */
      java.lang.String getId();
      /**
       * <pre>
       * Guid of the original object. Might be helpful for some users if
       * there are multiple objects with same name. User might want to cross
       * reference guid with URL of objects.
       * </pre>
       *
       * <code>optional string id = 5;</code>
       * @return The bytes for id.
       */
      com.google.protobuf.ByteString
          getIdBytes();

      /**
       * <pre>
       * list of dependency objects of a given object.
       * eg: underlying worksheets are dependency objects for a pinboard or
       * filter.
       * </pre>
       *
       * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
       */
      java.util.List<EdocService.EPackManifest.Dependency> 
          getDependencyList();
      /**
       * <pre>
       * list of dependency objects of a given object.
       * eg: underlying worksheets are dependency objects for a pinboard or
       * filter.
       * </pre>
       *
       * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
       */
      EdocService.EPackManifest.Dependency getDependency(int index);
      /**
       * <pre>
       * list of dependency objects of a given object.
       * eg: underlying worksheets are dependency objects for a pinboard or
       * filter.
       * </pre>
       *
       * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
       */
      int getDependencyCount();
      /**
       * <pre>
       * list of dependency objects of a given object.
       * eg: underlying worksheets are dependency objects for a pinboard or
       * filter.
       * </pre>
       *
       * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
       */
      java.util.List<? extends EdocService.EPackManifest.DependencyOrBuilder> 
          getDependencyOrBuilderList();
      /**
       * <pre>
       * list of dependency objects of a given object.
       * eg: underlying worksheets are dependency objects for a pinboard or
       * filter.
       * </pre>
       *
       * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
       */
      EdocService.EPackManifest.DependencyOrBuilder getDependencyOrBuilder(
          int index);
    }
    /**
     * <pre>
     * Meta information of an exported object.
     * Ordered by relevance.
     * </pre>
     *
     * Protobuf type {@code EPackManifest.ObjectInfo}
     */
    public static final class ObjectInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:EPackManifest.ObjectInfo)
        ObjectInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ObjectInfo.newBuilder() to construct.
      private ObjectInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ObjectInfo() {
        name_ = "";
        filename_ = "";
        type_ = "";
        id_ = "";
        dependency_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ObjectInfo();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ObjectInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                filename_ = bs;
                break;
              }
              case 26: {
                Status.StatusProto.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) != 0)) {
                  subBuilder = status_.toBuilder();
                }
                status_ = input.readMessage(Status.StatusProto.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(status_);
                  status_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                type_ = bs;
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                id_ = bs;
                break;
              }
              case 50: {
                if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                  dependency_ = new java.util.ArrayList<EdocService.EPackManifest.Dependency>();
                  mutable_bitField0_ |= 0x00000020;
                }
                dependency_.add(
                    input.readMessage(EdocService.EPackManifest.Dependency.PARSER, extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000020) != 0)) {
            dependency_ = java.util.Collections.unmodifiableList(dependency_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_EPackManifest_ObjectInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_EPackManifest_ObjectInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.EPackManifest.ObjectInfo.class, EdocService.EPackManifest.ObjectInfo.Builder.class);
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * Name of the object. Same as what is displayed in ThoughtSpot App.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Name of the object. Same as what is displayed in ThoughtSpot App.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Name of the object. Same as what is displayed in ThoughtSpot App.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FILENAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object filename_;
      /**
       * <pre>
       * File name of the exported object file, present in zip file.
       * It is unique across all objects in zip files.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return Whether the filename field is set.
       */
      @java.lang.Override
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * File name of the exported object file, present in zip file.
       * It is unique across all objects in zip files.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The filename.
       */
      @java.lang.Override
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            filename_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * File name of the exported object file, present in zip file.
       * It is unique across all objects in zip files.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The bytes for filename.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int STATUS_FIELD_NUMBER = 3;
      private Status.StatusProto status_;
      /**
       * <pre>
       * status
       * </pre>
       *
       * <code>optional .StatusProto status = 3;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * status
       * </pre>
       *
       * <code>optional .StatusProto status = 3;</code>
       * @return The status.
       */
      @java.lang.Override
      public Status.StatusProto getStatus() {
        return status_ == null ? Status.StatusProto.getDefaultInstance() : status_;
      }
      /**
       * <pre>
       * status
       * </pre>
       *
       * <code>optional .StatusProto status = 3;</code>
       */
      @java.lang.Override
      public Status.StatusProtoOrBuilder getStatusOrBuilder() {
        return status_ == null ? Status.StatusProto.getDefaultInstance() : status_;
      }

      public static final int TYPE_FIELD_NUMBER = 4;
      private volatile java.lang.Object type_;
      /**
       * <pre>
       * Type can be one of [WORKSHEET, PINBOARD, ANSWER]
       * Note: The value of type is consumed by end user, so it should be simple.
       *       Hence it differs from ExportEPackRequest.Object.type
       * </pre>
       *
       * <code>optional string type = 4;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Type can be one of [WORKSHEET, PINBOARD, ANSWER]
       * Note: The value of type is consumed by end user, so it should be simple.
       *       Hence it differs from ExportEPackRequest.Object.type
       * </pre>
       *
       * <code>optional string type = 4;</code>
       * @return The type.
       */
      @java.lang.Override
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            type_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Type can be one of [WORKSHEET, PINBOARD, ANSWER]
       * Note: The value of type is consumed by end user, so it should be simple.
       *       Hence it differs from ExportEPackRequest.Object.type
       * </pre>
       *
       * <code>optional string type = 4;</code>
       * @return The bytes for type.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ID_FIELD_NUMBER = 5;
      private volatile java.lang.Object id_;
      /**
       * <pre>
       * Guid of the original object. Might be helpful for some users if
       * there are multiple objects with same name. User might want to cross
       * reference guid with URL of objects.
       * </pre>
       *
       * <code>optional string id = 5;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Guid of the original object. Might be helpful for some users if
       * there are multiple objects with same name. User might want to cross
       * reference guid with URL of objects.
       * </pre>
       *
       * <code>optional string id = 5;</code>
       * @return The id.
       */
      @java.lang.Override
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Guid of the original object. Might be helpful for some users if
       * there are multiple objects with same name. User might want to cross
       * reference guid with URL of objects.
       * </pre>
       *
       * <code>optional string id = 5;</code>
       * @return The bytes for id.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DEPENDENCY_FIELD_NUMBER = 6;
      private java.util.List<EdocService.EPackManifest.Dependency> dependency_;
      /**
       * <pre>
       * list of dependency objects of a given object.
       * eg: underlying worksheets are dependency objects for a pinboard or
       * filter.
       * </pre>
       *
       * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
       */
      @java.lang.Override
      public java.util.List<EdocService.EPackManifest.Dependency> getDependencyList() {
        return dependency_;
      }
      /**
       * <pre>
       * list of dependency objects of a given object.
       * eg: underlying worksheets are dependency objects for a pinboard or
       * filter.
       * </pre>
       *
       * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
       */
      @java.lang.Override
      public java.util.List<? extends EdocService.EPackManifest.DependencyOrBuilder> 
          getDependencyOrBuilderList() {
        return dependency_;
      }
      /**
       * <pre>
       * list of dependency objects of a given object.
       * eg: underlying worksheets are dependency objects for a pinboard or
       * filter.
       * </pre>
       *
       * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
       */
      @java.lang.Override
      public int getDependencyCount() {
        return dependency_.size();
      }
      /**
       * <pre>
       * list of dependency objects of a given object.
       * eg: underlying worksheets are dependency objects for a pinboard or
       * filter.
       * </pre>
       *
       * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
       */
      @java.lang.Override
      public EdocService.EPackManifest.Dependency getDependency(int index) {
        return dependency_.get(index);
      }
      /**
       * <pre>
       * list of dependency objects of a given object.
       * eg: underlying worksheets are dependency objects for a pinboard or
       * filter.
       * </pre>
       *
       * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
       */
      @java.lang.Override
      public EdocService.EPackManifest.DependencyOrBuilder getDependencyOrBuilder(
          int index) {
        return dependency_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, filename_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeMessage(3, getStatus());
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, type_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, id_);
        }
        for (int i = 0; i < dependency_.size(); i++) {
          output.writeMessage(6, dependency_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, filename_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getStatus());
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, type_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, id_);
        }
        for (int i = 0; i < dependency_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, dependency_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EdocService.EPackManifest.ObjectInfo)) {
          return super.equals(obj);
        }
        EdocService.EPackManifest.ObjectInfo other = (EdocService.EPackManifest.ObjectInfo) obj;

        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasFilename() != other.hasFilename()) return false;
        if (hasFilename()) {
          if (!getFilename()
              .equals(other.getFilename())) return false;
        }
        if (hasStatus() != other.hasStatus()) return false;
        if (hasStatus()) {
          if (!getStatus()
              .equals(other.getStatus())) return false;
        }
        if (hasType() != other.hasType()) return false;
        if (hasType()) {
          if (!getType()
              .equals(other.getType())) return false;
        }
        if (hasId() != other.hasId()) return false;
        if (hasId()) {
          if (!getId()
              .equals(other.getId())) return false;
        }
        if (!getDependencyList()
            .equals(other.getDependencyList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasFilename()) {
          hash = (37 * hash) + FILENAME_FIELD_NUMBER;
          hash = (53 * hash) + getFilename().hashCode();
        }
        if (hasStatus()) {
          hash = (37 * hash) + STATUS_FIELD_NUMBER;
          hash = (53 * hash) + getStatus().hashCode();
        }
        if (hasType()) {
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getType().hashCode();
        }
        if (hasId()) {
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId().hashCode();
        }
        if (getDependencyCount() > 0) {
          hash = (37 * hash) + DEPENDENCY_FIELD_NUMBER;
          hash = (53 * hash) + getDependencyList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EdocService.EPackManifest.ObjectInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.EPackManifest.ObjectInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.EPackManifest.ObjectInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.EPackManifest.ObjectInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.EPackManifest.ObjectInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.EPackManifest.ObjectInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.EPackManifest.ObjectInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.EPackManifest.ObjectInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.EPackManifest.ObjectInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EdocService.EPackManifest.ObjectInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.EPackManifest.ObjectInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.EPackManifest.ObjectInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EdocService.EPackManifest.ObjectInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Meta information of an exported object.
       * Ordered by relevance.
       * </pre>
       *
       * Protobuf type {@code EPackManifest.ObjectInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:EPackManifest.ObjectInfo)
          EdocService.EPackManifest.ObjectInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EdocService.internal_static_EPackManifest_ObjectInfo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EdocService.internal_static_EPackManifest_ObjectInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EdocService.EPackManifest.ObjectInfo.class, EdocService.EPackManifest.ObjectInfo.Builder.class);
        }

        // Construct using EdocService.EPackManifest.ObjectInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getStatusFieldBuilder();
            getDependencyFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          filename_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          if (statusBuilder_ == null) {
            status_ = null;
          } else {
            statusBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          type_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          id_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          if (dependencyBuilder_ == null) {
            dependency_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            dependencyBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EdocService.internal_static_EPackManifest_ObjectInfo_descriptor;
        }

        @java.lang.Override
        public EdocService.EPackManifest.ObjectInfo getDefaultInstanceForType() {
          return EdocService.EPackManifest.ObjectInfo.getDefaultInstance();
        }

        @java.lang.Override
        public EdocService.EPackManifest.ObjectInfo build() {
          EdocService.EPackManifest.ObjectInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EdocService.EPackManifest.ObjectInfo buildPartial() {
          EdocService.EPackManifest.ObjectInfo result = new EdocService.EPackManifest.ObjectInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.filename_ = filename_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            if (statusBuilder_ == null) {
              result.status_ = status_;
            } else {
              result.status_ = statusBuilder_.build();
            }
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            to_bitField0_ |= 0x00000008;
          }
          result.type_ = type_;
          if (((from_bitField0_ & 0x00000010) != 0)) {
            to_bitField0_ |= 0x00000010;
          }
          result.id_ = id_;
          if (dependencyBuilder_ == null) {
            if (((bitField0_ & 0x00000020) != 0)) {
              dependency_ = java.util.Collections.unmodifiableList(dependency_);
              bitField0_ = (bitField0_ & ~0x00000020);
            }
            result.dependency_ = dependency_;
          } else {
            result.dependency_ = dependencyBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EdocService.EPackManifest.ObjectInfo) {
            return mergeFrom((EdocService.EPackManifest.ObjectInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EdocService.EPackManifest.ObjectInfo other) {
          if (other == EdocService.EPackManifest.ObjectInfo.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasFilename()) {
            bitField0_ |= 0x00000002;
            filename_ = other.filename_;
            onChanged();
          }
          if (other.hasStatus()) {
            mergeStatus(other.getStatus());
          }
          if (other.hasType()) {
            bitField0_ |= 0x00000008;
            type_ = other.type_;
            onChanged();
          }
          if (other.hasId()) {
            bitField0_ |= 0x00000010;
            id_ = other.id_;
            onChanged();
          }
          if (dependencyBuilder_ == null) {
            if (!other.dependency_.isEmpty()) {
              if (dependency_.isEmpty()) {
                dependency_ = other.dependency_;
                bitField0_ = (bitField0_ & ~0x00000020);
              } else {
                ensureDependencyIsMutable();
                dependency_.addAll(other.dependency_);
              }
              onChanged();
            }
          } else {
            if (!other.dependency_.isEmpty()) {
              if (dependencyBuilder_.isEmpty()) {
                dependencyBuilder_.dispose();
                dependencyBuilder_ = null;
                dependency_ = other.dependency_;
                bitField0_ = (bitField0_ & ~0x00000020);
                dependencyBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getDependencyFieldBuilder() : null;
              } else {
                dependencyBuilder_.addAllMessages(other.dependency_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EdocService.EPackManifest.ObjectInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EdocService.EPackManifest.ObjectInfo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * Name of the object. Same as what is displayed in ThoughtSpot App.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Name of the object. Same as what is displayed in ThoughtSpot App.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Name of the object. Same as what is displayed in ThoughtSpot App.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Name of the object. Same as what is displayed in ThoughtSpot App.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the object. Same as what is displayed in ThoughtSpot App.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the object. Same as what is displayed in ThoughtSpot App.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object filename_ = "";
        /**
         * <pre>
         * File name of the exported object file, present in zip file.
         * It is unique across all objects in zip files.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return Whether the filename field is set.
         */
        public boolean hasFilename() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * File name of the exported object file, present in zip file.
         * It is unique across all objects in zip files.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return The filename.
         */
        public java.lang.String getFilename() {
          java.lang.Object ref = filename_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              filename_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * File name of the exported object file, present in zip file.
         * It is unique across all objects in zip files.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return The bytes for filename.
         */
        public com.google.protobuf.ByteString
            getFilenameBytes() {
          java.lang.Object ref = filename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            filename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * File name of the exported object file, present in zip file.
         * It is unique across all objects in zip files.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @param value The filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilename(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          filename_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * File name of the exported object file, present in zip file.
         * It is unique across all objects in zip files.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFilename() {
          bitField0_ = (bitField0_ & ~0x00000002);
          filename_ = getDefaultInstance().getFilename();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * File name of the exported object file, present in zip file.
         * It is unique across all objects in zip files.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @param value The bytes for filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          filename_ = value;
          onChanged();
          return this;
        }

        private Status.StatusProto status_;
        private com.google.protobuf.SingleFieldBuilderV3<
            Status.StatusProto, Status.StatusProto.Builder, Status.StatusProtoOrBuilder> statusBuilder_;
        /**
         * <pre>
         * status
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         * @return Whether the status field is set.
         */
        public boolean hasStatus() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * status
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         * @return The status.
         */
        public Status.StatusProto getStatus() {
          if (statusBuilder_ == null) {
            return status_ == null ? Status.StatusProto.getDefaultInstance() : status_;
          } else {
            return statusBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * status
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         */
        public Builder setStatus(Status.StatusProto value) {
          if (statusBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            status_ = value;
            onChanged();
          } else {
            statusBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <pre>
         * status
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         */
        public Builder setStatus(
            Status.StatusProto.Builder builderForValue) {
          if (statusBuilder_ == null) {
            status_ = builderForValue.build();
            onChanged();
          } else {
            statusBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <pre>
         * status
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         */
        public Builder mergeStatus(Status.StatusProto value) {
          if (statusBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0) &&
                status_ != null &&
                status_ != Status.StatusProto.getDefaultInstance()) {
              status_ =
                Status.StatusProto.newBuilder(status_).mergeFrom(value).buildPartial();
            } else {
              status_ = value;
            }
            onChanged();
          } else {
            statusBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <pre>
         * status
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         */
        public Builder clearStatus() {
          if (statusBuilder_ == null) {
            status_ = null;
            onChanged();
          } else {
            statusBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <pre>
         * status
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         */
        public Status.StatusProto.Builder getStatusBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getStatusFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * status
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         */
        public Status.StatusProtoOrBuilder getStatusOrBuilder() {
          if (statusBuilder_ != null) {
            return statusBuilder_.getMessageOrBuilder();
          } else {
            return status_ == null ?
                Status.StatusProto.getDefaultInstance() : status_;
          }
        }
        /**
         * <pre>
         * status
         * </pre>
         *
         * <code>optional .StatusProto status = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            Status.StatusProto, Status.StatusProto.Builder, Status.StatusProtoOrBuilder> 
            getStatusFieldBuilder() {
          if (statusBuilder_ == null) {
            statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                Status.StatusProto, Status.StatusProto.Builder, Status.StatusProtoOrBuilder>(
                    getStatus(),
                    getParentForChildren(),
                    isClean());
            status_ = null;
          }
          return statusBuilder_;
        }

        private java.lang.Object type_ = "";
        /**
         * <pre>
         * Type can be one of [WORKSHEET, PINBOARD, ANSWER]
         * Note: The value of type is consumed by end user, so it should be simple.
         *       Hence it differs from ExportEPackRequest.Object.type
         * </pre>
         *
         * <code>optional string type = 4;</code>
         * @return Whether the type field is set.
         */
        public boolean hasType() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Type can be one of [WORKSHEET, PINBOARD, ANSWER]
         * Note: The value of type is consumed by end user, so it should be simple.
         *       Hence it differs from ExportEPackRequest.Object.type
         * </pre>
         *
         * <code>optional string type = 4;</code>
         * @return The type.
         */
        public java.lang.String getType() {
          java.lang.Object ref = type_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              type_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Type can be one of [WORKSHEET, PINBOARD, ANSWER]
         * Note: The value of type is consumed by end user, so it should be simple.
         *       Hence it differs from ExportEPackRequest.Object.type
         * </pre>
         *
         * <code>optional string type = 4;</code>
         * @return The bytes for type.
         */
        public com.google.protobuf.ByteString
            getTypeBytes() {
          java.lang.Object ref = type_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            type_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Type can be one of [WORKSHEET, PINBOARD, ANSWER]
         * Note: The value of type is consumed by end user, so it should be simple.
         *       Hence it differs from ExportEPackRequest.Object.type
         * </pre>
         *
         * <code>optional string type = 4;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Type can be one of [WORKSHEET, PINBOARD, ANSWER]
         * Note: The value of type is consumed by end user, so it should be simple.
         *       Hence it differs from ExportEPackRequest.Object.type
         * </pre>
         *
         * <code>optional string type = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000008);
          type_ = getDefaultInstance().getType();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Type can be one of [WORKSHEET, PINBOARD, ANSWER]
         * Note: The value of type is consumed by end user, so it should be simple.
         *       Hence it differs from ExportEPackRequest.Object.type
         * </pre>
         *
         * <code>optional string type = 4;</code>
         * @param value The bytes for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          type_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object id_ = "";
        /**
         * <pre>
         * Guid of the original object. Might be helpful for some users if
         * there are multiple objects with same name. User might want to cross
         * reference guid with URL of objects.
         * </pre>
         *
         * <code>optional string id = 5;</code>
         * @return Whether the id field is set.
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Guid of the original object. Might be helpful for some users if
         * there are multiple objects with same name. User might want to cross
         * reference guid with URL of objects.
         * </pre>
         *
         * <code>optional string id = 5;</code>
         * @return The id.
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              id_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Guid of the original object. Might be helpful for some users if
         * there are multiple objects with same name. User might want to cross
         * reference guid with URL of objects.
         * </pre>
         *
         * <code>optional string id = 5;</code>
         * @return The bytes for id.
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Guid of the original object. Might be helpful for some users if
         * there are multiple objects with same name. User might want to cross
         * reference guid with URL of objects.
         * </pre>
         *
         * <code>optional string id = 5;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Guid of the original object. Might be helpful for some users if
         * there are multiple objects with same name. User might want to cross
         * reference guid with URL of objects.
         * </pre>
         *
         * <code>optional string id = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000010);
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Guid of the original object. Might be helpful for some users if
         * there are multiple objects with same name. User might want to cross
         * reference guid with URL of objects.
         * </pre>
         *
         * <code>optional string id = 5;</code>
         * @param value The bytes for id to set.
         * @return This builder for chaining.
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          id_ = value;
          onChanged();
          return this;
        }

        private java.util.List<EdocService.EPackManifest.Dependency> dependency_ =
          java.util.Collections.emptyList();
        private void ensureDependencyIsMutable() {
          if (!((bitField0_ & 0x00000020) != 0)) {
            dependency_ = new java.util.ArrayList<EdocService.EPackManifest.Dependency>(dependency_);
            bitField0_ |= 0x00000020;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            EdocService.EPackManifest.Dependency, EdocService.EPackManifest.Dependency.Builder, EdocService.EPackManifest.DependencyOrBuilder> dependencyBuilder_;

        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public java.util.List<EdocService.EPackManifest.Dependency> getDependencyList() {
          if (dependencyBuilder_ == null) {
            return java.util.Collections.unmodifiableList(dependency_);
          } else {
            return dependencyBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public int getDependencyCount() {
          if (dependencyBuilder_ == null) {
            return dependency_.size();
          } else {
            return dependencyBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public EdocService.EPackManifest.Dependency getDependency(int index) {
          if (dependencyBuilder_ == null) {
            return dependency_.get(index);
          } else {
            return dependencyBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public Builder setDependency(
            int index, EdocService.EPackManifest.Dependency value) {
          if (dependencyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDependencyIsMutable();
            dependency_.set(index, value);
            onChanged();
          } else {
            dependencyBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public Builder setDependency(
            int index, EdocService.EPackManifest.Dependency.Builder builderForValue) {
          if (dependencyBuilder_ == null) {
            ensureDependencyIsMutable();
            dependency_.set(index, builderForValue.build());
            onChanged();
          } else {
            dependencyBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public Builder addDependency(EdocService.EPackManifest.Dependency value) {
          if (dependencyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDependencyIsMutable();
            dependency_.add(value);
            onChanged();
          } else {
            dependencyBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public Builder addDependency(
            int index, EdocService.EPackManifest.Dependency value) {
          if (dependencyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDependencyIsMutable();
            dependency_.add(index, value);
            onChanged();
          } else {
            dependencyBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public Builder addDependency(
            EdocService.EPackManifest.Dependency.Builder builderForValue) {
          if (dependencyBuilder_ == null) {
            ensureDependencyIsMutable();
            dependency_.add(builderForValue.build());
            onChanged();
          } else {
            dependencyBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public Builder addDependency(
            int index, EdocService.EPackManifest.Dependency.Builder builderForValue) {
          if (dependencyBuilder_ == null) {
            ensureDependencyIsMutable();
            dependency_.add(index, builderForValue.build());
            onChanged();
          } else {
            dependencyBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public Builder addAllDependency(
            java.lang.Iterable<? extends EdocService.EPackManifest.Dependency> values) {
          if (dependencyBuilder_ == null) {
            ensureDependencyIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, dependency_);
            onChanged();
          } else {
            dependencyBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public Builder clearDependency() {
          if (dependencyBuilder_ == null) {
            dependency_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
            onChanged();
          } else {
            dependencyBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public Builder removeDependency(int index) {
          if (dependencyBuilder_ == null) {
            ensureDependencyIsMutable();
            dependency_.remove(index);
            onChanged();
          } else {
            dependencyBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public EdocService.EPackManifest.Dependency.Builder getDependencyBuilder(
            int index) {
          return getDependencyFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public EdocService.EPackManifest.DependencyOrBuilder getDependencyOrBuilder(
            int index) {
          if (dependencyBuilder_ == null) {
            return dependency_.get(index);  } else {
            return dependencyBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public java.util.List<? extends EdocService.EPackManifest.DependencyOrBuilder> 
             getDependencyOrBuilderList() {
          if (dependencyBuilder_ != null) {
            return dependencyBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(dependency_);
          }
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public EdocService.EPackManifest.Dependency.Builder addDependencyBuilder() {
          return getDependencyFieldBuilder().addBuilder(
              EdocService.EPackManifest.Dependency.getDefaultInstance());
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public EdocService.EPackManifest.Dependency.Builder addDependencyBuilder(
            int index) {
          return getDependencyFieldBuilder().addBuilder(
              index, EdocService.EPackManifest.Dependency.getDefaultInstance());
        }
        /**
         * <pre>
         * list of dependency objects of a given object.
         * eg: underlying worksheets are dependency objects for a pinboard or
         * filter.
         * </pre>
         *
         * <code>repeated .EPackManifest.Dependency dependency = 6;</code>
         */
        public java.util.List<EdocService.EPackManifest.Dependency.Builder> 
             getDependencyBuilderList() {
          return getDependencyFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            EdocService.EPackManifest.Dependency, EdocService.EPackManifest.Dependency.Builder, EdocService.EPackManifest.DependencyOrBuilder> 
            getDependencyFieldBuilder() {
          if (dependencyBuilder_ == null) {
            dependencyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                EdocService.EPackManifest.Dependency, EdocService.EPackManifest.Dependency.Builder, EdocService.EPackManifest.DependencyOrBuilder>(
                    dependency_,
                    ((bitField0_ & 0x00000020) != 0),
                    getParentForChildren(),
                    isClean());
            dependency_ = null;
          }
          return dependencyBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:EPackManifest.ObjectInfo)
      }

      // @@protoc_insertion_point(class_scope:EPackManifest.ObjectInfo)
      private static final EdocService.EPackManifest.ObjectInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EdocService.EPackManifest.ObjectInfo();
      }

      public static EdocService.EPackManifest.ObjectInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ObjectInfo>
          PARSER = new com.google.protobuf.AbstractParser<ObjectInfo>() {
        @java.lang.Override
        public ObjectInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ObjectInfo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ObjectInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ObjectInfo> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EdocService.EPackManifest.ObjectInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int OBJECT_FIELD_NUMBER = 1;
    private java.util.List<EdocService.EPackManifest.ObjectInfo> object_;
    /**
     * <pre>
     * Details of the exported objects in zip file.
     * </pre>
     *
     * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
     */
    @java.lang.Override
    public java.util.List<EdocService.EPackManifest.ObjectInfo> getObjectList() {
      return object_;
    }
    /**
     * <pre>
     * Details of the exported objects in zip file.
     * </pre>
     *
     * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EdocService.EPackManifest.ObjectInfoOrBuilder> 
        getObjectOrBuilderList() {
      return object_;
    }
    /**
     * <pre>
     * Details of the exported objects in zip file.
     * </pre>
     *
     * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
     */
    @java.lang.Override
    public int getObjectCount() {
      return object_.size();
    }
    /**
     * <pre>
     * Details of the exported objects in zip file.
     * </pre>
     *
     * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
     */
    @java.lang.Override
    public EdocService.EPackManifest.ObjectInfo getObject(int index) {
      return object_.get(index);
    }
    /**
     * <pre>
     * Details of the exported objects in zip file.
     * </pre>
     *
     * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
     */
    @java.lang.Override
    public EdocService.EPackManifest.ObjectInfoOrBuilder getObjectOrBuilder(
        int index) {
      return object_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < object_.size(); i++) {
        output.writeMessage(1, object_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < object_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, object_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EdocService.EPackManifest)) {
        return super.equals(obj);
      }
      EdocService.EPackManifest other = (EdocService.EPackManifest) obj;

      if (!getObjectList()
          .equals(other.getObjectList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getObjectCount() > 0) {
        hash = (37 * hash) + OBJECT_FIELD_NUMBER;
        hash = (53 * hash) + getObjectList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EdocService.EPackManifest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.EPackManifest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.EPackManifest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.EPackManifest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.EPackManifest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.EPackManifest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.EPackManifest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EdocService.EPackManifest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EdocService.EPackManifest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EdocService.EPackManifest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EdocService.EPackManifest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EdocService.EPackManifest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EdocService.EPackManifest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EPackManifest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EPackManifest)
        EdocService.EPackManifestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_EPackManifest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_EPackManifest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.EPackManifest.class, EdocService.EPackManifest.Builder.class);
      }

      // Construct using EdocService.EPackManifest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getObjectFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (objectBuilder_ == null) {
          object_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          objectBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EdocService.internal_static_EPackManifest_descriptor;
      }

      @java.lang.Override
      public EdocService.EPackManifest getDefaultInstanceForType() {
        return EdocService.EPackManifest.getDefaultInstance();
      }

      @java.lang.Override
      public EdocService.EPackManifest build() {
        EdocService.EPackManifest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EdocService.EPackManifest buildPartial() {
        EdocService.EPackManifest result = new EdocService.EPackManifest(this);
        int from_bitField0_ = bitField0_;
        if (objectBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            object_ = java.util.Collections.unmodifiableList(object_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.object_ = object_;
        } else {
          result.object_ = objectBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EdocService.EPackManifest) {
          return mergeFrom((EdocService.EPackManifest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EdocService.EPackManifest other) {
        if (other == EdocService.EPackManifest.getDefaultInstance()) return this;
        if (objectBuilder_ == null) {
          if (!other.object_.isEmpty()) {
            if (object_.isEmpty()) {
              object_ = other.object_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureObjectIsMutable();
              object_.addAll(other.object_);
            }
            onChanged();
          }
        } else {
          if (!other.object_.isEmpty()) {
            if (objectBuilder_.isEmpty()) {
              objectBuilder_.dispose();
              objectBuilder_ = null;
              object_ = other.object_;
              bitField0_ = (bitField0_ & ~0x00000001);
              objectBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getObjectFieldBuilder() : null;
            } else {
              objectBuilder_.addAllMessages(other.object_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EdocService.EPackManifest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EdocService.EPackManifest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<EdocService.EPackManifest.ObjectInfo> object_ =
        java.util.Collections.emptyList();
      private void ensureObjectIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          object_ = new java.util.ArrayList<EdocService.EPackManifest.ObjectInfo>(object_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.EPackManifest.ObjectInfo, EdocService.EPackManifest.ObjectInfo.Builder, EdocService.EPackManifest.ObjectInfoOrBuilder> objectBuilder_;

      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public java.util.List<EdocService.EPackManifest.ObjectInfo> getObjectList() {
        if (objectBuilder_ == null) {
          return java.util.Collections.unmodifiableList(object_);
        } else {
          return objectBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public int getObjectCount() {
        if (objectBuilder_ == null) {
          return object_.size();
        } else {
          return objectBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public EdocService.EPackManifest.ObjectInfo getObject(int index) {
        if (objectBuilder_ == null) {
          return object_.get(index);
        } else {
          return objectBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public Builder setObject(
          int index, EdocService.EPackManifest.ObjectInfo value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.set(index, value);
          onChanged();
        } else {
          objectBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public Builder setObject(
          int index, EdocService.EPackManifest.ObjectInfo.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.set(index, builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public Builder addObject(EdocService.EPackManifest.ObjectInfo value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.add(value);
          onChanged();
        } else {
          objectBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public Builder addObject(
          int index, EdocService.EPackManifest.ObjectInfo value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.add(index, value);
          onChanged();
        } else {
          objectBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public Builder addObject(
          EdocService.EPackManifest.ObjectInfo.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.add(builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public Builder addObject(
          int index, EdocService.EPackManifest.ObjectInfo.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.add(index, builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public Builder addAllObject(
          java.lang.Iterable<? extends EdocService.EPackManifest.ObjectInfo> values) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, object_);
          onChanged();
        } else {
          objectBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public Builder clearObject() {
        if (objectBuilder_ == null) {
          object_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          objectBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public Builder removeObject(int index) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.remove(index);
          onChanged();
        } else {
          objectBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public EdocService.EPackManifest.ObjectInfo.Builder getObjectBuilder(
          int index) {
        return getObjectFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public EdocService.EPackManifest.ObjectInfoOrBuilder getObjectOrBuilder(
          int index) {
        if (objectBuilder_ == null) {
          return object_.get(index);  } else {
          return objectBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public java.util.List<? extends EdocService.EPackManifest.ObjectInfoOrBuilder> 
           getObjectOrBuilderList() {
        if (objectBuilder_ != null) {
          return objectBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(object_);
        }
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public EdocService.EPackManifest.ObjectInfo.Builder addObjectBuilder() {
        return getObjectFieldBuilder().addBuilder(
            EdocService.EPackManifest.ObjectInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public EdocService.EPackManifest.ObjectInfo.Builder addObjectBuilder(
          int index) {
        return getObjectFieldBuilder().addBuilder(
            index, EdocService.EPackManifest.ObjectInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * Details of the exported objects in zip file.
       * </pre>
       *
       * <code>repeated .EPackManifest.ObjectInfo object = 1;</code>
       */
      public java.util.List<EdocService.EPackManifest.ObjectInfo.Builder> 
           getObjectBuilderList() {
        return getObjectFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.EPackManifest.ObjectInfo, EdocService.EPackManifest.ObjectInfo.Builder, EdocService.EPackManifest.ObjectInfoOrBuilder> 
          getObjectFieldBuilder() {
        if (objectBuilder_ == null) {
          objectBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EdocService.EPackManifest.ObjectInfo, EdocService.EPackManifest.ObjectInfo.Builder, EdocService.EPackManifest.ObjectInfoOrBuilder>(
                  object_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          object_ = null;
        }
        return objectBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:EPackManifest)
    }

    // @@protoc_insertion_point(class_scope:EPackManifest)
    private static final EdocService.EPackManifest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EdocService.EPackManifest();
    }

    public static EdocService.EPackManifest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<EPackManifest>
        PARSER = new com.google.protobuf.AbstractParser<EPackManifest>() {
      @java.lang.Override
      public EPackManifest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EPackManifest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EPackManifest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EPackManifest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EdocService.EPackManifest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExportEPackResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ExportEPackResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * base64 encoded content of zip file.
     * </pre>
     *
     * <code>optional string zip_file = 1;</code>
     * @return Whether the zipFile field is set.
     */
    boolean hasZipFile();
    /**
     * <pre>
     * base64 encoded content of zip file.
     * </pre>
     *
     * <code>optional string zip_file = 1;</code>
     * @return The zipFile.
     */
    java.lang.String getZipFile();
    /**
     * <pre>
     * base64 encoded content of zip file.
     * </pre>
     *
     * <code>optional string zip_file = 1;</code>
     * @return The bytes for zipFile.
     */
    com.google.protobuf.ByteString
        getZipFileBytes();

    /**
     * <code>repeated .ExportEPackResponse.Object object = 2;</code>
     */
    java.util.List<EdocService.ExportEPackResponse.Object> 
        getObjectList();
    /**
     * <code>repeated .ExportEPackResponse.Object object = 2;</code>
     */
    EdocService.ExportEPackResponse.Object getObject(int index);
    /**
     * <code>repeated .ExportEPackResponse.Object object = 2;</code>
     */
    int getObjectCount();
    /**
     * <code>repeated .ExportEPackResponse.Object object = 2;</code>
     */
    java.util.List<? extends EdocService.ExportEPackResponse.ObjectOrBuilder> 
        getObjectOrBuilderList();
    /**
     * <code>repeated .ExportEPackResponse.Object object = 2;</code>
     */
    EdocService.ExportEPackResponse.ObjectOrBuilder getObjectOrBuilder(
        int index);
  }
  /**
   * <pre>
   * ExportEPackResponse is the response of ExportEPack API.
   * Zip file includes:
   *   1. Object Files -
   *      For each of the successfully exported objected, there will be a file
   *      in zip with name `{object-name}.{object-type}.tml`.
   *          Eg: sales-report.pinboard.tml,
   *              sales-report.answer.tml,
   *              sales-report.worksheet.tml
   *      1. In the filename, all the non [a-zA-Z0-9_()] char of the display
   *         name will be coverted to '-'.
   *      2. If there are multiple objects with same name, we will append a
   *         counter in their name. eg: sales-report-1.yaml, sales-report-2.yaml.
   *   2. Manifest YAML file. Content of the file will be generated from
   *      EPackManifest proto.
   * </pre>
   *
   * Protobuf type {@code ExportEPackResponse}
   */
  public static final class ExportEPackResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ExportEPackResponse)
      ExportEPackResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ExportEPackResponse.newBuilder() to construct.
    private ExportEPackResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ExportEPackResponse() {
      zipFile_ = "";
      object_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ExportEPackResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ExportEPackResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              zipFile_ = bs;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                object_ = new java.util.ArrayList<EdocService.ExportEPackResponse.Object>();
                mutable_bitField0_ |= 0x00000002;
              }
              object_.add(
                  input.readMessage(EdocService.ExportEPackResponse.Object.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          object_ = java.util.Collections.unmodifiableList(object_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EdocService.internal_static_ExportEPackResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EdocService.internal_static_ExportEPackResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EdocService.ExportEPackResponse.class, EdocService.ExportEPackResponse.Builder.class);
    }

    public interface ObjectOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ExportEPackResponse.Object)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Meta information of the object.
       * </pre>
       *
       * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
       * @return Whether the info field is set.
       */
      boolean hasInfo();
      /**
       * <pre>
       * Meta information of the object.
       * </pre>
       *
       * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
       * @return The info.
       */
      EdocService.EPackManifest.ObjectInfo getInfo();
      /**
       * <pre>
       * Meta information of the object.
       * </pre>
       *
       * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
       */
      EdocService.EPackManifest.ObjectInfoOrBuilder getInfoOrBuilder();

      /**
       * <pre>
       * Edoc content of the object in YAML format.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return Whether the edoc field is set.
       */
      boolean hasEdoc();
      /**
       * <pre>
       * Edoc content of the object in YAML format.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return The edoc.
       */
      java.lang.String getEdoc();
      /**
       * <pre>
       * Edoc content of the object in YAML format.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return The bytes for edoc.
       */
      com.google.protobuf.ByteString
          getEdocBytes();
    }
    /**
     * Protobuf type {@code ExportEPackResponse.Object}
     */
    public static final class Object extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:ExportEPackResponse.Object)
        ObjectOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Object.newBuilder() to construct.
      private Object(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Object() {
        edoc_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Object();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Object(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                EdocService.EPackManifest.ObjectInfo.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) != 0)) {
                  subBuilder = info_.toBuilder();
                }
                info_ = input.readMessage(EdocService.EPackManifest.ObjectInfo.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(info_);
                  info_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                edoc_ = bs;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_ExportEPackResponse_Object_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_ExportEPackResponse_Object_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.ExportEPackResponse.Object.class, EdocService.ExportEPackResponse.Object.Builder.class);
      }

      private int bitField0_;
      public static final int INFO_FIELD_NUMBER = 1;
      private EdocService.EPackManifest.ObjectInfo info_;
      /**
       * <pre>
       * Meta information of the object.
       * </pre>
       *
       * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
       * @return Whether the info field is set.
       */
      @java.lang.Override
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Meta information of the object.
       * </pre>
       *
       * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
       * @return The info.
       */
      @java.lang.Override
      public EdocService.EPackManifest.ObjectInfo getInfo() {
        return info_ == null ? EdocService.EPackManifest.ObjectInfo.getDefaultInstance() : info_;
      }
      /**
       * <pre>
       * Meta information of the object.
       * </pre>
       *
       * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
       */
      @java.lang.Override
      public EdocService.EPackManifest.ObjectInfoOrBuilder getInfoOrBuilder() {
        return info_ == null ? EdocService.EPackManifest.ObjectInfo.getDefaultInstance() : info_;
      }

      public static final int EDOC_FIELD_NUMBER = 2;
      private volatile java.lang.Object edoc_;
      /**
       * <pre>
       * Edoc content of the object in YAML format.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return Whether the edoc field is set.
       */
      @java.lang.Override
      public boolean hasEdoc() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Edoc content of the object in YAML format.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return The edoc.
       */
      @java.lang.Override
      public java.lang.String getEdoc() {
        java.lang.Object ref = edoc_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            edoc_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Edoc content of the object in YAML format.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return The bytes for edoc.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getEdocBytes() {
        java.lang.Object ref = edoc_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          edoc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(1, getInfo());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, edoc_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getInfo());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, edoc_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EdocService.ExportEPackResponse.Object)) {
          return super.equals(obj);
        }
        EdocService.ExportEPackResponse.Object other = (EdocService.ExportEPackResponse.Object) obj;

        if (hasInfo() != other.hasInfo()) return false;
        if (hasInfo()) {
          if (!getInfo()
              .equals(other.getInfo())) return false;
        }
        if (hasEdoc() != other.hasEdoc()) return false;
        if (hasEdoc()) {
          if (!getEdoc()
              .equals(other.getEdoc())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasInfo()) {
          hash = (37 * hash) + INFO_FIELD_NUMBER;
          hash = (53 * hash) + getInfo().hashCode();
        }
        if (hasEdoc()) {
          hash = (37 * hash) + EDOC_FIELD_NUMBER;
          hash = (53 * hash) + getEdoc().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EdocService.ExportEPackResponse.Object parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.ExportEPackResponse.Object parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.ExportEPackResponse.Object parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.ExportEPackResponse.Object parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.ExportEPackResponse.Object parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.ExportEPackResponse.Object parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.ExportEPackResponse.Object parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.ExportEPackResponse.Object parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.ExportEPackResponse.Object parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EdocService.ExportEPackResponse.Object parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.ExportEPackResponse.Object parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.ExportEPackResponse.Object parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EdocService.ExportEPackResponse.Object prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code ExportEPackResponse.Object}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ExportEPackResponse.Object)
          EdocService.ExportEPackResponse.ObjectOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EdocService.internal_static_ExportEPackResponse_Object_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EdocService.internal_static_ExportEPackResponse_Object_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EdocService.ExportEPackResponse.Object.class, EdocService.ExportEPackResponse.Object.Builder.class);
        }

        // Construct using EdocService.ExportEPackResponse.Object.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getInfoFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (infoBuilder_ == null) {
            info_ = null;
          } else {
            infoBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          edoc_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EdocService.internal_static_ExportEPackResponse_Object_descriptor;
        }

        @java.lang.Override
        public EdocService.ExportEPackResponse.Object getDefaultInstanceForType() {
          return EdocService.ExportEPackResponse.Object.getDefaultInstance();
        }

        @java.lang.Override
        public EdocService.ExportEPackResponse.Object build() {
          EdocService.ExportEPackResponse.Object result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EdocService.ExportEPackResponse.Object buildPartial() {
          EdocService.ExportEPackResponse.Object result = new EdocService.ExportEPackResponse.Object(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            if (infoBuilder_ == null) {
              result.info_ = info_;
            } else {
              result.info_ = infoBuilder_.build();
            }
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.edoc_ = edoc_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EdocService.ExportEPackResponse.Object) {
            return mergeFrom((EdocService.ExportEPackResponse.Object)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EdocService.ExportEPackResponse.Object other) {
          if (other == EdocService.ExportEPackResponse.Object.getDefaultInstance()) return this;
          if (other.hasInfo()) {
            mergeInfo(other.getInfo());
          }
          if (other.hasEdoc()) {
            bitField0_ |= 0x00000002;
            edoc_ = other.edoc_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EdocService.ExportEPackResponse.Object parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EdocService.ExportEPackResponse.Object) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private EdocService.EPackManifest.ObjectInfo info_;
        private com.google.protobuf.SingleFieldBuilderV3<
            EdocService.EPackManifest.ObjectInfo, EdocService.EPackManifest.ObjectInfo.Builder, EdocService.EPackManifest.ObjectInfoOrBuilder> infoBuilder_;
        /**
         * <pre>
         * Meta information of the object.
         * </pre>
         *
         * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
         * @return Whether the info field is set.
         */
        public boolean hasInfo() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Meta information of the object.
         * </pre>
         *
         * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
         * @return The info.
         */
        public EdocService.EPackManifest.ObjectInfo getInfo() {
          if (infoBuilder_ == null) {
            return info_ == null ? EdocService.EPackManifest.ObjectInfo.getDefaultInstance() : info_;
          } else {
            return infoBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Meta information of the object.
         * </pre>
         *
         * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
         */
        public Builder setInfo(EdocService.EPackManifest.ObjectInfo value) {
          if (infoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            info_ = value;
            onChanged();
          } else {
            infoBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * Meta information of the object.
         * </pre>
         *
         * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
         */
        public Builder setInfo(
            EdocService.EPackManifest.ObjectInfo.Builder builderForValue) {
          if (infoBuilder_ == null) {
            info_ = builderForValue.build();
            onChanged();
          } else {
            infoBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * Meta information of the object.
         * </pre>
         *
         * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
         */
        public Builder mergeInfo(EdocService.EPackManifest.ObjectInfo value) {
          if (infoBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
                info_ != null &&
                info_ != EdocService.EPackManifest.ObjectInfo.getDefaultInstance()) {
              info_ =
                EdocService.EPackManifest.ObjectInfo.newBuilder(info_).mergeFrom(value).buildPartial();
            } else {
              info_ = value;
            }
            onChanged();
          } else {
            infoBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * Meta information of the object.
         * </pre>
         *
         * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
         */
        public Builder clearInfo() {
          if (infoBuilder_ == null) {
            info_ = null;
            onChanged();
          } else {
            infoBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <pre>
         * Meta information of the object.
         * </pre>
         *
         * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
         */
        public EdocService.EPackManifest.ObjectInfo.Builder getInfoBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getInfoFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Meta information of the object.
         * </pre>
         *
         * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
         */
        public EdocService.EPackManifest.ObjectInfoOrBuilder getInfoOrBuilder() {
          if (infoBuilder_ != null) {
            return infoBuilder_.getMessageOrBuilder();
          } else {
            return info_ == null ?
                EdocService.EPackManifest.ObjectInfo.getDefaultInstance() : info_;
          }
        }
        /**
         * <pre>
         * Meta information of the object.
         * </pre>
         *
         * <code>optional .EPackManifest.ObjectInfo info = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            EdocService.EPackManifest.ObjectInfo, EdocService.EPackManifest.ObjectInfo.Builder, EdocService.EPackManifest.ObjectInfoOrBuilder> 
            getInfoFieldBuilder() {
          if (infoBuilder_ == null) {
            infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                EdocService.EPackManifest.ObjectInfo, EdocService.EPackManifest.ObjectInfo.Builder, EdocService.EPackManifest.ObjectInfoOrBuilder>(
                    getInfo(),
                    getParentForChildren(),
                    isClean());
            info_ = null;
          }
          return infoBuilder_;
        }

        private java.lang.Object edoc_ = "";
        /**
         * <pre>
         * Edoc content of the object in YAML format.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @return Whether the edoc field is set.
         */
        public boolean hasEdoc() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Edoc content of the object in YAML format.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @return The edoc.
         */
        public java.lang.String getEdoc() {
          java.lang.Object ref = edoc_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              edoc_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Edoc content of the object in YAML format.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @return The bytes for edoc.
         */
        public com.google.protobuf.ByteString
            getEdocBytes() {
          java.lang.Object ref = edoc_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            edoc_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Edoc content of the object in YAML format.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @param value The edoc to set.
         * @return This builder for chaining.
         */
        public Builder setEdoc(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          edoc_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Edoc content of the object in YAML format.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearEdoc() {
          bitField0_ = (bitField0_ & ~0x00000002);
          edoc_ = getDefaultInstance().getEdoc();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Edoc content of the object in YAML format.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @param value The bytes for edoc to set.
         * @return This builder for chaining.
         */
        public Builder setEdocBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          edoc_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:ExportEPackResponse.Object)
      }

      // @@protoc_insertion_point(class_scope:ExportEPackResponse.Object)
      private static final EdocService.ExportEPackResponse.Object DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EdocService.ExportEPackResponse.Object();
      }

      public static EdocService.ExportEPackResponse.Object getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Object>
          PARSER = new com.google.protobuf.AbstractParser<Object>() {
        @java.lang.Override
        public Object parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Object(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Object> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Object> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EdocService.ExportEPackResponse.Object getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ZIP_FILE_FIELD_NUMBER = 1;
    private volatile java.lang.Object zipFile_;
    /**
     * <pre>
     * base64 encoded content of zip file.
     * </pre>
     *
     * <code>optional string zip_file = 1;</code>
     * @return Whether the zipFile field is set.
     */
    @java.lang.Override
    public boolean hasZipFile() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * base64 encoded content of zip file.
     * </pre>
     *
     * <code>optional string zip_file = 1;</code>
     * @return The zipFile.
     */
    @java.lang.Override
    public java.lang.String getZipFile() {
      java.lang.Object ref = zipFile_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          zipFile_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * base64 encoded content of zip file.
     * </pre>
     *
     * <code>optional string zip_file = 1;</code>
     * @return The bytes for zipFile.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getZipFileBytes() {
      java.lang.Object ref = zipFile_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        zipFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OBJECT_FIELD_NUMBER = 2;
    private java.util.List<EdocService.ExportEPackResponse.Object> object_;
    /**
     * <code>repeated .ExportEPackResponse.Object object = 2;</code>
     */
    @java.lang.Override
    public java.util.List<EdocService.ExportEPackResponse.Object> getObjectList() {
      return object_;
    }
    /**
     * <code>repeated .ExportEPackResponse.Object object = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EdocService.ExportEPackResponse.ObjectOrBuilder> 
        getObjectOrBuilderList() {
      return object_;
    }
    /**
     * <code>repeated .ExportEPackResponse.Object object = 2;</code>
     */
    @java.lang.Override
    public int getObjectCount() {
      return object_.size();
    }
    /**
     * <code>repeated .ExportEPackResponse.Object object = 2;</code>
     */
    @java.lang.Override
    public EdocService.ExportEPackResponse.Object getObject(int index) {
      return object_.get(index);
    }
    /**
     * <code>repeated .ExportEPackResponse.Object object = 2;</code>
     */
    @java.lang.Override
    public EdocService.ExportEPackResponse.ObjectOrBuilder getObjectOrBuilder(
        int index) {
      return object_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, zipFile_);
      }
      for (int i = 0; i < object_.size(); i++) {
        output.writeMessage(2, object_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, zipFile_);
      }
      for (int i = 0; i < object_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, object_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EdocService.ExportEPackResponse)) {
        return super.equals(obj);
      }
      EdocService.ExportEPackResponse other = (EdocService.ExportEPackResponse) obj;

      if (hasZipFile() != other.hasZipFile()) return false;
      if (hasZipFile()) {
        if (!getZipFile()
            .equals(other.getZipFile())) return false;
      }
      if (!getObjectList()
          .equals(other.getObjectList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasZipFile()) {
        hash = (37 * hash) + ZIP_FILE_FIELD_NUMBER;
        hash = (53 * hash) + getZipFile().hashCode();
      }
      if (getObjectCount() > 0) {
        hash = (37 * hash) + OBJECT_FIELD_NUMBER;
        hash = (53 * hash) + getObjectList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EdocService.ExportEPackResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.ExportEPackResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.ExportEPackResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.ExportEPackResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.ExportEPackResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.ExportEPackResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.ExportEPackResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EdocService.ExportEPackResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EdocService.ExportEPackResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EdocService.ExportEPackResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EdocService.ExportEPackResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EdocService.ExportEPackResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EdocService.ExportEPackResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ExportEPackResponse is the response of ExportEPack API.
     * Zip file includes:
     *   1. Object Files -
     *      For each of the successfully exported objected, there will be a file
     *      in zip with name `{object-name}.{object-type}.tml`.
     *          Eg: sales-report.pinboard.tml,
     *              sales-report.answer.tml,
     *              sales-report.worksheet.tml
     *      1. In the filename, all the non [a-zA-Z0-9_()] char of the display
     *         name will be coverted to '-'.
     *      2. If there are multiple objects with same name, we will append a
     *         counter in their name. eg: sales-report-1.yaml, sales-report-2.yaml.
     *   2. Manifest YAML file. Content of the file will be generated from
     *      EPackManifest proto.
     * </pre>
     *
     * Protobuf type {@code ExportEPackResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ExportEPackResponse)
        EdocService.ExportEPackResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_ExportEPackResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_ExportEPackResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.ExportEPackResponse.class, EdocService.ExportEPackResponse.Builder.class);
      }

      // Construct using EdocService.ExportEPackResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getObjectFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        zipFile_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (objectBuilder_ == null) {
          object_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          objectBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EdocService.internal_static_ExportEPackResponse_descriptor;
      }

      @java.lang.Override
      public EdocService.ExportEPackResponse getDefaultInstanceForType() {
        return EdocService.ExportEPackResponse.getDefaultInstance();
      }

      @java.lang.Override
      public EdocService.ExportEPackResponse build() {
        EdocService.ExportEPackResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EdocService.ExportEPackResponse buildPartial() {
        EdocService.ExportEPackResponse result = new EdocService.ExportEPackResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.zipFile_ = zipFile_;
        if (objectBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            object_ = java.util.Collections.unmodifiableList(object_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.object_ = object_;
        } else {
          result.object_ = objectBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EdocService.ExportEPackResponse) {
          return mergeFrom((EdocService.ExportEPackResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EdocService.ExportEPackResponse other) {
        if (other == EdocService.ExportEPackResponse.getDefaultInstance()) return this;
        if (other.hasZipFile()) {
          bitField0_ |= 0x00000001;
          zipFile_ = other.zipFile_;
          onChanged();
        }
        if (objectBuilder_ == null) {
          if (!other.object_.isEmpty()) {
            if (object_.isEmpty()) {
              object_ = other.object_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureObjectIsMutable();
              object_.addAll(other.object_);
            }
            onChanged();
          }
        } else {
          if (!other.object_.isEmpty()) {
            if (objectBuilder_.isEmpty()) {
              objectBuilder_.dispose();
              objectBuilder_ = null;
              object_ = other.object_;
              bitField0_ = (bitField0_ & ~0x00000002);
              objectBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getObjectFieldBuilder() : null;
            } else {
              objectBuilder_.addAllMessages(other.object_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EdocService.ExportEPackResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EdocService.ExportEPackResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object zipFile_ = "";
      /**
       * <pre>
       * base64 encoded content of zip file.
       * </pre>
       *
       * <code>optional string zip_file = 1;</code>
       * @return Whether the zipFile field is set.
       */
      public boolean hasZipFile() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * base64 encoded content of zip file.
       * </pre>
       *
       * <code>optional string zip_file = 1;</code>
       * @return The zipFile.
       */
      public java.lang.String getZipFile() {
        java.lang.Object ref = zipFile_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            zipFile_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * base64 encoded content of zip file.
       * </pre>
       *
       * <code>optional string zip_file = 1;</code>
       * @return The bytes for zipFile.
       */
      public com.google.protobuf.ByteString
          getZipFileBytes() {
        java.lang.Object ref = zipFile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          zipFile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * base64 encoded content of zip file.
       * </pre>
       *
       * <code>optional string zip_file = 1;</code>
       * @param value The zipFile to set.
       * @return This builder for chaining.
       */
      public Builder setZipFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        zipFile_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * base64 encoded content of zip file.
       * </pre>
       *
       * <code>optional string zip_file = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearZipFile() {
        bitField0_ = (bitField0_ & ~0x00000001);
        zipFile_ = getDefaultInstance().getZipFile();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * base64 encoded content of zip file.
       * </pre>
       *
       * <code>optional string zip_file = 1;</code>
       * @param value The bytes for zipFile to set.
       * @return This builder for chaining.
       */
      public Builder setZipFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        zipFile_ = value;
        onChanged();
        return this;
      }

      private java.util.List<EdocService.ExportEPackResponse.Object> object_ =
        java.util.Collections.emptyList();
      private void ensureObjectIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          object_ = new java.util.ArrayList<EdocService.ExportEPackResponse.Object>(object_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.ExportEPackResponse.Object, EdocService.ExportEPackResponse.Object.Builder, EdocService.ExportEPackResponse.ObjectOrBuilder> objectBuilder_;

      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public java.util.List<EdocService.ExportEPackResponse.Object> getObjectList() {
        if (objectBuilder_ == null) {
          return java.util.Collections.unmodifiableList(object_);
        } else {
          return objectBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public int getObjectCount() {
        if (objectBuilder_ == null) {
          return object_.size();
        } else {
          return objectBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public EdocService.ExportEPackResponse.Object getObject(int index) {
        if (objectBuilder_ == null) {
          return object_.get(index);
        } else {
          return objectBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public Builder setObject(
          int index, EdocService.ExportEPackResponse.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.set(index, value);
          onChanged();
        } else {
          objectBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public Builder setObject(
          int index, EdocService.ExportEPackResponse.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.set(index, builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public Builder addObject(EdocService.ExportEPackResponse.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.add(value);
          onChanged();
        } else {
          objectBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public Builder addObject(
          int index, EdocService.ExportEPackResponse.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.add(index, value);
          onChanged();
        } else {
          objectBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public Builder addObject(
          EdocService.ExportEPackResponse.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.add(builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public Builder addObject(
          int index, EdocService.ExportEPackResponse.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.add(index, builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public Builder addAllObject(
          java.lang.Iterable<? extends EdocService.ExportEPackResponse.Object> values) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, object_);
          onChanged();
        } else {
          objectBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public Builder clearObject() {
        if (objectBuilder_ == null) {
          object_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          objectBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public Builder removeObject(int index) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.remove(index);
          onChanged();
        } else {
          objectBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public EdocService.ExportEPackResponse.Object.Builder getObjectBuilder(
          int index) {
        return getObjectFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public EdocService.ExportEPackResponse.ObjectOrBuilder getObjectOrBuilder(
          int index) {
        if (objectBuilder_ == null) {
          return object_.get(index);  } else {
          return objectBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public java.util.List<? extends EdocService.ExportEPackResponse.ObjectOrBuilder> 
           getObjectOrBuilderList() {
        if (objectBuilder_ != null) {
          return objectBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(object_);
        }
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public EdocService.ExportEPackResponse.Object.Builder addObjectBuilder() {
        return getObjectFieldBuilder().addBuilder(
            EdocService.ExportEPackResponse.Object.getDefaultInstance());
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public EdocService.ExportEPackResponse.Object.Builder addObjectBuilder(
          int index) {
        return getObjectFieldBuilder().addBuilder(
            index, EdocService.ExportEPackResponse.Object.getDefaultInstance());
      }
      /**
       * <code>repeated .ExportEPackResponse.Object object = 2;</code>
       */
      public java.util.List<EdocService.ExportEPackResponse.Object.Builder> 
           getObjectBuilderList() {
        return getObjectFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.ExportEPackResponse.Object, EdocService.ExportEPackResponse.Object.Builder, EdocService.ExportEPackResponse.ObjectOrBuilder> 
          getObjectFieldBuilder() {
        if (objectBuilder_ == null) {
          objectBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EdocService.ExportEPackResponse.Object, EdocService.ExportEPackResponse.Object.Builder, EdocService.ExportEPackResponse.ObjectOrBuilder>(
                  object_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          object_ = null;
        }
        return objectBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ExportEPackResponse)
    }

    // @@protoc_insertion_point(class_scope:ExportEPackResponse)
    private static final EdocService.ExportEPackResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EdocService.ExportEPackResponse();
    }

    public static EdocService.ExportEPackResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ExportEPackResponse>
        PARSER = new com.google.protobuf.AbstractParser<ExportEPackResponse>() {
      @java.lang.Override
      public ExportEPackResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExportEPackResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ExportEPackResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExportEPackResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EdocService.ExportEPackResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImportEPackRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ImportEPackRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .ImportEPackRequest.Object object = 1;</code>
     */
    java.util.List<EdocService.ImportEPackRequest.Object> 
        getObjectList();
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .ImportEPackRequest.Object object = 1;</code>
     */
    EdocService.ImportEPackRequest.Object getObject(int index);
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .ImportEPackRequest.Object object = 1;</code>
     */
    int getObjectCount();
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .ImportEPackRequest.Object object = 1;</code>
     */
    java.util.List<? extends EdocService.ImportEPackRequest.ObjectOrBuilder> 
        getObjectOrBuilderList();
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .ImportEPackRequest.Object object = 1;</code>
     */
    EdocService.ImportEPackRequest.ObjectOrBuilder getObjectOrBuilder(
        int index);

    /**
     * <pre>
     * Refer comments above.
     * </pre>
     *
     * <code>optional .ImportEPackRequest.ImportPolicy import_policy = 2 [default = PARTIAL];</code>
     * @return Whether the importPolicy field is set.
     */
    boolean hasImportPolicy();
    /**
     * <pre>
     * Refer comments above.
     * </pre>
     *
     * <code>optional .ImportEPackRequest.ImportPolicy import_policy = 2 [default = PARTIAL];</code>
     * @return The importPolicy.
     */
    EdocService.ImportEPackRequest.ImportPolicy getImportPolicy();

    /**
     * <pre>
     * Format type of the EDoc representation.
     * </pre>
     *
     * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
     * @return Whether the formatType field is set.
     */
    boolean hasFormatType();
    /**
     * <pre>
     * Format type of the EDoc representation.
     * </pre>
     *
     * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
     * @return The formatType.
     */
    EdocCommon.EDocFormatType.E getFormatType();

    /**
     * <pre>
     * Flag to control import of permissions. If true, the permissions of the objects
     * will also be imported and if the dependencies are also requested, then
     * permissions of those dependencies will be imported as well.
     * Please note that applying permissions will only impact the permissions for users mentioned in
     * the edoc. All other user permissions remain untouched.
     * </pre>
     *
     * <code>optional bool import_permissions = 4 [default = false];</code>
     * @return Whether the importPermissions field is set.
     */
    boolean hasImportPermissions();
    /**
     * <pre>
     * Flag to control import of permissions. If true, the permissions of the objects
     * will also be imported and if the dependencies are also requested, then
     * permissions of those dependencies will be imported as well.
     * Please note that applying permissions will only impact the permissions for users mentioned in
     * the edoc. All other user permissions remain untouched.
     * </pre>
     *
     * <code>optional bool import_permissions = 4 [default = false];</code>
     * @return The importPermissions.
     */
    boolean getImportPermissions();
  }
  /**
   * <pre>
   * POST API : /callosum/v1/metadata/edoc/importEPack
   * argument1 request : ImportEPackRequest proto serialized as JSON string
   * Returns ImportEPackResponse proto serialized as JSON string.
   * </pre>
   *
   * Protobuf type {@code ImportEPackRequest}
   */
  public static final class ImportEPackRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ImportEPackRequest)
      ImportEPackRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ImportEPackRequest.newBuilder() to construct.
    private ImportEPackRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImportEPackRequest() {
      object_ = java.util.Collections.emptyList();
      importPolicy_ = 1;
      formatType_ = 1;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ImportEPackRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ImportEPackRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                object_ = new java.util.ArrayList<EdocService.ImportEPackRequest.Object>();
                mutable_bitField0_ |= 0x00000001;
              }
              object_.add(
                  input.readMessage(EdocService.ImportEPackRequest.Object.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              EdocService.ImportEPackRequest.ImportPolicy value = EdocService.ImportEPackRequest.ImportPolicy.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                importPolicy_ = rawValue;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              EdocCommon.EDocFormatType.E value = EdocCommon.EDocFormatType.E.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                formatType_ = rawValue;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              importPermissions_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          object_ = java.util.Collections.unmodifiableList(object_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EdocService.internal_static_ImportEPackRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EdocService.internal_static_ImportEPackRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EdocService.ImportEPackRequest.class, EdocService.ImportEPackRequest.Builder.class);
    }

    /**
     * <pre>
     * Import policy that the user wants.
     * If ALL_OR_NONE, either all or no object will be imported. i.e. If one
     * object fails to import, no other object will be imported.
     * If PARTIAL, import of some objects might fail and some might succeed. In
     * case of failure of a object their dependent objects will also be skipped.
     * If VALIDATE_ONLY, all the objects will be validated and error(s) will be
     * returned if they cannot lead to successful import. Note that objects won't
     * actually be imported in this case.
     * </pre>
     *
     * Protobuf enum {@code ImportEPackRequest.ImportPolicy}
     */
    public enum ImportPolicy
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PARTIAL = 1;</code>
       */
      PARTIAL(1),
      /**
       * <code>ALL_OR_NONE = 2;</code>
       */
      ALL_OR_NONE(2),
      /**
       * <code>VALIDATE_ONLY = 3;</code>
       */
      VALIDATE_ONLY(3),
      ;

      /**
       * <code>PARTIAL = 1;</code>
       */
      public static final int PARTIAL_VALUE = 1;
      /**
       * <code>ALL_OR_NONE = 2;</code>
       */
      public static final int ALL_OR_NONE_VALUE = 2;
      /**
       * <code>VALIDATE_ONLY = 3;</code>
       */
      public static final int VALIDATE_ONLY_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ImportPolicy valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ImportPolicy forNumber(int value) {
        switch (value) {
          case 1: return PARTIAL;
          case 2: return ALL_OR_NONE;
          case 3: return VALIDATE_ONLY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ImportPolicy>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ImportPolicy> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ImportPolicy>() {
              public ImportPolicy findValueByNumber(int number) {
                return ImportPolicy.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return EdocService.ImportEPackRequest.getDescriptor().getEnumTypes().get(0);
      }

      private static final ImportPolicy[] VALUES = values();

      public static ImportPolicy valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ImportPolicy(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ImportEPackRequest.ImportPolicy)
    }

    public interface ObjectOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ImportEPackRequest.Object)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Action specified by the user. Valid values: [CREATE, UPDATE]
       * 1. If action is set to CREATE (default), a new object will be created
       *    irrespective of the external and internal guids.
       * 2. If action is set to UPDATE, we require that atleast one of external or
       *    internal guids be specified. If both are empty, an error will be thrown.
       *    If external guid is present, it will take priority over internal guid
       *    and an object corresponding to the external guid will be updated.
       * Note: We have an option to provide guid in TML file as well as request
       *       parameter. The guid inside the TML object is referred as internal
       *       guid here. The guid in the request params is referred as external
       *       guid.
       * </pre>
       *
       * <code>optional .ImportAction.E action = 1 [default = CREATE];</code>
       * @return Whether the action field is set.
       */
      boolean hasAction();
      /**
       * <pre>
       * Action specified by the user. Valid values: [CREATE, UPDATE]
       * 1. If action is set to CREATE (default), a new object will be created
       *    irrespective of the external and internal guids.
       * 2. If action is set to UPDATE, we require that atleast one of external or
       *    internal guids be specified. If both are empty, an error will be thrown.
       *    If external guid is present, it will take priority over internal guid
       *    and an object corresponding to the external guid will be updated.
       * Note: We have an option to provide guid in TML file as well as request
       *       parameter. The guid inside the TML object is referred as internal
       *       guid here. The guid in the request params is referred as external
       *       guid.
       * </pre>
       *
       * <code>optional .ImportAction.E action = 1 [default = CREATE];</code>
       * @return The action.
       */
      EdocCommon.ImportAction.E getAction();

      /**
       * <pre>
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return Whether the filename field is set.
       */
      boolean hasFilename();
      /**
       * <pre>
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The filename.
       */
      java.lang.String getFilename();
      /**
       * <pre>
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The bytes for filename.
       */
      com.google.protobuf.ByteString
          getFilenameBytes();

      /**
       * <pre>
       * [Required] Entity doc representation of metadata object. i.e. Content of
       * TML file.
       * </pre>
       *
       * <code>optional string edoc = 3;</code>
       * @return Whether the edoc field is set.
       */
      boolean hasEdoc();
      /**
       * <pre>
       * [Required] Entity doc representation of metadata object. i.e. Content of
       * TML file.
       * </pre>
       *
       * <code>optional string edoc = 3;</code>
       * @return The edoc.
       */
      java.lang.String getEdoc();
      /**
       * <pre>
       * [Required] Entity doc representation of metadata object. i.e. Content of
       * TML file.
       * </pre>
       *
       * <code>optional string edoc = 3;</code>
       * @return The bytes for edoc.
       */
      com.google.protobuf.ByteString
          getEdocBytes();

      /**
       * <pre>
       * Type can have one of the following values:
       * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
       * In addition, following deprecated types are also acceptable for a short
       * duration in future:
       * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
       * * LOGICAL_TABLE - for worksheet, view and table.
       * * PINBOARD_ANSWER_BOOK - for pinboard.
       * * QUESTION_ANSWER_BOOK - for answer.
       * If present, type of the &#64;edoc must match with &#64;type.
       * If not present, there will be no check on the type of eDoc.
       * </pre>
       *
       * <code>optional .EDocObjectType.E type = 4;</code>
       * @return Whether the type field is set.
       */
      boolean hasType();
      /**
       * <pre>
       * Type can have one of the following values:
       * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
       * In addition, following deprecated types are also acceptable for a short
       * duration in future:
       * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
       * * LOGICAL_TABLE - for worksheet, view and table.
       * * PINBOARD_ANSWER_BOOK - for pinboard.
       * * QUESTION_ANSWER_BOOK - for answer.
       * If present, type of the &#64;edoc must match with &#64;type.
       * If not present, there will be no check on the type of eDoc.
       * </pre>
       *
       * <code>optional .EDocObjectType.E type = 4;</code>
       * @return The type.
       */
      EdocCommon.EDocObjectType.E getType();

      /**
       * <pre>
       * This is external guid (as mentioned in the comments around ImportAction).
       * </pre>
       *
       * <code>optional string guid = 5;</code>
       * @return Whether the guid field is set.
       */
      boolean hasGuid();
      /**
       * <pre>
       * This is external guid (as mentioned in the comments around ImportAction).
       * </pre>
       *
       * <code>optional string guid = 5;</code>
       * @return The guid.
       */
      java.lang.String getGuid();
      /**
       * <pre>
       * This is external guid (as mentioned in the comments around ImportAction).
       * </pre>
       *
       * <code>optional string guid = 5;</code>
       * @return The bytes for guid.
       */
      com.google.protobuf.ByteString
          getGuidBytes();

      /**
       * <pre>
       * Filename of the containing zip file. This is only required to
       * differentiate between same named TML files across different zip files.
       * </pre>
       *
       * <code>optional string zip_filename = 6;</code>
       * @return Whether the zipFilename field is set.
       */
      boolean hasZipFilename();
      /**
       * <pre>
       * Filename of the containing zip file. This is only required to
       * differentiate between same named TML files across different zip files.
       * </pre>
       *
       * <code>optional string zip_filename = 6;</code>
       * @return The zipFilename.
       */
      java.lang.String getZipFilename();
      /**
       * <pre>
       * Filename of the containing zip file. This is only required to
       * differentiate between same named TML files across different zip files.
       * </pre>
       *
       * <code>optional string zip_filename = 6;</code>
       * @return The bytes for zipFilename.
       */
      com.google.protobuf.ByteString
          getZipFilenameBytes();
    }
    /**
     * Protobuf type {@code ImportEPackRequest.Object}
     */
    public static final class Object extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:ImportEPackRequest.Object)
        ObjectOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Object.newBuilder() to construct.
      private Object(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Object() {
        action_ = 1;
        filename_ = "";
        edoc_ = "";
        type_ = 0;
        guid_ = "";
        zipFilename_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Object();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Object(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();
                  @SuppressWarnings("deprecation")
                EdocCommon.ImportAction.E value = EdocCommon.ImportAction.E.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  action_ = rawValue;
                }
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                filename_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                edoc_ = bs;
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                  @SuppressWarnings("deprecation")
                EdocCommon.EDocObjectType.E value = EdocCommon.EDocObjectType.E.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  type_ = rawValue;
                }
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                guid_ = bs;
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000020;
                zipFilename_ = bs;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_ImportEPackRequest_Object_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_ImportEPackRequest_Object_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.ImportEPackRequest.Object.class, EdocService.ImportEPackRequest.Object.Builder.class);
      }

      private int bitField0_;
      public static final int ACTION_FIELD_NUMBER = 1;
      private int action_;
      /**
       * <pre>
       * Action specified by the user. Valid values: [CREATE, UPDATE]
       * 1. If action is set to CREATE (default), a new object will be created
       *    irrespective of the external and internal guids.
       * 2. If action is set to UPDATE, we require that atleast one of external or
       *    internal guids be specified. If both are empty, an error will be thrown.
       *    If external guid is present, it will take priority over internal guid
       *    and an object corresponding to the external guid will be updated.
       * Note: We have an option to provide guid in TML file as well as request
       *       parameter. The guid inside the TML object is referred as internal
       *       guid here. The guid in the request params is referred as external
       *       guid.
       * </pre>
       *
       * <code>optional .ImportAction.E action = 1 [default = CREATE];</code>
       * @return Whether the action field is set.
       */
      @java.lang.Override public boolean hasAction() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Action specified by the user. Valid values: [CREATE, UPDATE]
       * 1. If action is set to CREATE (default), a new object will be created
       *    irrespective of the external and internal guids.
       * 2. If action is set to UPDATE, we require that atleast one of external or
       *    internal guids be specified. If both are empty, an error will be thrown.
       *    If external guid is present, it will take priority over internal guid
       *    and an object corresponding to the external guid will be updated.
       * Note: We have an option to provide guid in TML file as well as request
       *       parameter. The guid inside the TML object is referred as internal
       *       guid here. The guid in the request params is referred as external
       *       guid.
       * </pre>
       *
       * <code>optional .ImportAction.E action = 1 [default = CREATE];</code>
       * @return The action.
       */
      @java.lang.Override public EdocCommon.ImportAction.E getAction() {
        @SuppressWarnings("deprecation")
        EdocCommon.ImportAction.E result = EdocCommon.ImportAction.E.valueOf(action_);
        return result == null ? EdocCommon.ImportAction.E.CREATE : result;
      }

      public static final int FILENAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object filename_;
      /**
       * <pre>
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return Whether the filename field is set.
       */
      @java.lang.Override
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The filename.
       */
      @java.lang.Override
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            filename_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The bytes for filename.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int EDOC_FIELD_NUMBER = 3;
      private volatile java.lang.Object edoc_;
      /**
       * <pre>
       * [Required] Entity doc representation of metadata object. i.e. Content of
       * TML file.
       * </pre>
       *
       * <code>optional string edoc = 3;</code>
       * @return Whether the edoc field is set.
       */
      @java.lang.Override
      public boolean hasEdoc() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * [Required] Entity doc representation of metadata object. i.e. Content of
       * TML file.
       * </pre>
       *
       * <code>optional string edoc = 3;</code>
       * @return The edoc.
       */
      @java.lang.Override
      public java.lang.String getEdoc() {
        java.lang.Object ref = edoc_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            edoc_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * [Required] Entity doc representation of metadata object. i.e. Content of
       * TML file.
       * </pre>
       *
       * <code>optional string edoc = 3;</code>
       * @return The bytes for edoc.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getEdocBytes() {
        java.lang.Object ref = edoc_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          edoc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TYPE_FIELD_NUMBER = 4;
      private int type_;
      /**
       * <pre>
       * Type can have one of the following values:
       * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
       * In addition, following deprecated types are also acceptable for a short
       * duration in future:
       * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
       * * LOGICAL_TABLE - for worksheet, view and table.
       * * PINBOARD_ANSWER_BOOK - for pinboard.
       * * QUESTION_ANSWER_BOOK - for answer.
       * If present, type of the &#64;edoc must match with &#64;type.
       * If not present, there will be no check on the type of eDoc.
       * </pre>
       *
       * <code>optional .EDocObjectType.E type = 4;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override public boolean hasType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Type can have one of the following values:
       * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
       * In addition, following deprecated types are also acceptable for a short
       * duration in future:
       * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
       * * LOGICAL_TABLE - for worksheet, view and table.
       * * PINBOARD_ANSWER_BOOK - for pinboard.
       * * QUESTION_ANSWER_BOOK - for answer.
       * If present, type of the &#64;edoc must match with &#64;type.
       * If not present, there will be no check on the type of eDoc.
       * </pre>
       *
       * <code>optional .EDocObjectType.E type = 4;</code>
       * @return The type.
       */
      @java.lang.Override public EdocCommon.EDocObjectType.E getType() {
        @SuppressWarnings("deprecation")
        EdocCommon.EDocObjectType.E result = EdocCommon.EDocObjectType.E.valueOf(type_);
        return result == null ? EdocCommon.EDocObjectType.E.ANSWER : result;
      }

      public static final int GUID_FIELD_NUMBER = 5;
      private volatile java.lang.Object guid_;
      /**
       * <pre>
       * This is external guid (as mentioned in the comments around ImportAction).
       * </pre>
       *
       * <code>optional string guid = 5;</code>
       * @return Whether the guid field is set.
       */
      @java.lang.Override
      public boolean hasGuid() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * This is external guid (as mentioned in the comments around ImportAction).
       * </pre>
       *
       * <code>optional string guid = 5;</code>
       * @return The guid.
       */
      @java.lang.Override
      public java.lang.String getGuid() {
        java.lang.Object ref = guid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            guid_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * This is external guid (as mentioned in the comments around ImportAction).
       * </pre>
       *
       * <code>optional string guid = 5;</code>
       * @return The bytes for guid.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getGuidBytes() {
        java.lang.Object ref = guid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          guid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ZIP_FILENAME_FIELD_NUMBER = 6;
      private volatile java.lang.Object zipFilename_;
      /**
       * <pre>
       * Filename of the containing zip file. This is only required to
       * differentiate between same named TML files across different zip files.
       * </pre>
       *
       * <code>optional string zip_filename = 6;</code>
       * @return Whether the zipFilename field is set.
       */
      @java.lang.Override
      public boolean hasZipFilename() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Filename of the containing zip file. This is only required to
       * differentiate between same named TML files across different zip files.
       * </pre>
       *
       * <code>optional string zip_filename = 6;</code>
       * @return The zipFilename.
       */
      @java.lang.Override
      public java.lang.String getZipFilename() {
        java.lang.Object ref = zipFilename_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            zipFilename_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Filename of the containing zip file. This is only required to
       * differentiate between same named TML files across different zip files.
       * </pre>
       *
       * <code>optional string zip_filename = 6;</code>
       * @return The bytes for zipFilename.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getZipFilenameBytes() {
        java.lang.Object ref = zipFilename_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          zipFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeEnum(1, action_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, filename_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, edoc_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeEnum(4, type_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, guid_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 6, zipFilename_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, action_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, filename_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, edoc_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, type_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, guid_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, zipFilename_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EdocService.ImportEPackRequest.Object)) {
          return super.equals(obj);
        }
        EdocService.ImportEPackRequest.Object other = (EdocService.ImportEPackRequest.Object) obj;

        if (hasAction() != other.hasAction()) return false;
        if (hasAction()) {
          if (action_ != other.action_) return false;
        }
        if (hasFilename() != other.hasFilename()) return false;
        if (hasFilename()) {
          if (!getFilename()
              .equals(other.getFilename())) return false;
        }
        if (hasEdoc() != other.hasEdoc()) return false;
        if (hasEdoc()) {
          if (!getEdoc()
              .equals(other.getEdoc())) return false;
        }
        if (hasType() != other.hasType()) return false;
        if (hasType()) {
          if (type_ != other.type_) return false;
        }
        if (hasGuid() != other.hasGuid()) return false;
        if (hasGuid()) {
          if (!getGuid()
              .equals(other.getGuid())) return false;
        }
        if (hasZipFilename() != other.hasZipFilename()) return false;
        if (hasZipFilename()) {
          if (!getZipFilename()
              .equals(other.getZipFilename())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasAction()) {
          hash = (37 * hash) + ACTION_FIELD_NUMBER;
          hash = (53 * hash) + action_;
        }
        if (hasFilename()) {
          hash = (37 * hash) + FILENAME_FIELD_NUMBER;
          hash = (53 * hash) + getFilename().hashCode();
        }
        if (hasEdoc()) {
          hash = (37 * hash) + EDOC_FIELD_NUMBER;
          hash = (53 * hash) + getEdoc().hashCode();
        }
        if (hasType()) {
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + type_;
        }
        if (hasGuid()) {
          hash = (37 * hash) + GUID_FIELD_NUMBER;
          hash = (53 * hash) + getGuid().hashCode();
        }
        if (hasZipFilename()) {
          hash = (37 * hash) + ZIP_FILENAME_FIELD_NUMBER;
          hash = (53 * hash) + getZipFilename().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EdocService.ImportEPackRequest.Object parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.ImportEPackRequest.Object parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.ImportEPackRequest.Object parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.ImportEPackRequest.Object parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.ImportEPackRequest.Object parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.ImportEPackRequest.Object parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.ImportEPackRequest.Object parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.ImportEPackRequest.Object parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.ImportEPackRequest.Object parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EdocService.ImportEPackRequest.Object parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.ImportEPackRequest.Object parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.ImportEPackRequest.Object parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EdocService.ImportEPackRequest.Object prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code ImportEPackRequest.Object}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ImportEPackRequest.Object)
          EdocService.ImportEPackRequest.ObjectOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EdocService.internal_static_ImportEPackRequest_Object_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EdocService.internal_static_ImportEPackRequest_Object_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EdocService.ImportEPackRequest.Object.class, EdocService.ImportEPackRequest.Object.Builder.class);
        }

        // Construct using EdocService.ImportEPackRequest.Object.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          action_ = 1;
          bitField0_ = (bitField0_ & ~0x00000001);
          filename_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          edoc_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          type_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          guid_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          zipFilename_ = "";
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EdocService.internal_static_ImportEPackRequest_Object_descriptor;
        }

        @java.lang.Override
        public EdocService.ImportEPackRequest.Object getDefaultInstanceForType() {
          return EdocService.ImportEPackRequest.Object.getDefaultInstance();
        }

        @java.lang.Override
        public EdocService.ImportEPackRequest.Object build() {
          EdocService.ImportEPackRequest.Object result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EdocService.ImportEPackRequest.Object buildPartial() {
          EdocService.ImportEPackRequest.Object result = new EdocService.ImportEPackRequest.Object(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.action_ = action_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.filename_ = filename_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            to_bitField0_ |= 0x00000004;
          }
          result.edoc_ = edoc_;
          if (((from_bitField0_ & 0x00000008) != 0)) {
            to_bitField0_ |= 0x00000008;
          }
          result.type_ = type_;
          if (((from_bitField0_ & 0x00000010) != 0)) {
            to_bitField0_ |= 0x00000010;
          }
          result.guid_ = guid_;
          if (((from_bitField0_ & 0x00000020) != 0)) {
            to_bitField0_ |= 0x00000020;
          }
          result.zipFilename_ = zipFilename_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EdocService.ImportEPackRequest.Object) {
            return mergeFrom((EdocService.ImportEPackRequest.Object)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EdocService.ImportEPackRequest.Object other) {
          if (other == EdocService.ImportEPackRequest.Object.getDefaultInstance()) return this;
          if (other.hasAction()) {
            setAction(other.getAction());
          }
          if (other.hasFilename()) {
            bitField0_ |= 0x00000002;
            filename_ = other.filename_;
            onChanged();
          }
          if (other.hasEdoc()) {
            bitField0_ |= 0x00000004;
            edoc_ = other.edoc_;
            onChanged();
          }
          if (other.hasType()) {
            setType(other.getType());
          }
          if (other.hasGuid()) {
            bitField0_ |= 0x00000010;
            guid_ = other.guid_;
            onChanged();
          }
          if (other.hasZipFilename()) {
            bitField0_ |= 0x00000020;
            zipFilename_ = other.zipFilename_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EdocService.ImportEPackRequest.Object parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EdocService.ImportEPackRequest.Object) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int action_ = 1;
        /**
         * <pre>
         * Action specified by the user. Valid values: [CREATE, UPDATE]
         * 1. If action is set to CREATE (default), a new object will be created
         *    irrespective of the external and internal guids.
         * 2. If action is set to UPDATE, we require that atleast one of external or
         *    internal guids be specified. If both are empty, an error will be thrown.
         *    If external guid is present, it will take priority over internal guid
         *    and an object corresponding to the external guid will be updated.
         * Note: We have an option to provide guid in TML file as well as request
         *       parameter. The guid inside the TML object is referred as internal
         *       guid here. The guid in the request params is referred as external
         *       guid.
         * </pre>
         *
         * <code>optional .ImportAction.E action = 1 [default = CREATE];</code>
         * @return Whether the action field is set.
         */
        @java.lang.Override public boolean hasAction() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Action specified by the user. Valid values: [CREATE, UPDATE]
         * 1. If action is set to CREATE (default), a new object will be created
         *    irrespective of the external and internal guids.
         * 2. If action is set to UPDATE, we require that atleast one of external or
         *    internal guids be specified. If both are empty, an error will be thrown.
         *    If external guid is present, it will take priority over internal guid
         *    and an object corresponding to the external guid will be updated.
         * Note: We have an option to provide guid in TML file as well as request
         *       parameter. The guid inside the TML object is referred as internal
         *       guid here. The guid in the request params is referred as external
         *       guid.
         * </pre>
         *
         * <code>optional .ImportAction.E action = 1 [default = CREATE];</code>
         * @return The action.
         */
        @java.lang.Override
        public EdocCommon.ImportAction.E getAction() {
          @SuppressWarnings("deprecation")
          EdocCommon.ImportAction.E result = EdocCommon.ImportAction.E.valueOf(action_);
          return result == null ? EdocCommon.ImportAction.E.CREATE : result;
        }
        /**
         * <pre>
         * Action specified by the user. Valid values: [CREATE, UPDATE]
         * 1. If action is set to CREATE (default), a new object will be created
         *    irrespective of the external and internal guids.
         * 2. If action is set to UPDATE, we require that atleast one of external or
         *    internal guids be specified. If both are empty, an error will be thrown.
         *    If external guid is present, it will take priority over internal guid
         *    and an object corresponding to the external guid will be updated.
         * Note: We have an option to provide guid in TML file as well as request
         *       parameter. The guid inside the TML object is referred as internal
         *       guid here. The guid in the request params is referred as external
         *       guid.
         * </pre>
         *
         * <code>optional .ImportAction.E action = 1 [default = CREATE];</code>
         * @param value The action to set.
         * @return This builder for chaining.
         */
        public Builder setAction(EdocCommon.ImportAction.E value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          action_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Action specified by the user. Valid values: [CREATE, UPDATE]
         * 1. If action is set to CREATE (default), a new object will be created
         *    irrespective of the external and internal guids.
         * 2. If action is set to UPDATE, we require that atleast one of external or
         *    internal guids be specified. If both are empty, an error will be thrown.
         *    If external guid is present, it will take priority over internal guid
         *    and an object corresponding to the external guid will be updated.
         * Note: We have an option to provide guid in TML file as well as request
         *       parameter. The guid inside the TML object is referred as internal
         *       guid here. The guid in the request params is referred as external
         *       guid.
         * </pre>
         *
         * <code>optional .ImportAction.E action = 1 [default = CREATE];</code>
         * @return This builder for chaining.
         */
        public Builder clearAction() {
          bitField0_ = (bitField0_ & ~0x00000001);
          action_ = 1;
          onChanged();
          return this;
        }

        private java.lang.Object filename_ = "";
        /**
         * <pre>
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return Whether the filename field is set.
         */
        public boolean hasFilename() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return The filename.
         */
        public java.lang.String getFilename() {
          java.lang.Object ref = filename_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              filename_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return The bytes for filename.
         */
        public com.google.protobuf.ByteString
            getFilenameBytes() {
          java.lang.Object ref = filename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            filename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @param value The filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilename(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          filename_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFilename() {
          bitField0_ = (bitField0_ & ~0x00000002);
          filename_ = getDefaultInstance().getFilename();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @param value The bytes for filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          filename_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object edoc_ = "";
        /**
         * <pre>
         * [Required] Entity doc representation of metadata object. i.e. Content of
         * TML file.
         * </pre>
         *
         * <code>optional string edoc = 3;</code>
         * @return Whether the edoc field is set.
         */
        public boolean hasEdoc() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * [Required] Entity doc representation of metadata object. i.e. Content of
         * TML file.
         * </pre>
         *
         * <code>optional string edoc = 3;</code>
         * @return The edoc.
         */
        public java.lang.String getEdoc() {
          java.lang.Object ref = edoc_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              edoc_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * [Required] Entity doc representation of metadata object. i.e. Content of
         * TML file.
         * </pre>
         *
         * <code>optional string edoc = 3;</code>
         * @return The bytes for edoc.
         */
        public com.google.protobuf.ByteString
            getEdocBytes() {
          java.lang.Object ref = edoc_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            edoc_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * [Required] Entity doc representation of metadata object. i.e. Content of
         * TML file.
         * </pre>
         *
         * <code>optional string edoc = 3;</code>
         * @param value The edoc to set.
         * @return This builder for chaining.
         */
        public Builder setEdoc(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          edoc_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [Required] Entity doc representation of metadata object. i.e. Content of
         * TML file.
         * </pre>
         *
         * <code>optional string edoc = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearEdoc() {
          bitField0_ = (bitField0_ & ~0x00000004);
          edoc_ = getDefaultInstance().getEdoc();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [Required] Entity doc representation of metadata object. i.e. Content of
         * TML file.
         * </pre>
         *
         * <code>optional string edoc = 3;</code>
         * @param value The bytes for edoc to set.
         * @return This builder for chaining.
         */
        public Builder setEdocBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          edoc_ = value;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <pre>
         * Type can have one of the following values:
         * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
         * In addition, following deprecated types are also acceptable for a short
         * duration in future:
         * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
         * * LOGICAL_TABLE - for worksheet, view and table.
         * * PINBOARD_ANSWER_BOOK - for pinboard.
         * * QUESTION_ANSWER_BOOK - for answer.
         * If present, type of the &#64;edoc must match with &#64;type.
         * If not present, there will be no check on the type of eDoc.
         * </pre>
         *
         * <code>optional .EDocObjectType.E type = 4;</code>
         * @return Whether the type field is set.
         */
        @java.lang.Override public boolean hasType() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Type can have one of the following values:
         * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
         * In addition, following deprecated types are also acceptable for a short
         * duration in future:
         * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
         * * LOGICAL_TABLE - for worksheet, view and table.
         * * PINBOARD_ANSWER_BOOK - for pinboard.
         * * QUESTION_ANSWER_BOOK - for answer.
         * If present, type of the &#64;edoc must match with &#64;type.
         * If not present, there will be no check on the type of eDoc.
         * </pre>
         *
         * <code>optional .EDocObjectType.E type = 4;</code>
         * @return The type.
         */
        @java.lang.Override
        public EdocCommon.EDocObjectType.E getType() {
          @SuppressWarnings("deprecation")
          EdocCommon.EDocObjectType.E result = EdocCommon.EDocObjectType.E.valueOf(type_);
          return result == null ? EdocCommon.EDocObjectType.E.ANSWER : result;
        }
        /**
         * <pre>
         * Type can have one of the following values:
         * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
         * In addition, following deprecated types are also acceptable for a short
         * duration in future:
         * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
         * * LOGICAL_TABLE - for worksheet, view and table.
         * * PINBOARD_ANSWER_BOOK - for pinboard.
         * * QUESTION_ANSWER_BOOK - for answer.
         * If present, type of the &#64;edoc must match with &#64;type.
         * If not present, there will be no check on the type of eDoc.
         * </pre>
         *
         * <code>optional .EDocObjectType.E type = 4;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(EdocCommon.EDocObjectType.E value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Type can have one of the following values:
         * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}.
         * In addition, following deprecated types are also acceptable for a short
         * duration in future:
         * {LOGICAL_TABLE, PINBOARD_ANSWER_BOOK, QUESTION_ANSWER_BOOK}.
         * * LOGICAL_TABLE - for worksheet, view and table.
         * * PINBOARD_ANSWER_BOOK - for pinboard.
         * * QUESTION_ANSWER_BOOK - for answer.
         * If present, type of the &#64;edoc must match with &#64;type.
         * If not present, there will be no check on the type of eDoc.
         * </pre>
         *
         * <code>optional .EDocObjectType.E type = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000008);
          type_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object guid_ = "";
        /**
         * <pre>
         * This is external guid (as mentioned in the comments around ImportAction).
         * </pre>
         *
         * <code>optional string guid = 5;</code>
         * @return Whether the guid field is set.
         */
        public boolean hasGuid() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * This is external guid (as mentioned in the comments around ImportAction).
         * </pre>
         *
         * <code>optional string guid = 5;</code>
         * @return The guid.
         */
        public java.lang.String getGuid() {
          java.lang.Object ref = guid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              guid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * This is external guid (as mentioned in the comments around ImportAction).
         * </pre>
         *
         * <code>optional string guid = 5;</code>
         * @return The bytes for guid.
         */
        public com.google.protobuf.ByteString
            getGuidBytes() {
          java.lang.Object ref = guid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            guid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * This is external guid (as mentioned in the comments around ImportAction).
         * </pre>
         *
         * <code>optional string guid = 5;</code>
         * @param value The guid to set.
         * @return This builder for chaining.
         */
        public Builder setGuid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          guid_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This is external guid (as mentioned in the comments around ImportAction).
         * </pre>
         *
         * <code>optional string guid = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearGuid() {
          bitField0_ = (bitField0_ & ~0x00000010);
          guid_ = getDefaultInstance().getGuid();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This is external guid (as mentioned in the comments around ImportAction).
         * </pre>
         *
         * <code>optional string guid = 5;</code>
         * @param value The bytes for guid to set.
         * @return This builder for chaining.
         */
        public Builder setGuidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          guid_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object zipFilename_ = "";
        /**
         * <pre>
         * Filename of the containing zip file. This is only required to
         * differentiate between same named TML files across different zip files.
         * </pre>
         *
         * <code>optional string zip_filename = 6;</code>
         * @return Whether the zipFilename field is set.
         */
        public boolean hasZipFilename() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * Filename of the containing zip file. This is only required to
         * differentiate between same named TML files across different zip files.
         * </pre>
         *
         * <code>optional string zip_filename = 6;</code>
         * @return The zipFilename.
         */
        public java.lang.String getZipFilename() {
          java.lang.Object ref = zipFilename_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              zipFilename_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Filename of the containing zip file. This is only required to
         * differentiate between same named TML files across different zip files.
         * </pre>
         *
         * <code>optional string zip_filename = 6;</code>
         * @return The bytes for zipFilename.
         */
        public com.google.protobuf.ByteString
            getZipFilenameBytes() {
          java.lang.Object ref = zipFilename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            zipFilename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Filename of the containing zip file. This is only required to
         * differentiate between same named TML files across different zip files.
         * </pre>
         *
         * <code>optional string zip_filename = 6;</code>
         * @param value The zipFilename to set.
         * @return This builder for chaining.
         */
        public Builder setZipFilename(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          zipFilename_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Filename of the containing zip file. This is only required to
         * differentiate between same named TML files across different zip files.
         * </pre>
         *
         * <code>optional string zip_filename = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearZipFilename() {
          bitField0_ = (bitField0_ & ~0x00000020);
          zipFilename_ = getDefaultInstance().getZipFilename();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Filename of the containing zip file. This is only required to
         * differentiate between same named TML files across different zip files.
         * </pre>
         *
         * <code>optional string zip_filename = 6;</code>
         * @param value The bytes for zipFilename to set.
         * @return This builder for chaining.
         */
        public Builder setZipFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          zipFilename_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:ImportEPackRequest.Object)
      }

      // @@protoc_insertion_point(class_scope:ImportEPackRequest.Object)
      private static final EdocService.ImportEPackRequest.Object DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EdocService.ImportEPackRequest.Object();
      }

      public static EdocService.ImportEPackRequest.Object getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Object>
          PARSER = new com.google.protobuf.AbstractParser<Object>() {
        @java.lang.Override
        public Object parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Object(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Object> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Object> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EdocService.ImportEPackRequest.Object getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int OBJECT_FIELD_NUMBER = 1;
    private java.util.List<EdocService.ImportEPackRequest.Object> object_;
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .ImportEPackRequest.Object object = 1;</code>
     */
    @java.lang.Override
    public java.util.List<EdocService.ImportEPackRequest.Object> getObjectList() {
      return object_;
    }
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .ImportEPackRequest.Object object = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EdocService.ImportEPackRequest.ObjectOrBuilder> 
        getObjectOrBuilderList() {
      return object_;
    }
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .ImportEPackRequest.Object object = 1;</code>
     */
    @java.lang.Override
    public int getObjectCount() {
      return object_.size();
    }
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .ImportEPackRequest.Object object = 1;</code>
     */
    @java.lang.Override
    public EdocService.ImportEPackRequest.Object getObject(int index) {
      return object_.get(index);
    }
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .ImportEPackRequest.Object object = 1;</code>
     */
    @java.lang.Override
    public EdocService.ImportEPackRequest.ObjectOrBuilder getObjectOrBuilder(
        int index) {
      return object_.get(index);
    }

    public static final int IMPORT_POLICY_FIELD_NUMBER = 2;
    private int importPolicy_;
    /**
     * <pre>
     * Refer comments above.
     * </pre>
     *
     * <code>optional .ImportEPackRequest.ImportPolicy import_policy = 2 [default = PARTIAL];</code>
     * @return Whether the importPolicy field is set.
     */
    @java.lang.Override public boolean hasImportPolicy() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Refer comments above.
     * </pre>
     *
     * <code>optional .ImportEPackRequest.ImportPolicy import_policy = 2 [default = PARTIAL];</code>
     * @return The importPolicy.
     */
    @java.lang.Override public EdocService.ImportEPackRequest.ImportPolicy getImportPolicy() {
      @SuppressWarnings("deprecation")
      EdocService.ImportEPackRequest.ImportPolicy result = EdocService.ImportEPackRequest.ImportPolicy.valueOf(importPolicy_);
      return result == null ? EdocService.ImportEPackRequest.ImportPolicy.PARTIAL : result;
    }

    public static final int FORMAT_TYPE_FIELD_NUMBER = 3;
    private int formatType_;
    /**
     * <pre>
     * Format type of the EDoc representation.
     * </pre>
     *
     * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
     * @return Whether the formatType field is set.
     */
    @java.lang.Override public boolean hasFormatType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Format type of the EDoc representation.
     * </pre>
     *
     * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
     * @return The formatType.
     */
    @java.lang.Override public EdocCommon.EDocFormatType.E getFormatType() {
      @SuppressWarnings("deprecation")
      EdocCommon.EDocFormatType.E result = EdocCommon.EDocFormatType.E.valueOf(formatType_);
      return result == null ? EdocCommon.EDocFormatType.E.YAML : result;
    }

    public static final int IMPORT_PERMISSIONS_FIELD_NUMBER = 4;
    private boolean importPermissions_;
    /**
     * <pre>
     * Flag to control import of permissions. If true, the permissions of the objects
     * will also be imported and if the dependencies are also requested, then
     * permissions of those dependencies will be imported as well.
     * Please note that applying permissions will only impact the permissions for users mentioned in
     * the edoc. All other user permissions remain untouched.
     * </pre>
     *
     * <code>optional bool import_permissions = 4 [default = false];</code>
     * @return Whether the importPermissions field is set.
     */
    @java.lang.Override
    public boolean hasImportPermissions() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Flag to control import of permissions. If true, the permissions of the objects
     * will also be imported and if the dependencies are also requested, then
     * permissions of those dependencies will be imported as well.
     * Please note that applying permissions will only impact the permissions for users mentioned in
     * the edoc. All other user permissions remain untouched.
     * </pre>
     *
     * <code>optional bool import_permissions = 4 [default = false];</code>
     * @return The importPermissions.
     */
    @java.lang.Override
    public boolean getImportPermissions() {
      return importPermissions_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < object_.size(); i++) {
        output.writeMessage(1, object_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(2, importPolicy_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(3, formatType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(4, importPermissions_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < object_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, object_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, importPolicy_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, formatType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, importPermissions_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EdocService.ImportEPackRequest)) {
        return super.equals(obj);
      }
      EdocService.ImportEPackRequest other = (EdocService.ImportEPackRequest) obj;

      if (!getObjectList()
          .equals(other.getObjectList())) return false;
      if (hasImportPolicy() != other.hasImportPolicy()) return false;
      if (hasImportPolicy()) {
        if (importPolicy_ != other.importPolicy_) return false;
      }
      if (hasFormatType() != other.hasFormatType()) return false;
      if (hasFormatType()) {
        if (formatType_ != other.formatType_) return false;
      }
      if (hasImportPermissions() != other.hasImportPermissions()) return false;
      if (hasImportPermissions()) {
        if (getImportPermissions()
            != other.getImportPermissions()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getObjectCount() > 0) {
        hash = (37 * hash) + OBJECT_FIELD_NUMBER;
        hash = (53 * hash) + getObjectList().hashCode();
      }
      if (hasImportPolicy()) {
        hash = (37 * hash) + IMPORT_POLICY_FIELD_NUMBER;
        hash = (53 * hash) + importPolicy_;
      }
      if (hasFormatType()) {
        hash = (37 * hash) + FORMAT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + formatType_;
      }
      if (hasImportPermissions()) {
        hash = (37 * hash) + IMPORT_PERMISSIONS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getImportPermissions());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EdocService.ImportEPackRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.ImportEPackRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.ImportEPackRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.ImportEPackRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.ImportEPackRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.ImportEPackRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.ImportEPackRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EdocService.ImportEPackRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EdocService.ImportEPackRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EdocService.ImportEPackRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EdocService.ImportEPackRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EdocService.ImportEPackRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EdocService.ImportEPackRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * POST API : /callosum/v1/metadata/edoc/importEPack
     * argument1 request : ImportEPackRequest proto serialized as JSON string
     * Returns ImportEPackResponse proto serialized as JSON string.
     * </pre>
     *
     * Protobuf type {@code ImportEPackRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ImportEPackRequest)
        EdocService.ImportEPackRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_ImportEPackRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_ImportEPackRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.ImportEPackRequest.class, EdocService.ImportEPackRequest.Builder.class);
      }

      // Construct using EdocService.ImportEPackRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getObjectFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (objectBuilder_ == null) {
          object_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          objectBuilder_.clear();
        }
        importPolicy_ = 1;
        bitField0_ = (bitField0_ & ~0x00000002);
        formatType_ = 1;
        bitField0_ = (bitField0_ & ~0x00000004);
        importPermissions_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EdocService.internal_static_ImportEPackRequest_descriptor;
      }

      @java.lang.Override
      public EdocService.ImportEPackRequest getDefaultInstanceForType() {
        return EdocService.ImportEPackRequest.getDefaultInstance();
      }

      @java.lang.Override
      public EdocService.ImportEPackRequest build() {
        EdocService.ImportEPackRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EdocService.ImportEPackRequest buildPartial() {
        EdocService.ImportEPackRequest result = new EdocService.ImportEPackRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (objectBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            object_ = java.util.Collections.unmodifiableList(object_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.object_ = object_;
        } else {
          result.object_ = objectBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.importPolicy_ = importPolicy_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.formatType_ = formatType_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.importPermissions_ = importPermissions_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EdocService.ImportEPackRequest) {
          return mergeFrom((EdocService.ImportEPackRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EdocService.ImportEPackRequest other) {
        if (other == EdocService.ImportEPackRequest.getDefaultInstance()) return this;
        if (objectBuilder_ == null) {
          if (!other.object_.isEmpty()) {
            if (object_.isEmpty()) {
              object_ = other.object_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureObjectIsMutable();
              object_.addAll(other.object_);
            }
            onChanged();
          }
        } else {
          if (!other.object_.isEmpty()) {
            if (objectBuilder_.isEmpty()) {
              objectBuilder_.dispose();
              objectBuilder_ = null;
              object_ = other.object_;
              bitField0_ = (bitField0_ & ~0x00000001);
              objectBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getObjectFieldBuilder() : null;
            } else {
              objectBuilder_.addAllMessages(other.object_);
            }
          }
        }
        if (other.hasImportPolicy()) {
          setImportPolicy(other.getImportPolicy());
        }
        if (other.hasFormatType()) {
          setFormatType(other.getFormatType());
        }
        if (other.hasImportPermissions()) {
          setImportPermissions(other.getImportPermissions());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EdocService.ImportEPackRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EdocService.ImportEPackRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<EdocService.ImportEPackRequest.Object> object_ =
        java.util.Collections.emptyList();
      private void ensureObjectIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          object_ = new java.util.ArrayList<EdocService.ImportEPackRequest.Object>(object_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.ImportEPackRequest.Object, EdocService.ImportEPackRequest.Object.Builder, EdocService.ImportEPackRequest.ObjectOrBuilder> objectBuilder_;

      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public java.util.List<EdocService.ImportEPackRequest.Object> getObjectList() {
        if (objectBuilder_ == null) {
          return java.util.Collections.unmodifiableList(object_);
        } else {
          return objectBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public int getObjectCount() {
        if (objectBuilder_ == null) {
          return object_.size();
        } else {
          return objectBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public EdocService.ImportEPackRequest.Object getObject(int index) {
        if (objectBuilder_ == null) {
          return object_.get(index);
        } else {
          return objectBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public Builder setObject(
          int index, EdocService.ImportEPackRequest.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.set(index, value);
          onChanged();
        } else {
          objectBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public Builder setObject(
          int index, EdocService.ImportEPackRequest.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.set(index, builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public Builder addObject(EdocService.ImportEPackRequest.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.add(value);
          onChanged();
        } else {
          objectBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public Builder addObject(
          int index, EdocService.ImportEPackRequest.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.add(index, value);
          onChanged();
        } else {
          objectBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public Builder addObject(
          EdocService.ImportEPackRequest.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.add(builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public Builder addObject(
          int index, EdocService.ImportEPackRequest.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.add(index, builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public Builder addAllObject(
          java.lang.Iterable<? extends EdocService.ImportEPackRequest.Object> values) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, object_);
          onChanged();
        } else {
          objectBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public Builder clearObject() {
        if (objectBuilder_ == null) {
          object_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          objectBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public Builder removeObject(int index) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.remove(index);
          onChanged();
        } else {
          objectBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public EdocService.ImportEPackRequest.Object.Builder getObjectBuilder(
          int index) {
        return getObjectFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public EdocService.ImportEPackRequest.ObjectOrBuilder getObjectOrBuilder(
          int index) {
        if (objectBuilder_ == null) {
          return object_.get(index);  } else {
          return objectBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public java.util.List<? extends EdocService.ImportEPackRequest.ObjectOrBuilder> 
           getObjectOrBuilderList() {
        if (objectBuilder_ != null) {
          return objectBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(object_);
        }
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public EdocService.ImportEPackRequest.Object.Builder addObjectBuilder() {
        return getObjectFieldBuilder().addBuilder(
            EdocService.ImportEPackRequest.Object.getDefaultInstance());
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public EdocService.ImportEPackRequest.Object.Builder addObjectBuilder(
          int index) {
        return getObjectFieldBuilder().addBuilder(
            index, EdocService.ImportEPackRequest.Object.getDefaultInstance());
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .ImportEPackRequest.Object object = 1;</code>
       */
      public java.util.List<EdocService.ImportEPackRequest.Object.Builder> 
           getObjectBuilderList() {
        return getObjectFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.ImportEPackRequest.Object, EdocService.ImportEPackRequest.Object.Builder, EdocService.ImportEPackRequest.ObjectOrBuilder> 
          getObjectFieldBuilder() {
        if (objectBuilder_ == null) {
          objectBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EdocService.ImportEPackRequest.Object, EdocService.ImportEPackRequest.Object.Builder, EdocService.ImportEPackRequest.ObjectOrBuilder>(
                  object_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          object_ = null;
        }
        return objectBuilder_;
      }

      private int importPolicy_ = 1;
      /**
       * <pre>
       * Refer comments above.
       * </pre>
       *
       * <code>optional .ImportEPackRequest.ImportPolicy import_policy = 2 [default = PARTIAL];</code>
       * @return Whether the importPolicy field is set.
       */
      @java.lang.Override public boolean hasImportPolicy() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Refer comments above.
       * </pre>
       *
       * <code>optional .ImportEPackRequest.ImportPolicy import_policy = 2 [default = PARTIAL];</code>
       * @return The importPolicy.
       */
      @java.lang.Override
      public EdocService.ImportEPackRequest.ImportPolicy getImportPolicy() {
        @SuppressWarnings("deprecation")
        EdocService.ImportEPackRequest.ImportPolicy result = EdocService.ImportEPackRequest.ImportPolicy.valueOf(importPolicy_);
        return result == null ? EdocService.ImportEPackRequest.ImportPolicy.PARTIAL : result;
      }
      /**
       * <pre>
       * Refer comments above.
       * </pre>
       *
       * <code>optional .ImportEPackRequest.ImportPolicy import_policy = 2 [default = PARTIAL];</code>
       * @param value The importPolicy to set.
       * @return This builder for chaining.
       */
      public Builder setImportPolicy(EdocService.ImportEPackRequest.ImportPolicy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        importPolicy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Refer comments above.
       * </pre>
       *
       * <code>optional .ImportEPackRequest.ImportPolicy import_policy = 2 [default = PARTIAL];</code>
       * @return This builder for chaining.
       */
      public Builder clearImportPolicy() {
        bitField0_ = (bitField0_ & ~0x00000002);
        importPolicy_ = 1;
        onChanged();
        return this;
      }

      private int formatType_ = 1;
      /**
       * <pre>
       * Format type of the EDoc representation.
       * </pre>
       *
       * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
       * @return Whether the formatType field is set.
       */
      @java.lang.Override public boolean hasFormatType() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Format type of the EDoc representation.
       * </pre>
       *
       * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
       * @return The formatType.
       */
      @java.lang.Override
      public EdocCommon.EDocFormatType.E getFormatType() {
        @SuppressWarnings("deprecation")
        EdocCommon.EDocFormatType.E result = EdocCommon.EDocFormatType.E.valueOf(formatType_);
        return result == null ? EdocCommon.EDocFormatType.E.YAML : result;
      }
      /**
       * <pre>
       * Format type of the EDoc representation.
       * </pre>
       *
       * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
       * @param value The formatType to set.
       * @return This builder for chaining.
       */
      public Builder setFormatType(EdocCommon.EDocFormatType.E value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        formatType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Format type of the EDoc representation.
       * </pre>
       *
       * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
       * @return This builder for chaining.
       */
      public Builder clearFormatType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        formatType_ = 1;
        onChanged();
        return this;
      }

      private boolean importPermissions_ ;
      /**
       * <pre>
       * Flag to control import of permissions. If true, the permissions of the objects
       * will also be imported and if the dependencies are also requested, then
       * permissions of those dependencies will be imported as well.
       * Please note that applying permissions will only impact the permissions for users mentioned in
       * the edoc. All other user permissions remain untouched.
       * </pre>
       *
       * <code>optional bool import_permissions = 4 [default = false];</code>
       * @return Whether the importPermissions field is set.
       */
      @java.lang.Override
      public boolean hasImportPermissions() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Flag to control import of permissions. If true, the permissions of the objects
       * will also be imported and if the dependencies are also requested, then
       * permissions of those dependencies will be imported as well.
       * Please note that applying permissions will only impact the permissions for users mentioned in
       * the edoc. All other user permissions remain untouched.
       * </pre>
       *
       * <code>optional bool import_permissions = 4 [default = false];</code>
       * @return The importPermissions.
       */
      @java.lang.Override
      public boolean getImportPermissions() {
        return importPermissions_;
      }
      /**
       * <pre>
       * Flag to control import of permissions. If true, the permissions of the objects
       * will also be imported and if the dependencies are also requested, then
       * permissions of those dependencies will be imported as well.
       * Please note that applying permissions will only impact the permissions for users mentioned in
       * the edoc. All other user permissions remain untouched.
       * </pre>
       *
       * <code>optional bool import_permissions = 4 [default = false];</code>
       * @param value The importPermissions to set.
       * @return This builder for chaining.
       */
      public Builder setImportPermissions(boolean value) {
        bitField0_ |= 0x00000008;
        importPermissions_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flag to control import of permissions. If true, the permissions of the objects
       * will also be imported and if the dependencies are also requested, then
       * permissions of those dependencies will be imported as well.
       * Please note that applying permissions will only impact the permissions for users mentioned in
       * the edoc. All other user permissions remain untouched.
       * </pre>
       *
       * <code>optional bool import_permissions = 4 [default = false];</code>
       * @return This builder for chaining.
       */
      public Builder clearImportPermissions() {
        bitField0_ = (bitField0_ & ~0x00000008);
        importPermissions_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ImportEPackRequest)
    }

    // @@protoc_insertion_point(class_scope:ImportEPackRequest)
    private static final EdocService.ImportEPackRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EdocService.ImportEPackRequest();
    }

    public static EdocService.ImportEPackRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ImportEPackRequest>
        PARSER = new com.google.protobuf.AbstractParser<ImportEPackRequest>() {
      @java.lang.Override
      public ImportEPackRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ImportEPackRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ImportEPackRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ImportEPackRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EdocService.ImportEPackRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImportEPackResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ImportEPackResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of imported objects.
     * </pre>
     *
     * <code>repeated .ImportEPackResponse.Object object = 1;</code>
     */
    java.util.List<EdocService.ImportEPackResponse.Object> 
        getObjectList();
    /**
     * <pre>
     * List of imported objects.
     * </pre>
     *
     * <code>repeated .ImportEPackResponse.Object object = 1;</code>
     */
    EdocService.ImportEPackResponse.Object getObject(int index);
    /**
     * <pre>
     * List of imported objects.
     * </pre>
     *
     * <code>repeated .ImportEPackResponse.Object object = 1;</code>
     */
    int getObjectCount();
    /**
     * <pre>
     * List of imported objects.
     * </pre>
     *
     * <code>repeated .ImportEPackResponse.Object object = 1;</code>
     */
    java.util.List<? extends EdocService.ImportEPackResponse.ObjectOrBuilder> 
        getObjectOrBuilderList();
    /**
     * <pre>
     * List of imported objects.
     * </pre>
     *
     * <code>repeated .ImportEPackResponse.Object object = 1;</code>
     */
    EdocService.ImportEPackResponse.ObjectOrBuilder getObjectOrBuilder(
        int index);

    /**
     * <pre>
     * This status object can be used to capture errors that are not specific to
     * any particular edoc.
     * </pre>
     *
     * <code>optional .StatusProto status = 2;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <pre>
     * This status object can be used to capture errors that are not specific to
     * any particular edoc.
     * </pre>
     *
     * <code>optional .StatusProto status = 2;</code>
     * @return The status.
     */
    Status.StatusProto getStatus();
    /**
     * <pre>
     * This status object can be used to capture errors that are not specific to
     * any particular edoc.
     * </pre>
     *
     * <code>optional .StatusProto status = 2;</code>
     */
    Status.StatusProtoOrBuilder getStatusOrBuilder();
  }
  /**
   * Protobuf type {@code ImportEPackResponse}
   */
  public static final class ImportEPackResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ImportEPackResponse)
      ImportEPackResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ImportEPackResponse.newBuilder() to construct.
    private ImportEPackResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImportEPackResponse() {
      object_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ImportEPackResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ImportEPackResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                object_ = new java.util.ArrayList<EdocService.ImportEPackResponse.Object>();
                mutable_bitField0_ |= 0x00000001;
              }
              object_.add(
                  input.readMessage(EdocService.ImportEPackResponse.Object.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              Status.StatusProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = status_.toBuilder();
              }
              status_ = input.readMessage(Status.StatusProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(status_);
                status_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          object_ = java.util.Collections.unmodifiableList(object_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EdocService.internal_static_ImportEPackResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EdocService.internal_static_ImportEPackResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EdocService.ImportEPackResponse.class, EdocService.ImportEPackResponse.Builder.class);
    }

    public interface ObjectOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ImportEPackResponse.Object)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Name of the object. Same as what is displayed in ThoughtSpot App.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       * Name of the object. Same as what is displayed in ThoughtSpot App.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * Name of the object. Same as what is displayed in ThoughtSpot App.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * Filename of the object in input zip file.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return Whether the filename field is set.
       */
      boolean hasFilename();
      /**
       * <pre>
       * Filename of the object in input zip file.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The filename.
       */
      java.lang.String getFilename();
      /**
       * <pre>
       * Filename of the object in input zip file.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The bytes for filename.
       */
      com.google.protobuf.ByteString
          getFilenameBytes();

      /**
       * <pre>
       * Filename of the containing zip file.
       * </pre>
       *
       * <code>optional string zip_filename = 3;</code>
       * @return Whether the zipFilename field is set.
       */
      boolean hasZipFilename();
      /**
       * <pre>
       * Filename of the containing zip file.
       * </pre>
       *
       * <code>optional string zip_filename = 3;</code>
       * @return The zipFilename.
       */
      java.lang.String getZipFilename();
      /**
       * <pre>
       * Filename of the containing zip file.
       * </pre>
       *
       * <code>optional string zip_filename = 3;</code>
       * @return The bytes for zipFilename.
       */
      com.google.protobuf.ByteString
          getZipFilenameBytes();

      /**
       * <pre>
       * Guid of the imported object.
       * </pre>
       *
       * <code>optional string guid = 4;</code>
       * @return Whether the guid field is set.
       */
      boolean hasGuid();
      /**
       * <pre>
       * Guid of the imported object.
       * </pre>
       *
       * <code>optional string guid = 4;</code>
       * @return The guid.
       */
      java.lang.String getGuid();
      /**
       * <pre>
       * Guid of the imported object.
       * </pre>
       *
       * <code>optional string guid = 4;</code>
       * @return The bytes for guid.
       */
      com.google.protobuf.ByteString
          getGuidBytes();

      /**
       * <pre>
       * Response of an individual import request.
       * </pre>
       *
       * <code>optional .EDocResponseProto response = 5;</code>
       * @return Whether the response field is set.
       */
      boolean hasResponse();
      /**
       * <pre>
       * Response of an individual import request.
       * </pre>
       *
       * <code>optional .EDocResponseProto response = 5;</code>
       * @return The response.
       */
      EdocStatus.EDocResponseProto getResponse();
      /**
       * <pre>
       * Response of an individual import request.
       * </pre>
       *
       * <code>optional .EDocResponseProto response = 5;</code>
       */
      EdocStatus.EDocResponseProtoOrBuilder getResponseOrBuilder();
    }
    /**
     * Protobuf type {@code ImportEPackResponse.Object}
     */
    public static final class Object extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:ImportEPackResponse.Object)
        ObjectOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Object.newBuilder() to construct.
      private Object(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Object() {
        name_ = "";
        filename_ = "";
        zipFilename_ = "";
        guid_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Object();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Object(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                filename_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                zipFilename_ = bs;
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                guid_ = bs;
                break;
              }
              case 42: {
                EdocStatus.EDocResponseProto.Builder subBuilder = null;
                if (((bitField0_ & 0x00000010) != 0)) {
                  subBuilder = response_.toBuilder();
                }
                response_ = input.readMessage(EdocStatus.EDocResponseProto.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(response_);
                  response_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000010;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_ImportEPackResponse_Object_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_ImportEPackResponse_Object_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.ImportEPackResponse.Object.class, EdocService.ImportEPackResponse.Object.Builder.class);
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * Name of the object. Same as what is displayed in ThoughtSpot App.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Name of the object. Same as what is displayed in ThoughtSpot App.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Name of the object. Same as what is displayed in ThoughtSpot App.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FILENAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object filename_;
      /**
       * <pre>
       * Filename of the object in input zip file.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return Whether the filename field is set.
       */
      @java.lang.Override
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Filename of the object in input zip file.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The filename.
       */
      @java.lang.Override
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            filename_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Filename of the object in input zip file.
       * </pre>
       *
       * <code>optional string filename = 2;</code>
       * @return The bytes for filename.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ZIP_FILENAME_FIELD_NUMBER = 3;
      private volatile java.lang.Object zipFilename_;
      /**
       * <pre>
       * Filename of the containing zip file.
       * </pre>
       *
       * <code>optional string zip_filename = 3;</code>
       * @return Whether the zipFilename field is set.
       */
      @java.lang.Override
      public boolean hasZipFilename() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Filename of the containing zip file.
       * </pre>
       *
       * <code>optional string zip_filename = 3;</code>
       * @return The zipFilename.
       */
      @java.lang.Override
      public java.lang.String getZipFilename() {
        java.lang.Object ref = zipFilename_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            zipFilename_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Filename of the containing zip file.
       * </pre>
       *
       * <code>optional string zip_filename = 3;</code>
       * @return The bytes for zipFilename.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getZipFilenameBytes() {
        java.lang.Object ref = zipFilename_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          zipFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int GUID_FIELD_NUMBER = 4;
      private volatile java.lang.Object guid_;
      /**
       * <pre>
       * Guid of the imported object.
       * </pre>
       *
       * <code>optional string guid = 4;</code>
       * @return Whether the guid field is set.
       */
      @java.lang.Override
      public boolean hasGuid() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Guid of the imported object.
       * </pre>
       *
       * <code>optional string guid = 4;</code>
       * @return The guid.
       */
      @java.lang.Override
      public java.lang.String getGuid() {
        java.lang.Object ref = guid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            guid_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Guid of the imported object.
       * </pre>
       *
       * <code>optional string guid = 4;</code>
       * @return The bytes for guid.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getGuidBytes() {
        java.lang.Object ref = guid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          guid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int RESPONSE_FIELD_NUMBER = 5;
      private EdocStatus.EDocResponseProto response_;
      /**
       * <pre>
       * Response of an individual import request.
       * </pre>
       *
       * <code>optional .EDocResponseProto response = 5;</code>
       * @return Whether the response field is set.
       */
      @java.lang.Override
      public boolean hasResponse() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Response of an individual import request.
       * </pre>
       *
       * <code>optional .EDocResponseProto response = 5;</code>
       * @return The response.
       */
      @java.lang.Override
      public EdocStatus.EDocResponseProto getResponse() {
        return response_ == null ? EdocStatus.EDocResponseProto.getDefaultInstance() : response_;
      }
      /**
       * <pre>
       * Response of an individual import request.
       * </pre>
       *
       * <code>optional .EDocResponseProto response = 5;</code>
       */
      @java.lang.Override
      public EdocStatus.EDocResponseProtoOrBuilder getResponseOrBuilder() {
        return response_ == null ? EdocStatus.EDocResponseProto.getDefaultInstance() : response_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (hasResponse()) {
          if (!getResponse().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, filename_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, zipFilename_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, guid_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeMessage(5, getResponse());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, filename_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, zipFilename_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, guid_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getResponse());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EdocService.ImportEPackResponse.Object)) {
          return super.equals(obj);
        }
        EdocService.ImportEPackResponse.Object other = (EdocService.ImportEPackResponse.Object) obj;

        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasFilename() != other.hasFilename()) return false;
        if (hasFilename()) {
          if (!getFilename()
              .equals(other.getFilename())) return false;
        }
        if (hasZipFilename() != other.hasZipFilename()) return false;
        if (hasZipFilename()) {
          if (!getZipFilename()
              .equals(other.getZipFilename())) return false;
        }
        if (hasGuid() != other.hasGuid()) return false;
        if (hasGuid()) {
          if (!getGuid()
              .equals(other.getGuid())) return false;
        }
        if (hasResponse() != other.hasResponse()) return false;
        if (hasResponse()) {
          if (!getResponse()
              .equals(other.getResponse())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasFilename()) {
          hash = (37 * hash) + FILENAME_FIELD_NUMBER;
          hash = (53 * hash) + getFilename().hashCode();
        }
        if (hasZipFilename()) {
          hash = (37 * hash) + ZIP_FILENAME_FIELD_NUMBER;
          hash = (53 * hash) + getZipFilename().hashCode();
        }
        if (hasGuid()) {
          hash = (37 * hash) + GUID_FIELD_NUMBER;
          hash = (53 * hash) + getGuid().hashCode();
        }
        if (hasResponse()) {
          hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getResponse().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EdocService.ImportEPackResponse.Object parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.ImportEPackResponse.Object parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.ImportEPackResponse.Object parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.ImportEPackResponse.Object parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.ImportEPackResponse.Object parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.ImportEPackResponse.Object parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.ImportEPackResponse.Object parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.ImportEPackResponse.Object parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.ImportEPackResponse.Object parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EdocService.ImportEPackResponse.Object parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.ImportEPackResponse.Object parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.ImportEPackResponse.Object parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EdocService.ImportEPackResponse.Object prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code ImportEPackResponse.Object}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ImportEPackResponse.Object)
          EdocService.ImportEPackResponse.ObjectOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EdocService.internal_static_ImportEPackResponse_Object_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EdocService.internal_static_ImportEPackResponse_Object_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EdocService.ImportEPackResponse.Object.class, EdocService.ImportEPackResponse.Object.Builder.class);
        }

        // Construct using EdocService.ImportEPackResponse.Object.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getResponseFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          filename_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          zipFilename_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          guid_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          if (responseBuilder_ == null) {
            response_ = null;
          } else {
            responseBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EdocService.internal_static_ImportEPackResponse_Object_descriptor;
        }

        @java.lang.Override
        public EdocService.ImportEPackResponse.Object getDefaultInstanceForType() {
          return EdocService.ImportEPackResponse.Object.getDefaultInstance();
        }

        @java.lang.Override
        public EdocService.ImportEPackResponse.Object build() {
          EdocService.ImportEPackResponse.Object result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EdocService.ImportEPackResponse.Object buildPartial() {
          EdocService.ImportEPackResponse.Object result = new EdocService.ImportEPackResponse.Object(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.filename_ = filename_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            to_bitField0_ |= 0x00000004;
          }
          result.zipFilename_ = zipFilename_;
          if (((from_bitField0_ & 0x00000008) != 0)) {
            to_bitField0_ |= 0x00000008;
          }
          result.guid_ = guid_;
          if (((from_bitField0_ & 0x00000010) != 0)) {
            if (responseBuilder_ == null) {
              result.response_ = response_;
            } else {
              result.response_ = responseBuilder_.build();
            }
            to_bitField0_ |= 0x00000010;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EdocService.ImportEPackResponse.Object) {
            return mergeFrom((EdocService.ImportEPackResponse.Object)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EdocService.ImportEPackResponse.Object other) {
          if (other == EdocService.ImportEPackResponse.Object.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasFilename()) {
            bitField0_ |= 0x00000002;
            filename_ = other.filename_;
            onChanged();
          }
          if (other.hasZipFilename()) {
            bitField0_ |= 0x00000004;
            zipFilename_ = other.zipFilename_;
            onChanged();
          }
          if (other.hasGuid()) {
            bitField0_ |= 0x00000008;
            guid_ = other.guid_;
            onChanged();
          }
          if (other.hasResponse()) {
            mergeResponse(other.getResponse());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (hasResponse()) {
            if (!getResponse().isInitialized()) {
              return false;
            }
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EdocService.ImportEPackResponse.Object parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EdocService.ImportEPackResponse.Object) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * Name of the object. Same as what is displayed in ThoughtSpot App.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Name of the object. Same as what is displayed in ThoughtSpot App.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Name of the object. Same as what is displayed in ThoughtSpot App.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Name of the object. Same as what is displayed in ThoughtSpot App.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the object. Same as what is displayed in ThoughtSpot App.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the object. Same as what is displayed in ThoughtSpot App.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object filename_ = "";
        /**
         * <pre>
         * Filename of the object in input zip file.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return Whether the filename field is set.
         */
        public boolean hasFilename() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Filename of the object in input zip file.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return The filename.
         */
        public java.lang.String getFilename() {
          java.lang.Object ref = filename_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              filename_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Filename of the object in input zip file.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return The bytes for filename.
         */
        public com.google.protobuf.ByteString
            getFilenameBytes() {
          java.lang.Object ref = filename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            filename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Filename of the object in input zip file.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @param value The filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilename(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          filename_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Filename of the object in input zip file.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFilename() {
          bitField0_ = (bitField0_ & ~0x00000002);
          filename_ = getDefaultInstance().getFilename();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Filename of the object in input zip file.
         * </pre>
         *
         * <code>optional string filename = 2;</code>
         * @param value The bytes for filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          filename_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object zipFilename_ = "";
        /**
         * <pre>
         * Filename of the containing zip file.
         * </pre>
         *
         * <code>optional string zip_filename = 3;</code>
         * @return Whether the zipFilename field is set.
         */
        public boolean hasZipFilename() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Filename of the containing zip file.
         * </pre>
         *
         * <code>optional string zip_filename = 3;</code>
         * @return The zipFilename.
         */
        public java.lang.String getZipFilename() {
          java.lang.Object ref = zipFilename_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              zipFilename_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Filename of the containing zip file.
         * </pre>
         *
         * <code>optional string zip_filename = 3;</code>
         * @return The bytes for zipFilename.
         */
        public com.google.protobuf.ByteString
            getZipFilenameBytes() {
          java.lang.Object ref = zipFilename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            zipFilename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Filename of the containing zip file.
         * </pre>
         *
         * <code>optional string zip_filename = 3;</code>
         * @param value The zipFilename to set.
         * @return This builder for chaining.
         */
        public Builder setZipFilename(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          zipFilename_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Filename of the containing zip file.
         * </pre>
         *
         * <code>optional string zip_filename = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearZipFilename() {
          bitField0_ = (bitField0_ & ~0x00000004);
          zipFilename_ = getDefaultInstance().getZipFilename();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Filename of the containing zip file.
         * </pre>
         *
         * <code>optional string zip_filename = 3;</code>
         * @param value The bytes for zipFilename to set.
         * @return This builder for chaining.
         */
        public Builder setZipFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          zipFilename_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object guid_ = "";
        /**
         * <pre>
         * Guid of the imported object.
         * </pre>
         *
         * <code>optional string guid = 4;</code>
         * @return Whether the guid field is set.
         */
        public boolean hasGuid() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Guid of the imported object.
         * </pre>
         *
         * <code>optional string guid = 4;</code>
         * @return The guid.
         */
        public java.lang.String getGuid() {
          java.lang.Object ref = guid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              guid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Guid of the imported object.
         * </pre>
         *
         * <code>optional string guid = 4;</code>
         * @return The bytes for guid.
         */
        public com.google.protobuf.ByteString
            getGuidBytes() {
          java.lang.Object ref = guid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            guid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Guid of the imported object.
         * </pre>
         *
         * <code>optional string guid = 4;</code>
         * @param value The guid to set.
         * @return This builder for chaining.
         */
        public Builder setGuid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          guid_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Guid of the imported object.
         * </pre>
         *
         * <code>optional string guid = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearGuid() {
          bitField0_ = (bitField0_ & ~0x00000008);
          guid_ = getDefaultInstance().getGuid();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Guid of the imported object.
         * </pre>
         *
         * <code>optional string guid = 4;</code>
         * @param value The bytes for guid to set.
         * @return This builder for chaining.
         */
        public Builder setGuidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          guid_ = value;
          onChanged();
          return this;
        }

        private EdocStatus.EDocResponseProto response_;
        private com.google.protobuf.SingleFieldBuilderV3<
            EdocStatus.EDocResponseProto, EdocStatus.EDocResponseProto.Builder, EdocStatus.EDocResponseProtoOrBuilder> responseBuilder_;
        /**
         * <pre>
         * Response of an individual import request.
         * </pre>
         *
         * <code>optional .EDocResponseProto response = 5;</code>
         * @return Whether the response field is set.
         */
        public boolean hasResponse() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Response of an individual import request.
         * </pre>
         *
         * <code>optional .EDocResponseProto response = 5;</code>
         * @return The response.
         */
        public EdocStatus.EDocResponseProto getResponse() {
          if (responseBuilder_ == null) {
            return response_ == null ? EdocStatus.EDocResponseProto.getDefaultInstance() : response_;
          } else {
            return responseBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Response of an individual import request.
         * </pre>
         *
         * <code>optional .EDocResponseProto response = 5;</code>
         */
        public Builder setResponse(EdocStatus.EDocResponseProto value) {
          if (responseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            response_ = value;
            onChanged();
          } else {
            responseBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <pre>
         * Response of an individual import request.
         * </pre>
         *
         * <code>optional .EDocResponseProto response = 5;</code>
         */
        public Builder setResponse(
            EdocStatus.EDocResponseProto.Builder builderForValue) {
          if (responseBuilder_ == null) {
            response_ = builderForValue.build();
            onChanged();
          } else {
            responseBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <pre>
         * Response of an individual import request.
         * </pre>
         *
         * <code>optional .EDocResponseProto response = 5;</code>
         */
        public Builder mergeResponse(EdocStatus.EDocResponseProto value) {
          if (responseBuilder_ == null) {
            if (((bitField0_ & 0x00000010) != 0) &&
                response_ != null &&
                response_ != EdocStatus.EDocResponseProto.getDefaultInstance()) {
              response_ =
                EdocStatus.EDocResponseProto.newBuilder(response_).mergeFrom(value).buildPartial();
            } else {
              response_ = value;
            }
            onChanged();
          } else {
            responseBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <pre>
         * Response of an individual import request.
         * </pre>
         *
         * <code>optional .EDocResponseProto response = 5;</code>
         */
        public Builder clearResponse() {
          if (responseBuilder_ == null) {
            response_ = null;
            onChanged();
          } else {
            responseBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        /**
         * <pre>
         * Response of an individual import request.
         * </pre>
         *
         * <code>optional .EDocResponseProto response = 5;</code>
         */
        public EdocStatus.EDocResponseProto.Builder getResponseBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getResponseFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Response of an individual import request.
         * </pre>
         *
         * <code>optional .EDocResponseProto response = 5;</code>
         */
        public EdocStatus.EDocResponseProtoOrBuilder getResponseOrBuilder() {
          if (responseBuilder_ != null) {
            return responseBuilder_.getMessageOrBuilder();
          } else {
            return response_ == null ?
                EdocStatus.EDocResponseProto.getDefaultInstance() : response_;
          }
        }
        /**
         * <pre>
         * Response of an individual import request.
         * </pre>
         *
         * <code>optional .EDocResponseProto response = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            EdocStatus.EDocResponseProto, EdocStatus.EDocResponseProto.Builder, EdocStatus.EDocResponseProtoOrBuilder> 
            getResponseFieldBuilder() {
          if (responseBuilder_ == null) {
            responseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                EdocStatus.EDocResponseProto, EdocStatus.EDocResponseProto.Builder, EdocStatus.EDocResponseProtoOrBuilder>(
                    getResponse(),
                    getParentForChildren(),
                    isClean());
            response_ = null;
          }
          return responseBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:ImportEPackResponse.Object)
      }

      // @@protoc_insertion_point(class_scope:ImportEPackResponse.Object)
      private static final EdocService.ImportEPackResponse.Object DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EdocService.ImportEPackResponse.Object();
      }

      public static EdocService.ImportEPackResponse.Object getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Object>
          PARSER = new com.google.protobuf.AbstractParser<Object>() {
        @java.lang.Override
        public Object parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Object(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Object> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Object> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EdocService.ImportEPackResponse.Object getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int OBJECT_FIELD_NUMBER = 1;
    private java.util.List<EdocService.ImportEPackResponse.Object> object_;
    /**
     * <pre>
     * List of imported objects.
     * </pre>
     *
     * <code>repeated .ImportEPackResponse.Object object = 1;</code>
     */
    @java.lang.Override
    public java.util.List<EdocService.ImportEPackResponse.Object> getObjectList() {
      return object_;
    }
    /**
     * <pre>
     * List of imported objects.
     * </pre>
     *
     * <code>repeated .ImportEPackResponse.Object object = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EdocService.ImportEPackResponse.ObjectOrBuilder> 
        getObjectOrBuilderList() {
      return object_;
    }
    /**
     * <pre>
     * List of imported objects.
     * </pre>
     *
     * <code>repeated .ImportEPackResponse.Object object = 1;</code>
     */
    @java.lang.Override
    public int getObjectCount() {
      return object_.size();
    }
    /**
     * <pre>
     * List of imported objects.
     * </pre>
     *
     * <code>repeated .ImportEPackResponse.Object object = 1;</code>
     */
    @java.lang.Override
    public EdocService.ImportEPackResponse.Object getObject(int index) {
      return object_.get(index);
    }
    /**
     * <pre>
     * List of imported objects.
     * </pre>
     *
     * <code>repeated .ImportEPackResponse.Object object = 1;</code>
     */
    @java.lang.Override
    public EdocService.ImportEPackResponse.ObjectOrBuilder getObjectOrBuilder(
        int index) {
      return object_.get(index);
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private Status.StatusProto status_;
    /**
     * <pre>
     * This status object can be used to capture errors that are not specific to
     * any particular edoc.
     * </pre>
     *
     * <code>optional .StatusProto status = 2;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * This status object can be used to capture errors that are not specific to
     * any particular edoc.
     * </pre>
     *
     * <code>optional .StatusProto status = 2;</code>
     * @return The status.
     */
    @java.lang.Override
    public Status.StatusProto getStatus() {
      return status_ == null ? Status.StatusProto.getDefaultInstance() : status_;
    }
    /**
     * <pre>
     * This status object can be used to capture errors that are not specific to
     * any particular edoc.
     * </pre>
     *
     * <code>optional .StatusProto status = 2;</code>
     */
    @java.lang.Override
    public Status.StatusProtoOrBuilder getStatusOrBuilder() {
      return status_ == null ? Status.StatusProto.getDefaultInstance() : status_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getObjectCount(); i++) {
        if (!getObject(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < object_.size(); i++) {
        output.writeMessage(1, object_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getStatus());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < object_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, object_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getStatus());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EdocService.ImportEPackResponse)) {
        return super.equals(obj);
      }
      EdocService.ImportEPackResponse other = (EdocService.ImportEPackResponse) obj;

      if (!getObjectList()
          .equals(other.getObjectList())) return false;
      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (!getStatus()
            .equals(other.getStatus())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getObjectCount() > 0) {
        hash = (37 * hash) + OBJECT_FIELD_NUMBER;
        hash = (53 * hash) + getObjectList().hashCode();
      }
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EdocService.ImportEPackResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.ImportEPackResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.ImportEPackResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.ImportEPackResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.ImportEPackResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.ImportEPackResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.ImportEPackResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EdocService.ImportEPackResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EdocService.ImportEPackResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EdocService.ImportEPackResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EdocService.ImportEPackResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EdocService.ImportEPackResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EdocService.ImportEPackResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ImportEPackResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ImportEPackResponse)
        EdocService.ImportEPackResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_ImportEPackResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_ImportEPackResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.ImportEPackResponse.class, EdocService.ImportEPackResponse.Builder.class);
      }

      // Construct using EdocService.ImportEPackResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getObjectFieldBuilder();
          getStatusFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (objectBuilder_ == null) {
          object_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          objectBuilder_.clear();
        }
        if (statusBuilder_ == null) {
          status_ = null;
        } else {
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EdocService.internal_static_ImportEPackResponse_descriptor;
      }

      @java.lang.Override
      public EdocService.ImportEPackResponse getDefaultInstanceForType() {
        return EdocService.ImportEPackResponse.getDefaultInstance();
      }

      @java.lang.Override
      public EdocService.ImportEPackResponse build() {
        EdocService.ImportEPackResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EdocService.ImportEPackResponse buildPartial() {
        EdocService.ImportEPackResponse result = new EdocService.ImportEPackResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (objectBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            object_ = java.util.Collections.unmodifiableList(object_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.object_ = object_;
        } else {
          result.object_ = objectBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (statusBuilder_ == null) {
            result.status_ = status_;
          } else {
            result.status_ = statusBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EdocService.ImportEPackResponse) {
          return mergeFrom((EdocService.ImportEPackResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EdocService.ImportEPackResponse other) {
        if (other == EdocService.ImportEPackResponse.getDefaultInstance()) return this;
        if (objectBuilder_ == null) {
          if (!other.object_.isEmpty()) {
            if (object_.isEmpty()) {
              object_ = other.object_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureObjectIsMutable();
              object_.addAll(other.object_);
            }
            onChanged();
          }
        } else {
          if (!other.object_.isEmpty()) {
            if (objectBuilder_.isEmpty()) {
              objectBuilder_.dispose();
              objectBuilder_ = null;
              object_ = other.object_;
              bitField0_ = (bitField0_ & ~0x00000001);
              objectBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getObjectFieldBuilder() : null;
            } else {
              objectBuilder_.addAllMessages(other.object_);
            }
          }
        }
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getObjectCount(); i++) {
          if (!getObject(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EdocService.ImportEPackResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EdocService.ImportEPackResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<EdocService.ImportEPackResponse.Object> object_ =
        java.util.Collections.emptyList();
      private void ensureObjectIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          object_ = new java.util.ArrayList<EdocService.ImportEPackResponse.Object>(object_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.ImportEPackResponse.Object, EdocService.ImportEPackResponse.Object.Builder, EdocService.ImportEPackResponse.ObjectOrBuilder> objectBuilder_;

      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public java.util.List<EdocService.ImportEPackResponse.Object> getObjectList() {
        if (objectBuilder_ == null) {
          return java.util.Collections.unmodifiableList(object_);
        } else {
          return objectBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public int getObjectCount() {
        if (objectBuilder_ == null) {
          return object_.size();
        } else {
          return objectBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public EdocService.ImportEPackResponse.Object getObject(int index) {
        if (objectBuilder_ == null) {
          return object_.get(index);
        } else {
          return objectBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public Builder setObject(
          int index, EdocService.ImportEPackResponse.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.set(index, value);
          onChanged();
        } else {
          objectBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public Builder setObject(
          int index, EdocService.ImportEPackResponse.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.set(index, builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public Builder addObject(EdocService.ImportEPackResponse.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.add(value);
          onChanged();
        } else {
          objectBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public Builder addObject(
          int index, EdocService.ImportEPackResponse.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.add(index, value);
          onChanged();
        } else {
          objectBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public Builder addObject(
          EdocService.ImportEPackResponse.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.add(builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public Builder addObject(
          int index, EdocService.ImportEPackResponse.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.add(index, builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public Builder addAllObject(
          java.lang.Iterable<? extends EdocService.ImportEPackResponse.Object> values) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, object_);
          onChanged();
        } else {
          objectBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public Builder clearObject() {
        if (objectBuilder_ == null) {
          object_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          objectBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public Builder removeObject(int index) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.remove(index);
          onChanged();
        } else {
          objectBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public EdocService.ImportEPackResponse.Object.Builder getObjectBuilder(
          int index) {
        return getObjectFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public EdocService.ImportEPackResponse.ObjectOrBuilder getObjectOrBuilder(
          int index) {
        if (objectBuilder_ == null) {
          return object_.get(index);  } else {
          return objectBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public java.util.List<? extends EdocService.ImportEPackResponse.ObjectOrBuilder> 
           getObjectOrBuilderList() {
        if (objectBuilder_ != null) {
          return objectBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(object_);
        }
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public EdocService.ImportEPackResponse.Object.Builder addObjectBuilder() {
        return getObjectFieldBuilder().addBuilder(
            EdocService.ImportEPackResponse.Object.getDefaultInstance());
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public EdocService.ImportEPackResponse.Object.Builder addObjectBuilder(
          int index) {
        return getObjectFieldBuilder().addBuilder(
            index, EdocService.ImportEPackResponse.Object.getDefaultInstance());
      }
      /**
       * <pre>
       * List of imported objects.
       * </pre>
       *
       * <code>repeated .ImportEPackResponse.Object object = 1;</code>
       */
      public java.util.List<EdocService.ImportEPackResponse.Object.Builder> 
           getObjectBuilderList() {
        return getObjectFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.ImportEPackResponse.Object, EdocService.ImportEPackResponse.Object.Builder, EdocService.ImportEPackResponse.ObjectOrBuilder> 
          getObjectFieldBuilder() {
        if (objectBuilder_ == null) {
          objectBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EdocService.ImportEPackResponse.Object, EdocService.ImportEPackResponse.Object.Builder, EdocService.ImportEPackResponse.ObjectOrBuilder>(
                  object_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          object_ = null;
        }
        return objectBuilder_;
      }

      private Status.StatusProto status_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Status.StatusProto, Status.StatusProto.Builder, Status.StatusProtoOrBuilder> statusBuilder_;
      /**
       * <pre>
       * This status object can be used to capture errors that are not specific to
       * any particular edoc.
       * </pre>
       *
       * <code>optional .StatusProto status = 2;</code>
       * @return Whether the status field is set.
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * This status object can be used to capture errors that are not specific to
       * any particular edoc.
       * </pre>
       *
       * <code>optional .StatusProto status = 2;</code>
       * @return The status.
       */
      public Status.StatusProto getStatus() {
        if (statusBuilder_ == null) {
          return status_ == null ? Status.StatusProto.getDefaultInstance() : status_;
        } else {
          return statusBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This status object can be used to capture errors that are not specific to
       * any particular edoc.
       * </pre>
       *
       * <code>optional .StatusProto status = 2;</code>
       */
      public Builder setStatus(Status.StatusProto value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          status_ = value;
          onChanged();
        } else {
          statusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * This status object can be used to capture errors that are not specific to
       * any particular edoc.
       * </pre>
       *
       * <code>optional .StatusProto status = 2;</code>
       */
      public Builder setStatus(
          Status.StatusProto.Builder builderForValue) {
        if (statusBuilder_ == null) {
          status_ = builderForValue.build();
          onChanged();
        } else {
          statusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * This status object can be used to capture errors that are not specific to
       * any particular edoc.
       * </pre>
       *
       * <code>optional .StatusProto status = 2;</code>
       */
      public Builder mergeStatus(Status.StatusProto value) {
        if (statusBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              status_ != null &&
              status_ != Status.StatusProto.getDefaultInstance()) {
            status_ =
              Status.StatusProto.newBuilder(status_).mergeFrom(value).buildPartial();
          } else {
            status_ = value;
          }
          onChanged();
        } else {
          statusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * This status object can be used to capture errors that are not specific to
       * any particular edoc.
       * </pre>
       *
       * <code>optional .StatusProto status = 2;</code>
       */
      public Builder clearStatus() {
        if (statusBuilder_ == null) {
          status_ = null;
          onChanged();
        } else {
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * This status object can be used to capture errors that are not specific to
       * any particular edoc.
       * </pre>
       *
       * <code>optional .StatusProto status = 2;</code>
       */
      public Status.StatusProto.Builder getStatusBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStatusFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This status object can be used to capture errors that are not specific to
       * any particular edoc.
       * </pre>
       *
       * <code>optional .StatusProto status = 2;</code>
       */
      public Status.StatusProtoOrBuilder getStatusOrBuilder() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilder();
        } else {
          return status_ == null ?
              Status.StatusProto.getDefaultInstance() : status_;
        }
      }
      /**
       * <pre>
       * This status object can be used to capture errors that are not specific to
       * any particular edoc.
       * </pre>
       *
       * <code>optional .StatusProto status = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Status.StatusProto, Status.StatusProto.Builder, Status.StatusProtoOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Status.StatusProto, Status.StatusProto.Builder, Status.StatusProtoOrBuilder>(
                  getStatus(),
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ImportEPackResponse)
    }

    // @@protoc_insertion_point(class_scope:ImportEPackResponse)
    private static final EdocService.ImportEPackResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EdocService.ImportEPackResponse();
    }

    public static EdocService.ImportEPackResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ImportEPackResponse>
        PARSER = new com.google.protobuf.AbstractParser<ImportEPackResponse>() {
      @java.lang.Override
      public ImportEPackResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ImportEPackResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ImportEPackResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ImportEPackResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EdocService.ImportEPackResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetEPackInfoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GetEPackInfoRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of zip files to be unzipped.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
     */
    java.util.List<EdocService.GetEPackInfoRequest.ZipFile> 
        getZipFileList();
    /**
     * <pre>
     * List of zip files to be unzipped.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
     */
    EdocService.GetEPackInfoRequest.ZipFile getZipFile(int index);
    /**
     * <pre>
     * List of zip files to be unzipped.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
     */
    int getZipFileCount();
    /**
     * <pre>
     * List of zip files to be unzipped.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
     */
    java.util.List<? extends EdocService.GetEPackInfoRequest.ZipFileOrBuilder> 
        getZipFileOrBuilderList();
    /**
     * <pre>
     * List of zip files to be unzipped.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
     */
    EdocService.GetEPackInfoRequest.ZipFileOrBuilder getZipFileOrBuilder(
        int index);

    /**
     * <pre>
     * List of objects (TML files) to validate.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
     */
    java.util.List<EdocService.GetEPackInfoRequest.Object> 
        getObjectList();
    /**
     * <pre>
     * List of objects (TML files) to validate.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
     */
    EdocService.GetEPackInfoRequest.Object getObject(int index);
    /**
     * <pre>
     * List of objects (TML files) to validate.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
     */
    int getObjectCount();
    /**
     * <pre>
     * List of objects (TML files) to validate.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
     */
    java.util.List<? extends EdocService.GetEPackInfoRequest.ObjectOrBuilder> 
        getObjectOrBuilderList();
    /**
     * <pre>
     * List of objects (TML files) to validate.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
     */
    EdocService.GetEPackInfoRequest.ObjectOrBuilder getObjectOrBuilder(
        int index);

    /**
     * <pre>
     * Format type of the EDoc representation. Valid Values: [JSON, YAML, PROTO]
     * </pre>
     *
     * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
     * @return Whether the formatType field is set.
     */
    boolean hasFormatType();
    /**
     * <pre>
     * Format type of the EDoc representation. Valid Values: [JSON, YAML, PROTO]
     * </pre>
     *
     * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
     * @return The formatType.
     */
    EdocCommon.EDocFormatType.E getFormatType();
  }
  /**
   * <pre>
   * POST API : /callosum/v1/metadata/edoc/getEPackInfo
   * argument1 request : GetEPackInfoRequest proto serialized as JSON string
   * Returns GetEPackInfoResponse proto serialized as JSON string.
   * This API is doing two things:
   * 1. Unzipping the zip files.
   * 2. Checks if the guid(s) mentioned in the TML file(s) are present in the
   *    system. If yes, it returns the type of object(s) corresponding to these
   *    guid(s).
   * </pre>
   *
   * Protobuf type {@code GetEPackInfoRequest}
   */
  public static final class GetEPackInfoRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GetEPackInfoRequest)
      GetEPackInfoRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetEPackInfoRequest.newBuilder() to construct.
    private GetEPackInfoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetEPackInfoRequest() {
      zipFile_ = java.util.Collections.emptyList();
      object_ = java.util.Collections.emptyList();
      formatType_ = 1;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetEPackInfoRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetEPackInfoRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                zipFile_ = new java.util.ArrayList<EdocService.GetEPackInfoRequest.ZipFile>();
                mutable_bitField0_ |= 0x00000001;
              }
              zipFile_.add(
                  input.readMessage(EdocService.GetEPackInfoRequest.ZipFile.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                object_ = new java.util.ArrayList<EdocService.GetEPackInfoRequest.Object>();
                mutable_bitField0_ |= 0x00000002;
              }
              object_.add(
                  input.readMessage(EdocService.GetEPackInfoRequest.Object.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              EdocCommon.EDocFormatType.E value = EdocCommon.EDocFormatType.E.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                formatType_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          zipFile_ = java.util.Collections.unmodifiableList(zipFile_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          object_ = java.util.Collections.unmodifiableList(object_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EdocService.internal_static_GetEPackInfoRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EdocService.internal_static_GetEPackInfoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EdocService.GetEPackInfoRequest.class, EdocService.GetEPackInfoRequest.Builder.class);
    }

    public interface ZipFileOrBuilder extends
        // @@protoc_insertion_point(interface_extends:GetEPackInfoRequest.ZipFile)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Mandatory fields.
       * Zip file name.
       * </pre>
       *
       * <code>optional string filename = 1;</code>
       * @return Whether the filename field is set.
       */
      boolean hasFilename();
      /**
       * <pre>
       * Mandatory fields.
       * Zip file name.
       * </pre>
       *
       * <code>optional string filename = 1;</code>
       * @return The filename.
       */
      java.lang.String getFilename();
      /**
       * <pre>
       * Mandatory fields.
       * Zip file name.
       * </pre>
       *
       * <code>optional string filename = 1;</code>
       * @return The bytes for filename.
       */
      com.google.protobuf.ByteString
          getFilenameBytes();

      /**
       * <pre>
       * Base64 encoded content of zip file containing the TML objects to be
       * imported.
       * </pre>
       *
       * <code>optional string file_content = 2;</code>
       * @return Whether the fileContent field is set.
       */
      boolean hasFileContent();
      /**
       * <pre>
       * Base64 encoded content of zip file containing the TML objects to be
       * imported.
       * </pre>
       *
       * <code>optional string file_content = 2;</code>
       * @return The fileContent.
       */
      java.lang.String getFileContent();
      /**
       * <pre>
       * Base64 encoded content of zip file containing the TML objects to be
       * imported.
       * </pre>
       *
       * <code>optional string file_content = 2;</code>
       * @return The bytes for fileContent.
       */
      com.google.protobuf.ByteString
          getFileContentBytes();
    }
    /**
     * Protobuf type {@code GetEPackInfoRequest.ZipFile}
     */
    public static final class ZipFile extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:GetEPackInfoRequest.ZipFile)
        ZipFileOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ZipFile.newBuilder() to construct.
      private ZipFile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ZipFile() {
        filename_ = "";
        fileContent_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ZipFile();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ZipFile(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                filename_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                fileContent_ = bs;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_GetEPackInfoRequest_ZipFile_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_GetEPackInfoRequest_ZipFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.GetEPackInfoRequest.ZipFile.class, EdocService.GetEPackInfoRequest.ZipFile.Builder.class);
      }

      private int bitField0_;
      public static final int FILENAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object filename_;
      /**
       * <pre>
       * Mandatory fields.
       * Zip file name.
       * </pre>
       *
       * <code>optional string filename = 1;</code>
       * @return Whether the filename field is set.
       */
      @java.lang.Override
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Mandatory fields.
       * Zip file name.
       * </pre>
       *
       * <code>optional string filename = 1;</code>
       * @return The filename.
       */
      @java.lang.Override
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            filename_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Mandatory fields.
       * Zip file name.
       * </pre>
       *
       * <code>optional string filename = 1;</code>
       * @return The bytes for filename.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FILE_CONTENT_FIELD_NUMBER = 2;
      private volatile java.lang.Object fileContent_;
      /**
       * <pre>
       * Base64 encoded content of zip file containing the TML objects to be
       * imported.
       * </pre>
       *
       * <code>optional string file_content = 2;</code>
       * @return Whether the fileContent field is set.
       */
      @java.lang.Override
      public boolean hasFileContent() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Base64 encoded content of zip file containing the TML objects to be
       * imported.
       * </pre>
       *
       * <code>optional string file_content = 2;</code>
       * @return The fileContent.
       */
      @java.lang.Override
      public java.lang.String getFileContent() {
        java.lang.Object ref = fileContent_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fileContent_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Base64 encoded content of zip file containing the TML objects to be
       * imported.
       * </pre>
       *
       * <code>optional string file_content = 2;</code>
       * @return The bytes for fileContent.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFileContentBytes() {
        java.lang.Object ref = fileContent_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileContent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, filename_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fileContent_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, filename_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fileContent_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EdocService.GetEPackInfoRequest.ZipFile)) {
          return super.equals(obj);
        }
        EdocService.GetEPackInfoRequest.ZipFile other = (EdocService.GetEPackInfoRequest.ZipFile) obj;

        if (hasFilename() != other.hasFilename()) return false;
        if (hasFilename()) {
          if (!getFilename()
              .equals(other.getFilename())) return false;
        }
        if (hasFileContent() != other.hasFileContent()) return false;
        if (hasFileContent()) {
          if (!getFileContent()
              .equals(other.getFileContent())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasFilename()) {
          hash = (37 * hash) + FILENAME_FIELD_NUMBER;
          hash = (53 * hash) + getFilename().hashCode();
        }
        if (hasFileContent()) {
          hash = (37 * hash) + FILE_CONTENT_FIELD_NUMBER;
          hash = (53 * hash) + getFileContent().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EdocService.GetEPackInfoRequest.ZipFile parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.GetEPackInfoRequest.ZipFile parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.GetEPackInfoRequest.ZipFile parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.GetEPackInfoRequest.ZipFile parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.GetEPackInfoRequest.ZipFile parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.GetEPackInfoRequest.ZipFile parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.GetEPackInfoRequest.ZipFile parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.GetEPackInfoRequest.ZipFile parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.GetEPackInfoRequest.ZipFile parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EdocService.GetEPackInfoRequest.ZipFile parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.GetEPackInfoRequest.ZipFile parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.GetEPackInfoRequest.ZipFile parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EdocService.GetEPackInfoRequest.ZipFile prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code GetEPackInfoRequest.ZipFile}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:GetEPackInfoRequest.ZipFile)
          EdocService.GetEPackInfoRequest.ZipFileOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EdocService.internal_static_GetEPackInfoRequest_ZipFile_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EdocService.internal_static_GetEPackInfoRequest_ZipFile_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EdocService.GetEPackInfoRequest.ZipFile.class, EdocService.GetEPackInfoRequest.ZipFile.Builder.class);
        }

        // Construct using EdocService.GetEPackInfoRequest.ZipFile.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          filename_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          fileContent_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EdocService.internal_static_GetEPackInfoRequest_ZipFile_descriptor;
        }

        @java.lang.Override
        public EdocService.GetEPackInfoRequest.ZipFile getDefaultInstanceForType() {
          return EdocService.GetEPackInfoRequest.ZipFile.getDefaultInstance();
        }

        @java.lang.Override
        public EdocService.GetEPackInfoRequest.ZipFile build() {
          EdocService.GetEPackInfoRequest.ZipFile result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EdocService.GetEPackInfoRequest.ZipFile buildPartial() {
          EdocService.GetEPackInfoRequest.ZipFile result = new EdocService.GetEPackInfoRequest.ZipFile(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.filename_ = filename_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.fileContent_ = fileContent_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EdocService.GetEPackInfoRequest.ZipFile) {
            return mergeFrom((EdocService.GetEPackInfoRequest.ZipFile)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EdocService.GetEPackInfoRequest.ZipFile other) {
          if (other == EdocService.GetEPackInfoRequest.ZipFile.getDefaultInstance()) return this;
          if (other.hasFilename()) {
            bitField0_ |= 0x00000001;
            filename_ = other.filename_;
            onChanged();
          }
          if (other.hasFileContent()) {
            bitField0_ |= 0x00000002;
            fileContent_ = other.fileContent_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EdocService.GetEPackInfoRequest.ZipFile parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EdocService.GetEPackInfoRequest.ZipFile) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object filename_ = "";
        /**
         * <pre>
         * Mandatory fields.
         * Zip file name.
         * </pre>
         *
         * <code>optional string filename = 1;</code>
         * @return Whether the filename field is set.
         */
        public boolean hasFilename() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Mandatory fields.
         * Zip file name.
         * </pre>
         *
         * <code>optional string filename = 1;</code>
         * @return The filename.
         */
        public java.lang.String getFilename() {
          java.lang.Object ref = filename_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              filename_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Mandatory fields.
         * Zip file name.
         * </pre>
         *
         * <code>optional string filename = 1;</code>
         * @return The bytes for filename.
         */
        public com.google.protobuf.ByteString
            getFilenameBytes() {
          java.lang.Object ref = filename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            filename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Mandatory fields.
         * Zip file name.
         * </pre>
         *
         * <code>optional string filename = 1;</code>
         * @param value The filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilename(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          filename_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Mandatory fields.
         * Zip file name.
         * </pre>
         *
         * <code>optional string filename = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearFilename() {
          bitField0_ = (bitField0_ & ~0x00000001);
          filename_ = getDefaultInstance().getFilename();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Mandatory fields.
         * Zip file name.
         * </pre>
         *
         * <code>optional string filename = 1;</code>
         * @param value The bytes for filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          filename_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object fileContent_ = "";
        /**
         * <pre>
         * Base64 encoded content of zip file containing the TML objects to be
         * imported.
         * </pre>
         *
         * <code>optional string file_content = 2;</code>
         * @return Whether the fileContent field is set.
         */
        public boolean hasFileContent() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Base64 encoded content of zip file containing the TML objects to be
         * imported.
         * </pre>
         *
         * <code>optional string file_content = 2;</code>
         * @return The fileContent.
         */
        public java.lang.String getFileContent() {
          java.lang.Object ref = fileContent_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              fileContent_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Base64 encoded content of zip file containing the TML objects to be
         * imported.
         * </pre>
         *
         * <code>optional string file_content = 2;</code>
         * @return The bytes for fileContent.
         */
        public com.google.protobuf.ByteString
            getFileContentBytes() {
          java.lang.Object ref = fileContent_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            fileContent_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Base64 encoded content of zip file containing the TML objects to be
         * imported.
         * </pre>
         *
         * <code>optional string file_content = 2;</code>
         * @param value The fileContent to set.
         * @return This builder for chaining.
         */
        public Builder setFileContent(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          fileContent_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Base64 encoded content of zip file containing the TML objects to be
         * imported.
         * </pre>
         *
         * <code>optional string file_content = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFileContent() {
          bitField0_ = (bitField0_ & ~0x00000002);
          fileContent_ = getDefaultInstance().getFileContent();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Base64 encoded content of zip file containing the TML objects to be
         * imported.
         * </pre>
         *
         * <code>optional string file_content = 2;</code>
         * @param value The bytes for fileContent to set.
         * @return This builder for chaining.
         */
        public Builder setFileContentBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          fileContent_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:GetEPackInfoRequest.ZipFile)
      }

      // @@protoc_insertion_point(class_scope:GetEPackInfoRequest.ZipFile)
      private static final EdocService.GetEPackInfoRequest.ZipFile DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EdocService.GetEPackInfoRequest.ZipFile();
      }

      public static EdocService.GetEPackInfoRequest.ZipFile getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ZipFile>
          PARSER = new com.google.protobuf.AbstractParser<ZipFile>() {
        @java.lang.Override
        public ZipFile parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ZipFile(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ZipFile> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ZipFile> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EdocService.GetEPackInfoRequest.ZipFile getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ObjectOrBuilder extends
        // @@protoc_insertion_point(interface_extends:GetEPackInfoRequest.Object)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Mandatory fields.
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 1;</code>
       * @return Whether the filename field is set.
       */
      boolean hasFilename();
      /**
       * <pre>
       * Mandatory fields.
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 1;</code>
       * @return The filename.
       */
      java.lang.String getFilename();
      /**
       * <pre>
       * Mandatory fields.
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 1;</code>
       * @return The bytes for filename.
       */
      com.google.protobuf.ByteString
          getFilenameBytes();

      /**
       * <pre>
       * Entity doc representation of metadata object. i.e. Content of TML file.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return Whether the edoc field is set.
       */
      boolean hasEdoc();
      /**
       * <pre>
       * Entity doc representation of metadata object. i.e. Content of TML file.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return The edoc.
       */
      java.lang.String getEdoc();
      /**
       * <pre>
       * Entity doc representation of metadata object. i.e. Content of TML file.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return The bytes for edoc.
       */
      com.google.protobuf.ByteString
          getEdocBytes();

      /**
       * <pre>
       * Filename of the containing zip file. This is only required to differentiate between same
       * named TML files across different zip files.
       * </pre>
       *
       * <code>optional string zip_filename = 4;</code>
       * @return Whether the zipFilename field is set.
       */
      boolean hasZipFilename();
      /**
       * <pre>
       * Filename of the containing zip file. This is only required to differentiate between same
       * named TML files across different zip files.
       * </pre>
       *
       * <code>optional string zip_filename = 4;</code>
       * @return The zipFilename.
       */
      java.lang.String getZipFilename();
      /**
       * <pre>
       * Filename of the containing zip file. This is only required to differentiate between same
       * named TML files across different zip files.
       * </pre>
       *
       * <code>optional string zip_filename = 4;</code>
       * @return The bytes for zipFilename.
       */
      com.google.protobuf.ByteString
          getZipFilenameBytes();
    }
    /**
     * Protobuf type {@code GetEPackInfoRequest.Object}
     */
    public static final class Object extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:GetEPackInfoRequest.Object)
        ObjectOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Object.newBuilder() to construct.
      private Object(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Object() {
        filename_ = "";
        edoc_ = "";
        zipFilename_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Object();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Object(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                filename_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                edoc_ = bs;
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                zipFilename_ = bs;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_GetEPackInfoRequest_Object_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_GetEPackInfoRequest_Object_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.GetEPackInfoRequest.Object.class, EdocService.GetEPackInfoRequest.Object.Builder.class);
      }

      private int bitField0_;
      public static final int FILENAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object filename_;
      /**
       * <pre>
       * Mandatory fields.
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 1;</code>
       * @return Whether the filename field is set.
       */
      @java.lang.Override
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Mandatory fields.
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 1;</code>
       * @return The filename.
       */
      @java.lang.Override
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            filename_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Mandatory fields.
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 1;</code>
       * @return The bytes for filename.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int EDOC_FIELD_NUMBER = 2;
      private volatile java.lang.Object edoc_;
      /**
       * <pre>
       * Entity doc representation of metadata object. i.e. Content of TML file.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return Whether the edoc field is set.
       */
      @java.lang.Override
      public boolean hasEdoc() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Entity doc representation of metadata object. i.e. Content of TML file.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return The edoc.
       */
      @java.lang.Override
      public java.lang.String getEdoc() {
        java.lang.Object ref = edoc_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            edoc_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Entity doc representation of metadata object. i.e. Content of TML file.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return The bytes for edoc.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getEdocBytes() {
        java.lang.Object ref = edoc_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          edoc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ZIP_FILENAME_FIELD_NUMBER = 4;
      private volatile java.lang.Object zipFilename_;
      /**
       * <pre>
       * Filename of the containing zip file. This is only required to differentiate between same
       * named TML files across different zip files.
       * </pre>
       *
       * <code>optional string zip_filename = 4;</code>
       * @return Whether the zipFilename field is set.
       */
      @java.lang.Override
      public boolean hasZipFilename() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Filename of the containing zip file. This is only required to differentiate between same
       * named TML files across different zip files.
       * </pre>
       *
       * <code>optional string zip_filename = 4;</code>
       * @return The zipFilename.
       */
      @java.lang.Override
      public java.lang.String getZipFilename() {
        java.lang.Object ref = zipFilename_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            zipFilename_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Filename of the containing zip file. This is only required to differentiate between same
       * named TML files across different zip files.
       * </pre>
       *
       * <code>optional string zip_filename = 4;</code>
       * @return The bytes for zipFilename.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getZipFilenameBytes() {
        java.lang.Object ref = zipFilename_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          zipFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, filename_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, edoc_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, zipFilename_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, filename_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, edoc_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, zipFilename_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EdocService.GetEPackInfoRequest.Object)) {
          return super.equals(obj);
        }
        EdocService.GetEPackInfoRequest.Object other = (EdocService.GetEPackInfoRequest.Object) obj;

        if (hasFilename() != other.hasFilename()) return false;
        if (hasFilename()) {
          if (!getFilename()
              .equals(other.getFilename())) return false;
        }
        if (hasEdoc() != other.hasEdoc()) return false;
        if (hasEdoc()) {
          if (!getEdoc()
              .equals(other.getEdoc())) return false;
        }
        if (hasZipFilename() != other.hasZipFilename()) return false;
        if (hasZipFilename()) {
          if (!getZipFilename()
              .equals(other.getZipFilename())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasFilename()) {
          hash = (37 * hash) + FILENAME_FIELD_NUMBER;
          hash = (53 * hash) + getFilename().hashCode();
        }
        if (hasEdoc()) {
          hash = (37 * hash) + EDOC_FIELD_NUMBER;
          hash = (53 * hash) + getEdoc().hashCode();
        }
        if (hasZipFilename()) {
          hash = (37 * hash) + ZIP_FILENAME_FIELD_NUMBER;
          hash = (53 * hash) + getZipFilename().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EdocService.GetEPackInfoRequest.Object parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.GetEPackInfoRequest.Object parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.GetEPackInfoRequest.Object parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.GetEPackInfoRequest.Object parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.GetEPackInfoRequest.Object parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.GetEPackInfoRequest.Object parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.GetEPackInfoRequest.Object parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.GetEPackInfoRequest.Object parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.GetEPackInfoRequest.Object parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EdocService.GetEPackInfoRequest.Object parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.GetEPackInfoRequest.Object parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.GetEPackInfoRequest.Object parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EdocService.GetEPackInfoRequest.Object prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code GetEPackInfoRequest.Object}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:GetEPackInfoRequest.Object)
          EdocService.GetEPackInfoRequest.ObjectOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EdocService.internal_static_GetEPackInfoRequest_Object_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EdocService.internal_static_GetEPackInfoRequest_Object_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EdocService.GetEPackInfoRequest.Object.class, EdocService.GetEPackInfoRequest.Object.Builder.class);
        }

        // Construct using EdocService.GetEPackInfoRequest.Object.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          filename_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          edoc_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          zipFilename_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EdocService.internal_static_GetEPackInfoRequest_Object_descriptor;
        }

        @java.lang.Override
        public EdocService.GetEPackInfoRequest.Object getDefaultInstanceForType() {
          return EdocService.GetEPackInfoRequest.Object.getDefaultInstance();
        }

        @java.lang.Override
        public EdocService.GetEPackInfoRequest.Object build() {
          EdocService.GetEPackInfoRequest.Object result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EdocService.GetEPackInfoRequest.Object buildPartial() {
          EdocService.GetEPackInfoRequest.Object result = new EdocService.GetEPackInfoRequest.Object(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.filename_ = filename_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.edoc_ = edoc_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            to_bitField0_ |= 0x00000004;
          }
          result.zipFilename_ = zipFilename_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EdocService.GetEPackInfoRequest.Object) {
            return mergeFrom((EdocService.GetEPackInfoRequest.Object)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EdocService.GetEPackInfoRequest.Object other) {
          if (other == EdocService.GetEPackInfoRequest.Object.getDefaultInstance()) return this;
          if (other.hasFilename()) {
            bitField0_ |= 0x00000001;
            filename_ = other.filename_;
            onChanged();
          }
          if (other.hasEdoc()) {
            bitField0_ |= 0x00000002;
            edoc_ = other.edoc_;
            onChanged();
          }
          if (other.hasZipFilename()) {
            bitField0_ |= 0x00000004;
            zipFilename_ = other.zipFilename_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EdocService.GetEPackInfoRequest.Object parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EdocService.GetEPackInfoRequest.Object) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object filename_ = "";
        /**
         * <pre>
         * Mandatory fields.
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 1;</code>
         * @return Whether the filename field is set.
         */
        public boolean hasFilename() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Mandatory fields.
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 1;</code>
         * @return The filename.
         */
        public java.lang.String getFilename() {
          java.lang.Object ref = filename_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              filename_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Mandatory fields.
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 1;</code>
         * @return The bytes for filename.
         */
        public com.google.protobuf.ByteString
            getFilenameBytes() {
          java.lang.Object ref = filename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            filename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Mandatory fields.
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 1;</code>
         * @param value The filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilename(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          filename_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Mandatory fields.
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearFilename() {
          bitField0_ = (bitField0_ & ~0x00000001);
          filename_ = getDefaultInstance().getFilename();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Mandatory fields.
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 1;</code>
         * @param value The bytes for filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          filename_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object edoc_ = "";
        /**
         * <pre>
         * Entity doc representation of metadata object. i.e. Content of TML file.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @return Whether the edoc field is set.
         */
        public boolean hasEdoc() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Entity doc representation of metadata object. i.e. Content of TML file.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @return The edoc.
         */
        public java.lang.String getEdoc() {
          java.lang.Object ref = edoc_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              edoc_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Entity doc representation of metadata object. i.e. Content of TML file.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @return The bytes for edoc.
         */
        public com.google.protobuf.ByteString
            getEdocBytes() {
          java.lang.Object ref = edoc_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            edoc_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Entity doc representation of metadata object. i.e. Content of TML file.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @param value The edoc to set.
         * @return This builder for chaining.
         */
        public Builder setEdoc(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          edoc_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Entity doc representation of metadata object. i.e. Content of TML file.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearEdoc() {
          bitField0_ = (bitField0_ & ~0x00000002);
          edoc_ = getDefaultInstance().getEdoc();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Entity doc representation of metadata object. i.e. Content of TML file.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @param value The bytes for edoc to set.
         * @return This builder for chaining.
         */
        public Builder setEdocBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          edoc_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object zipFilename_ = "";
        /**
         * <pre>
         * Filename of the containing zip file. This is only required to differentiate between same
         * named TML files across different zip files.
         * </pre>
         *
         * <code>optional string zip_filename = 4;</code>
         * @return Whether the zipFilename field is set.
         */
        public boolean hasZipFilename() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Filename of the containing zip file. This is only required to differentiate between same
         * named TML files across different zip files.
         * </pre>
         *
         * <code>optional string zip_filename = 4;</code>
         * @return The zipFilename.
         */
        public java.lang.String getZipFilename() {
          java.lang.Object ref = zipFilename_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              zipFilename_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Filename of the containing zip file. This is only required to differentiate between same
         * named TML files across different zip files.
         * </pre>
         *
         * <code>optional string zip_filename = 4;</code>
         * @return The bytes for zipFilename.
         */
        public com.google.protobuf.ByteString
            getZipFilenameBytes() {
          java.lang.Object ref = zipFilename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            zipFilename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Filename of the containing zip file. This is only required to differentiate between same
         * named TML files across different zip files.
         * </pre>
         *
         * <code>optional string zip_filename = 4;</code>
         * @param value The zipFilename to set.
         * @return This builder for chaining.
         */
        public Builder setZipFilename(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          zipFilename_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Filename of the containing zip file. This is only required to differentiate between same
         * named TML files across different zip files.
         * </pre>
         *
         * <code>optional string zip_filename = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearZipFilename() {
          bitField0_ = (bitField0_ & ~0x00000004);
          zipFilename_ = getDefaultInstance().getZipFilename();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Filename of the containing zip file. This is only required to differentiate between same
         * named TML files across different zip files.
         * </pre>
         *
         * <code>optional string zip_filename = 4;</code>
         * @param value The bytes for zipFilename to set.
         * @return This builder for chaining.
         */
        public Builder setZipFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          zipFilename_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:GetEPackInfoRequest.Object)
      }

      // @@protoc_insertion_point(class_scope:GetEPackInfoRequest.Object)
      private static final EdocService.GetEPackInfoRequest.Object DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EdocService.GetEPackInfoRequest.Object();
      }

      public static EdocService.GetEPackInfoRequest.Object getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Object>
          PARSER = new com.google.protobuf.AbstractParser<Object>() {
        @java.lang.Override
        public Object parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Object(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Object> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Object> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EdocService.GetEPackInfoRequest.Object getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ZIP_FILE_FIELD_NUMBER = 1;
    private java.util.List<EdocService.GetEPackInfoRequest.ZipFile> zipFile_;
    /**
     * <pre>
     * List of zip files to be unzipped.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
     */
    @java.lang.Override
    public java.util.List<EdocService.GetEPackInfoRequest.ZipFile> getZipFileList() {
      return zipFile_;
    }
    /**
     * <pre>
     * List of zip files to be unzipped.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EdocService.GetEPackInfoRequest.ZipFileOrBuilder> 
        getZipFileOrBuilderList() {
      return zipFile_;
    }
    /**
     * <pre>
     * List of zip files to be unzipped.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
     */
    @java.lang.Override
    public int getZipFileCount() {
      return zipFile_.size();
    }
    /**
     * <pre>
     * List of zip files to be unzipped.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
     */
    @java.lang.Override
    public EdocService.GetEPackInfoRequest.ZipFile getZipFile(int index) {
      return zipFile_.get(index);
    }
    /**
     * <pre>
     * List of zip files to be unzipped.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
     */
    @java.lang.Override
    public EdocService.GetEPackInfoRequest.ZipFileOrBuilder getZipFileOrBuilder(
        int index) {
      return zipFile_.get(index);
    }

    public static final int OBJECT_FIELD_NUMBER = 2;
    private java.util.List<EdocService.GetEPackInfoRequest.Object> object_;
    /**
     * <pre>
     * List of objects (TML files) to validate.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
     */
    @java.lang.Override
    public java.util.List<EdocService.GetEPackInfoRequest.Object> getObjectList() {
      return object_;
    }
    /**
     * <pre>
     * List of objects (TML files) to validate.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EdocService.GetEPackInfoRequest.ObjectOrBuilder> 
        getObjectOrBuilderList() {
      return object_;
    }
    /**
     * <pre>
     * List of objects (TML files) to validate.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
     */
    @java.lang.Override
    public int getObjectCount() {
      return object_.size();
    }
    /**
     * <pre>
     * List of objects (TML files) to validate.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
     */
    @java.lang.Override
    public EdocService.GetEPackInfoRequest.Object getObject(int index) {
      return object_.get(index);
    }
    /**
     * <pre>
     * List of objects (TML files) to validate.
     * </pre>
     *
     * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
     */
    @java.lang.Override
    public EdocService.GetEPackInfoRequest.ObjectOrBuilder getObjectOrBuilder(
        int index) {
      return object_.get(index);
    }

    public static final int FORMAT_TYPE_FIELD_NUMBER = 3;
    private int formatType_;
    /**
     * <pre>
     * Format type of the EDoc representation. Valid Values: [JSON, YAML, PROTO]
     * </pre>
     *
     * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
     * @return Whether the formatType field is set.
     */
    @java.lang.Override public boolean hasFormatType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Format type of the EDoc representation. Valid Values: [JSON, YAML, PROTO]
     * </pre>
     *
     * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
     * @return The formatType.
     */
    @java.lang.Override public EdocCommon.EDocFormatType.E getFormatType() {
      @SuppressWarnings("deprecation")
      EdocCommon.EDocFormatType.E result = EdocCommon.EDocFormatType.E.valueOf(formatType_);
      return result == null ? EdocCommon.EDocFormatType.E.YAML : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < zipFile_.size(); i++) {
        output.writeMessage(1, zipFile_.get(i));
      }
      for (int i = 0; i < object_.size(); i++) {
        output.writeMessage(2, object_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(3, formatType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < zipFile_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, zipFile_.get(i));
      }
      for (int i = 0; i < object_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, object_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, formatType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EdocService.GetEPackInfoRequest)) {
        return super.equals(obj);
      }
      EdocService.GetEPackInfoRequest other = (EdocService.GetEPackInfoRequest) obj;

      if (!getZipFileList()
          .equals(other.getZipFileList())) return false;
      if (!getObjectList()
          .equals(other.getObjectList())) return false;
      if (hasFormatType() != other.hasFormatType()) return false;
      if (hasFormatType()) {
        if (formatType_ != other.formatType_) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getZipFileCount() > 0) {
        hash = (37 * hash) + ZIP_FILE_FIELD_NUMBER;
        hash = (53 * hash) + getZipFileList().hashCode();
      }
      if (getObjectCount() > 0) {
        hash = (37 * hash) + OBJECT_FIELD_NUMBER;
        hash = (53 * hash) + getObjectList().hashCode();
      }
      if (hasFormatType()) {
        hash = (37 * hash) + FORMAT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + formatType_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EdocService.GetEPackInfoRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.GetEPackInfoRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.GetEPackInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.GetEPackInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.GetEPackInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.GetEPackInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.GetEPackInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EdocService.GetEPackInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EdocService.GetEPackInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EdocService.GetEPackInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EdocService.GetEPackInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EdocService.GetEPackInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EdocService.GetEPackInfoRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * POST API : /callosum/v1/metadata/edoc/getEPackInfo
     * argument1 request : GetEPackInfoRequest proto serialized as JSON string
     * Returns GetEPackInfoResponse proto serialized as JSON string.
     * This API is doing two things:
     * 1. Unzipping the zip files.
     * 2. Checks if the guid(s) mentioned in the TML file(s) are present in the
     *    system. If yes, it returns the type of object(s) corresponding to these
     *    guid(s).
     * </pre>
     *
     * Protobuf type {@code GetEPackInfoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GetEPackInfoRequest)
        EdocService.GetEPackInfoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_GetEPackInfoRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_GetEPackInfoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.GetEPackInfoRequest.class, EdocService.GetEPackInfoRequest.Builder.class);
      }

      // Construct using EdocService.GetEPackInfoRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getZipFileFieldBuilder();
          getObjectFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (zipFileBuilder_ == null) {
          zipFile_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          zipFileBuilder_.clear();
        }
        if (objectBuilder_ == null) {
          object_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          objectBuilder_.clear();
        }
        formatType_ = 1;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EdocService.internal_static_GetEPackInfoRequest_descriptor;
      }

      @java.lang.Override
      public EdocService.GetEPackInfoRequest getDefaultInstanceForType() {
        return EdocService.GetEPackInfoRequest.getDefaultInstance();
      }

      @java.lang.Override
      public EdocService.GetEPackInfoRequest build() {
        EdocService.GetEPackInfoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EdocService.GetEPackInfoRequest buildPartial() {
        EdocService.GetEPackInfoRequest result = new EdocService.GetEPackInfoRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (zipFileBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            zipFile_ = java.util.Collections.unmodifiableList(zipFile_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.zipFile_ = zipFile_;
        } else {
          result.zipFile_ = zipFileBuilder_.build();
        }
        if (objectBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            object_ = java.util.Collections.unmodifiableList(object_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.object_ = object_;
        } else {
          result.object_ = objectBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.formatType_ = formatType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EdocService.GetEPackInfoRequest) {
          return mergeFrom((EdocService.GetEPackInfoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EdocService.GetEPackInfoRequest other) {
        if (other == EdocService.GetEPackInfoRequest.getDefaultInstance()) return this;
        if (zipFileBuilder_ == null) {
          if (!other.zipFile_.isEmpty()) {
            if (zipFile_.isEmpty()) {
              zipFile_ = other.zipFile_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureZipFileIsMutable();
              zipFile_.addAll(other.zipFile_);
            }
            onChanged();
          }
        } else {
          if (!other.zipFile_.isEmpty()) {
            if (zipFileBuilder_.isEmpty()) {
              zipFileBuilder_.dispose();
              zipFileBuilder_ = null;
              zipFile_ = other.zipFile_;
              bitField0_ = (bitField0_ & ~0x00000001);
              zipFileBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getZipFileFieldBuilder() : null;
            } else {
              zipFileBuilder_.addAllMessages(other.zipFile_);
            }
          }
        }
        if (objectBuilder_ == null) {
          if (!other.object_.isEmpty()) {
            if (object_.isEmpty()) {
              object_ = other.object_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureObjectIsMutable();
              object_.addAll(other.object_);
            }
            onChanged();
          }
        } else {
          if (!other.object_.isEmpty()) {
            if (objectBuilder_.isEmpty()) {
              objectBuilder_.dispose();
              objectBuilder_ = null;
              object_ = other.object_;
              bitField0_ = (bitField0_ & ~0x00000002);
              objectBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getObjectFieldBuilder() : null;
            } else {
              objectBuilder_.addAllMessages(other.object_);
            }
          }
        }
        if (other.hasFormatType()) {
          setFormatType(other.getFormatType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EdocService.GetEPackInfoRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EdocService.GetEPackInfoRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<EdocService.GetEPackInfoRequest.ZipFile> zipFile_ =
        java.util.Collections.emptyList();
      private void ensureZipFileIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          zipFile_ = new java.util.ArrayList<EdocService.GetEPackInfoRequest.ZipFile>(zipFile_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.GetEPackInfoRequest.ZipFile, EdocService.GetEPackInfoRequest.ZipFile.Builder, EdocService.GetEPackInfoRequest.ZipFileOrBuilder> zipFileBuilder_;

      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public java.util.List<EdocService.GetEPackInfoRequest.ZipFile> getZipFileList() {
        if (zipFileBuilder_ == null) {
          return java.util.Collections.unmodifiableList(zipFile_);
        } else {
          return zipFileBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public int getZipFileCount() {
        if (zipFileBuilder_ == null) {
          return zipFile_.size();
        } else {
          return zipFileBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public EdocService.GetEPackInfoRequest.ZipFile getZipFile(int index) {
        if (zipFileBuilder_ == null) {
          return zipFile_.get(index);
        } else {
          return zipFileBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public Builder setZipFile(
          int index, EdocService.GetEPackInfoRequest.ZipFile value) {
        if (zipFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureZipFileIsMutable();
          zipFile_.set(index, value);
          onChanged();
        } else {
          zipFileBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public Builder setZipFile(
          int index, EdocService.GetEPackInfoRequest.ZipFile.Builder builderForValue) {
        if (zipFileBuilder_ == null) {
          ensureZipFileIsMutable();
          zipFile_.set(index, builderForValue.build());
          onChanged();
        } else {
          zipFileBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public Builder addZipFile(EdocService.GetEPackInfoRequest.ZipFile value) {
        if (zipFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureZipFileIsMutable();
          zipFile_.add(value);
          onChanged();
        } else {
          zipFileBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public Builder addZipFile(
          int index, EdocService.GetEPackInfoRequest.ZipFile value) {
        if (zipFileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureZipFileIsMutable();
          zipFile_.add(index, value);
          onChanged();
        } else {
          zipFileBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public Builder addZipFile(
          EdocService.GetEPackInfoRequest.ZipFile.Builder builderForValue) {
        if (zipFileBuilder_ == null) {
          ensureZipFileIsMutable();
          zipFile_.add(builderForValue.build());
          onChanged();
        } else {
          zipFileBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public Builder addZipFile(
          int index, EdocService.GetEPackInfoRequest.ZipFile.Builder builderForValue) {
        if (zipFileBuilder_ == null) {
          ensureZipFileIsMutable();
          zipFile_.add(index, builderForValue.build());
          onChanged();
        } else {
          zipFileBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public Builder addAllZipFile(
          java.lang.Iterable<? extends EdocService.GetEPackInfoRequest.ZipFile> values) {
        if (zipFileBuilder_ == null) {
          ensureZipFileIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, zipFile_);
          onChanged();
        } else {
          zipFileBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public Builder clearZipFile() {
        if (zipFileBuilder_ == null) {
          zipFile_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          zipFileBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public Builder removeZipFile(int index) {
        if (zipFileBuilder_ == null) {
          ensureZipFileIsMutable();
          zipFile_.remove(index);
          onChanged();
        } else {
          zipFileBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public EdocService.GetEPackInfoRequest.ZipFile.Builder getZipFileBuilder(
          int index) {
        return getZipFileFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public EdocService.GetEPackInfoRequest.ZipFileOrBuilder getZipFileOrBuilder(
          int index) {
        if (zipFileBuilder_ == null) {
          return zipFile_.get(index);  } else {
          return zipFileBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public java.util.List<? extends EdocService.GetEPackInfoRequest.ZipFileOrBuilder> 
           getZipFileOrBuilderList() {
        if (zipFileBuilder_ != null) {
          return zipFileBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(zipFile_);
        }
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public EdocService.GetEPackInfoRequest.ZipFile.Builder addZipFileBuilder() {
        return getZipFileFieldBuilder().addBuilder(
            EdocService.GetEPackInfoRequest.ZipFile.getDefaultInstance());
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public EdocService.GetEPackInfoRequest.ZipFile.Builder addZipFileBuilder(
          int index) {
        return getZipFileFieldBuilder().addBuilder(
            index, EdocService.GetEPackInfoRequest.ZipFile.getDefaultInstance());
      }
      /**
       * <pre>
       * List of zip files to be unzipped.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.ZipFile zip_file = 1;</code>
       */
      public java.util.List<EdocService.GetEPackInfoRequest.ZipFile.Builder> 
           getZipFileBuilderList() {
        return getZipFileFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.GetEPackInfoRequest.ZipFile, EdocService.GetEPackInfoRequest.ZipFile.Builder, EdocService.GetEPackInfoRequest.ZipFileOrBuilder> 
          getZipFileFieldBuilder() {
        if (zipFileBuilder_ == null) {
          zipFileBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EdocService.GetEPackInfoRequest.ZipFile, EdocService.GetEPackInfoRequest.ZipFile.Builder, EdocService.GetEPackInfoRequest.ZipFileOrBuilder>(
                  zipFile_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          zipFile_ = null;
        }
        return zipFileBuilder_;
      }

      private java.util.List<EdocService.GetEPackInfoRequest.Object> object_ =
        java.util.Collections.emptyList();
      private void ensureObjectIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          object_ = new java.util.ArrayList<EdocService.GetEPackInfoRequest.Object>(object_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.GetEPackInfoRequest.Object, EdocService.GetEPackInfoRequest.Object.Builder, EdocService.GetEPackInfoRequest.ObjectOrBuilder> objectBuilder_;

      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public java.util.List<EdocService.GetEPackInfoRequest.Object> getObjectList() {
        if (objectBuilder_ == null) {
          return java.util.Collections.unmodifiableList(object_);
        } else {
          return objectBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public int getObjectCount() {
        if (objectBuilder_ == null) {
          return object_.size();
        } else {
          return objectBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public EdocService.GetEPackInfoRequest.Object getObject(int index) {
        if (objectBuilder_ == null) {
          return object_.get(index);
        } else {
          return objectBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public Builder setObject(
          int index, EdocService.GetEPackInfoRequest.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.set(index, value);
          onChanged();
        } else {
          objectBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public Builder setObject(
          int index, EdocService.GetEPackInfoRequest.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.set(index, builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public Builder addObject(EdocService.GetEPackInfoRequest.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.add(value);
          onChanged();
        } else {
          objectBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public Builder addObject(
          int index, EdocService.GetEPackInfoRequest.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.add(index, value);
          onChanged();
        } else {
          objectBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public Builder addObject(
          EdocService.GetEPackInfoRequest.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.add(builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public Builder addObject(
          int index, EdocService.GetEPackInfoRequest.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.add(index, builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public Builder addAllObject(
          java.lang.Iterable<? extends EdocService.GetEPackInfoRequest.Object> values) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, object_);
          onChanged();
        } else {
          objectBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public Builder clearObject() {
        if (objectBuilder_ == null) {
          object_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          objectBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public Builder removeObject(int index) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.remove(index);
          onChanged();
        } else {
          objectBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public EdocService.GetEPackInfoRequest.Object.Builder getObjectBuilder(
          int index) {
        return getObjectFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public EdocService.GetEPackInfoRequest.ObjectOrBuilder getObjectOrBuilder(
          int index) {
        if (objectBuilder_ == null) {
          return object_.get(index);  } else {
          return objectBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public java.util.List<? extends EdocService.GetEPackInfoRequest.ObjectOrBuilder> 
           getObjectOrBuilderList() {
        if (objectBuilder_ != null) {
          return objectBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(object_);
        }
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public EdocService.GetEPackInfoRequest.Object.Builder addObjectBuilder() {
        return getObjectFieldBuilder().addBuilder(
            EdocService.GetEPackInfoRequest.Object.getDefaultInstance());
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public EdocService.GetEPackInfoRequest.Object.Builder addObjectBuilder(
          int index) {
        return getObjectFieldBuilder().addBuilder(
            index, EdocService.GetEPackInfoRequest.Object.getDefaultInstance());
      }
      /**
       * <pre>
       * List of objects (TML files) to validate.
       * </pre>
       *
       * <code>repeated .GetEPackInfoRequest.Object object = 2;</code>
       */
      public java.util.List<EdocService.GetEPackInfoRequest.Object.Builder> 
           getObjectBuilderList() {
        return getObjectFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.GetEPackInfoRequest.Object, EdocService.GetEPackInfoRequest.Object.Builder, EdocService.GetEPackInfoRequest.ObjectOrBuilder> 
          getObjectFieldBuilder() {
        if (objectBuilder_ == null) {
          objectBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EdocService.GetEPackInfoRequest.Object, EdocService.GetEPackInfoRequest.Object.Builder, EdocService.GetEPackInfoRequest.ObjectOrBuilder>(
                  object_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          object_ = null;
        }
        return objectBuilder_;
      }

      private int formatType_ = 1;
      /**
       * <pre>
       * Format type of the EDoc representation. Valid Values: [JSON, YAML, PROTO]
       * </pre>
       *
       * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
       * @return Whether the formatType field is set.
       */
      @java.lang.Override public boolean hasFormatType() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Format type of the EDoc representation. Valid Values: [JSON, YAML, PROTO]
       * </pre>
       *
       * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
       * @return The formatType.
       */
      @java.lang.Override
      public EdocCommon.EDocFormatType.E getFormatType() {
        @SuppressWarnings("deprecation")
        EdocCommon.EDocFormatType.E result = EdocCommon.EDocFormatType.E.valueOf(formatType_);
        return result == null ? EdocCommon.EDocFormatType.E.YAML : result;
      }
      /**
       * <pre>
       * Format type of the EDoc representation. Valid Values: [JSON, YAML, PROTO]
       * </pre>
       *
       * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
       * @param value The formatType to set.
       * @return This builder for chaining.
       */
      public Builder setFormatType(EdocCommon.EDocFormatType.E value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        formatType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Format type of the EDoc representation. Valid Values: [JSON, YAML, PROTO]
       * </pre>
       *
       * <code>optional .EDocFormatType.E format_type = 3 [default = YAML];</code>
       * @return This builder for chaining.
       */
      public Builder clearFormatType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        formatType_ = 1;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GetEPackInfoRequest)
    }

    // @@protoc_insertion_point(class_scope:GetEPackInfoRequest)
    private static final EdocService.GetEPackInfoRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EdocService.GetEPackInfoRequest();
    }

    public static EdocService.GetEPackInfoRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GetEPackInfoRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetEPackInfoRequest>() {
      @java.lang.Override
      public GetEPackInfoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetEPackInfoRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetEPackInfoRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetEPackInfoRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EdocService.GetEPackInfoRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetEPackInfoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GetEPackInfoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
     */
    java.util.List<EdocService.GetEPackInfoResponse.Object> 
        getObjectList();
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
     */
    EdocService.GetEPackInfoResponse.Object getObject(int index);
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
     */
    int getObjectCount();
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
     */
    java.util.List<? extends EdocService.GetEPackInfoResponse.ObjectOrBuilder> 
        getObjectOrBuilderList();
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
     */
    EdocService.GetEPackInfoResponse.ObjectOrBuilder getObjectOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code GetEPackInfoResponse}
   */
  public static final class GetEPackInfoResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GetEPackInfoResponse)
      GetEPackInfoResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetEPackInfoResponse.newBuilder() to construct.
    private GetEPackInfoResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetEPackInfoResponse() {
      object_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetEPackInfoResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetEPackInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                object_ = new java.util.ArrayList<EdocService.GetEPackInfoResponse.Object>();
                mutable_bitField0_ |= 0x00000001;
              }
              object_.add(
                  input.readMessage(EdocService.GetEPackInfoResponse.Object.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          object_ = java.util.Collections.unmodifiableList(object_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EdocService.internal_static_GetEPackInfoResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EdocService.internal_static_GetEPackInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EdocService.GetEPackInfoResponse.class, EdocService.GetEPackInfoResponse.Builder.class);
    }

    public interface EDocGuidInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:GetEPackInfoResponse.EDocGuidInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Guid of the object present inside the edoc/TML file.
       * If no guid is present inside edoc file, this field will be empty.
       * </pre>
       *
       * <code>optional string guid = 1;</code>
       * @return Whether the guid field is set.
       */
      boolean hasGuid();
      /**
       * <pre>
       * Guid of the object present inside the edoc/TML file.
       * If no guid is present inside edoc file, this field will be empty.
       * </pre>
       *
       * <code>optional string guid = 1;</code>
       * @return The guid.
       */
      java.lang.String getGuid();
      /**
       * <pre>
       * Guid of the object present inside the edoc/TML file.
       * If no guid is present inside edoc file, this field will be empty.
       * </pre>
       *
       * <code>optional string guid = 1;</code>
       * @return The bytes for guid.
       */
      com.google.protobuf.ByteString
          getGuidBytes();

      /**
       * <pre>
       * True if an object corresponding to the guid in TML file is found in the
       * system. False otherwise.
       * </pre>
       *
       * <code>optional bool matching_object_found = 2;</code>
       * @return Whether the matchingObjectFound field is set.
       */
      boolean hasMatchingObjectFound();
      /**
       * <pre>
       * True if an object corresponding to the guid in TML file is found in the
       * system. False otherwise.
       * </pre>
       *
       * <code>optional bool matching_object_found = 2;</code>
       * @return The matchingObjectFound.
       */
      boolean getMatchingObjectFound();

      /**
       * <pre>
       * TODO(Sudarshan): We may want to return complete metadata header of the
       * matching object later.
       * Type of object already present in the system corresponding to guid.
       * Note that this may be different from the object type present in the
       * edoc file.
       * </pre>
       *
       * <code>optional string matching_object_type = 3;</code>
       * @return Whether the matchingObjectType field is set.
       */
      boolean hasMatchingObjectType();
      /**
       * <pre>
       * TODO(Sudarshan): We may want to return complete metadata header of the
       * matching object later.
       * Type of object already present in the system corresponding to guid.
       * Note that this may be different from the object type present in the
       * edoc file.
       * </pre>
       *
       * <code>optional string matching_object_type = 3;</code>
       * @return The matchingObjectType.
       */
      java.lang.String getMatchingObjectType();
      /**
       * <pre>
       * TODO(Sudarshan): We may want to return complete metadata header of the
       * matching object later.
       * Type of object already present in the system corresponding to guid.
       * Note that this may be different from the object type present in the
       * edoc file.
       * </pre>
       *
       * <code>optional string matching_object_type = 3;</code>
       * @return The bytes for matchingObjectType.
       */
      com.google.protobuf.ByteString
          getMatchingObjectTypeBytes();

      /**
       * <code>optional .EDocObjectType.E matching_object_type_enum = 4;</code>
       * @return Whether the matchingObjectTypeEnum field is set.
       */
      boolean hasMatchingObjectTypeEnum();
      /**
       * <code>optional .EDocObjectType.E matching_object_type_enum = 4;</code>
       * @return The matchingObjectTypeEnum.
       */
      EdocCommon.EDocObjectType.E getMatchingObjectTypeEnum();
    }
    /**
     * <pre>
     * In case of a user specified guid in TML file, we determine whether that
     * guid exists in our system. If yes, we convey this to the user along with
     * the type of object mapping to that guid in the system.
     * </pre>
     *
     * Protobuf type {@code GetEPackInfoResponse.EDocGuidInfo}
     */
    public static final class EDocGuidInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:GetEPackInfoResponse.EDocGuidInfo)
        EDocGuidInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use EDocGuidInfo.newBuilder() to construct.
      private EDocGuidInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private EDocGuidInfo() {
        guid_ = "";
        matchingObjectType_ = "";
        matchingObjectTypeEnum_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new EDocGuidInfo();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private EDocGuidInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                guid_ = bs;
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                matchingObjectFound_ = input.readBool();
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                matchingObjectType_ = bs;
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                  @SuppressWarnings("deprecation")
                EdocCommon.EDocObjectType.E value = EdocCommon.EDocObjectType.E.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  matchingObjectTypeEnum_ = rawValue;
                }
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_GetEPackInfoResponse_EDocGuidInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_GetEPackInfoResponse_EDocGuidInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.GetEPackInfoResponse.EDocGuidInfo.class, EdocService.GetEPackInfoResponse.EDocGuidInfo.Builder.class);
      }

      private int bitField0_;
      public static final int GUID_FIELD_NUMBER = 1;
      private volatile java.lang.Object guid_;
      /**
       * <pre>
       * Guid of the object present inside the edoc/TML file.
       * If no guid is present inside edoc file, this field will be empty.
       * </pre>
       *
       * <code>optional string guid = 1;</code>
       * @return Whether the guid field is set.
       */
      @java.lang.Override
      public boolean hasGuid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Guid of the object present inside the edoc/TML file.
       * If no guid is present inside edoc file, this field will be empty.
       * </pre>
       *
       * <code>optional string guid = 1;</code>
       * @return The guid.
       */
      @java.lang.Override
      public java.lang.String getGuid() {
        java.lang.Object ref = guid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            guid_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Guid of the object present inside the edoc/TML file.
       * If no guid is present inside edoc file, this field will be empty.
       * </pre>
       *
       * <code>optional string guid = 1;</code>
       * @return The bytes for guid.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getGuidBytes() {
        java.lang.Object ref = guid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          guid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MATCHING_OBJECT_FOUND_FIELD_NUMBER = 2;
      private boolean matchingObjectFound_;
      /**
       * <pre>
       * True if an object corresponding to the guid in TML file is found in the
       * system. False otherwise.
       * </pre>
       *
       * <code>optional bool matching_object_found = 2;</code>
       * @return Whether the matchingObjectFound field is set.
       */
      @java.lang.Override
      public boolean hasMatchingObjectFound() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * True if an object corresponding to the guid in TML file is found in the
       * system. False otherwise.
       * </pre>
       *
       * <code>optional bool matching_object_found = 2;</code>
       * @return The matchingObjectFound.
       */
      @java.lang.Override
      public boolean getMatchingObjectFound() {
        return matchingObjectFound_;
      }

      public static final int MATCHING_OBJECT_TYPE_FIELD_NUMBER = 3;
      private volatile java.lang.Object matchingObjectType_;
      /**
       * <pre>
       * TODO(Sudarshan): We may want to return complete metadata header of the
       * matching object later.
       * Type of object already present in the system corresponding to guid.
       * Note that this may be different from the object type present in the
       * edoc file.
       * </pre>
       *
       * <code>optional string matching_object_type = 3;</code>
       * @return Whether the matchingObjectType field is set.
       */
      @java.lang.Override
      public boolean hasMatchingObjectType() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * TODO(Sudarshan): We may want to return complete metadata header of the
       * matching object later.
       * Type of object already present in the system corresponding to guid.
       * Note that this may be different from the object type present in the
       * edoc file.
       * </pre>
       *
       * <code>optional string matching_object_type = 3;</code>
       * @return The matchingObjectType.
       */
      @java.lang.Override
      public java.lang.String getMatchingObjectType() {
        java.lang.Object ref = matchingObjectType_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            matchingObjectType_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * TODO(Sudarshan): We may want to return complete metadata header of the
       * matching object later.
       * Type of object already present in the system corresponding to guid.
       * Note that this may be different from the object type present in the
       * edoc file.
       * </pre>
       *
       * <code>optional string matching_object_type = 3;</code>
       * @return The bytes for matchingObjectType.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMatchingObjectTypeBytes() {
        java.lang.Object ref = matchingObjectType_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          matchingObjectType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MATCHING_OBJECT_TYPE_ENUM_FIELD_NUMBER = 4;
      private int matchingObjectTypeEnum_;
      /**
       * <code>optional .EDocObjectType.E matching_object_type_enum = 4;</code>
       * @return Whether the matchingObjectTypeEnum field is set.
       */
      @java.lang.Override public boolean hasMatchingObjectTypeEnum() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .EDocObjectType.E matching_object_type_enum = 4;</code>
       * @return The matchingObjectTypeEnum.
       */
      @java.lang.Override public EdocCommon.EDocObjectType.E getMatchingObjectTypeEnum() {
        @SuppressWarnings("deprecation")
        EdocCommon.EDocObjectType.E result = EdocCommon.EDocObjectType.E.valueOf(matchingObjectTypeEnum_);
        return result == null ? EdocCommon.EDocObjectType.E.ANSWER : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, guid_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeBool(2, matchingObjectFound_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, matchingObjectType_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeEnum(4, matchingObjectTypeEnum_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, guid_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, matchingObjectFound_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, matchingObjectType_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, matchingObjectTypeEnum_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EdocService.GetEPackInfoResponse.EDocGuidInfo)) {
          return super.equals(obj);
        }
        EdocService.GetEPackInfoResponse.EDocGuidInfo other = (EdocService.GetEPackInfoResponse.EDocGuidInfo) obj;

        if (hasGuid() != other.hasGuid()) return false;
        if (hasGuid()) {
          if (!getGuid()
              .equals(other.getGuid())) return false;
        }
        if (hasMatchingObjectFound() != other.hasMatchingObjectFound()) return false;
        if (hasMatchingObjectFound()) {
          if (getMatchingObjectFound()
              != other.getMatchingObjectFound()) return false;
        }
        if (hasMatchingObjectType() != other.hasMatchingObjectType()) return false;
        if (hasMatchingObjectType()) {
          if (!getMatchingObjectType()
              .equals(other.getMatchingObjectType())) return false;
        }
        if (hasMatchingObjectTypeEnum() != other.hasMatchingObjectTypeEnum()) return false;
        if (hasMatchingObjectTypeEnum()) {
          if (matchingObjectTypeEnum_ != other.matchingObjectTypeEnum_) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasGuid()) {
          hash = (37 * hash) + GUID_FIELD_NUMBER;
          hash = (53 * hash) + getGuid().hashCode();
        }
        if (hasMatchingObjectFound()) {
          hash = (37 * hash) + MATCHING_OBJECT_FOUND_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getMatchingObjectFound());
        }
        if (hasMatchingObjectType()) {
          hash = (37 * hash) + MATCHING_OBJECT_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getMatchingObjectType().hashCode();
        }
        if (hasMatchingObjectTypeEnum()) {
          hash = (37 * hash) + MATCHING_OBJECT_TYPE_ENUM_FIELD_NUMBER;
          hash = (53 * hash) + matchingObjectTypeEnum_;
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EdocService.GetEPackInfoResponse.EDocGuidInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.GetEPackInfoResponse.EDocGuidInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.GetEPackInfoResponse.EDocGuidInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.GetEPackInfoResponse.EDocGuidInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.GetEPackInfoResponse.EDocGuidInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.GetEPackInfoResponse.EDocGuidInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.GetEPackInfoResponse.EDocGuidInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.GetEPackInfoResponse.EDocGuidInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.GetEPackInfoResponse.EDocGuidInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EdocService.GetEPackInfoResponse.EDocGuidInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.GetEPackInfoResponse.EDocGuidInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.GetEPackInfoResponse.EDocGuidInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EdocService.GetEPackInfoResponse.EDocGuidInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * In case of a user specified guid in TML file, we determine whether that
       * guid exists in our system. If yes, we convey this to the user along with
       * the type of object mapping to that guid in the system.
       * </pre>
       *
       * Protobuf type {@code GetEPackInfoResponse.EDocGuidInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:GetEPackInfoResponse.EDocGuidInfo)
          EdocService.GetEPackInfoResponse.EDocGuidInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EdocService.internal_static_GetEPackInfoResponse_EDocGuidInfo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EdocService.internal_static_GetEPackInfoResponse_EDocGuidInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EdocService.GetEPackInfoResponse.EDocGuidInfo.class, EdocService.GetEPackInfoResponse.EDocGuidInfo.Builder.class);
        }

        // Construct using EdocService.GetEPackInfoResponse.EDocGuidInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          guid_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          matchingObjectFound_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          matchingObjectType_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          matchingObjectTypeEnum_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EdocService.internal_static_GetEPackInfoResponse_EDocGuidInfo_descriptor;
        }

        @java.lang.Override
        public EdocService.GetEPackInfoResponse.EDocGuidInfo getDefaultInstanceForType() {
          return EdocService.GetEPackInfoResponse.EDocGuidInfo.getDefaultInstance();
        }

        @java.lang.Override
        public EdocService.GetEPackInfoResponse.EDocGuidInfo build() {
          EdocService.GetEPackInfoResponse.EDocGuidInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EdocService.GetEPackInfoResponse.EDocGuidInfo buildPartial() {
          EdocService.GetEPackInfoResponse.EDocGuidInfo result = new EdocService.GetEPackInfoResponse.EDocGuidInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.guid_ = guid_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.matchingObjectFound_ = matchingObjectFound_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            to_bitField0_ |= 0x00000004;
          }
          result.matchingObjectType_ = matchingObjectType_;
          if (((from_bitField0_ & 0x00000008) != 0)) {
            to_bitField0_ |= 0x00000008;
          }
          result.matchingObjectTypeEnum_ = matchingObjectTypeEnum_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EdocService.GetEPackInfoResponse.EDocGuidInfo) {
            return mergeFrom((EdocService.GetEPackInfoResponse.EDocGuidInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EdocService.GetEPackInfoResponse.EDocGuidInfo other) {
          if (other == EdocService.GetEPackInfoResponse.EDocGuidInfo.getDefaultInstance()) return this;
          if (other.hasGuid()) {
            bitField0_ |= 0x00000001;
            guid_ = other.guid_;
            onChanged();
          }
          if (other.hasMatchingObjectFound()) {
            setMatchingObjectFound(other.getMatchingObjectFound());
          }
          if (other.hasMatchingObjectType()) {
            bitField0_ |= 0x00000004;
            matchingObjectType_ = other.matchingObjectType_;
            onChanged();
          }
          if (other.hasMatchingObjectTypeEnum()) {
            setMatchingObjectTypeEnum(other.getMatchingObjectTypeEnum());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EdocService.GetEPackInfoResponse.EDocGuidInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EdocService.GetEPackInfoResponse.EDocGuidInfo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object guid_ = "";
        /**
         * <pre>
         * Guid of the object present inside the edoc/TML file.
         * If no guid is present inside edoc file, this field will be empty.
         * </pre>
         *
         * <code>optional string guid = 1;</code>
         * @return Whether the guid field is set.
         */
        public boolean hasGuid() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Guid of the object present inside the edoc/TML file.
         * If no guid is present inside edoc file, this field will be empty.
         * </pre>
         *
         * <code>optional string guid = 1;</code>
         * @return The guid.
         */
        public java.lang.String getGuid() {
          java.lang.Object ref = guid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              guid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Guid of the object present inside the edoc/TML file.
         * If no guid is present inside edoc file, this field will be empty.
         * </pre>
         *
         * <code>optional string guid = 1;</code>
         * @return The bytes for guid.
         */
        public com.google.protobuf.ByteString
            getGuidBytes() {
          java.lang.Object ref = guid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            guid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Guid of the object present inside the edoc/TML file.
         * If no guid is present inside edoc file, this field will be empty.
         * </pre>
         *
         * <code>optional string guid = 1;</code>
         * @param value The guid to set.
         * @return This builder for chaining.
         */
        public Builder setGuid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          guid_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Guid of the object present inside the edoc/TML file.
         * If no guid is present inside edoc file, this field will be empty.
         * </pre>
         *
         * <code>optional string guid = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearGuid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          guid_ = getDefaultInstance().getGuid();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Guid of the object present inside the edoc/TML file.
         * If no guid is present inside edoc file, this field will be empty.
         * </pre>
         *
         * <code>optional string guid = 1;</code>
         * @param value The bytes for guid to set.
         * @return This builder for chaining.
         */
        public Builder setGuidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          guid_ = value;
          onChanged();
          return this;
        }

        private boolean matchingObjectFound_ ;
        /**
         * <pre>
         * True if an object corresponding to the guid in TML file is found in the
         * system. False otherwise.
         * </pre>
         *
         * <code>optional bool matching_object_found = 2;</code>
         * @return Whether the matchingObjectFound field is set.
         */
        @java.lang.Override
        public boolean hasMatchingObjectFound() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * True if an object corresponding to the guid in TML file is found in the
         * system. False otherwise.
         * </pre>
         *
         * <code>optional bool matching_object_found = 2;</code>
         * @return The matchingObjectFound.
         */
        @java.lang.Override
        public boolean getMatchingObjectFound() {
          return matchingObjectFound_;
        }
        /**
         * <pre>
         * True if an object corresponding to the guid in TML file is found in the
         * system. False otherwise.
         * </pre>
         *
         * <code>optional bool matching_object_found = 2;</code>
         * @param value The matchingObjectFound to set.
         * @return This builder for chaining.
         */
        public Builder setMatchingObjectFound(boolean value) {
          bitField0_ |= 0x00000002;
          matchingObjectFound_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * True if an object corresponding to the guid in TML file is found in the
         * system. False otherwise.
         * </pre>
         *
         * <code>optional bool matching_object_found = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearMatchingObjectFound() {
          bitField0_ = (bitField0_ & ~0x00000002);
          matchingObjectFound_ = false;
          onChanged();
          return this;
        }

        private java.lang.Object matchingObjectType_ = "";
        /**
         * <pre>
         * TODO(Sudarshan): We may want to return complete metadata header of the
         * matching object later.
         * Type of object already present in the system corresponding to guid.
         * Note that this may be different from the object type present in the
         * edoc file.
         * </pre>
         *
         * <code>optional string matching_object_type = 3;</code>
         * @return Whether the matchingObjectType field is set.
         */
        public boolean hasMatchingObjectType() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * TODO(Sudarshan): We may want to return complete metadata header of the
         * matching object later.
         * Type of object already present in the system corresponding to guid.
         * Note that this may be different from the object type present in the
         * edoc file.
         * </pre>
         *
         * <code>optional string matching_object_type = 3;</code>
         * @return The matchingObjectType.
         */
        public java.lang.String getMatchingObjectType() {
          java.lang.Object ref = matchingObjectType_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              matchingObjectType_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * TODO(Sudarshan): We may want to return complete metadata header of the
         * matching object later.
         * Type of object already present in the system corresponding to guid.
         * Note that this may be different from the object type present in the
         * edoc file.
         * </pre>
         *
         * <code>optional string matching_object_type = 3;</code>
         * @return The bytes for matchingObjectType.
         */
        public com.google.protobuf.ByteString
            getMatchingObjectTypeBytes() {
          java.lang.Object ref = matchingObjectType_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            matchingObjectType_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * TODO(Sudarshan): We may want to return complete metadata header of the
         * matching object later.
         * Type of object already present in the system corresponding to guid.
         * Note that this may be different from the object type present in the
         * edoc file.
         * </pre>
         *
         * <code>optional string matching_object_type = 3;</code>
         * @param value The matchingObjectType to set.
         * @return This builder for chaining.
         */
        public Builder setMatchingObjectType(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          matchingObjectType_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TODO(Sudarshan): We may want to return complete metadata header of the
         * matching object later.
         * Type of object already present in the system corresponding to guid.
         * Note that this may be different from the object type present in the
         * edoc file.
         * </pre>
         *
         * <code>optional string matching_object_type = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearMatchingObjectType() {
          bitField0_ = (bitField0_ & ~0x00000004);
          matchingObjectType_ = getDefaultInstance().getMatchingObjectType();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TODO(Sudarshan): We may want to return complete metadata header of the
         * matching object later.
         * Type of object already present in the system corresponding to guid.
         * Note that this may be different from the object type present in the
         * edoc file.
         * </pre>
         *
         * <code>optional string matching_object_type = 3;</code>
         * @param value The bytes for matchingObjectType to set.
         * @return This builder for chaining.
         */
        public Builder setMatchingObjectTypeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          matchingObjectType_ = value;
          onChanged();
          return this;
        }

        private int matchingObjectTypeEnum_ = 0;
        /**
         * <code>optional .EDocObjectType.E matching_object_type_enum = 4;</code>
         * @return Whether the matchingObjectTypeEnum field is set.
         */
        @java.lang.Override public boolean hasMatchingObjectTypeEnum() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional .EDocObjectType.E matching_object_type_enum = 4;</code>
         * @return The matchingObjectTypeEnum.
         */
        @java.lang.Override
        public EdocCommon.EDocObjectType.E getMatchingObjectTypeEnum() {
          @SuppressWarnings("deprecation")
          EdocCommon.EDocObjectType.E result = EdocCommon.EDocObjectType.E.valueOf(matchingObjectTypeEnum_);
          return result == null ? EdocCommon.EDocObjectType.E.ANSWER : result;
        }
        /**
         * <code>optional .EDocObjectType.E matching_object_type_enum = 4;</code>
         * @param value The matchingObjectTypeEnum to set.
         * @return This builder for chaining.
         */
        public Builder setMatchingObjectTypeEnum(EdocCommon.EDocObjectType.E value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          matchingObjectTypeEnum_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .EDocObjectType.E matching_object_type_enum = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearMatchingObjectTypeEnum() {
          bitField0_ = (bitField0_ & ~0x00000008);
          matchingObjectTypeEnum_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:GetEPackInfoResponse.EDocGuidInfo)
      }

      // @@protoc_insertion_point(class_scope:GetEPackInfoResponse.EDocGuidInfo)
      private static final EdocService.GetEPackInfoResponse.EDocGuidInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EdocService.GetEPackInfoResponse.EDocGuidInfo();
      }

      public static EdocService.GetEPackInfoResponse.EDocGuidInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<EDocGuidInfo>
          PARSER = new com.google.protobuf.AbstractParser<EDocGuidInfo>() {
        @java.lang.Override
        public EDocGuidInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new EDocGuidInfo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<EDocGuidInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<EDocGuidInfo> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EdocService.GetEPackInfoResponse.EDocGuidInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ObjectOrBuilder extends
        // @@protoc_insertion_point(interface_extends:GetEPackInfoResponse.Object)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * [Deprecated] Type of the edoc. It will be one of the following values:
       * * LOGICAL_TABLE - for worksheet/view/table.
       * * PINBOARD_ANSWER_BOOK - for pinboard.
       * * QUESTION_ANSWER_BOOK - for answer.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       * @return Whether the type field is set.
       */
      boolean hasType();
      /**
       * <pre>
       * [Deprecated] Type of the edoc. It will be one of the following values:
       * * LOGICAL_TABLE - for worksheet/view/table.
       * * PINBOARD_ANSWER_BOOK - for pinboard.
       * * QUESTION_ANSWER_BOOK - for answer.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       * @return The type.
       */
      java.lang.String getType();
      /**
       * <pre>
       * [Deprecated] Type of the edoc. It will be one of the following values:
       * * LOGICAL_TABLE - for worksheet/view/table.
       * * PINBOARD_ANSWER_BOOK - for pinboard.
       * * QUESTION_ANSWER_BOOK - for answer.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       * @return The bytes for type.
       */
      com.google.protobuf.ByteString
          getTypeBytes();

      /**
       * <pre>
       * Entity doc representation of metadata object. i.e. Content of TML file.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return Whether the edoc field is set.
       */
      boolean hasEdoc();
      /**
       * <pre>
       * Entity doc representation of metadata object. i.e. Content of TML file.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return The edoc.
       */
      java.lang.String getEdoc();
      /**
       * <pre>
       * Entity doc representation of metadata object. i.e. Content of TML file.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return The bytes for edoc.
       */
      com.google.protobuf.ByteString
          getEdocBytes();

      /**
       * <pre>
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 3;</code>
       * @return Whether the filename field is set.
       */
      boolean hasFilename();
      /**
       * <pre>
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 3;</code>
       * @return The filename.
       */
      java.lang.String getFilename();
      /**
       * <pre>
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 3;</code>
       * @return The bytes for filename.
       */
      com.google.protobuf.ByteString
          getFilenameBytes();

      /**
       * <pre>
       * Filename of the containing zip file.
       * </pre>
       *
       * <code>optional string zip_filename = 4;</code>
       * @return Whether the zipFilename field is set.
       */
      boolean hasZipFilename();
      /**
       * <pre>
       * Filename of the containing zip file.
       * </pre>
       *
       * <code>optional string zip_filename = 4;</code>
       * @return The zipFilename.
       */
      java.lang.String getZipFilename();
      /**
       * <pre>
       * Filename of the containing zip file.
       * </pre>
       *
       * <code>optional string zip_filename = 4;</code>
       * @return The bytes for zipFilename.
       */
      com.google.protobuf.ByteString
          getZipFilenameBytes();

      /**
       * <pre>
       * Guid info of the edoc.
       * </pre>
       *
       * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
       * @return Whether the guidInfo field is set.
       */
      boolean hasGuidInfo();
      /**
       * <pre>
       * Guid info of the edoc.
       * </pre>
       *
       * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
       * @return The guidInfo.
       */
      EdocService.GetEPackInfoResponse.EDocGuidInfo getGuidInfo();
      /**
       * <pre>
       * Guid info of the edoc.
       * </pre>
       *
       * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
       */
      EdocService.GetEPackInfoResponse.EDocGuidInfoOrBuilder getGuidInfoOrBuilder();

      /**
       * <code>optional .StatusProto status = 6;</code>
       * @return Whether the status field is set.
       */
      boolean hasStatus();
      /**
       * <code>optional .StatusProto status = 6;</code>
       * @return The status.
       */
      Status.StatusProto getStatus();
      /**
       * <code>optional .StatusProto status = 6;</code>
       */
      Status.StatusProtoOrBuilder getStatusOrBuilder();

      /**
       * <pre>
       * Type enum of the edoc. It will be one of the following values:
       * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}
       * </pre>
       *
       * <code>optional .EDocObjectType.E type_enum = 7;</code>
       * @return Whether the typeEnum field is set.
       */
      boolean hasTypeEnum();
      /**
       * <pre>
       * Type enum of the edoc. It will be one of the following values:
       * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}
       * </pre>
       *
       * <code>optional .EDocObjectType.E type_enum = 7;</code>
       * @return The typeEnum.
       */
      EdocCommon.EDocObjectType.E getTypeEnum();

      /**
       * <pre>
       * Name of the object
       * </pre>
       *
       * <code>optional string name = 8;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       * Name of the object
       * </pre>
       *
       * <code>optional string name = 8;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * Name of the object
       * </pre>
       *
       * <code>optional string name = 8;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();
    }
    /**
     * Protobuf type {@code GetEPackInfoResponse.Object}
     */
    public static final class Object extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:GetEPackInfoResponse.Object)
        ObjectOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Object.newBuilder() to construct.
      private Object(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Object() {
        type_ = "";
        edoc_ = "";
        filename_ = "";
        zipFilename_ = "";
        typeEnum_ = 0;
        name_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Object();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Object(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                type_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                edoc_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                filename_ = bs;
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                zipFilename_ = bs;
                break;
              }
              case 42: {
                EdocService.GetEPackInfoResponse.EDocGuidInfo.Builder subBuilder = null;
                if (((bitField0_ & 0x00000010) != 0)) {
                  subBuilder = guidInfo_.toBuilder();
                }
                guidInfo_ = input.readMessage(EdocService.GetEPackInfoResponse.EDocGuidInfo.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(guidInfo_);
                  guidInfo_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000010;
                break;
              }
              case 50: {
                Status.StatusProto.Builder subBuilder = null;
                if (((bitField0_ & 0x00000020) != 0)) {
                  subBuilder = status_.toBuilder();
                }
                status_ = input.readMessage(Status.StatusProto.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(status_);
                  status_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000020;
                break;
              }
              case 56: {
                int rawValue = input.readEnum();
                  @SuppressWarnings("deprecation")
                EdocCommon.EDocObjectType.E value = EdocCommon.EDocObjectType.E.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(7, rawValue);
                } else {
                  bitField0_ |= 0x00000040;
                  typeEnum_ = rawValue;
                }
                break;
              }
              case 66: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000080;
                name_ = bs;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_GetEPackInfoResponse_Object_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_GetEPackInfoResponse_Object_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.GetEPackInfoResponse.Object.class, EdocService.GetEPackInfoResponse.Object.Builder.class);
      }

      private int bitField0_;
      public static final int TYPE_FIELD_NUMBER = 1;
      private volatile java.lang.Object type_;
      /**
       * <pre>
       * [Deprecated] Type of the edoc. It will be one of the following values:
       * * LOGICAL_TABLE - for worksheet/view/table.
       * * PINBOARD_ANSWER_BOOK - for pinboard.
       * * QUESTION_ANSWER_BOOK - for answer.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * [Deprecated] Type of the edoc. It will be one of the following values:
       * * LOGICAL_TABLE - for worksheet/view/table.
       * * PINBOARD_ANSWER_BOOK - for pinboard.
       * * QUESTION_ANSWER_BOOK - for answer.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            type_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * [Deprecated] Type of the edoc. It will be one of the following values:
       * * LOGICAL_TABLE - for worksheet/view/table.
       * * PINBOARD_ANSWER_BOOK - for pinboard.
       * * QUESTION_ANSWER_BOOK - for answer.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       * @return The bytes for type.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int EDOC_FIELD_NUMBER = 2;
      private volatile java.lang.Object edoc_;
      /**
       * <pre>
       * Entity doc representation of metadata object. i.e. Content of TML file.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return Whether the edoc field is set.
       */
      @java.lang.Override
      public boolean hasEdoc() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Entity doc representation of metadata object. i.e. Content of TML file.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return The edoc.
       */
      @java.lang.Override
      public java.lang.String getEdoc() {
        java.lang.Object ref = edoc_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            edoc_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Entity doc representation of metadata object. i.e. Content of TML file.
       * </pre>
       *
       * <code>optional string edoc = 2;</code>
       * @return The bytes for edoc.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getEdocBytes() {
        java.lang.Object ref = edoc_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          edoc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FILENAME_FIELD_NUMBER = 3;
      private volatile java.lang.Object filename_;
      /**
       * <pre>
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 3;</code>
       * @return Whether the filename field is set.
       */
      @java.lang.Override
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 3;</code>
       * @return The filename.
       */
      @java.lang.Override
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            filename_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Filename of the TML file.
       * </pre>
       *
       * <code>optional string filename = 3;</code>
       * @return The bytes for filename.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ZIP_FILENAME_FIELD_NUMBER = 4;
      private volatile java.lang.Object zipFilename_;
      /**
       * <pre>
       * Filename of the containing zip file.
       * </pre>
       *
       * <code>optional string zip_filename = 4;</code>
       * @return Whether the zipFilename field is set.
       */
      @java.lang.Override
      public boolean hasZipFilename() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Filename of the containing zip file.
       * </pre>
       *
       * <code>optional string zip_filename = 4;</code>
       * @return The zipFilename.
       */
      @java.lang.Override
      public java.lang.String getZipFilename() {
        java.lang.Object ref = zipFilename_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            zipFilename_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Filename of the containing zip file.
       * </pre>
       *
       * <code>optional string zip_filename = 4;</code>
       * @return The bytes for zipFilename.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getZipFilenameBytes() {
        java.lang.Object ref = zipFilename_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          zipFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int GUID_INFO_FIELD_NUMBER = 5;
      private EdocService.GetEPackInfoResponse.EDocGuidInfo guidInfo_;
      /**
       * <pre>
       * Guid info of the edoc.
       * </pre>
       *
       * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
       * @return Whether the guidInfo field is set.
       */
      @java.lang.Override
      public boolean hasGuidInfo() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Guid info of the edoc.
       * </pre>
       *
       * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
       * @return The guidInfo.
       */
      @java.lang.Override
      public EdocService.GetEPackInfoResponse.EDocGuidInfo getGuidInfo() {
        return guidInfo_ == null ? EdocService.GetEPackInfoResponse.EDocGuidInfo.getDefaultInstance() : guidInfo_;
      }
      /**
       * <pre>
       * Guid info of the edoc.
       * </pre>
       *
       * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
       */
      @java.lang.Override
      public EdocService.GetEPackInfoResponse.EDocGuidInfoOrBuilder getGuidInfoOrBuilder() {
        return guidInfo_ == null ? EdocService.GetEPackInfoResponse.EDocGuidInfo.getDefaultInstance() : guidInfo_;
      }

      public static final int STATUS_FIELD_NUMBER = 6;
      private Status.StatusProto status_;
      /**
       * <code>optional .StatusProto status = 6;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .StatusProto status = 6;</code>
       * @return The status.
       */
      @java.lang.Override
      public Status.StatusProto getStatus() {
        return status_ == null ? Status.StatusProto.getDefaultInstance() : status_;
      }
      /**
       * <code>optional .StatusProto status = 6;</code>
       */
      @java.lang.Override
      public Status.StatusProtoOrBuilder getStatusOrBuilder() {
        return status_ == null ? Status.StatusProto.getDefaultInstance() : status_;
      }

      public static final int TYPE_ENUM_FIELD_NUMBER = 7;
      private int typeEnum_;
      /**
       * <pre>
       * Type enum of the edoc. It will be one of the following values:
       * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}
       * </pre>
       *
       * <code>optional .EDocObjectType.E type_enum = 7;</code>
       * @return Whether the typeEnum field is set.
       */
      @java.lang.Override public boolean hasTypeEnum() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Type enum of the edoc. It will be one of the following values:
       * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}
       * </pre>
       *
       * <code>optional .EDocObjectType.E type_enum = 7;</code>
       * @return The typeEnum.
       */
      @java.lang.Override public EdocCommon.EDocObjectType.E getTypeEnum() {
        @SuppressWarnings("deprecation")
        EdocCommon.EDocObjectType.E result = EdocCommon.EDocObjectType.E.valueOf(typeEnum_);
        return result == null ? EdocCommon.EDocObjectType.E.ANSWER : result;
      }

      public static final int NAME_FIELD_NUMBER = 8;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * Name of the object
       * </pre>
       *
       * <code>optional string name = 8;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Name of the object
       * </pre>
       *
       * <code>optional string name = 8;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Name of the object
       * </pre>
       *
       * <code>optional string name = 8;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, edoc_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, filename_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, zipFilename_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeMessage(5, getGuidInfo());
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeMessage(6, getStatus());
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeEnum(7, typeEnum_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 8, name_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, edoc_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, filename_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, zipFilename_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getGuidInfo());
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, getStatus());
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(7, typeEnum_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, name_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EdocService.GetEPackInfoResponse.Object)) {
          return super.equals(obj);
        }
        EdocService.GetEPackInfoResponse.Object other = (EdocService.GetEPackInfoResponse.Object) obj;

        if (hasType() != other.hasType()) return false;
        if (hasType()) {
          if (!getType()
              .equals(other.getType())) return false;
        }
        if (hasEdoc() != other.hasEdoc()) return false;
        if (hasEdoc()) {
          if (!getEdoc()
              .equals(other.getEdoc())) return false;
        }
        if (hasFilename() != other.hasFilename()) return false;
        if (hasFilename()) {
          if (!getFilename()
              .equals(other.getFilename())) return false;
        }
        if (hasZipFilename() != other.hasZipFilename()) return false;
        if (hasZipFilename()) {
          if (!getZipFilename()
              .equals(other.getZipFilename())) return false;
        }
        if (hasGuidInfo() != other.hasGuidInfo()) return false;
        if (hasGuidInfo()) {
          if (!getGuidInfo()
              .equals(other.getGuidInfo())) return false;
        }
        if (hasStatus() != other.hasStatus()) return false;
        if (hasStatus()) {
          if (!getStatus()
              .equals(other.getStatus())) return false;
        }
        if (hasTypeEnum() != other.hasTypeEnum()) return false;
        if (hasTypeEnum()) {
          if (typeEnum_ != other.typeEnum_) return false;
        }
        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasType()) {
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getType().hashCode();
        }
        if (hasEdoc()) {
          hash = (37 * hash) + EDOC_FIELD_NUMBER;
          hash = (53 * hash) + getEdoc().hashCode();
        }
        if (hasFilename()) {
          hash = (37 * hash) + FILENAME_FIELD_NUMBER;
          hash = (53 * hash) + getFilename().hashCode();
        }
        if (hasZipFilename()) {
          hash = (37 * hash) + ZIP_FILENAME_FIELD_NUMBER;
          hash = (53 * hash) + getZipFilename().hashCode();
        }
        if (hasGuidInfo()) {
          hash = (37 * hash) + GUID_INFO_FIELD_NUMBER;
          hash = (53 * hash) + getGuidInfo().hashCode();
        }
        if (hasStatus()) {
          hash = (37 * hash) + STATUS_FIELD_NUMBER;
          hash = (53 * hash) + getStatus().hashCode();
        }
        if (hasTypeEnum()) {
          hash = (37 * hash) + TYPE_ENUM_FIELD_NUMBER;
          hash = (53 * hash) + typeEnum_;
        }
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EdocService.GetEPackInfoResponse.Object parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.GetEPackInfoResponse.Object parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.GetEPackInfoResponse.Object parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.GetEPackInfoResponse.Object parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.GetEPackInfoResponse.Object parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EdocService.GetEPackInfoResponse.Object parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EdocService.GetEPackInfoResponse.Object parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.GetEPackInfoResponse.Object parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.GetEPackInfoResponse.Object parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EdocService.GetEPackInfoResponse.Object parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EdocService.GetEPackInfoResponse.Object parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EdocService.GetEPackInfoResponse.Object parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EdocService.GetEPackInfoResponse.Object prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code GetEPackInfoResponse.Object}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:GetEPackInfoResponse.Object)
          EdocService.GetEPackInfoResponse.ObjectOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EdocService.internal_static_GetEPackInfoResponse_Object_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EdocService.internal_static_GetEPackInfoResponse_Object_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EdocService.GetEPackInfoResponse.Object.class, EdocService.GetEPackInfoResponse.Object.Builder.class);
        }

        // Construct using EdocService.GetEPackInfoResponse.Object.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getGuidInfoFieldBuilder();
            getStatusFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          type_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          edoc_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          filename_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          zipFilename_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          if (guidInfoBuilder_ == null) {
            guidInfo_ = null;
          } else {
            guidInfoBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          if (statusBuilder_ == null) {
            status_ = null;
          } else {
            statusBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          typeEnum_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000080);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EdocService.internal_static_GetEPackInfoResponse_Object_descriptor;
        }

        @java.lang.Override
        public EdocService.GetEPackInfoResponse.Object getDefaultInstanceForType() {
          return EdocService.GetEPackInfoResponse.Object.getDefaultInstance();
        }

        @java.lang.Override
        public EdocService.GetEPackInfoResponse.Object build() {
          EdocService.GetEPackInfoResponse.Object result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EdocService.GetEPackInfoResponse.Object buildPartial() {
          EdocService.GetEPackInfoResponse.Object result = new EdocService.GetEPackInfoResponse.Object(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.type_ = type_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.edoc_ = edoc_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            to_bitField0_ |= 0x00000004;
          }
          result.filename_ = filename_;
          if (((from_bitField0_ & 0x00000008) != 0)) {
            to_bitField0_ |= 0x00000008;
          }
          result.zipFilename_ = zipFilename_;
          if (((from_bitField0_ & 0x00000010) != 0)) {
            if (guidInfoBuilder_ == null) {
              result.guidInfo_ = guidInfo_;
            } else {
              result.guidInfo_ = guidInfoBuilder_.build();
            }
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            if (statusBuilder_ == null) {
              result.status_ = status_;
            } else {
              result.status_ = statusBuilder_.build();
            }
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            to_bitField0_ |= 0x00000040;
          }
          result.typeEnum_ = typeEnum_;
          if (((from_bitField0_ & 0x00000080) != 0)) {
            to_bitField0_ |= 0x00000080;
          }
          result.name_ = name_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EdocService.GetEPackInfoResponse.Object) {
            return mergeFrom((EdocService.GetEPackInfoResponse.Object)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EdocService.GetEPackInfoResponse.Object other) {
          if (other == EdocService.GetEPackInfoResponse.Object.getDefaultInstance()) return this;
          if (other.hasType()) {
            bitField0_ |= 0x00000001;
            type_ = other.type_;
            onChanged();
          }
          if (other.hasEdoc()) {
            bitField0_ |= 0x00000002;
            edoc_ = other.edoc_;
            onChanged();
          }
          if (other.hasFilename()) {
            bitField0_ |= 0x00000004;
            filename_ = other.filename_;
            onChanged();
          }
          if (other.hasZipFilename()) {
            bitField0_ |= 0x00000008;
            zipFilename_ = other.zipFilename_;
            onChanged();
          }
          if (other.hasGuidInfo()) {
            mergeGuidInfo(other.getGuidInfo());
          }
          if (other.hasStatus()) {
            mergeStatus(other.getStatus());
          }
          if (other.hasTypeEnum()) {
            setTypeEnum(other.getTypeEnum());
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000080;
            name_ = other.name_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EdocService.GetEPackInfoResponse.Object parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EdocService.GetEPackInfoResponse.Object) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object type_ = "";
        /**
         * <pre>
         * [Deprecated] Type of the edoc. It will be one of the following values:
         * * LOGICAL_TABLE - for worksheet/view/table.
         * * PINBOARD_ANSWER_BOOK - for pinboard.
         * * QUESTION_ANSWER_BOOK - for answer.
         * </pre>
         *
         * <code>optional string type = 1;</code>
         * @return Whether the type field is set.
         */
        public boolean hasType() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * [Deprecated] Type of the edoc. It will be one of the following values:
         * * LOGICAL_TABLE - for worksheet/view/table.
         * * PINBOARD_ANSWER_BOOK - for pinboard.
         * * QUESTION_ANSWER_BOOK - for answer.
         * </pre>
         *
         * <code>optional string type = 1;</code>
         * @return The type.
         */
        public java.lang.String getType() {
          java.lang.Object ref = type_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              type_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * [Deprecated] Type of the edoc. It will be one of the following values:
         * * LOGICAL_TABLE - for worksheet/view/table.
         * * PINBOARD_ANSWER_BOOK - for pinboard.
         * * QUESTION_ANSWER_BOOK - for answer.
         * </pre>
         *
         * <code>optional string type = 1;</code>
         * @return The bytes for type.
         */
        public com.google.protobuf.ByteString
            getTypeBytes() {
          java.lang.Object ref = type_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            type_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * [Deprecated] Type of the edoc. It will be one of the following values:
         * * LOGICAL_TABLE - for worksheet/view/table.
         * * PINBOARD_ANSWER_BOOK - for pinboard.
         * * QUESTION_ANSWER_BOOK - for answer.
         * </pre>
         *
         * <code>optional string type = 1;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [Deprecated] Type of the edoc. It will be one of the following values:
         * * LOGICAL_TABLE - for worksheet/view/table.
         * * PINBOARD_ANSWER_BOOK - for pinboard.
         * * QUESTION_ANSWER_BOOK - for answer.
         * </pre>
         *
         * <code>optional string type = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = getDefaultInstance().getType();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [Deprecated] Type of the edoc. It will be one of the following values:
         * * LOGICAL_TABLE - for worksheet/view/table.
         * * PINBOARD_ANSWER_BOOK - for pinboard.
         * * QUESTION_ANSWER_BOOK - for answer.
         * </pre>
         *
         * <code>optional string type = 1;</code>
         * @param value The bytes for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          type_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object edoc_ = "";
        /**
         * <pre>
         * Entity doc representation of metadata object. i.e. Content of TML file.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @return Whether the edoc field is set.
         */
        public boolean hasEdoc() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Entity doc representation of metadata object. i.e. Content of TML file.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @return The edoc.
         */
        public java.lang.String getEdoc() {
          java.lang.Object ref = edoc_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              edoc_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Entity doc representation of metadata object. i.e. Content of TML file.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @return The bytes for edoc.
         */
        public com.google.protobuf.ByteString
            getEdocBytes() {
          java.lang.Object ref = edoc_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            edoc_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Entity doc representation of metadata object. i.e. Content of TML file.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @param value The edoc to set.
         * @return This builder for chaining.
         */
        public Builder setEdoc(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          edoc_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Entity doc representation of metadata object. i.e. Content of TML file.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearEdoc() {
          bitField0_ = (bitField0_ & ~0x00000002);
          edoc_ = getDefaultInstance().getEdoc();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Entity doc representation of metadata object. i.e. Content of TML file.
         * </pre>
         *
         * <code>optional string edoc = 2;</code>
         * @param value The bytes for edoc to set.
         * @return This builder for chaining.
         */
        public Builder setEdocBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          edoc_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object filename_ = "";
        /**
         * <pre>
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 3;</code>
         * @return Whether the filename field is set.
         */
        public boolean hasFilename() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 3;</code>
         * @return The filename.
         */
        public java.lang.String getFilename() {
          java.lang.Object ref = filename_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              filename_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 3;</code>
         * @return The bytes for filename.
         */
        public com.google.protobuf.ByteString
            getFilenameBytes() {
          java.lang.Object ref = filename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            filename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 3;</code>
         * @param value The filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilename(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          filename_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearFilename() {
          bitField0_ = (bitField0_ & ~0x00000004);
          filename_ = getDefaultInstance().getFilename();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Filename of the TML file.
         * </pre>
         *
         * <code>optional string filename = 3;</code>
         * @param value The bytes for filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          filename_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object zipFilename_ = "";
        /**
         * <pre>
         * Filename of the containing zip file.
         * </pre>
         *
         * <code>optional string zip_filename = 4;</code>
         * @return Whether the zipFilename field is set.
         */
        public boolean hasZipFilename() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Filename of the containing zip file.
         * </pre>
         *
         * <code>optional string zip_filename = 4;</code>
         * @return The zipFilename.
         */
        public java.lang.String getZipFilename() {
          java.lang.Object ref = zipFilename_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              zipFilename_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Filename of the containing zip file.
         * </pre>
         *
         * <code>optional string zip_filename = 4;</code>
         * @return The bytes for zipFilename.
         */
        public com.google.protobuf.ByteString
            getZipFilenameBytes() {
          java.lang.Object ref = zipFilename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            zipFilename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Filename of the containing zip file.
         * </pre>
         *
         * <code>optional string zip_filename = 4;</code>
         * @param value The zipFilename to set.
         * @return This builder for chaining.
         */
        public Builder setZipFilename(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          zipFilename_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Filename of the containing zip file.
         * </pre>
         *
         * <code>optional string zip_filename = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearZipFilename() {
          bitField0_ = (bitField0_ & ~0x00000008);
          zipFilename_ = getDefaultInstance().getZipFilename();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Filename of the containing zip file.
         * </pre>
         *
         * <code>optional string zip_filename = 4;</code>
         * @param value The bytes for zipFilename to set.
         * @return This builder for chaining.
         */
        public Builder setZipFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          zipFilename_ = value;
          onChanged();
          return this;
        }

        private EdocService.GetEPackInfoResponse.EDocGuidInfo guidInfo_;
        private com.google.protobuf.SingleFieldBuilderV3<
            EdocService.GetEPackInfoResponse.EDocGuidInfo, EdocService.GetEPackInfoResponse.EDocGuidInfo.Builder, EdocService.GetEPackInfoResponse.EDocGuidInfoOrBuilder> guidInfoBuilder_;
        /**
         * <pre>
         * Guid info of the edoc.
         * </pre>
         *
         * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
         * @return Whether the guidInfo field is set.
         */
        public boolean hasGuidInfo() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Guid info of the edoc.
         * </pre>
         *
         * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
         * @return The guidInfo.
         */
        public EdocService.GetEPackInfoResponse.EDocGuidInfo getGuidInfo() {
          if (guidInfoBuilder_ == null) {
            return guidInfo_ == null ? EdocService.GetEPackInfoResponse.EDocGuidInfo.getDefaultInstance() : guidInfo_;
          } else {
            return guidInfoBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Guid info of the edoc.
         * </pre>
         *
         * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
         */
        public Builder setGuidInfo(EdocService.GetEPackInfoResponse.EDocGuidInfo value) {
          if (guidInfoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            guidInfo_ = value;
            onChanged();
          } else {
            guidInfoBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <pre>
         * Guid info of the edoc.
         * </pre>
         *
         * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
         */
        public Builder setGuidInfo(
            EdocService.GetEPackInfoResponse.EDocGuidInfo.Builder builderForValue) {
          if (guidInfoBuilder_ == null) {
            guidInfo_ = builderForValue.build();
            onChanged();
          } else {
            guidInfoBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <pre>
         * Guid info of the edoc.
         * </pre>
         *
         * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
         */
        public Builder mergeGuidInfo(EdocService.GetEPackInfoResponse.EDocGuidInfo value) {
          if (guidInfoBuilder_ == null) {
            if (((bitField0_ & 0x00000010) != 0) &&
                guidInfo_ != null &&
                guidInfo_ != EdocService.GetEPackInfoResponse.EDocGuidInfo.getDefaultInstance()) {
              guidInfo_ =
                EdocService.GetEPackInfoResponse.EDocGuidInfo.newBuilder(guidInfo_).mergeFrom(value).buildPartial();
            } else {
              guidInfo_ = value;
            }
            onChanged();
          } else {
            guidInfoBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <pre>
         * Guid info of the edoc.
         * </pre>
         *
         * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
         */
        public Builder clearGuidInfo() {
          if (guidInfoBuilder_ == null) {
            guidInfo_ = null;
            onChanged();
          } else {
            guidInfoBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        /**
         * <pre>
         * Guid info of the edoc.
         * </pre>
         *
         * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
         */
        public EdocService.GetEPackInfoResponse.EDocGuidInfo.Builder getGuidInfoBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getGuidInfoFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Guid info of the edoc.
         * </pre>
         *
         * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
         */
        public EdocService.GetEPackInfoResponse.EDocGuidInfoOrBuilder getGuidInfoOrBuilder() {
          if (guidInfoBuilder_ != null) {
            return guidInfoBuilder_.getMessageOrBuilder();
          } else {
            return guidInfo_ == null ?
                EdocService.GetEPackInfoResponse.EDocGuidInfo.getDefaultInstance() : guidInfo_;
          }
        }
        /**
         * <pre>
         * Guid info of the edoc.
         * </pre>
         *
         * <code>optional .GetEPackInfoResponse.EDocGuidInfo guid_info = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            EdocService.GetEPackInfoResponse.EDocGuidInfo, EdocService.GetEPackInfoResponse.EDocGuidInfo.Builder, EdocService.GetEPackInfoResponse.EDocGuidInfoOrBuilder> 
            getGuidInfoFieldBuilder() {
          if (guidInfoBuilder_ == null) {
            guidInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                EdocService.GetEPackInfoResponse.EDocGuidInfo, EdocService.GetEPackInfoResponse.EDocGuidInfo.Builder, EdocService.GetEPackInfoResponse.EDocGuidInfoOrBuilder>(
                    getGuidInfo(),
                    getParentForChildren(),
                    isClean());
            guidInfo_ = null;
          }
          return guidInfoBuilder_;
        }

        private Status.StatusProto status_;
        private com.google.protobuf.SingleFieldBuilderV3<
            Status.StatusProto, Status.StatusProto.Builder, Status.StatusProtoOrBuilder> statusBuilder_;
        /**
         * <code>optional .StatusProto status = 6;</code>
         * @return Whether the status field is set.
         */
        public boolean hasStatus() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional .StatusProto status = 6;</code>
         * @return The status.
         */
        public Status.StatusProto getStatus() {
          if (statusBuilder_ == null) {
            return status_ == null ? Status.StatusProto.getDefaultInstance() : status_;
          } else {
            return statusBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .StatusProto status = 6;</code>
         */
        public Builder setStatus(Status.StatusProto value) {
          if (statusBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            status_ = value;
            onChanged();
          } else {
            statusBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .StatusProto status = 6;</code>
         */
        public Builder setStatus(
            Status.StatusProto.Builder builderForValue) {
          if (statusBuilder_ == null) {
            status_ = builderForValue.build();
            onChanged();
          } else {
            statusBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .StatusProto status = 6;</code>
         */
        public Builder mergeStatus(Status.StatusProto value) {
          if (statusBuilder_ == null) {
            if (((bitField0_ & 0x00000020) != 0) &&
                status_ != null &&
                status_ != Status.StatusProto.getDefaultInstance()) {
              status_ =
                Status.StatusProto.newBuilder(status_).mergeFrom(value).buildPartial();
            } else {
              status_ = value;
            }
            onChanged();
          } else {
            statusBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .StatusProto status = 6;</code>
         */
        public Builder clearStatus() {
          if (statusBuilder_ == null) {
            status_ = null;
            onChanged();
          } else {
            statusBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }
        /**
         * <code>optional .StatusProto status = 6;</code>
         */
        public Status.StatusProto.Builder getStatusBuilder() {
          bitField0_ |= 0x00000020;
          onChanged();
          return getStatusFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .StatusProto status = 6;</code>
         */
        public Status.StatusProtoOrBuilder getStatusOrBuilder() {
          if (statusBuilder_ != null) {
            return statusBuilder_.getMessageOrBuilder();
          } else {
            return status_ == null ?
                Status.StatusProto.getDefaultInstance() : status_;
          }
        }
        /**
         * <code>optional .StatusProto status = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            Status.StatusProto, Status.StatusProto.Builder, Status.StatusProtoOrBuilder> 
            getStatusFieldBuilder() {
          if (statusBuilder_ == null) {
            statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                Status.StatusProto, Status.StatusProto.Builder, Status.StatusProtoOrBuilder>(
                    getStatus(),
                    getParentForChildren(),
                    isClean());
            status_ = null;
          }
          return statusBuilder_;
        }

        private int typeEnum_ = 0;
        /**
         * <pre>
         * Type enum of the edoc. It will be one of the following values:
         * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}
         * </pre>
         *
         * <code>optional .EDocObjectType.E type_enum = 7;</code>
         * @return Whether the typeEnum field is set.
         */
        @java.lang.Override public boolean hasTypeEnum() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * Type enum of the edoc. It will be one of the following values:
         * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}
         * </pre>
         *
         * <code>optional .EDocObjectType.E type_enum = 7;</code>
         * @return The typeEnum.
         */
        @java.lang.Override
        public EdocCommon.EDocObjectType.E getTypeEnum() {
          @SuppressWarnings("deprecation")
          EdocCommon.EDocObjectType.E result = EdocCommon.EDocObjectType.E.valueOf(typeEnum_);
          return result == null ? EdocCommon.EDocObjectType.E.ANSWER : result;
        }
        /**
         * <pre>
         * Type enum of the edoc. It will be one of the following values:
         * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}
         * </pre>
         *
         * <code>optional .EDocObjectType.E type_enum = 7;</code>
         * @param value The typeEnum to set.
         * @return This builder for chaining.
         */
        public Builder setTypeEnum(EdocCommon.EDocObjectType.E value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000040;
          typeEnum_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Type enum of the edoc. It will be one of the following values:
         * {WORKSHEET, VIEW, PINBOARD, ANSWER, TABLE}
         * </pre>
         *
         * <code>optional .EDocObjectType.E type_enum = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearTypeEnum() {
          bitField0_ = (bitField0_ & ~0x00000040);
          typeEnum_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * Name of the object
         * </pre>
         *
         * <code>optional string name = 8;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * Name of the object
         * </pre>
         *
         * <code>optional string name = 8;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Name of the object
         * </pre>
         *
         * <code>optional string name = 8;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Name of the object
         * </pre>
         *
         * <code>optional string name = 8;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the object
         * </pre>
         *
         * <code>optional string name = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000080);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the object
         * </pre>
         *
         * <code>optional string name = 8;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          name_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:GetEPackInfoResponse.Object)
      }

      // @@protoc_insertion_point(class_scope:GetEPackInfoResponse.Object)
      private static final EdocService.GetEPackInfoResponse.Object DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EdocService.GetEPackInfoResponse.Object();
      }

      public static EdocService.GetEPackInfoResponse.Object getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Object>
          PARSER = new com.google.protobuf.AbstractParser<Object>() {
        @java.lang.Override
        public Object parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Object(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Object> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Object> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EdocService.GetEPackInfoResponse.Object getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int OBJECT_FIELD_NUMBER = 1;
    private java.util.List<EdocService.GetEPackInfoResponse.Object> object_;
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
     */
    @java.lang.Override
    public java.util.List<EdocService.GetEPackInfoResponse.Object> getObjectList() {
      return object_;
    }
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EdocService.GetEPackInfoResponse.ObjectOrBuilder> 
        getObjectOrBuilderList() {
      return object_;
    }
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
     */
    @java.lang.Override
    public int getObjectCount() {
      return object_.size();
    }
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
     */
    @java.lang.Override
    public EdocService.GetEPackInfoResponse.Object getObject(int index) {
      return object_.get(index);
    }
    /**
     * <pre>
     * List of objects to be imported.
     * </pre>
     *
     * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
     */
    @java.lang.Override
    public EdocService.GetEPackInfoResponse.ObjectOrBuilder getObjectOrBuilder(
        int index) {
      return object_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < object_.size(); i++) {
        output.writeMessage(1, object_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < object_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, object_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EdocService.GetEPackInfoResponse)) {
        return super.equals(obj);
      }
      EdocService.GetEPackInfoResponse other = (EdocService.GetEPackInfoResponse) obj;

      if (!getObjectList()
          .equals(other.getObjectList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getObjectCount() > 0) {
        hash = (37 * hash) + OBJECT_FIELD_NUMBER;
        hash = (53 * hash) + getObjectList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EdocService.GetEPackInfoResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.GetEPackInfoResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.GetEPackInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.GetEPackInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.GetEPackInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EdocService.GetEPackInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EdocService.GetEPackInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EdocService.GetEPackInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EdocService.GetEPackInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EdocService.GetEPackInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EdocService.GetEPackInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EdocService.GetEPackInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EdocService.GetEPackInfoResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GetEPackInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GetEPackInfoResponse)
        EdocService.GetEPackInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EdocService.internal_static_GetEPackInfoResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EdocService.internal_static_GetEPackInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EdocService.GetEPackInfoResponse.class, EdocService.GetEPackInfoResponse.Builder.class);
      }

      // Construct using EdocService.GetEPackInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getObjectFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (objectBuilder_ == null) {
          object_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          objectBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EdocService.internal_static_GetEPackInfoResponse_descriptor;
      }

      @java.lang.Override
      public EdocService.GetEPackInfoResponse getDefaultInstanceForType() {
        return EdocService.GetEPackInfoResponse.getDefaultInstance();
      }

      @java.lang.Override
      public EdocService.GetEPackInfoResponse build() {
        EdocService.GetEPackInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EdocService.GetEPackInfoResponse buildPartial() {
        EdocService.GetEPackInfoResponse result = new EdocService.GetEPackInfoResponse(this);
        int from_bitField0_ = bitField0_;
        if (objectBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            object_ = java.util.Collections.unmodifiableList(object_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.object_ = object_;
        } else {
          result.object_ = objectBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EdocService.GetEPackInfoResponse) {
          return mergeFrom((EdocService.GetEPackInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EdocService.GetEPackInfoResponse other) {
        if (other == EdocService.GetEPackInfoResponse.getDefaultInstance()) return this;
        if (objectBuilder_ == null) {
          if (!other.object_.isEmpty()) {
            if (object_.isEmpty()) {
              object_ = other.object_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureObjectIsMutable();
              object_.addAll(other.object_);
            }
            onChanged();
          }
        } else {
          if (!other.object_.isEmpty()) {
            if (objectBuilder_.isEmpty()) {
              objectBuilder_.dispose();
              objectBuilder_ = null;
              object_ = other.object_;
              bitField0_ = (bitField0_ & ~0x00000001);
              objectBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getObjectFieldBuilder() : null;
            } else {
              objectBuilder_.addAllMessages(other.object_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EdocService.GetEPackInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EdocService.GetEPackInfoResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<EdocService.GetEPackInfoResponse.Object> object_ =
        java.util.Collections.emptyList();
      private void ensureObjectIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          object_ = new java.util.ArrayList<EdocService.GetEPackInfoResponse.Object>(object_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.GetEPackInfoResponse.Object, EdocService.GetEPackInfoResponse.Object.Builder, EdocService.GetEPackInfoResponse.ObjectOrBuilder> objectBuilder_;

      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public java.util.List<EdocService.GetEPackInfoResponse.Object> getObjectList() {
        if (objectBuilder_ == null) {
          return java.util.Collections.unmodifiableList(object_);
        } else {
          return objectBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public int getObjectCount() {
        if (objectBuilder_ == null) {
          return object_.size();
        } else {
          return objectBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public EdocService.GetEPackInfoResponse.Object getObject(int index) {
        if (objectBuilder_ == null) {
          return object_.get(index);
        } else {
          return objectBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public Builder setObject(
          int index, EdocService.GetEPackInfoResponse.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.set(index, value);
          onChanged();
        } else {
          objectBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public Builder setObject(
          int index, EdocService.GetEPackInfoResponse.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.set(index, builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public Builder addObject(EdocService.GetEPackInfoResponse.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.add(value);
          onChanged();
        } else {
          objectBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public Builder addObject(
          int index, EdocService.GetEPackInfoResponse.Object value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectIsMutable();
          object_.add(index, value);
          onChanged();
        } else {
          objectBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public Builder addObject(
          EdocService.GetEPackInfoResponse.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.add(builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public Builder addObject(
          int index, EdocService.GetEPackInfoResponse.Object.Builder builderForValue) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.add(index, builderForValue.build());
          onChanged();
        } else {
          objectBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public Builder addAllObject(
          java.lang.Iterable<? extends EdocService.GetEPackInfoResponse.Object> values) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, object_);
          onChanged();
        } else {
          objectBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public Builder clearObject() {
        if (objectBuilder_ == null) {
          object_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          objectBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public Builder removeObject(int index) {
        if (objectBuilder_ == null) {
          ensureObjectIsMutable();
          object_.remove(index);
          onChanged();
        } else {
          objectBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public EdocService.GetEPackInfoResponse.Object.Builder getObjectBuilder(
          int index) {
        return getObjectFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public EdocService.GetEPackInfoResponse.ObjectOrBuilder getObjectOrBuilder(
          int index) {
        if (objectBuilder_ == null) {
          return object_.get(index);  } else {
          return objectBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public java.util.List<? extends EdocService.GetEPackInfoResponse.ObjectOrBuilder> 
           getObjectOrBuilderList() {
        if (objectBuilder_ != null) {
          return objectBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(object_);
        }
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public EdocService.GetEPackInfoResponse.Object.Builder addObjectBuilder() {
        return getObjectFieldBuilder().addBuilder(
            EdocService.GetEPackInfoResponse.Object.getDefaultInstance());
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public EdocService.GetEPackInfoResponse.Object.Builder addObjectBuilder(
          int index) {
        return getObjectFieldBuilder().addBuilder(
            index, EdocService.GetEPackInfoResponse.Object.getDefaultInstance());
      }
      /**
       * <pre>
       * List of objects to be imported.
       * </pre>
       *
       * <code>repeated .GetEPackInfoResponse.Object object = 1;</code>
       */
      public java.util.List<EdocService.GetEPackInfoResponse.Object.Builder> 
           getObjectBuilderList() {
        return getObjectFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EdocService.GetEPackInfoResponse.Object, EdocService.GetEPackInfoResponse.Object.Builder, EdocService.GetEPackInfoResponse.ObjectOrBuilder> 
          getObjectFieldBuilder() {
        if (objectBuilder_ == null) {
          objectBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EdocService.GetEPackInfoResponse.Object, EdocService.GetEPackInfoResponse.Object.Builder, EdocService.GetEPackInfoResponse.ObjectOrBuilder>(
                  object_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          object_ = null;
        }
        return objectBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GetEPackInfoResponse)
    }

    // @@protoc_insertion_point(class_scope:GetEPackInfoResponse)
    private static final EdocService.GetEPackInfoResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EdocService.GetEPackInfoResponse();
    }

    public static EdocService.GetEPackInfoResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GetEPackInfoResponse>
        PARSER = new com.google.protobuf.AbstractParser<GetEPackInfoResponse>() {
      @java.lang.Override
      public GetEPackInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetEPackInfoResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetEPackInfoResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetEPackInfoResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EdocService.GetEPackInfoResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ExportEPackRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ExportEPackRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ExportEPackRequest_Object_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ExportEPackRequest_Object_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EPackManifest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EPackManifest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EPackManifest_Dependency_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EPackManifest_Dependency_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EPackManifest_ObjectInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EPackManifest_ObjectInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ExportEPackResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ExportEPackResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ExportEPackResponse_Object_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ExportEPackResponse_Object_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ImportEPackRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ImportEPackRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ImportEPackRequest_Object_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ImportEPackRequest_Object_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ImportEPackResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ImportEPackResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ImportEPackResponse_Object_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ImportEPackResponse_Object_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetEPackInfoRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetEPackInfoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetEPackInfoRequest_ZipFile_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetEPackInfoRequest_ZipFile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetEPackInfoRequest_Object_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetEPackInfoRequest_Object_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetEPackInfoResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetEPackInfoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetEPackInfoResponse_EDocGuidInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetEPackInfoResponse_EDocGuidInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetEPackInfoResponse_Object_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetEPackInfoResponse_Object_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022edoc_service.proto\032\014status.proto\032\021edoc" +
      "_status.proto\032\021edoc_common.proto\"\354\001\n\022Exp" +
      "ortEPackRequest\022*\n\006object\030\001 \003(\0132\032.Export" +
      "EPackRequest.Object\022\"\n\023export_dependenci" +
      "es\030\002 \001(\010:\005false\022!\n\022export_permissions\030\003 " +
      "\001(\010:\005false\022,\n\013format_type\030\004 \001(\0162\021.EDocFo" +
      "rmatType.E:\004YAML\0325\n\006Object\022\037\n\004type\030\001 \001(\016" +
      "2\021.EDocObjectType.E\022\n\n\002id\030\002 \001(\t\"\234\002\n\rEPac" +
      "kManifest\022)\n\006object\030\001 \003(\0132\031.EPackManifes" +
      "t.ObjectInfo\032J\n\nDependency\022\014\n\004name\030\001 \001(\t" +
      "\022\020\n\010filename\030\002 \001(\t\022\034\n\006status\030\003 \001(\0132\014.Sta" +
      "tusProto\032\223\001\n\nObjectInfo\022\014\n\004name\030\001 \001(\t\022\020\n" +
      "\010filename\030\002 \001(\t\022\034\n\006status\030\003 \001(\0132\014.Status" +
      "Proto\022\014\n\004type\030\004 \001(\t\022\n\n\002id\030\005 \001(\t\022-\n\ndepen" +
      "dency\030\006 \003(\0132\031.EPackManifest.Dependency\"\225" +
      "\001\n\023ExportEPackResponse\022\020\n\010zip_file\030\001 \001(\t" +
      "\022+\n\006object\030\002 \003(\0132\033.ExportEPackResponse.O" +
      "bject\032?\n\006Object\022\'\n\004info\030\001 \001(\0132\031.EPackMan" +
      "ifest.ObjectInfo\022\014\n\004edoc\030\002 \001(\t\"\255\003\n\022Impor" +
      "tEPackRequest\022*\n\006object\030\001 \003(\0132\032.ImportEP" +
      "ackRequest.Object\022@\n\rimport_policy\030\002 \001(\016" +
      "2 .ImportEPackRequest.ImportPolicy:\007PART" +
      "IAL\022,\n\013format_type\030\003 \001(\0162\021.EDocFormatTyp" +
      "e.E:\004YAML\022!\n\022import_permissions\030\004 \001(\010:\005f" +
      "alse\032\226\001\n\006Object\022\'\n\006action\030\001 \001(\0162\017.Import" +
      "Action.E:\006CREATE\022\020\n\010filename\030\002 \001(\t\022\014\n\004ed" +
      "oc\030\003 \001(\t\022\037\n\004type\030\004 \001(\0162\021.EDocObjectType." +
      "E\022\014\n\004guid\030\005 \001(\t\022\024\n\014zip_filename\030\006 \001(\t\"?\n" +
      "\014ImportPolicy\022\013\n\007PARTIAL\020\001\022\017\n\013ALL_OR_NON" +
      "E\020\002\022\021\n\rVALIDATE_ONLY\020\003\"\324\001\n\023ImportEPackRe" +
      "sponse\022+\n\006object\030\001 \003(\0132\033.ImportEPackResp" +
      "onse.Object\022\034\n\006status\030\002 \001(\0132\014.StatusProt" +
      "o\032r\n\006Object\022\014\n\004name\030\001 \001(\t\022\020\n\010filename\030\002 " +
      "\001(\t\022\024\n\014zip_filename\030\003 \001(\t\022\014\n\004guid\030\004 \001(\t\022" +
      "$\n\010response\030\005 \001(\0132\022.EDocResponseProto\"\223\002" +
      "\n\023GetEPackInfoRequest\022.\n\010zip_file\030\001 \003(\0132" +
      "\034.GetEPackInfoRequest.ZipFile\022+\n\006object\030" +
      "\002 \003(\0132\033.GetEPackInfoRequest.Object\022,\n\013fo" +
      "rmat_type\030\003 \001(\0162\021.EDocFormatType.E:\004YAML" +
      "\0321\n\007ZipFile\022\020\n\010filename\030\001 \001(\t\022\024\n\014file_co" +
      "ntent\030\002 \001(\t\032>\n\006Object\022\020\n\010filename\030\001 \001(\t\022" +
      "\014\n\004edoc\030\002 \001(\t\022\024\n\014zip_filename\030\004 \001(\t\"\256\003\n\024" +
      "GetEPackInfoResponse\022,\n\006object\030\001 \003(\0132\034.G" +
      "etEPackInfoResponse.Object\032\217\001\n\014EDocGuidI" +
      "nfo\022\014\n\004guid\030\001 \001(\t\022\035\n\025matching_object_fou" +
      "nd\030\002 \001(\010\022\034\n\024matching_object_type\030\003 \001(\t\0224" +
      "\n\031matching_object_type_enum\030\004 \001(\0162\021.EDoc" +
      "ObjectType.E\032\325\001\n\006Object\022\014\n\004type\030\001 \001(\t\022\014\n" +
      "\004edoc\030\002 \001(\t\022\020\n\010filename\030\003 \001(\t\022\024\n\014zip_fil" +
      "ename\030\004 \001(\t\0225\n\tguid_info\030\005 \001(\0132\".GetEPac" +
      "kInfoResponse.EDocGuidInfo\022\034\n\006status\030\006 \001" +
      "(\0132\014.StatusProto\022$\n\ttype_enum\030\007 \001(\0162\021.ED" +
      "ocObjectType.E\022\014\n\004name\030\010 \001(\t"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Status.getDescriptor(),
          EdocStatus.getDescriptor(),
          EdocCommon.getDescriptor(),
        });
    internal_static_ExportEPackRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ExportEPackRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ExportEPackRequest_descriptor,
        new java.lang.String[] { "Object", "ExportDependencies", "ExportPermissions", "FormatType", });
    internal_static_ExportEPackRequest_Object_descriptor =
      internal_static_ExportEPackRequest_descriptor.getNestedTypes().get(0);
    internal_static_ExportEPackRequest_Object_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ExportEPackRequest_Object_descriptor,
        new java.lang.String[] { "Type", "Id", });
    internal_static_EPackManifest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_EPackManifest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EPackManifest_descriptor,
        new java.lang.String[] { "Object", });
    internal_static_EPackManifest_Dependency_descriptor =
      internal_static_EPackManifest_descriptor.getNestedTypes().get(0);
    internal_static_EPackManifest_Dependency_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EPackManifest_Dependency_descriptor,
        new java.lang.String[] { "Name", "Filename", "Status", });
    internal_static_EPackManifest_ObjectInfo_descriptor =
      internal_static_EPackManifest_descriptor.getNestedTypes().get(1);
    internal_static_EPackManifest_ObjectInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EPackManifest_ObjectInfo_descriptor,
        new java.lang.String[] { "Name", "Filename", "Status", "Type", "Id", "Dependency", });
    internal_static_ExportEPackResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ExportEPackResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ExportEPackResponse_descriptor,
        new java.lang.String[] { "ZipFile", "Object", });
    internal_static_ExportEPackResponse_Object_descriptor =
      internal_static_ExportEPackResponse_descriptor.getNestedTypes().get(0);
    internal_static_ExportEPackResponse_Object_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ExportEPackResponse_Object_descriptor,
        new java.lang.String[] { "Info", "Edoc", });
    internal_static_ImportEPackRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_ImportEPackRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ImportEPackRequest_descriptor,
        new java.lang.String[] { "Object", "ImportPolicy", "FormatType", "ImportPermissions", });
    internal_static_ImportEPackRequest_Object_descriptor =
      internal_static_ImportEPackRequest_descriptor.getNestedTypes().get(0);
    internal_static_ImportEPackRequest_Object_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ImportEPackRequest_Object_descriptor,
        new java.lang.String[] { "Action", "Filename", "Edoc", "Type", "Guid", "ZipFilename", });
    internal_static_ImportEPackResponse_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_ImportEPackResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ImportEPackResponse_descriptor,
        new java.lang.String[] { "Object", "Status", });
    internal_static_ImportEPackResponse_Object_descriptor =
      internal_static_ImportEPackResponse_descriptor.getNestedTypes().get(0);
    internal_static_ImportEPackResponse_Object_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ImportEPackResponse_Object_descriptor,
        new java.lang.String[] { "Name", "Filename", "ZipFilename", "Guid", "Response", });
    internal_static_GetEPackInfoRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_GetEPackInfoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetEPackInfoRequest_descriptor,
        new java.lang.String[] { "ZipFile", "Object", "FormatType", });
    internal_static_GetEPackInfoRequest_ZipFile_descriptor =
      internal_static_GetEPackInfoRequest_descriptor.getNestedTypes().get(0);
    internal_static_GetEPackInfoRequest_ZipFile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetEPackInfoRequest_ZipFile_descriptor,
        new java.lang.String[] { "Filename", "FileContent", });
    internal_static_GetEPackInfoRequest_Object_descriptor =
      internal_static_GetEPackInfoRequest_descriptor.getNestedTypes().get(1);
    internal_static_GetEPackInfoRequest_Object_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetEPackInfoRequest_Object_descriptor,
        new java.lang.String[] { "Filename", "Edoc", "ZipFilename", });
    internal_static_GetEPackInfoResponse_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_GetEPackInfoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetEPackInfoResponse_descriptor,
        new java.lang.String[] { "Object", });
    internal_static_GetEPackInfoResponse_EDocGuidInfo_descriptor =
      internal_static_GetEPackInfoResponse_descriptor.getNestedTypes().get(0);
    internal_static_GetEPackInfoResponse_EDocGuidInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetEPackInfoResponse_EDocGuidInfo_descriptor,
        new java.lang.String[] { "Guid", "MatchingObjectFound", "MatchingObjectType", "MatchingObjectTypeEnum", });
    internal_static_GetEPackInfoResponse_Object_descriptor =
      internal_static_GetEPackInfoResponse_descriptor.getNestedTypes().get(1);
    internal_static_GetEPackInfoResponse_Object_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetEPackInfoResponse_Object_descriptor,
        new java.lang.String[] { "Type", "Edoc", "Filename", "ZipFilename", "GuidInfo", "Status", "TypeEnum", "Name", });
    Status.getDescriptor();
    EdocStatus.getDescriptor();
    EdocCommon.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
