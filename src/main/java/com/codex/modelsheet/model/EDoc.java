// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: edoc.proto
package com.codex.modelsheet.model;

public final class EDoc {
  private EDoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ColumnPropertiesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ColumnProperties)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type of column - attribute or measure.
     * </pre>
     *
     * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
     * @return Whether the columnType field is set.
     */
    boolean hasColumnType();
    /**
     * <pre>
     * Type of column - attribute or measure.
     * </pre>
     *
     * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
     * @return The columnType.
     */
    java.lang.String getColumnType();
    /**
     * <pre>
     * Type of column - attribute or measure.
     * </pre>
     *
     * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
     * @return The bytes for columnType.
     */
    com.google.protobuf.ByteString
        getColumnTypeBytes();

    /**
     * <pre>
     * Default aggregation operator for the column.
     * Allowed values: {none, count, count_distinct, sum, average, min, max,
     *                  variance, std_deviation}
     * Note: Casing is not important.
     * </pre>
     *
     * <code>optional string aggregation = 2 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
     * @return Whether the aggregation field is set.
     */
    boolean hasAggregation();
    /**
     * <pre>
     * Default aggregation operator for the column.
     * Allowed values: {none, count, count_distinct, sum, average, min, max,
     *                  variance, std_deviation}
     * Note: Casing is not important.
     * </pre>
     *
     * <code>optional string aggregation = 2 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
     * @return The aggregation.
     */
    java.lang.String getAggregation();
    /**
     * <pre>
     * Default aggregation operator for the column.
     * Allowed values: {none, count, count_distinct, sum, average, min, max,
     *                  variance, std_deviation}
     * Note: Casing is not important.
     * </pre>
     *
     * <code>optional string aggregation = 2 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
     * @return The bytes for aggregation.
     */
    com.google.protobuf.ByteString
        getAggregationBytes();

    /**
     * <pre>
     * Specifies how values of the column will be indexed.
     * Allowed values: {default, dont_index, prefix_only, prefix_and_word_substring, prefix_and_substring}
     * Note: Casing is not important.
     * </pre>
     *
     * <code>optional string index_type = 3 [(.Annotation.allowed_values_key) = "edoc.index_type"];</code>
     * @return Whether the indexType field is set.
     */
    boolean hasIndexType();
    /**
     * <pre>
     * Specifies how values of the column will be indexed.
     * Allowed values: {default, dont_index, prefix_only, prefix_and_word_substring, prefix_and_substring}
     * Note: Casing is not important.
     * </pre>
     *
     * <code>optional string index_type = 3 [(.Annotation.allowed_values_key) = "edoc.index_type"];</code>
     * @return The indexType.
     */
    java.lang.String getIndexType();
    /**
     * <pre>
     * Specifies how values of the column will be indexed.
     * Allowed values: {default, dont_index, prefix_only, prefix_and_word_substring, prefix_and_substring}
     * Note: Casing is not important.
     * </pre>
     *
     * <code>optional string index_type = 3 [(.Annotation.allowed_values_key) = "edoc.index_type"];</code>
     * @return The bytes for indexType.
     */
    com.google.protobuf.ByteString
        getIndexTypeBytes();

    /**
     * <pre>
     * Static weight of the column in the index.
     * </pre>
     *
     * <code>optional double index_priority = 4 [default = 1];</code>
     * @return Whether the indexPriority field is set.
     */
    boolean hasIndexPriority();
    /**
     * <pre>
     * Static weight of the column in the index.
     * </pre>
     *
     * <code>optional double index_priority = 4 [default = 1];</code>
     * @return The indexPriority.
     */
    double getIndexPriority();

    /**
     * <pre>
     * List of synonyms that can be used to refer to this column.  Alternate
     * names for the column.
     * </pre>
     *
     * <code>repeated string synonyms = 5;</code>
     * @return A list containing the synonyms.
     */
    java.util.List<java.lang.String>
        getSynonymsList();
    /**
     * <pre>
     * List of synonyms that can be used to refer to this column.  Alternate
     * names for the column.
     * </pre>
     *
     * <code>repeated string synonyms = 5;</code>
     * @return The count of synonyms.
     */
    int getSynonymsCount();
    /**
     * <pre>
     * List of synonyms that can be used to refer to this column.  Alternate
     * names for the column.
     * </pre>
     *
     * <code>repeated string synonyms = 5;</code>
     * @param index The index of the element to return.
     * @return The synonyms at the given index.
     */
    java.lang.String getSynonyms(int index);
    /**
     * <pre>
     * List of synonyms that can be used to refer to this column.  Alternate
     * names for the column.
     * </pre>
     *
     * <code>repeated string synonyms = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the synonyms at the given index.
     */
    com.google.protobuf.ByteString
        getSynonymsBytes(int index);

    /**
     * <pre>
     * True for primary key columns of shared dimension tables that should always
     * be included in chasm trap queries.
     * </pre>
     *
     * <code>optional bool is_attribution_dimension = 6;</code>
     * @return Whether the isAttributionDimension field is set.
     */
    boolean hasIsAttributionDimension();
    /**
     * <pre>
     * True for primary key columns of shared dimension tables that should always
     * be included in chasm trap queries.
     * </pre>
     *
     * <code>optional bool is_attribution_dimension = 6;</code>
     * @return The isAttributionDimension.
     */
    boolean getIsAttributionDimension();

    /**
     * <pre>
     * Numeric columns can be marked non additive to disallow aggregations on
     * them.  This is useful in cases such as a numeric primary key column.
     * </pre>
     *
     * <code>optional bool is_additive = 7;</code>
     * @return Whether the isAdditive field is set.
     */
    boolean hasIsAdditive();
    /**
     * <pre>
     * Numeric columns can be marked non additive to disallow aggregations on
     * them.  This is useful in cases such as a numeric primary key column.
     * </pre>
     *
     * <code>optional bool is_additive = 7;</code>
     * @return The isAdditive.
     */
    boolean getIsAdditive();

    /**
     * <pre>
     * The name of the calendar to use for the given column.
     * </pre>
     *
     * <code>optional string calendar = 8;</code>
     * @return Whether the calendar field is set.
     */
    boolean hasCalendar();
    /**
     * <pre>
     * The name of the calendar to use for the given column.
     * </pre>
     *
     * <code>optional string calendar = 8;</code>
     * @return The calendar.
     */
    java.lang.String getCalendar();
    /**
     * <pre>
     * The name of the calendar to use for the given column.
     * </pre>
     *
     * <code>optional string calendar = 8;</code>
     * @return The bytes for calendar.
     */
    com.google.protobuf.ByteString
        getCalendarBytes();

    /**
     * <pre>
     * Formatting specification for the column. e.g. "##0.##E0" for number
     * columns, "MM-yyyy" for date columns.
     * </pre>
     *
     * <code>optional string format_pattern = 9;</code>
     * @return Whether the formatPattern field is set.
     */
    boolean hasFormatPattern();
    /**
     * <pre>
     * Formatting specification for the column. e.g. "##0.##E0" for number
     * columns, "MM-yyyy" for date columns.
     * </pre>
     *
     * <code>optional string format_pattern = 9;</code>
     * @return The formatPattern.
     */
    java.lang.String getFormatPattern();
    /**
     * <pre>
     * Formatting specification for the column. e.g. "##0.##E0" for number
     * columns, "MM-yyyy" for date columns.
     * </pre>
     *
     * <code>optional string format_pattern = 9;</code>
     * @return The bytes for formatPattern.
     */
    com.google.protobuf.ByteString
        getFormatPatternBytes();

    /**
     * <pre>
     * If the column is a currency column, its formatting specification is
     * specified by CurrencyFormat.
     * </pre>
     *
     * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
     * @return Whether the currencyType field is set.
     */
    boolean hasCurrencyType();
    /**
     * <pre>
     * If the column is a currency column, its formatting specification is
     * specified by CurrencyFormat.
     * </pre>
     *
     * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
     * @return The currencyType.
     */
    EDoc.ColumnProperties.CurrencyFormat getCurrencyType();
    /**
     * <pre>
     * If the column is a currency column, its formatting specification is
     * specified by CurrencyFormat.
     * </pre>
     *
     * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
     */
    EDoc.ColumnProperties.CurrencyFormatOrBuilder getCurrencyTypeOrBuilder();

    /**
     * <pre>
     * Property to mark if the column is hidden.
     * </pre>
     *
     * <code>optional bool is_hidden = 11;</code>
     * @return Whether the isHidden field is set.
     */
    boolean hasIsHidden();
    /**
     * <pre>
     * Property to mark if the column is hidden.
     * </pre>
     *
     * <code>optional bool is_hidden = 11;</code>
     * @return The isHidden.
     */
    boolean getIsHidden();

    /**
     * <pre>
     * config object to define the geographic role of the column's value.
     * </pre>
     *
     * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
     * @return Whether the geoConfig field is set.
     */
    boolean hasGeoConfig();
    /**
     * <pre>
     * config object to define the geographic role of the column's value.
     * </pre>
     *
     * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
     * @return The geoConfig.
     */
    EDoc.ColumnProperties.GeoConfigProto getGeoConfig();
    /**
     * <pre>
     * config object to define the geographic role of the column's value.
     * </pre>
     *
     * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
     */
    EDoc.ColumnProperties.GeoConfigProtoOrBuilder getGeoConfigOrBuilder();

    /**
     * <pre>
     * Specifies spotIQ preference for that column while running analysis
     * </pre>
     *
     * <code>optional string spotiq_preference = 13;</code>
     * @return Whether the spotiqPreference field is set.
     */
    boolean hasSpotiqPreference();
    /**
     * <pre>
     * Specifies spotIQ preference for that column while running analysis
     * </pre>
     *
     * <code>optional string spotiq_preference = 13;</code>
     * @return The spotiqPreference.
     */
    java.lang.String getSpotiqPreference();
    /**
     * <pre>
     * Specifies spotIQ preference for that column while running analysis
     * </pre>
     *
     * <code>optional string spotiq_preference = 13;</code>
     * @return The bytes for spotiqPreference.
     */
    com.google.protobuf.ByteString
        getSpotiqPreferenceBytes();

    /**
     * <pre>
     * Flag to specify if the column is preferred for search iq.
     * </pre>
     *
     * <code>optional bool search_iq_preferred = 14;</code>
     * @return Whether the searchIqPreferred field is set.
     */
    boolean hasSearchIqPreferred();
    /**
     * <pre>
     * Flag to specify if the column is preferred for search iq.
     * </pre>
     *
     * <code>optional bool search_iq_preferred = 14;</code>
     * @return The searchIqPreferred.
     */
    boolean getSearchIqPreferred();
  }
  /**
   * <pre>
   * Column definition to use in the worksheet and table.
   * </pre>
   *
   * Protobuf type {@code ColumnProperties}
   */
  public static final class ColumnProperties extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ColumnProperties)
      ColumnPropertiesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ColumnProperties.newBuilder() to construct.
    private ColumnProperties(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ColumnProperties() {
      columnType_ = "";
      aggregation_ = "";
      indexType_ = "";
      indexPriority_ = 1D;
      synonyms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      calendar_ = "";
      formatPattern_ = "";
      spotiqPreference_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ColumnProperties();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ColumnProperties(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              columnType_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              aggregation_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              indexType_ = bs;
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              indexPriority_ = input.readDouble();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                synonyms_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              synonyms_.add(bs);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              isAttributionDimension_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              isAdditive_ = input.readBool();
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              calendar_ = bs;
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              formatPattern_ = bs;
              break;
            }
            case 82: {
              EDoc.ColumnProperties.CurrencyFormat.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) != 0)) {
                subBuilder = currencyType_.toBuilder();
              }
              currencyType_ = input.readMessage(EDoc.ColumnProperties.CurrencyFormat.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(currencyType_);
                currencyType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              isHidden_ = input.readBool();
              break;
            }
            case 98: {
              EDoc.ColumnProperties.GeoConfigProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) != 0)) {
                subBuilder = geoConfig_.toBuilder();
              }
              geoConfig_ = input.readMessage(EDoc.ColumnProperties.GeoConfigProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(geoConfig_);
                geoConfig_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 106: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              spotiqPreference_ = bs;
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              searchIqPreferred_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          synonyms_ = synonyms_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_ColumnProperties_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_ColumnProperties_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.ColumnProperties.class, EDoc.ColumnProperties.Builder.class);
    }

    public interface CurrencyFormatOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ColumnProperties.CurrencyFormat)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional bool is_browser = 1;</code>
       * @return Whether the isBrowser field is set.
       */
      boolean hasIsBrowser();
      /**
       * <code>optional bool is_browser = 1;</code>
       * @return The isBrowser.
       */
      boolean getIsBrowser();

      /**
       * <code>optional string column = 2;</code>
       * @return Whether the column field is set.
       */
      boolean hasColumn();
      /**
       * <code>optional string column = 2;</code>
       * @return The column.
       */
      java.lang.String getColumn();
      /**
       * <code>optional string column = 2;</code>
       * @return The bytes for column.
       */
      com.google.protobuf.ByteString
          getColumnBytes();

      /**
       * <code>optional string iso_code = 3;</code>
       * @return Whether the isoCode field is set.
       */
      boolean hasIsoCode();
      /**
       * <code>optional string iso_code = 3;</code>
       * @return The isoCode.
       */
      java.lang.String getIsoCode();
      /**
       * <code>optional string iso_code = 3;</code>
       * @return The bytes for isoCode.
       */
      com.google.protobuf.ByteString
          getIsoCodeBytes();
    }
    /**
     * <pre>
     * Representation of currency format for a column.
     * </pre>
     *
     * Protobuf type {@code ColumnProperties.CurrencyFormat}
     */
    public static final class CurrencyFormat extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:ColumnProperties.CurrencyFormat)
        CurrencyFormatOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CurrencyFormat.newBuilder() to construct.
      private CurrencyFormat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CurrencyFormat() {
        column_ = "";
        isoCode_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CurrencyFormat();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CurrencyFormat(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                isBrowser_ = input.readBool();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                column_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                isoCode_ = bs;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ColumnProperties_CurrencyFormat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ColumnProperties_CurrencyFormat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ColumnProperties.CurrencyFormat.class, EDoc.ColumnProperties.CurrencyFormat.Builder.class);
      }

      private int bitField0_;
      public static final int IS_BROWSER_FIELD_NUMBER = 1;
      private boolean isBrowser_;
      /**
       * <code>optional bool is_browser = 1;</code>
       * @return Whether the isBrowser field is set.
       */
      @java.lang.Override
      public boolean hasIsBrowser() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional bool is_browser = 1;</code>
       * @return The isBrowser.
       */
      @java.lang.Override
      public boolean getIsBrowser() {
        return isBrowser_;
      }

      public static final int COLUMN_FIELD_NUMBER = 2;
      private volatile java.lang.Object column_;
      /**
       * <code>optional string column = 2;</code>
       * @return Whether the column field is set.
       */
      @java.lang.Override
      public boolean hasColumn() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string column = 2;</code>
       * @return The column.
       */
      @java.lang.Override
      public java.lang.String getColumn() {
        java.lang.Object ref = column_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            column_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string column = 2;</code>
       * @return The bytes for column.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getColumnBytes() {
        java.lang.Object ref = column_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          column_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ISO_CODE_FIELD_NUMBER = 3;
      private volatile java.lang.Object isoCode_;
      /**
       * <code>optional string iso_code = 3;</code>
       * @return Whether the isoCode field is set.
       */
      @java.lang.Override
      public boolean hasIsoCode() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string iso_code = 3;</code>
       * @return The isoCode.
       */
      @java.lang.Override
      public java.lang.String getIsoCode() {
        java.lang.Object ref = isoCode_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            isoCode_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string iso_code = 3;</code>
       * @return The bytes for isoCode.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getIsoCodeBytes() {
        java.lang.Object ref = isoCode_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          isoCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeBool(1, isBrowser_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, column_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, isoCode_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, isBrowser_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, column_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, isoCode_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.ColumnProperties.CurrencyFormat)) {
          return super.equals(obj);
        }
        EDoc.ColumnProperties.CurrencyFormat other = (EDoc.ColumnProperties.CurrencyFormat) obj;

        if (hasIsBrowser() != other.hasIsBrowser()) return false;
        if (hasIsBrowser()) {
          if (getIsBrowser()
              != other.getIsBrowser()) return false;
        }
        if (hasColumn() != other.hasColumn()) return false;
        if (hasColumn()) {
          if (!getColumn()
              .equals(other.getColumn())) return false;
        }
        if (hasIsoCode() != other.hasIsoCode()) return false;
        if (hasIsoCode()) {
          if (!getIsoCode()
              .equals(other.getIsoCode())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasIsBrowser()) {
          hash = (37 * hash) + IS_BROWSER_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsBrowser());
        }
        if (hasColumn()) {
          hash = (37 * hash) + COLUMN_FIELD_NUMBER;
          hash = (53 * hash) + getColumn().hashCode();
        }
        if (hasIsoCode()) {
          hash = (37 * hash) + ISO_CODE_FIELD_NUMBER;
          hash = (53 * hash) + getIsoCode().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.ColumnProperties.CurrencyFormat parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ColumnProperties.CurrencyFormat parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ColumnProperties.CurrencyFormat parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ColumnProperties.CurrencyFormat parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ColumnProperties.CurrencyFormat parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ColumnProperties.CurrencyFormat parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ColumnProperties.CurrencyFormat parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ColumnProperties.CurrencyFormat parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ColumnProperties.CurrencyFormat parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.ColumnProperties.CurrencyFormat parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ColumnProperties.CurrencyFormat parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ColumnProperties.CurrencyFormat parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.ColumnProperties.CurrencyFormat prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Representation of currency format for a column.
       * </pre>
       *
       * Protobuf type {@code ColumnProperties.CurrencyFormat}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ColumnProperties.CurrencyFormat)
          EDoc.ColumnProperties.CurrencyFormatOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_ColumnProperties_CurrencyFormat_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_ColumnProperties_CurrencyFormat_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.ColumnProperties.CurrencyFormat.class, EDoc.ColumnProperties.CurrencyFormat.Builder.class);
        }

        // Construct using EDoc.ColumnProperties.CurrencyFormat.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          isBrowser_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          column_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          isoCode_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_ColumnProperties_CurrencyFormat_descriptor;
        }

        @java.lang.Override
        public EDoc.ColumnProperties.CurrencyFormat getDefaultInstanceForType() {
          return EDoc.ColumnProperties.CurrencyFormat.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.ColumnProperties.CurrencyFormat build() {
          EDoc.ColumnProperties.CurrencyFormat result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.ColumnProperties.CurrencyFormat buildPartial() {
          EDoc.ColumnProperties.CurrencyFormat result = new EDoc.ColumnProperties.CurrencyFormat(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.isBrowser_ = isBrowser_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.column_ = column_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            to_bitField0_ |= 0x00000004;
          }
          result.isoCode_ = isoCode_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.ColumnProperties.CurrencyFormat) {
            return mergeFrom((EDoc.ColumnProperties.CurrencyFormat)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.ColumnProperties.CurrencyFormat other) {
          if (other == EDoc.ColumnProperties.CurrencyFormat.getDefaultInstance()) return this;
          if (other.hasIsBrowser()) {
            setIsBrowser(other.getIsBrowser());
          }
          if (other.hasColumn()) {
            bitField0_ |= 0x00000002;
            column_ = other.column_;
            onChanged();
          }
          if (other.hasIsoCode()) {
            bitField0_ |= 0x00000004;
            isoCode_ = other.isoCode_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.ColumnProperties.CurrencyFormat parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.ColumnProperties.CurrencyFormat) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean isBrowser_ ;
        /**
         * <code>optional bool is_browser = 1;</code>
         * @return Whether the isBrowser field is set.
         */
        @java.lang.Override
        public boolean hasIsBrowser() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional bool is_browser = 1;</code>
         * @return The isBrowser.
         */
        @java.lang.Override
        public boolean getIsBrowser() {
          return isBrowser_;
        }
        /**
         * <code>optional bool is_browser = 1;</code>
         * @param value The isBrowser to set.
         * @return This builder for chaining.
         */
        public Builder setIsBrowser(boolean value) {
          bitField0_ |= 0x00000001;
          isBrowser_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_browser = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearIsBrowser() {
          bitField0_ = (bitField0_ & ~0x00000001);
          isBrowser_ = false;
          onChanged();
          return this;
        }

        private java.lang.Object column_ = "";
        /**
         * <code>optional string column = 2;</code>
         * @return Whether the column field is set.
         */
        public boolean hasColumn() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string column = 2;</code>
         * @return The column.
         */
        public java.lang.String getColumn() {
          java.lang.Object ref = column_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              column_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string column = 2;</code>
         * @return The bytes for column.
         */
        public com.google.protobuf.ByteString
            getColumnBytes() {
          java.lang.Object ref = column_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            column_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string column = 2;</code>
         * @param value The column to set.
         * @return This builder for chaining.
         */
        public Builder setColumn(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          column_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string column = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearColumn() {
          bitField0_ = (bitField0_ & ~0x00000002);
          column_ = getDefaultInstance().getColumn();
          onChanged();
          return this;
        }
        /**
         * <code>optional string column = 2;</code>
         * @param value The bytes for column to set.
         * @return This builder for chaining.
         */
        public Builder setColumnBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          column_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object isoCode_ = "";
        /**
         * <code>optional string iso_code = 3;</code>
         * @return Whether the isoCode field is set.
         */
        public boolean hasIsoCode() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional string iso_code = 3;</code>
         * @return The isoCode.
         */
        public java.lang.String getIsoCode() {
          java.lang.Object ref = isoCode_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              isoCode_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string iso_code = 3;</code>
         * @return The bytes for isoCode.
         */
        public com.google.protobuf.ByteString
            getIsoCodeBytes() {
          java.lang.Object ref = isoCode_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            isoCode_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string iso_code = 3;</code>
         * @param value The isoCode to set.
         * @return This builder for chaining.
         */
        public Builder setIsoCode(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          isoCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string iso_code = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearIsoCode() {
          bitField0_ = (bitField0_ & ~0x00000004);
          isoCode_ = getDefaultInstance().getIsoCode();
          onChanged();
          return this;
        }
        /**
         * <code>optional string iso_code = 3;</code>
         * @param value The bytes for isoCode to set.
         * @return This builder for chaining.
         */
        public Builder setIsoCodeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          isoCode_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:ColumnProperties.CurrencyFormat)
      }

      // @@protoc_insertion_point(class_scope:ColumnProperties.CurrencyFormat)
      private static final EDoc.ColumnProperties.CurrencyFormat DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.ColumnProperties.CurrencyFormat();
      }

      public static EDoc.ColumnProperties.CurrencyFormat getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<CurrencyFormat>
          PARSER = new com.google.protobuf.AbstractParser<CurrencyFormat>() {
        @java.lang.Override
        public CurrencyFormat parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CurrencyFormat(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CurrencyFormat> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CurrencyFormat> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.ColumnProperties.CurrencyFormat getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface GeoConfigProtoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ColumnProperties.GeoConfigProto)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * TODO(Akshay): Add support for remaining allowed types:
       *  { country, state, city, zipcode, latitude, longitude }
       * </pre>
       *
       * <code>optional bool latitude = 1;</code>
       * @return Whether the latitude field is set.
       */
      boolean hasLatitude();
      /**
       * <pre>
       * TODO(Akshay): Add support for remaining allowed types:
       *  { country, state, city, zipcode, latitude, longitude }
       * </pre>
       *
       * <code>optional bool latitude = 1;</code>
       * @return The latitude.
       */
      boolean getLatitude();

      /**
       * <code>optional bool longitude = 2;</code>
       * @return Whether the longitude field is set.
       */
      boolean hasLongitude();
      /**
       * <code>optional bool longitude = 2;</code>
       * @return The longitude.
       */
      boolean getLongitude();

      /**
       * <code>optional bool country = 3;</code>
       * @return Whether the country field is set.
       */
      boolean hasCountry();
      /**
       * <code>optional bool country = 3;</code>
       * @return The country.
       */
      boolean getCountry();

      /**
       * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
       * @return Whether the regionName field is set.
       */
      boolean hasRegionName();
      /**
       * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
       * @return The regionName.
       */
      EDoc.ColumnProperties.GeoConfigProto.SubRegion getRegionName();
      /**
       * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
       */
      EDoc.ColumnProperties.GeoConfigProto.SubRegionOrBuilder getRegionNameOrBuilder();
    }
    /**
     * <pre>
     * For columns that indicate location, we need to specify what each value
     * in that column represents.
     * e.g. a column can be labeled as,
     *      a. a country
     *      b. a state in US
     *      c. a city in california(US)
     *      d. a latitude/longitude value
     *      e. a zipcode
     * TODO(Akshay): custom descriptors also possible.
     * This information can be expressed using the GeoConfigProto struct.
     * </pre>
     *
     * Protobuf type {@code ColumnProperties.GeoConfigProto}
     */
    public static final class GeoConfigProto extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:ColumnProperties.GeoConfigProto)
        GeoConfigProtoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use GeoConfigProto.newBuilder() to construct.
      private GeoConfigProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private GeoConfigProto() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new GeoConfigProto();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private GeoConfigProto(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                latitude_ = input.readBool();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                longitude_ = input.readBool();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                country_ = input.readBool();
                break;
              }
              case 34: {
                EDoc.ColumnProperties.GeoConfigProto.SubRegion.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) != 0)) {
                  subBuilder = regionName_.toBuilder();
                }
                regionName_ = input.readMessage(EDoc.ColumnProperties.GeoConfigProto.SubRegion.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(regionName_);
                  regionName_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ColumnProperties_GeoConfigProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ColumnProperties_GeoConfigProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ColumnProperties.GeoConfigProto.class, EDoc.ColumnProperties.GeoConfigProto.Builder.class);
      }

      public interface SubRegionOrBuilder extends
          // @@protoc_insertion_point(interface_extends:ColumnProperties.GeoConfigProto.SubRegion)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string country = 1;</code>
         * @return Whether the country field is set.
         */
        boolean hasCountry();
        /**
         * <code>optional string country = 1;</code>
         * @return The country.
         */
        java.lang.String getCountry();
        /**
         * <code>optional string country = 1;</code>
         * @return The bytes for country.
         */
        com.google.protobuf.ByteString
            getCountryBytes();

        /**
         * <code>optional string region_name = 2;</code>
         * @return Whether the regionName field is set.
         */
        boolean hasRegionName();
        /**
         * <code>optional string region_name = 2;</code>
         * @return The regionName.
         */
        java.lang.String getRegionName();
        /**
         * <code>optional string region_name = 2;</code>
         * @return The bytes for regionName.
         */
        com.google.protobuf.ByteString
            getRegionNameBytes();
      }
      /**
       * Protobuf type {@code ColumnProperties.GeoConfigProto.SubRegion}
       */
      public static final class SubRegion extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:ColumnProperties.GeoConfigProto.SubRegion)
          SubRegionOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use SubRegion.newBuilder() to construct.
        private SubRegion(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private SubRegion() {
          country_ = "";
          regionName_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new SubRegion();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private SubRegion(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000001;
                  country_ = bs;
                  break;
                }
                case 18: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  regionName_ = bs;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_ColumnProperties_GeoConfigProto_SubRegion_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_ColumnProperties_GeoConfigProto_SubRegion_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.ColumnProperties.GeoConfigProto.SubRegion.class, EDoc.ColumnProperties.GeoConfigProto.SubRegion.Builder.class);
        }

        private int bitField0_;
        public static final int COUNTRY_FIELD_NUMBER = 1;
        private volatile java.lang.Object country_;
        /**
         * <code>optional string country = 1;</code>
         * @return Whether the country field is set.
         */
        @java.lang.Override
        public boolean hasCountry() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string country = 1;</code>
         * @return The country.
         */
        @java.lang.Override
        public java.lang.String getCountry() {
          java.lang.Object ref = country_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              country_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string country = 1;</code>
         * @return The bytes for country.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getCountryBytes() {
          java.lang.Object ref = country_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            country_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int REGION_NAME_FIELD_NUMBER = 2;
        private volatile java.lang.Object regionName_;
        /**
         * <code>optional string region_name = 2;</code>
         * @return Whether the regionName field is set.
         */
        @java.lang.Override
        public boolean hasRegionName() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string region_name = 2;</code>
         * @return The regionName.
         */
        @java.lang.Override
        public java.lang.String getRegionName() {
          java.lang.Object ref = regionName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              regionName_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string region_name = 2;</code>
         * @return The bytes for regionName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getRegionNameBytes() {
          java.lang.Object ref = regionName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            regionName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, country_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, regionName_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, country_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, regionName_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof EDoc.ColumnProperties.GeoConfigProto.SubRegion)) {
            return super.equals(obj);
          }
          EDoc.ColumnProperties.GeoConfigProto.SubRegion other = (EDoc.ColumnProperties.GeoConfigProto.SubRegion) obj;

          if (hasCountry() != other.hasCountry()) return false;
          if (hasCountry()) {
            if (!getCountry()
                .equals(other.getCountry())) return false;
          }
          if (hasRegionName() != other.hasRegionName()) return false;
          if (hasRegionName()) {
            if (!getRegionName()
                .equals(other.getRegionName())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasCountry()) {
            hash = (37 * hash) + COUNTRY_FIELD_NUMBER;
            hash = (53 * hash) + getCountry().hashCode();
          }
          if (hasRegionName()) {
            hash = (37 * hash) + REGION_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getRegionName().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static EDoc.ColumnProperties.GeoConfigProto.SubRegion parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static EDoc.ColumnProperties.GeoConfigProto.SubRegion parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static EDoc.ColumnProperties.GeoConfigProto.SubRegion parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static EDoc.ColumnProperties.GeoConfigProto.SubRegion parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static EDoc.ColumnProperties.GeoConfigProto.SubRegion parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static EDoc.ColumnProperties.GeoConfigProto.SubRegion parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static EDoc.ColumnProperties.GeoConfigProto.SubRegion parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static EDoc.ColumnProperties.GeoConfigProto.SubRegion parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static EDoc.ColumnProperties.GeoConfigProto.SubRegion parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static EDoc.ColumnProperties.GeoConfigProto.SubRegion parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static EDoc.ColumnProperties.GeoConfigProto.SubRegion parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static EDoc.ColumnProperties.GeoConfigProto.SubRegion parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(EDoc.ColumnProperties.GeoConfigProto.SubRegion prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code ColumnProperties.GeoConfigProto.SubRegion}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:ColumnProperties.GeoConfigProto.SubRegion)
            EDoc.ColumnProperties.GeoConfigProto.SubRegionOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return EDoc.internal_static_ColumnProperties_GeoConfigProto_SubRegion_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return EDoc.internal_static_ColumnProperties_GeoConfigProto_SubRegion_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    EDoc.ColumnProperties.GeoConfigProto.SubRegion.class, EDoc.ColumnProperties.GeoConfigProto.SubRegion.Builder.class);
          }

          // Construct using EDoc.ColumnProperties.GeoConfigProto.SubRegion.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            country_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            regionName_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return EDoc.internal_static_ColumnProperties_GeoConfigProto_SubRegion_descriptor;
          }

          @java.lang.Override
          public EDoc.ColumnProperties.GeoConfigProto.SubRegion getDefaultInstanceForType() {
            return EDoc.ColumnProperties.GeoConfigProto.SubRegion.getDefaultInstance();
          }

          @java.lang.Override
          public EDoc.ColumnProperties.GeoConfigProto.SubRegion build() {
            EDoc.ColumnProperties.GeoConfigProto.SubRegion result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public EDoc.ColumnProperties.GeoConfigProto.SubRegion buildPartial() {
            EDoc.ColumnProperties.GeoConfigProto.SubRegion result = new EDoc.ColumnProperties.GeoConfigProto.SubRegion(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              to_bitField0_ |= 0x00000001;
            }
            result.country_ = country_;
            if (((from_bitField0_ & 0x00000002) != 0)) {
              to_bitField0_ |= 0x00000002;
            }
            result.regionName_ = regionName_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof EDoc.ColumnProperties.GeoConfigProto.SubRegion) {
              return mergeFrom((EDoc.ColumnProperties.GeoConfigProto.SubRegion)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(EDoc.ColumnProperties.GeoConfigProto.SubRegion other) {
            if (other == EDoc.ColumnProperties.GeoConfigProto.SubRegion.getDefaultInstance()) return this;
            if (other.hasCountry()) {
              bitField0_ |= 0x00000001;
              country_ = other.country_;
              onChanged();
            }
            if (other.hasRegionName()) {
              bitField0_ |= 0x00000002;
              regionName_ = other.regionName_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            EDoc.ColumnProperties.GeoConfigProto.SubRegion parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (EDoc.ColumnProperties.GeoConfigProto.SubRegion) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object country_ = "";
          /**
           * <code>optional string country = 1;</code>
           * @return Whether the country field is set.
           */
          public boolean hasCountry() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional string country = 1;</code>
           * @return The country.
           */
          public java.lang.String getCountry() {
            java.lang.Object ref = country_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                country_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string country = 1;</code>
           * @return The bytes for country.
           */
          public com.google.protobuf.ByteString
              getCountryBytes() {
            java.lang.Object ref = country_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              country_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string country = 1;</code>
           * @param value The country to set.
           * @return This builder for chaining.
           */
          public Builder setCountry(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            country_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string country = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearCountry() {
            bitField0_ = (bitField0_ & ~0x00000001);
            country_ = getDefaultInstance().getCountry();
            onChanged();
            return this;
          }
          /**
           * <code>optional string country = 1;</code>
           * @param value The bytes for country to set.
           * @return This builder for chaining.
           */
          public Builder setCountryBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            country_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object regionName_ = "";
          /**
           * <code>optional string region_name = 2;</code>
           * @return Whether the regionName field is set.
           */
          public boolean hasRegionName() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional string region_name = 2;</code>
           * @return The regionName.
           */
          public java.lang.String getRegionName() {
            java.lang.Object ref = regionName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                regionName_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string region_name = 2;</code>
           * @return The bytes for regionName.
           */
          public com.google.protobuf.ByteString
              getRegionNameBytes() {
            java.lang.Object ref = regionName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              regionName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string region_name = 2;</code>
           * @param value The regionName to set.
           * @return This builder for chaining.
           */
          public Builder setRegionName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            regionName_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string region_name = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearRegionName() {
            bitField0_ = (bitField0_ & ~0x00000002);
            regionName_ = getDefaultInstance().getRegionName();
            onChanged();
            return this;
          }
          /**
           * <code>optional string region_name = 2;</code>
           * @param value The bytes for regionName to set.
           * @return This builder for chaining.
           */
          public Builder setRegionNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            regionName_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:ColumnProperties.GeoConfigProto.SubRegion)
        }

        // @@protoc_insertion_point(class_scope:ColumnProperties.GeoConfigProto.SubRegion)
        private static final EDoc.ColumnProperties.GeoConfigProto.SubRegion DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new EDoc.ColumnProperties.GeoConfigProto.SubRegion();
        }

        public static EDoc.ColumnProperties.GeoConfigProto.SubRegion getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<SubRegion>
            PARSER = new com.google.protobuf.AbstractParser<SubRegion>() {
          @java.lang.Override
          public SubRegion parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new SubRegion(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<SubRegion> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SubRegion> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public EDoc.ColumnProperties.GeoConfigProto.SubRegion getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int LATITUDE_FIELD_NUMBER = 1;
      private boolean latitude_;
      /**
       * <pre>
       * TODO(Akshay): Add support for remaining allowed types:
       *  { country, state, city, zipcode, latitude, longitude }
       * </pre>
       *
       * <code>optional bool latitude = 1;</code>
       * @return Whether the latitude field is set.
       */
      @java.lang.Override
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * TODO(Akshay): Add support for remaining allowed types:
       *  { country, state, city, zipcode, latitude, longitude }
       * </pre>
       *
       * <code>optional bool latitude = 1;</code>
       * @return The latitude.
       */
      @java.lang.Override
      public boolean getLatitude() {
        return latitude_;
      }

      public static final int LONGITUDE_FIELD_NUMBER = 2;
      private boolean longitude_;
      /**
       * <code>optional bool longitude = 2;</code>
       * @return Whether the longitude field is set.
       */
      @java.lang.Override
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional bool longitude = 2;</code>
       * @return The longitude.
       */
      @java.lang.Override
      public boolean getLongitude() {
        return longitude_;
      }

      public static final int COUNTRY_FIELD_NUMBER = 3;
      private boolean country_;
      /**
       * <code>optional bool country = 3;</code>
       * @return Whether the country field is set.
       */
      @java.lang.Override
      public boolean hasCountry() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bool country = 3;</code>
       * @return The country.
       */
      @java.lang.Override
      public boolean getCountry() {
        return country_;
      }

      public static final int REGION_NAME_FIELD_NUMBER = 4;
      private EDoc.ColumnProperties.GeoConfigProto.SubRegion regionName_;
      /**
       * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
       * @return Whether the regionName field is set.
       */
      @java.lang.Override
      public boolean hasRegionName() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
       * @return The regionName.
       */
      @java.lang.Override
      public EDoc.ColumnProperties.GeoConfigProto.SubRegion getRegionName() {
        return regionName_ == null ? EDoc.ColumnProperties.GeoConfigProto.SubRegion.getDefaultInstance() : regionName_;
      }
      /**
       * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
       */
      @java.lang.Override
      public EDoc.ColumnProperties.GeoConfigProto.SubRegionOrBuilder getRegionNameOrBuilder() {
        return regionName_ == null ? EDoc.ColumnProperties.GeoConfigProto.SubRegion.getDefaultInstance() : regionName_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeBool(1, latitude_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeBool(2, longitude_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeBool(3, country_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeMessage(4, getRegionName());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, latitude_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, longitude_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, country_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getRegionName());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.ColumnProperties.GeoConfigProto)) {
          return super.equals(obj);
        }
        EDoc.ColumnProperties.GeoConfigProto other = (EDoc.ColumnProperties.GeoConfigProto) obj;

        if (hasLatitude() != other.hasLatitude()) return false;
        if (hasLatitude()) {
          if (getLatitude()
              != other.getLatitude()) return false;
        }
        if (hasLongitude() != other.hasLongitude()) return false;
        if (hasLongitude()) {
          if (getLongitude()
              != other.getLongitude()) return false;
        }
        if (hasCountry() != other.hasCountry()) return false;
        if (hasCountry()) {
          if (getCountry()
              != other.getCountry()) return false;
        }
        if (hasRegionName() != other.hasRegionName()) return false;
        if (hasRegionName()) {
          if (!getRegionName()
              .equals(other.getRegionName())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasLatitude()) {
          hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getLatitude());
        }
        if (hasLongitude()) {
          hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getLongitude());
        }
        if (hasCountry()) {
          hash = (37 * hash) + COUNTRY_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getCountry());
        }
        if (hasRegionName()) {
          hash = (37 * hash) + REGION_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getRegionName().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.ColumnProperties.GeoConfigProto parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ColumnProperties.GeoConfigProto parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ColumnProperties.GeoConfigProto parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ColumnProperties.GeoConfigProto parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ColumnProperties.GeoConfigProto parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ColumnProperties.GeoConfigProto parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ColumnProperties.GeoConfigProto parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ColumnProperties.GeoConfigProto parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ColumnProperties.GeoConfigProto parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.ColumnProperties.GeoConfigProto parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ColumnProperties.GeoConfigProto parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ColumnProperties.GeoConfigProto parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.ColumnProperties.GeoConfigProto prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * For columns that indicate location, we need to specify what each value
       * in that column represents.
       * e.g. a column can be labeled as,
       *      a. a country
       *      b. a state in US
       *      c. a city in california(US)
       *      d. a latitude/longitude value
       *      e. a zipcode
       * TODO(Akshay): custom descriptors also possible.
       * This information can be expressed using the GeoConfigProto struct.
       * </pre>
       *
       * Protobuf type {@code ColumnProperties.GeoConfigProto}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ColumnProperties.GeoConfigProto)
          EDoc.ColumnProperties.GeoConfigProtoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_ColumnProperties_GeoConfigProto_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_ColumnProperties_GeoConfigProto_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.ColumnProperties.GeoConfigProto.class, EDoc.ColumnProperties.GeoConfigProto.Builder.class);
        }

        // Construct using EDoc.ColumnProperties.GeoConfigProto.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getRegionNameFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          latitude_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          longitude_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          country_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          if (regionNameBuilder_ == null) {
            regionName_ = null;
          } else {
            regionNameBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_ColumnProperties_GeoConfigProto_descriptor;
        }

        @java.lang.Override
        public EDoc.ColumnProperties.GeoConfigProto getDefaultInstanceForType() {
          return EDoc.ColumnProperties.GeoConfigProto.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.ColumnProperties.GeoConfigProto build() {
          EDoc.ColumnProperties.GeoConfigProto result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.ColumnProperties.GeoConfigProto buildPartial() {
          EDoc.ColumnProperties.GeoConfigProto result = new EDoc.ColumnProperties.GeoConfigProto(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.latitude_ = latitude_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.longitude_ = longitude_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.country_ = country_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            if (regionNameBuilder_ == null) {
              result.regionName_ = regionName_;
            } else {
              result.regionName_ = regionNameBuilder_.build();
            }
            to_bitField0_ |= 0x00000008;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.ColumnProperties.GeoConfigProto) {
            return mergeFrom((EDoc.ColumnProperties.GeoConfigProto)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.ColumnProperties.GeoConfigProto other) {
          if (other == EDoc.ColumnProperties.GeoConfigProto.getDefaultInstance()) return this;
          if (other.hasLatitude()) {
            setLatitude(other.getLatitude());
          }
          if (other.hasLongitude()) {
            setLongitude(other.getLongitude());
          }
          if (other.hasCountry()) {
            setCountry(other.getCountry());
          }
          if (other.hasRegionName()) {
            mergeRegionName(other.getRegionName());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.ColumnProperties.GeoConfigProto parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.ColumnProperties.GeoConfigProto) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean latitude_ ;
        /**
         * <pre>
         * TODO(Akshay): Add support for remaining allowed types:
         *  { country, state, city, zipcode, latitude, longitude }
         * </pre>
         *
         * <code>optional bool latitude = 1;</code>
         * @return Whether the latitude field is set.
         */
        @java.lang.Override
        public boolean hasLatitude() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * TODO(Akshay): Add support for remaining allowed types:
         *  { country, state, city, zipcode, latitude, longitude }
         * </pre>
         *
         * <code>optional bool latitude = 1;</code>
         * @return The latitude.
         */
        @java.lang.Override
        public boolean getLatitude() {
          return latitude_;
        }
        /**
         * <pre>
         * TODO(Akshay): Add support for remaining allowed types:
         *  { country, state, city, zipcode, latitude, longitude }
         * </pre>
         *
         * <code>optional bool latitude = 1;</code>
         * @param value The latitude to set.
         * @return This builder for chaining.
         */
        public Builder setLatitude(boolean value) {
          bitField0_ |= 0x00000001;
          latitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TODO(Akshay): Add support for remaining allowed types:
         *  { country, state, city, zipcode, latitude, longitude }
         * </pre>
         *
         * <code>optional bool latitude = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearLatitude() {
          bitField0_ = (bitField0_ & ~0x00000001);
          latitude_ = false;
          onChanged();
          return this;
        }

        private boolean longitude_ ;
        /**
         * <code>optional bool longitude = 2;</code>
         * @return Whether the longitude field is set.
         */
        @java.lang.Override
        public boolean hasLongitude() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional bool longitude = 2;</code>
         * @return The longitude.
         */
        @java.lang.Override
        public boolean getLongitude() {
          return longitude_;
        }
        /**
         * <code>optional bool longitude = 2;</code>
         * @param value The longitude to set.
         * @return This builder for chaining.
         */
        public Builder setLongitude(boolean value) {
          bitField0_ |= 0x00000002;
          longitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool longitude = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearLongitude() {
          bitField0_ = (bitField0_ & ~0x00000002);
          longitude_ = false;
          onChanged();
          return this;
        }

        private boolean country_ ;
        /**
         * <code>optional bool country = 3;</code>
         * @return Whether the country field is set.
         */
        @java.lang.Override
        public boolean hasCountry() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional bool country = 3;</code>
         * @return The country.
         */
        @java.lang.Override
        public boolean getCountry() {
          return country_;
        }
        /**
         * <code>optional bool country = 3;</code>
         * @param value The country to set.
         * @return This builder for chaining.
         */
        public Builder setCountry(boolean value) {
          bitField0_ |= 0x00000004;
          country_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool country = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearCountry() {
          bitField0_ = (bitField0_ & ~0x00000004);
          country_ = false;
          onChanged();
          return this;
        }

        private EDoc.ColumnProperties.GeoConfigProto.SubRegion regionName_;
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ColumnProperties.GeoConfigProto.SubRegion, EDoc.ColumnProperties.GeoConfigProto.SubRegion.Builder, EDoc.ColumnProperties.GeoConfigProto.SubRegionOrBuilder> regionNameBuilder_;
        /**
         * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
         * @return Whether the regionName field is set.
         */
        public boolean hasRegionName() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
         * @return The regionName.
         */
        public EDoc.ColumnProperties.GeoConfigProto.SubRegion getRegionName() {
          if (regionNameBuilder_ == null) {
            return regionName_ == null ? EDoc.ColumnProperties.GeoConfigProto.SubRegion.getDefaultInstance() : regionName_;
          } else {
            return regionNameBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
         */
        public Builder setRegionName(EDoc.ColumnProperties.GeoConfigProto.SubRegion value) {
          if (regionNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            regionName_ = value;
            onChanged();
          } else {
            regionNameBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
         */
        public Builder setRegionName(
            EDoc.ColumnProperties.GeoConfigProto.SubRegion.Builder builderForValue) {
          if (regionNameBuilder_ == null) {
            regionName_ = builderForValue.build();
            onChanged();
          } else {
            regionNameBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
         */
        public Builder mergeRegionName(EDoc.ColumnProperties.GeoConfigProto.SubRegion value) {
          if (regionNameBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0) &&
                regionName_ != null &&
                regionName_ != EDoc.ColumnProperties.GeoConfigProto.SubRegion.getDefaultInstance()) {
              regionName_ =
                EDoc.ColumnProperties.GeoConfigProto.SubRegion.newBuilder(regionName_).mergeFrom(value).buildPartial();
            } else {
              regionName_ = value;
            }
            onChanged();
          } else {
            regionNameBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
         */
        public Builder clearRegionName() {
          if (regionNameBuilder_ == null) {
            regionName_ = null;
            onChanged();
          } else {
            regionNameBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
         */
        public EDoc.ColumnProperties.GeoConfigProto.SubRegion.Builder getRegionNameBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getRegionNameFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
         */
        public EDoc.ColumnProperties.GeoConfigProto.SubRegionOrBuilder getRegionNameOrBuilder() {
          if (regionNameBuilder_ != null) {
            return regionNameBuilder_.getMessageOrBuilder();
          } else {
            return regionName_ == null ?
                EDoc.ColumnProperties.GeoConfigProto.SubRegion.getDefaultInstance() : regionName_;
          }
        }
        /**
         * <code>optional .ColumnProperties.GeoConfigProto.SubRegion region_name = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ColumnProperties.GeoConfigProto.SubRegion, EDoc.ColumnProperties.GeoConfigProto.SubRegion.Builder, EDoc.ColumnProperties.GeoConfigProto.SubRegionOrBuilder> 
            getRegionNameFieldBuilder() {
          if (regionNameBuilder_ == null) {
            regionNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                EDoc.ColumnProperties.GeoConfigProto.SubRegion, EDoc.ColumnProperties.GeoConfigProto.SubRegion.Builder, EDoc.ColumnProperties.GeoConfigProto.SubRegionOrBuilder>(
                    getRegionName(),
                    getParentForChildren(),
                    isClean());
            regionName_ = null;
          }
          return regionNameBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:ColumnProperties.GeoConfigProto)
      }

      // @@protoc_insertion_point(class_scope:ColumnProperties.GeoConfigProto)
      private static final EDoc.ColumnProperties.GeoConfigProto DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.ColumnProperties.GeoConfigProto();
      }

      public static EDoc.ColumnProperties.GeoConfigProto getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<GeoConfigProto>
          PARSER = new com.google.protobuf.AbstractParser<GeoConfigProto>() {
        @java.lang.Override
        public GeoConfigProto parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new GeoConfigProto(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<GeoConfigProto> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<GeoConfigProto> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.ColumnProperties.GeoConfigProto getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int COLUMN_TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object columnType_;
    /**
     * <pre>
     * Type of column - attribute or measure.
     * </pre>
     *
     * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
     * @return Whether the columnType field is set.
     */
    @java.lang.Override
    public boolean hasColumnType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Type of column - attribute or measure.
     * </pre>
     *
     * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
     * @return The columnType.
     */
    @java.lang.Override
    public java.lang.String getColumnType() {
      java.lang.Object ref = columnType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          columnType_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Type of column - attribute or measure.
     * </pre>
     *
     * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
     * @return The bytes for columnType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getColumnTypeBytes() {
      java.lang.Object ref = columnType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        columnType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AGGREGATION_FIELD_NUMBER = 2;
    private volatile java.lang.Object aggregation_;
    /**
     * <pre>
     * Default aggregation operator for the column.
     * Allowed values: {none, count, count_distinct, sum, average, min, max,
     *                  variance, std_deviation}
     * Note: Casing is not important.
     * </pre>
     *
     * <code>optional string aggregation = 2 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
     * @return Whether the aggregation field is set.
     */
    @java.lang.Override
    public boolean hasAggregation() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Default aggregation operator for the column.
     * Allowed values: {none, count, count_distinct, sum, average, min, max,
     *                  variance, std_deviation}
     * Note: Casing is not important.
     * </pre>
     *
     * <code>optional string aggregation = 2 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
     * @return The aggregation.
     */
    @java.lang.Override
    public java.lang.String getAggregation() {
      java.lang.Object ref = aggregation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          aggregation_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Default aggregation operator for the column.
     * Allowed values: {none, count, count_distinct, sum, average, min, max,
     *                  variance, std_deviation}
     * Note: Casing is not important.
     * </pre>
     *
     * <code>optional string aggregation = 2 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
     * @return The bytes for aggregation.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAggregationBytes() {
      java.lang.Object ref = aggregation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        aggregation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDEX_TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object indexType_;
    /**
     * <pre>
     * Specifies how values of the column will be indexed.
     * Allowed values: {default, dont_index, prefix_only, prefix_and_word_substring, prefix_and_substring}
     * Note: Casing is not important.
     * </pre>
     *
     * <code>optional string index_type = 3 [(.Annotation.allowed_values_key) = "edoc.index_type"];</code>
     * @return Whether the indexType field is set.
     */
    @java.lang.Override
    public boolean hasIndexType() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Specifies how values of the column will be indexed.
     * Allowed values: {default, dont_index, prefix_only, prefix_and_word_substring, prefix_and_substring}
     * Note: Casing is not important.
     * </pre>
     *
     * <code>optional string index_type = 3 [(.Annotation.allowed_values_key) = "edoc.index_type"];</code>
     * @return The indexType.
     */
    @java.lang.Override
    public java.lang.String getIndexType() {
      java.lang.Object ref = indexType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          indexType_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Specifies how values of the column will be indexed.
     * Allowed values: {default, dont_index, prefix_only, prefix_and_word_substring, prefix_and_substring}
     * Note: Casing is not important.
     * </pre>
     *
     * <code>optional string index_type = 3 [(.Annotation.allowed_values_key) = "edoc.index_type"];</code>
     * @return The bytes for indexType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIndexTypeBytes() {
      java.lang.Object ref = indexType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        indexType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDEX_PRIORITY_FIELD_NUMBER = 4;
    private double indexPriority_;
    /**
     * <pre>
     * Static weight of the column in the index.
     * </pre>
     *
     * <code>optional double index_priority = 4 [default = 1];</code>
     * @return Whether the indexPriority field is set.
     */
    @java.lang.Override
    public boolean hasIndexPriority() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Static weight of the column in the index.
     * </pre>
     *
     * <code>optional double index_priority = 4 [default = 1];</code>
     * @return The indexPriority.
     */
    @java.lang.Override
    public double getIndexPriority() {
      return indexPriority_;
    }

    public static final int SYNONYMS_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList synonyms_;
    /**
     * <pre>
     * List of synonyms that can be used to refer to this column.  Alternate
     * names for the column.
     * </pre>
     *
     * <code>repeated string synonyms = 5;</code>
     * @return A list containing the synonyms.
     */
    public com.google.protobuf.ProtocolStringList
        getSynonymsList() {
      return synonyms_;
    }
    /**
     * <pre>
     * List of synonyms that can be used to refer to this column.  Alternate
     * names for the column.
     * </pre>
     *
     * <code>repeated string synonyms = 5;</code>
     * @return The count of synonyms.
     */
    public int getSynonymsCount() {
      return synonyms_.size();
    }
    /**
     * <pre>
     * List of synonyms that can be used to refer to this column.  Alternate
     * names for the column.
     * </pre>
     *
     * <code>repeated string synonyms = 5;</code>
     * @param index The index of the element to return.
     * @return The synonyms at the given index.
     */
    public java.lang.String getSynonyms(int index) {
      return synonyms_.get(index);
    }
    /**
     * <pre>
     * List of synonyms that can be used to refer to this column.  Alternate
     * names for the column.
     * </pre>
     *
     * <code>repeated string synonyms = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the synonyms at the given index.
     */
    public com.google.protobuf.ByteString
        getSynonymsBytes(int index) {
      return synonyms_.getByteString(index);
    }

    public static final int IS_ATTRIBUTION_DIMENSION_FIELD_NUMBER = 6;
    private boolean isAttributionDimension_;
    /**
     * <pre>
     * True for primary key columns of shared dimension tables that should always
     * be included in chasm trap queries.
     * </pre>
     *
     * <code>optional bool is_attribution_dimension = 6;</code>
     * @return Whether the isAttributionDimension field is set.
     */
    @java.lang.Override
    public boolean hasIsAttributionDimension() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * True for primary key columns of shared dimension tables that should always
     * be included in chasm trap queries.
     * </pre>
     *
     * <code>optional bool is_attribution_dimension = 6;</code>
     * @return The isAttributionDimension.
     */
    @java.lang.Override
    public boolean getIsAttributionDimension() {
      return isAttributionDimension_;
    }

    public static final int IS_ADDITIVE_FIELD_NUMBER = 7;
    private boolean isAdditive_;
    /**
     * <pre>
     * Numeric columns can be marked non additive to disallow aggregations on
     * them.  This is useful in cases such as a numeric primary key column.
     * </pre>
     *
     * <code>optional bool is_additive = 7;</code>
     * @return Whether the isAdditive field is set.
     */
    @java.lang.Override
    public boolean hasIsAdditive() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Numeric columns can be marked non additive to disallow aggregations on
     * them.  This is useful in cases such as a numeric primary key column.
     * </pre>
     *
     * <code>optional bool is_additive = 7;</code>
     * @return The isAdditive.
     */
    @java.lang.Override
    public boolean getIsAdditive() {
      return isAdditive_;
    }

    public static final int CALENDAR_FIELD_NUMBER = 8;
    private volatile java.lang.Object calendar_;
    /**
     * <pre>
     * The name of the calendar to use for the given column.
     * </pre>
     *
     * <code>optional string calendar = 8;</code>
     * @return Whether the calendar field is set.
     */
    @java.lang.Override
    public boolean hasCalendar() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The name of the calendar to use for the given column.
     * </pre>
     *
     * <code>optional string calendar = 8;</code>
     * @return The calendar.
     */
    @java.lang.Override
    public java.lang.String getCalendar() {
      java.lang.Object ref = calendar_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          calendar_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * The name of the calendar to use for the given column.
     * </pre>
     *
     * <code>optional string calendar = 8;</code>
     * @return The bytes for calendar.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCalendarBytes() {
      java.lang.Object ref = calendar_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        calendar_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FORMAT_PATTERN_FIELD_NUMBER = 9;
    private volatile java.lang.Object formatPattern_;
    /**
     * <pre>
     * Formatting specification for the column. e.g. "##0.##E0" for number
     * columns, "MM-yyyy" for date columns.
     * </pre>
     *
     * <code>optional string format_pattern = 9;</code>
     * @return Whether the formatPattern field is set.
     */
    @java.lang.Override
    public boolean hasFormatPattern() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Formatting specification for the column. e.g. "##0.##E0" for number
     * columns, "MM-yyyy" for date columns.
     * </pre>
     *
     * <code>optional string format_pattern = 9;</code>
     * @return The formatPattern.
     */
    @java.lang.Override
    public java.lang.String getFormatPattern() {
      java.lang.Object ref = formatPattern_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          formatPattern_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Formatting specification for the column. e.g. "##0.##E0" for number
     * columns, "MM-yyyy" for date columns.
     * </pre>
     *
     * <code>optional string format_pattern = 9;</code>
     * @return The bytes for formatPattern.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFormatPatternBytes() {
      java.lang.Object ref = formatPattern_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        formatPattern_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CURRENCY_TYPE_FIELD_NUMBER = 10;
    private EDoc.ColumnProperties.CurrencyFormat currencyType_;
    /**
     * <pre>
     * If the column is a currency column, its formatting specification is
     * specified by CurrencyFormat.
     * </pre>
     *
     * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
     * @return Whether the currencyType field is set.
     */
    @java.lang.Override
    public boolean hasCurrencyType() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * If the column is a currency column, its formatting specification is
     * specified by CurrencyFormat.
     * </pre>
     *
     * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
     * @return The currencyType.
     */
    @java.lang.Override
    public EDoc.ColumnProperties.CurrencyFormat getCurrencyType() {
      return currencyType_ == null ? EDoc.ColumnProperties.CurrencyFormat.getDefaultInstance() : currencyType_;
    }
    /**
     * <pre>
     * If the column is a currency column, its formatting specification is
     * specified by CurrencyFormat.
     * </pre>
     *
     * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
     */
    @java.lang.Override
    public EDoc.ColumnProperties.CurrencyFormatOrBuilder getCurrencyTypeOrBuilder() {
      return currencyType_ == null ? EDoc.ColumnProperties.CurrencyFormat.getDefaultInstance() : currencyType_;
    }

    public static final int IS_HIDDEN_FIELD_NUMBER = 11;
    private boolean isHidden_;
    /**
     * <pre>
     * Property to mark if the column is hidden.
     * </pre>
     *
     * <code>optional bool is_hidden = 11;</code>
     * @return Whether the isHidden field is set.
     */
    @java.lang.Override
    public boolean hasIsHidden() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * Property to mark if the column is hidden.
     * </pre>
     *
     * <code>optional bool is_hidden = 11;</code>
     * @return The isHidden.
     */
    @java.lang.Override
    public boolean getIsHidden() {
      return isHidden_;
    }

    public static final int GEO_CONFIG_FIELD_NUMBER = 12;
    private EDoc.ColumnProperties.GeoConfigProto geoConfig_;
    /**
     * <pre>
     * config object to define the geographic role of the column's value.
     * </pre>
     *
     * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
     * @return Whether the geoConfig field is set.
     */
    @java.lang.Override
    public boolean hasGeoConfig() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * config object to define the geographic role of the column's value.
     * </pre>
     *
     * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
     * @return The geoConfig.
     */
    @java.lang.Override
    public EDoc.ColumnProperties.GeoConfigProto getGeoConfig() {
      return geoConfig_ == null ? EDoc.ColumnProperties.GeoConfigProto.getDefaultInstance() : geoConfig_;
    }
    /**
     * <pre>
     * config object to define the geographic role of the column's value.
     * </pre>
     *
     * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
     */
    @java.lang.Override
    public EDoc.ColumnProperties.GeoConfigProtoOrBuilder getGeoConfigOrBuilder() {
      return geoConfig_ == null ? EDoc.ColumnProperties.GeoConfigProto.getDefaultInstance() : geoConfig_;
    }

    public static final int SPOTIQ_PREFERENCE_FIELD_NUMBER = 13;
    private volatile java.lang.Object spotiqPreference_;
    /**
     * <pre>
     * Specifies spotIQ preference for that column while running analysis
     * </pre>
     *
     * <code>optional string spotiq_preference = 13;</code>
     * @return Whether the spotiqPreference field is set.
     */
    @java.lang.Override
    public boolean hasSpotiqPreference() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * Specifies spotIQ preference for that column while running analysis
     * </pre>
     *
     * <code>optional string spotiq_preference = 13;</code>
     * @return The spotiqPreference.
     */
    @java.lang.Override
    public java.lang.String getSpotiqPreference() {
      java.lang.Object ref = spotiqPreference_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          spotiqPreference_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Specifies spotIQ preference for that column while running analysis
     * </pre>
     *
     * <code>optional string spotiq_preference = 13;</code>
     * @return The bytes for spotiqPreference.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSpotiqPreferenceBytes() {
      java.lang.Object ref = spotiqPreference_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        spotiqPreference_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEARCH_IQ_PREFERRED_FIELD_NUMBER = 14;
    private boolean searchIqPreferred_;
    /**
     * <pre>
     * Flag to specify if the column is preferred for search iq.
     * </pre>
     *
     * <code>optional bool search_iq_preferred = 14;</code>
     * @return Whether the searchIqPreferred field is set.
     */
    @java.lang.Override
    public boolean hasSearchIqPreferred() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * Flag to specify if the column is preferred for search iq.
     * </pre>
     *
     * <code>optional bool search_iq_preferred = 14;</code>
     * @return The searchIqPreferred.
     */
    @java.lang.Override
    public boolean getSearchIqPreferred() {
      return searchIqPreferred_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, columnType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, aggregation_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, indexType_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, indexPriority_);
      }
      for (int i = 0; i < synonyms_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, synonyms_.getRaw(i));
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBool(6, isAttributionDimension_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeBool(7, isAdditive_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, calendar_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, formatPattern_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeMessage(10, getCurrencyType());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeBool(11, isHidden_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeMessage(12, getGeoConfig());
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, spotiqPreference_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeBool(14, searchIqPreferred_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, columnType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, aggregation_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, indexType_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, indexPriority_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < synonyms_.size(); i++) {
          dataSize += computeStringSizeNoTag(synonyms_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSynonymsList().size();
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isAttributionDimension_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isAdditive_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, calendar_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, formatPattern_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getCurrencyType());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, isHidden_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getGeoConfig());
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, spotiqPreference_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, searchIqPreferred_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.ColumnProperties)) {
        return super.equals(obj);
      }
      EDoc.ColumnProperties other = (EDoc.ColumnProperties) obj;

      if (hasColumnType() != other.hasColumnType()) return false;
      if (hasColumnType()) {
        if (!getColumnType()
            .equals(other.getColumnType())) return false;
      }
      if (hasAggregation() != other.hasAggregation()) return false;
      if (hasAggregation()) {
        if (!getAggregation()
            .equals(other.getAggregation())) return false;
      }
      if (hasIndexType() != other.hasIndexType()) return false;
      if (hasIndexType()) {
        if (!getIndexType()
            .equals(other.getIndexType())) return false;
      }
      if (hasIndexPriority() != other.hasIndexPriority()) return false;
      if (hasIndexPriority()) {
        if (java.lang.Double.doubleToLongBits(getIndexPriority())
            != java.lang.Double.doubleToLongBits(
                other.getIndexPriority())) return false;
      }
      if (!getSynonymsList()
          .equals(other.getSynonymsList())) return false;
      if (hasIsAttributionDimension() != other.hasIsAttributionDimension()) return false;
      if (hasIsAttributionDimension()) {
        if (getIsAttributionDimension()
            != other.getIsAttributionDimension()) return false;
      }
      if (hasIsAdditive() != other.hasIsAdditive()) return false;
      if (hasIsAdditive()) {
        if (getIsAdditive()
            != other.getIsAdditive()) return false;
      }
      if (hasCalendar() != other.hasCalendar()) return false;
      if (hasCalendar()) {
        if (!getCalendar()
            .equals(other.getCalendar())) return false;
      }
      if (hasFormatPattern() != other.hasFormatPattern()) return false;
      if (hasFormatPattern()) {
        if (!getFormatPattern()
            .equals(other.getFormatPattern())) return false;
      }
      if (hasCurrencyType() != other.hasCurrencyType()) return false;
      if (hasCurrencyType()) {
        if (!getCurrencyType()
            .equals(other.getCurrencyType())) return false;
      }
      if (hasIsHidden() != other.hasIsHidden()) return false;
      if (hasIsHidden()) {
        if (getIsHidden()
            != other.getIsHidden()) return false;
      }
      if (hasGeoConfig() != other.hasGeoConfig()) return false;
      if (hasGeoConfig()) {
        if (!getGeoConfig()
            .equals(other.getGeoConfig())) return false;
      }
      if (hasSpotiqPreference() != other.hasSpotiqPreference()) return false;
      if (hasSpotiqPreference()) {
        if (!getSpotiqPreference()
            .equals(other.getSpotiqPreference())) return false;
      }
      if (hasSearchIqPreferred() != other.hasSearchIqPreferred()) return false;
      if (hasSearchIqPreferred()) {
        if (getSearchIqPreferred()
            != other.getSearchIqPreferred()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasColumnType()) {
        hash = (37 * hash) + COLUMN_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getColumnType().hashCode();
      }
      if (hasAggregation()) {
        hash = (37 * hash) + AGGREGATION_FIELD_NUMBER;
        hash = (53 * hash) + getAggregation().hashCode();
      }
      if (hasIndexType()) {
        hash = (37 * hash) + INDEX_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getIndexType().hashCode();
      }
      if (hasIndexPriority()) {
        hash = (37 * hash) + INDEX_PRIORITY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getIndexPriority()));
      }
      if (getSynonymsCount() > 0) {
        hash = (37 * hash) + SYNONYMS_FIELD_NUMBER;
        hash = (53 * hash) + getSynonymsList().hashCode();
      }
      if (hasIsAttributionDimension()) {
        hash = (37 * hash) + IS_ATTRIBUTION_DIMENSION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsAttributionDimension());
      }
      if (hasIsAdditive()) {
        hash = (37 * hash) + IS_ADDITIVE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsAdditive());
      }
      if (hasCalendar()) {
        hash = (37 * hash) + CALENDAR_FIELD_NUMBER;
        hash = (53 * hash) + getCalendar().hashCode();
      }
      if (hasFormatPattern()) {
        hash = (37 * hash) + FORMAT_PATTERN_FIELD_NUMBER;
        hash = (53 * hash) + getFormatPattern().hashCode();
      }
      if (hasCurrencyType()) {
        hash = (37 * hash) + CURRENCY_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getCurrencyType().hashCode();
      }
      if (hasIsHidden()) {
        hash = (37 * hash) + IS_HIDDEN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsHidden());
      }
      if (hasGeoConfig()) {
        hash = (37 * hash) + GEO_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getGeoConfig().hashCode();
      }
      if (hasSpotiqPreference()) {
        hash = (37 * hash) + SPOTIQ_PREFERENCE_FIELD_NUMBER;
        hash = (53 * hash) + getSpotiqPreference().hashCode();
      }
      if (hasSearchIqPreferred()) {
        hash = (37 * hash) + SEARCH_IQ_PREFERRED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSearchIqPreferred());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.ColumnProperties parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ColumnProperties parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ColumnProperties parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ColumnProperties parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ColumnProperties parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ColumnProperties parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ColumnProperties parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.ColumnProperties parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.ColumnProperties parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.ColumnProperties parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.ColumnProperties parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.ColumnProperties parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.ColumnProperties prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Column definition to use in the worksheet and table.
     * </pre>
     *
     * Protobuf type {@code ColumnProperties}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ColumnProperties)
        EDoc.ColumnPropertiesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ColumnProperties_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ColumnProperties_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ColumnProperties.class, EDoc.ColumnProperties.Builder.class);
      }

      // Construct using EDoc.ColumnProperties.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCurrencyTypeFieldBuilder();
          getGeoConfigFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        columnType_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        aggregation_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        indexType_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        indexPriority_ = 1D;
        bitField0_ = (bitField0_ & ~0x00000008);
        synonyms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        isAttributionDimension_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        isAdditive_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        calendar_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        formatPattern_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        if (currencyTypeBuilder_ == null) {
          currencyType_ = null;
        } else {
          currencyTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        isHidden_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (geoConfigBuilder_ == null) {
          geoConfig_ = null;
        } else {
          geoConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        spotiqPreference_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        searchIqPreferred_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_ColumnProperties_descriptor;
      }

      @java.lang.Override
      public EDoc.ColumnProperties getDefaultInstanceForType() {
        return EDoc.ColumnProperties.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.ColumnProperties build() {
        EDoc.ColumnProperties result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.ColumnProperties buildPartial() {
        EDoc.ColumnProperties result = new EDoc.ColumnProperties(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.columnType_ = columnType_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.aggregation_ = aggregation_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.indexType_ = indexType_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.indexPriority_ = indexPriority_;
        if (((bitField0_ & 0x00000010) != 0)) {
          synonyms_ = synonyms_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.synonyms_ = synonyms_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.isAttributionDimension_ = isAttributionDimension_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.isAdditive_ = isAdditive_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.calendar_ = calendar_;
        if (((from_bitField0_ & 0x00000100) != 0)) {
          to_bitField0_ |= 0x00000080;
        }
        result.formatPattern_ = formatPattern_;
        if (((from_bitField0_ & 0x00000200) != 0)) {
          if (currencyTypeBuilder_ == null) {
            result.currencyType_ = currencyType_;
          } else {
            result.currencyType_ = currencyTypeBuilder_.build();
          }
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.isHidden_ = isHidden_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          if (geoConfigBuilder_ == null) {
            result.geoConfig_ = geoConfig_;
          } else {
            result.geoConfig_ = geoConfigBuilder_.build();
          }
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          to_bitField0_ |= 0x00000800;
        }
        result.spotiqPreference_ = spotiqPreference_;
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.searchIqPreferred_ = searchIqPreferred_;
          to_bitField0_ |= 0x00001000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.ColumnProperties) {
          return mergeFrom((EDoc.ColumnProperties)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.ColumnProperties other) {
        if (other == EDoc.ColumnProperties.getDefaultInstance()) return this;
        if (other.hasColumnType()) {
          bitField0_ |= 0x00000001;
          columnType_ = other.columnType_;
          onChanged();
        }
        if (other.hasAggregation()) {
          bitField0_ |= 0x00000002;
          aggregation_ = other.aggregation_;
          onChanged();
        }
        if (other.hasIndexType()) {
          bitField0_ |= 0x00000004;
          indexType_ = other.indexType_;
          onChanged();
        }
        if (other.hasIndexPriority()) {
          setIndexPriority(other.getIndexPriority());
        }
        if (!other.synonyms_.isEmpty()) {
          if (synonyms_.isEmpty()) {
            synonyms_ = other.synonyms_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSynonymsIsMutable();
            synonyms_.addAll(other.synonyms_);
          }
          onChanged();
        }
        if (other.hasIsAttributionDimension()) {
          setIsAttributionDimension(other.getIsAttributionDimension());
        }
        if (other.hasIsAdditive()) {
          setIsAdditive(other.getIsAdditive());
        }
        if (other.hasCalendar()) {
          bitField0_ |= 0x00000080;
          calendar_ = other.calendar_;
          onChanged();
        }
        if (other.hasFormatPattern()) {
          bitField0_ |= 0x00000100;
          formatPattern_ = other.formatPattern_;
          onChanged();
        }
        if (other.hasCurrencyType()) {
          mergeCurrencyType(other.getCurrencyType());
        }
        if (other.hasIsHidden()) {
          setIsHidden(other.getIsHidden());
        }
        if (other.hasGeoConfig()) {
          mergeGeoConfig(other.getGeoConfig());
        }
        if (other.hasSpotiqPreference()) {
          bitField0_ |= 0x00001000;
          spotiqPreference_ = other.spotiqPreference_;
          onChanged();
        }
        if (other.hasSearchIqPreferred()) {
          setSearchIqPreferred(other.getSearchIqPreferred());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.ColumnProperties parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.ColumnProperties) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object columnType_ = "";
      /**
       * <pre>
       * Type of column - attribute or measure.
       * </pre>
       *
       * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
       * @return Whether the columnType field is set.
       */
      public boolean hasColumnType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Type of column - attribute or measure.
       * </pre>
       *
       * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
       * @return The columnType.
       */
      public java.lang.String getColumnType() {
        java.lang.Object ref = columnType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            columnType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Type of column - attribute or measure.
       * </pre>
       *
       * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
       * @return The bytes for columnType.
       */
      public com.google.protobuf.ByteString
          getColumnTypeBytes() {
        java.lang.Object ref = columnType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          columnType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Type of column - attribute or measure.
       * </pre>
       *
       * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
       * @param value The columnType to set.
       * @return This builder for chaining.
       */
      public Builder setColumnType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        columnType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of column - attribute or measure.
       * </pre>
       *
       * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearColumnType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        columnType_ = getDefaultInstance().getColumnType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of column - attribute or measure.
       * </pre>
       *
       * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
       * @param value The bytes for columnType to set.
       * @return This builder for chaining.
       */
      public Builder setColumnTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        columnType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object aggregation_ = "";
      /**
       * <pre>
       * Default aggregation operator for the column.
       * Allowed values: {none, count, count_distinct, sum, average, min, max,
       *                  variance, std_deviation}
       * Note: Casing is not important.
       * </pre>
       *
       * <code>optional string aggregation = 2 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
       * @return Whether the aggregation field is set.
       */
      public boolean hasAggregation() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Default aggregation operator for the column.
       * Allowed values: {none, count, count_distinct, sum, average, min, max,
       *                  variance, std_deviation}
       * Note: Casing is not important.
       * </pre>
       *
       * <code>optional string aggregation = 2 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
       * @return The aggregation.
       */
      public java.lang.String getAggregation() {
        java.lang.Object ref = aggregation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            aggregation_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Default aggregation operator for the column.
       * Allowed values: {none, count, count_distinct, sum, average, min, max,
       *                  variance, std_deviation}
       * Note: Casing is not important.
       * </pre>
       *
       * <code>optional string aggregation = 2 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
       * @return The bytes for aggregation.
       */
      public com.google.protobuf.ByteString
          getAggregationBytes() {
        java.lang.Object ref = aggregation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          aggregation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Default aggregation operator for the column.
       * Allowed values: {none, count, count_distinct, sum, average, min, max,
       *                  variance, std_deviation}
       * Note: Casing is not important.
       * </pre>
       *
       * <code>optional string aggregation = 2 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
       * @param value The aggregation to set.
       * @return This builder for chaining.
       */
      public Builder setAggregation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        aggregation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default aggregation operator for the column.
       * Allowed values: {none, count, count_distinct, sum, average, min, max,
       *                  variance, std_deviation}
       * Note: Casing is not important.
       * </pre>
       *
       * <code>optional string aggregation = 2 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAggregation() {
        bitField0_ = (bitField0_ & ~0x00000002);
        aggregation_ = getDefaultInstance().getAggregation();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default aggregation operator for the column.
       * Allowed values: {none, count, count_distinct, sum, average, min, max,
       *                  variance, std_deviation}
       * Note: Casing is not important.
       * </pre>
       *
       * <code>optional string aggregation = 2 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
       * @param value The bytes for aggregation to set.
       * @return This builder for chaining.
       */
      public Builder setAggregationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        aggregation_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object indexType_ = "";
      /**
       * <pre>
       * Specifies how values of the column will be indexed.
       * Allowed values: {default, dont_index, prefix_only, prefix_and_word_substring, prefix_and_substring}
       * Note: Casing is not important.
       * </pre>
       *
       * <code>optional string index_type = 3 [(.Annotation.allowed_values_key) = "edoc.index_type"];</code>
       * @return Whether the indexType field is set.
       */
      public boolean hasIndexType() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Specifies how values of the column will be indexed.
       * Allowed values: {default, dont_index, prefix_only, prefix_and_word_substring, prefix_and_substring}
       * Note: Casing is not important.
       * </pre>
       *
       * <code>optional string index_type = 3 [(.Annotation.allowed_values_key) = "edoc.index_type"];</code>
       * @return The indexType.
       */
      public java.lang.String getIndexType() {
        java.lang.Object ref = indexType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            indexType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Specifies how values of the column will be indexed.
       * Allowed values: {default, dont_index, prefix_only, prefix_and_word_substring, prefix_and_substring}
       * Note: Casing is not important.
       * </pre>
       *
       * <code>optional string index_type = 3 [(.Annotation.allowed_values_key) = "edoc.index_type"];</code>
       * @return The bytes for indexType.
       */
      public com.google.protobuf.ByteString
          getIndexTypeBytes() {
        java.lang.Object ref = indexType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          indexType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Specifies how values of the column will be indexed.
       * Allowed values: {default, dont_index, prefix_only, prefix_and_word_substring, prefix_and_substring}
       * Note: Casing is not important.
       * </pre>
       *
       * <code>optional string index_type = 3 [(.Annotation.allowed_values_key) = "edoc.index_type"];</code>
       * @param value The indexType to set.
       * @return This builder for chaining.
       */
      public Builder setIndexType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        indexType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies how values of the column will be indexed.
       * Allowed values: {default, dont_index, prefix_only, prefix_and_word_substring, prefix_and_substring}
       * Note: Casing is not important.
       * </pre>
       *
       * <code>optional string index_type = 3 [(.Annotation.allowed_values_key) = "edoc.index_type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearIndexType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        indexType_ = getDefaultInstance().getIndexType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies how values of the column will be indexed.
       * Allowed values: {default, dont_index, prefix_only, prefix_and_word_substring, prefix_and_substring}
       * Note: Casing is not important.
       * </pre>
       *
       * <code>optional string index_type = 3 [(.Annotation.allowed_values_key) = "edoc.index_type"];</code>
       * @param value The bytes for indexType to set.
       * @return This builder for chaining.
       */
      public Builder setIndexTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        indexType_ = value;
        onChanged();
        return this;
      }

      private double indexPriority_ = 1D;
      /**
       * <pre>
       * Static weight of the column in the index.
       * </pre>
       *
       * <code>optional double index_priority = 4 [default = 1];</code>
       * @return Whether the indexPriority field is set.
       */
      @java.lang.Override
      public boolean hasIndexPriority() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Static weight of the column in the index.
       * </pre>
       *
       * <code>optional double index_priority = 4 [default = 1];</code>
       * @return The indexPriority.
       */
      @java.lang.Override
      public double getIndexPriority() {
        return indexPriority_;
      }
      /**
       * <pre>
       * Static weight of the column in the index.
       * </pre>
       *
       * <code>optional double index_priority = 4 [default = 1];</code>
       * @param value The indexPriority to set.
       * @return This builder for chaining.
       */
      public Builder setIndexPriority(double value) {
        bitField0_ |= 0x00000008;
        indexPriority_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Static weight of the column in the index.
       * </pre>
       *
       * <code>optional double index_priority = 4 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearIndexPriority() {
        bitField0_ = (bitField0_ & ~0x00000008);
        indexPriority_ = 1D;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList synonyms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSynonymsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          synonyms_ = new com.google.protobuf.LazyStringArrayList(synonyms_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * List of synonyms that can be used to refer to this column.  Alternate
       * names for the column.
       * </pre>
       *
       * <code>repeated string synonyms = 5;</code>
       * @return A list containing the synonyms.
       */
      public com.google.protobuf.ProtocolStringList
          getSynonymsList() {
        return synonyms_.getUnmodifiableView();
      }
      /**
       * <pre>
       * List of synonyms that can be used to refer to this column.  Alternate
       * names for the column.
       * </pre>
       *
       * <code>repeated string synonyms = 5;</code>
       * @return The count of synonyms.
       */
      public int getSynonymsCount() {
        return synonyms_.size();
      }
      /**
       * <pre>
       * List of synonyms that can be used to refer to this column.  Alternate
       * names for the column.
       * </pre>
       *
       * <code>repeated string synonyms = 5;</code>
       * @param index The index of the element to return.
       * @return The synonyms at the given index.
       */
      public java.lang.String getSynonyms(int index) {
        return synonyms_.get(index);
      }
      /**
       * <pre>
       * List of synonyms that can be used to refer to this column.  Alternate
       * names for the column.
       * </pre>
       *
       * <code>repeated string synonyms = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the synonyms at the given index.
       */
      public com.google.protobuf.ByteString
          getSynonymsBytes(int index) {
        return synonyms_.getByteString(index);
      }
      /**
       * <pre>
       * List of synonyms that can be used to refer to this column.  Alternate
       * names for the column.
       * </pre>
       *
       * <code>repeated string synonyms = 5;</code>
       * @param index The index to set the value at.
       * @param value The synonyms to set.
       * @return This builder for chaining.
       */
      public Builder setSynonyms(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSynonymsIsMutable();
        synonyms_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of synonyms that can be used to refer to this column.  Alternate
       * names for the column.
       * </pre>
       *
       * <code>repeated string synonyms = 5;</code>
       * @param value The synonyms to add.
       * @return This builder for chaining.
       */
      public Builder addSynonyms(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSynonymsIsMutable();
        synonyms_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of synonyms that can be used to refer to this column.  Alternate
       * names for the column.
       * </pre>
       *
       * <code>repeated string synonyms = 5;</code>
       * @param values The synonyms to add.
       * @return This builder for chaining.
       */
      public Builder addAllSynonyms(
          java.lang.Iterable<java.lang.String> values) {
        ensureSynonymsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, synonyms_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of synonyms that can be used to refer to this column.  Alternate
       * names for the column.
       * </pre>
       *
       * <code>repeated string synonyms = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSynonyms() {
        synonyms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of synonyms that can be used to refer to this column.  Alternate
       * names for the column.
       * </pre>
       *
       * <code>repeated string synonyms = 5;</code>
       * @param value The bytes of the synonyms to add.
       * @return This builder for chaining.
       */
      public Builder addSynonymsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSynonymsIsMutable();
        synonyms_.add(value);
        onChanged();
        return this;
      }

      private boolean isAttributionDimension_ ;
      /**
       * <pre>
       * True for primary key columns of shared dimension tables that should always
       * be included in chasm trap queries.
       * </pre>
       *
       * <code>optional bool is_attribution_dimension = 6;</code>
       * @return Whether the isAttributionDimension field is set.
       */
      @java.lang.Override
      public boolean hasIsAttributionDimension() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * True for primary key columns of shared dimension tables that should always
       * be included in chasm trap queries.
       * </pre>
       *
       * <code>optional bool is_attribution_dimension = 6;</code>
       * @return The isAttributionDimension.
       */
      @java.lang.Override
      public boolean getIsAttributionDimension() {
        return isAttributionDimension_;
      }
      /**
       * <pre>
       * True for primary key columns of shared dimension tables that should always
       * be included in chasm trap queries.
       * </pre>
       *
       * <code>optional bool is_attribution_dimension = 6;</code>
       * @param value The isAttributionDimension to set.
       * @return This builder for chaining.
       */
      public Builder setIsAttributionDimension(boolean value) {
        bitField0_ |= 0x00000020;
        isAttributionDimension_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * True for primary key columns of shared dimension tables that should always
       * be included in chasm trap queries.
       * </pre>
       *
       * <code>optional bool is_attribution_dimension = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsAttributionDimension() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isAttributionDimension_ = false;
        onChanged();
        return this;
      }

      private boolean isAdditive_ ;
      /**
       * <pre>
       * Numeric columns can be marked non additive to disallow aggregations on
       * them.  This is useful in cases such as a numeric primary key column.
       * </pre>
       *
       * <code>optional bool is_additive = 7;</code>
       * @return Whether the isAdditive field is set.
       */
      @java.lang.Override
      public boolean hasIsAdditive() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Numeric columns can be marked non additive to disallow aggregations on
       * them.  This is useful in cases such as a numeric primary key column.
       * </pre>
       *
       * <code>optional bool is_additive = 7;</code>
       * @return The isAdditive.
       */
      @java.lang.Override
      public boolean getIsAdditive() {
        return isAdditive_;
      }
      /**
       * <pre>
       * Numeric columns can be marked non additive to disallow aggregations on
       * them.  This is useful in cases such as a numeric primary key column.
       * </pre>
       *
       * <code>optional bool is_additive = 7;</code>
       * @param value The isAdditive to set.
       * @return This builder for chaining.
       */
      public Builder setIsAdditive(boolean value) {
        bitField0_ |= 0x00000040;
        isAdditive_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Numeric columns can be marked non additive to disallow aggregations on
       * them.  This is useful in cases such as a numeric primary key column.
       * </pre>
       *
       * <code>optional bool is_additive = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsAdditive() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isAdditive_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object calendar_ = "";
      /**
       * <pre>
       * The name of the calendar to use for the given column.
       * </pre>
       *
       * <code>optional string calendar = 8;</code>
       * @return Whether the calendar field is set.
       */
      public boolean hasCalendar() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * The name of the calendar to use for the given column.
       * </pre>
       *
       * <code>optional string calendar = 8;</code>
       * @return The calendar.
       */
      public java.lang.String getCalendar() {
        java.lang.Object ref = calendar_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            calendar_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the calendar to use for the given column.
       * </pre>
       *
       * <code>optional string calendar = 8;</code>
       * @return The bytes for calendar.
       */
      public com.google.protobuf.ByteString
          getCalendarBytes() {
        java.lang.Object ref = calendar_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          calendar_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the calendar to use for the given column.
       * </pre>
       *
       * <code>optional string calendar = 8;</code>
       * @param value The calendar to set.
       * @return This builder for chaining.
       */
      public Builder setCalendar(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        calendar_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the calendar to use for the given column.
       * </pre>
       *
       * <code>optional string calendar = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearCalendar() {
        bitField0_ = (bitField0_ & ~0x00000080);
        calendar_ = getDefaultInstance().getCalendar();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the calendar to use for the given column.
       * </pre>
       *
       * <code>optional string calendar = 8;</code>
       * @param value The bytes for calendar to set.
       * @return This builder for chaining.
       */
      public Builder setCalendarBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        calendar_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object formatPattern_ = "";
      /**
       * <pre>
       * Formatting specification for the column. e.g. "##0.##E0" for number
       * columns, "MM-yyyy" for date columns.
       * </pre>
       *
       * <code>optional string format_pattern = 9;</code>
       * @return Whether the formatPattern field is set.
       */
      public boolean hasFormatPattern() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Formatting specification for the column. e.g. "##0.##E0" for number
       * columns, "MM-yyyy" for date columns.
       * </pre>
       *
       * <code>optional string format_pattern = 9;</code>
       * @return The formatPattern.
       */
      public java.lang.String getFormatPattern() {
        java.lang.Object ref = formatPattern_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            formatPattern_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Formatting specification for the column. e.g. "##0.##E0" for number
       * columns, "MM-yyyy" for date columns.
       * </pre>
       *
       * <code>optional string format_pattern = 9;</code>
       * @return The bytes for formatPattern.
       */
      public com.google.protobuf.ByteString
          getFormatPatternBytes() {
        java.lang.Object ref = formatPattern_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          formatPattern_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Formatting specification for the column. e.g. "##0.##E0" for number
       * columns, "MM-yyyy" for date columns.
       * </pre>
       *
       * <code>optional string format_pattern = 9;</code>
       * @param value The formatPattern to set.
       * @return This builder for chaining.
       */
      public Builder setFormatPattern(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        formatPattern_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Formatting specification for the column. e.g. "##0.##E0" for number
       * columns, "MM-yyyy" for date columns.
       * </pre>
       *
       * <code>optional string format_pattern = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearFormatPattern() {
        bitField0_ = (bitField0_ & ~0x00000100);
        formatPattern_ = getDefaultInstance().getFormatPattern();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Formatting specification for the column. e.g. "##0.##E0" for number
       * columns, "MM-yyyy" for date columns.
       * </pre>
       *
       * <code>optional string format_pattern = 9;</code>
       * @param value The bytes for formatPattern to set.
       * @return This builder for chaining.
       */
      public Builder setFormatPatternBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        formatPattern_ = value;
        onChanged();
        return this;
      }

      private EDoc.ColumnProperties.CurrencyFormat currencyType_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.ColumnProperties.CurrencyFormat, EDoc.ColumnProperties.CurrencyFormat.Builder, EDoc.ColumnProperties.CurrencyFormatOrBuilder> currencyTypeBuilder_;
      /**
       * <pre>
       * If the column is a currency column, its formatting specification is
       * specified by CurrencyFormat.
       * </pre>
       *
       * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
       * @return Whether the currencyType field is set.
       */
      public boolean hasCurrencyType() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * If the column is a currency column, its formatting specification is
       * specified by CurrencyFormat.
       * </pre>
       *
       * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
       * @return The currencyType.
       */
      public EDoc.ColumnProperties.CurrencyFormat getCurrencyType() {
        if (currencyTypeBuilder_ == null) {
          return currencyType_ == null ? EDoc.ColumnProperties.CurrencyFormat.getDefaultInstance() : currencyType_;
        } else {
          return currencyTypeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * If the column is a currency column, its formatting specification is
       * specified by CurrencyFormat.
       * </pre>
       *
       * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
       */
      public Builder setCurrencyType(EDoc.ColumnProperties.CurrencyFormat value) {
        if (currencyTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          currencyType_ = value;
          onChanged();
        } else {
          currencyTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <pre>
       * If the column is a currency column, its formatting specification is
       * specified by CurrencyFormat.
       * </pre>
       *
       * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
       */
      public Builder setCurrencyType(
          EDoc.ColumnProperties.CurrencyFormat.Builder builderForValue) {
        if (currencyTypeBuilder_ == null) {
          currencyType_ = builderForValue.build();
          onChanged();
        } else {
          currencyTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <pre>
       * If the column is a currency column, its formatting specification is
       * specified by CurrencyFormat.
       * </pre>
       *
       * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
       */
      public Builder mergeCurrencyType(EDoc.ColumnProperties.CurrencyFormat value) {
        if (currencyTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0) &&
              currencyType_ != null &&
              currencyType_ != EDoc.ColumnProperties.CurrencyFormat.getDefaultInstance()) {
            currencyType_ =
              EDoc.ColumnProperties.CurrencyFormat.newBuilder(currencyType_).mergeFrom(value).buildPartial();
          } else {
            currencyType_ = value;
          }
          onChanged();
        } else {
          currencyTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <pre>
       * If the column is a currency column, its formatting specification is
       * specified by CurrencyFormat.
       * </pre>
       *
       * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
       */
      public Builder clearCurrencyType() {
        if (currencyTypeBuilder_ == null) {
          currencyType_ = null;
          onChanged();
        } else {
          currencyTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <pre>
       * If the column is a currency column, its formatting specification is
       * specified by CurrencyFormat.
       * </pre>
       *
       * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
       */
      public EDoc.ColumnProperties.CurrencyFormat.Builder getCurrencyTypeBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getCurrencyTypeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * If the column is a currency column, its formatting specification is
       * specified by CurrencyFormat.
       * </pre>
       *
       * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
       */
      public EDoc.ColumnProperties.CurrencyFormatOrBuilder getCurrencyTypeOrBuilder() {
        if (currencyTypeBuilder_ != null) {
          return currencyTypeBuilder_.getMessageOrBuilder();
        } else {
          return currencyType_ == null ?
              EDoc.ColumnProperties.CurrencyFormat.getDefaultInstance() : currencyType_;
        }
      }
      /**
       * <pre>
       * If the column is a currency column, its formatting specification is
       * specified by CurrencyFormat.
       * </pre>
       *
       * <code>optional .ColumnProperties.CurrencyFormat currency_type = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.ColumnProperties.CurrencyFormat, EDoc.ColumnProperties.CurrencyFormat.Builder, EDoc.ColumnProperties.CurrencyFormatOrBuilder> 
          getCurrencyTypeFieldBuilder() {
        if (currencyTypeBuilder_ == null) {
          currencyTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.ColumnProperties.CurrencyFormat, EDoc.ColumnProperties.CurrencyFormat.Builder, EDoc.ColumnProperties.CurrencyFormatOrBuilder>(
                  getCurrencyType(),
                  getParentForChildren(),
                  isClean());
          currencyType_ = null;
        }
        return currencyTypeBuilder_;
      }

      private boolean isHidden_ ;
      /**
       * <pre>
       * Property to mark if the column is hidden.
       * </pre>
       *
       * <code>optional bool is_hidden = 11;</code>
       * @return Whether the isHidden field is set.
       */
      @java.lang.Override
      public boolean hasIsHidden() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * Property to mark if the column is hidden.
       * </pre>
       *
       * <code>optional bool is_hidden = 11;</code>
       * @return The isHidden.
       */
      @java.lang.Override
      public boolean getIsHidden() {
        return isHidden_;
      }
      /**
       * <pre>
       * Property to mark if the column is hidden.
       * </pre>
       *
       * <code>optional bool is_hidden = 11;</code>
       * @param value The isHidden to set.
       * @return This builder for chaining.
       */
      public Builder setIsHidden(boolean value) {
        bitField0_ |= 0x00000400;
        isHidden_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Property to mark if the column is hidden.
       * </pre>
       *
       * <code>optional bool is_hidden = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsHidden() {
        bitField0_ = (bitField0_ & ~0x00000400);
        isHidden_ = false;
        onChanged();
        return this;
      }

      private EDoc.ColumnProperties.GeoConfigProto geoConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.ColumnProperties.GeoConfigProto, EDoc.ColumnProperties.GeoConfigProto.Builder, EDoc.ColumnProperties.GeoConfigProtoOrBuilder> geoConfigBuilder_;
      /**
       * <pre>
       * config object to define the geographic role of the column's value.
       * </pre>
       *
       * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
       * @return Whether the geoConfig field is set.
       */
      public boolean hasGeoConfig() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * config object to define the geographic role of the column's value.
       * </pre>
       *
       * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
       * @return The geoConfig.
       */
      public EDoc.ColumnProperties.GeoConfigProto getGeoConfig() {
        if (geoConfigBuilder_ == null) {
          return geoConfig_ == null ? EDoc.ColumnProperties.GeoConfigProto.getDefaultInstance() : geoConfig_;
        } else {
          return geoConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * config object to define the geographic role of the column's value.
       * </pre>
       *
       * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
       */
      public Builder setGeoConfig(EDoc.ColumnProperties.GeoConfigProto value) {
        if (geoConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          geoConfig_ = value;
          onChanged();
        } else {
          geoConfigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <pre>
       * config object to define the geographic role of the column's value.
       * </pre>
       *
       * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
       */
      public Builder setGeoConfig(
          EDoc.ColumnProperties.GeoConfigProto.Builder builderForValue) {
        if (geoConfigBuilder_ == null) {
          geoConfig_ = builderForValue.build();
          onChanged();
        } else {
          geoConfigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <pre>
       * config object to define the geographic role of the column's value.
       * </pre>
       *
       * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
       */
      public Builder mergeGeoConfig(EDoc.ColumnProperties.GeoConfigProto value) {
        if (geoConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000800) != 0) &&
              geoConfig_ != null &&
              geoConfig_ != EDoc.ColumnProperties.GeoConfigProto.getDefaultInstance()) {
            geoConfig_ =
              EDoc.ColumnProperties.GeoConfigProto.newBuilder(geoConfig_).mergeFrom(value).buildPartial();
          } else {
            geoConfig_ = value;
          }
          onChanged();
        } else {
          geoConfigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <pre>
       * config object to define the geographic role of the column's value.
       * </pre>
       *
       * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
       */
      public Builder clearGeoConfig() {
        if (geoConfigBuilder_ == null) {
          geoConfig_ = null;
          onChanged();
        } else {
          geoConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <pre>
       * config object to define the geographic role of the column's value.
       * </pre>
       *
       * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
       */
      public EDoc.ColumnProperties.GeoConfigProto.Builder getGeoConfigBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getGeoConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * config object to define the geographic role of the column's value.
       * </pre>
       *
       * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
       */
      public EDoc.ColumnProperties.GeoConfigProtoOrBuilder getGeoConfigOrBuilder() {
        if (geoConfigBuilder_ != null) {
          return geoConfigBuilder_.getMessageOrBuilder();
        } else {
          return geoConfig_ == null ?
              EDoc.ColumnProperties.GeoConfigProto.getDefaultInstance() : geoConfig_;
        }
      }
      /**
       * <pre>
       * config object to define the geographic role of the column's value.
       * </pre>
       *
       * <code>optional .ColumnProperties.GeoConfigProto geo_config = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.ColumnProperties.GeoConfigProto, EDoc.ColumnProperties.GeoConfigProto.Builder, EDoc.ColumnProperties.GeoConfigProtoOrBuilder> 
          getGeoConfigFieldBuilder() {
        if (geoConfigBuilder_ == null) {
          geoConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.ColumnProperties.GeoConfigProto, EDoc.ColumnProperties.GeoConfigProto.Builder, EDoc.ColumnProperties.GeoConfigProtoOrBuilder>(
                  getGeoConfig(),
                  getParentForChildren(),
                  isClean());
          geoConfig_ = null;
        }
        return geoConfigBuilder_;
      }

      private java.lang.Object spotiqPreference_ = "";
      /**
       * <pre>
       * Specifies spotIQ preference for that column while running analysis
       * </pre>
       *
       * <code>optional string spotiq_preference = 13;</code>
       * @return Whether the spotiqPreference field is set.
       */
      public boolean hasSpotiqPreference() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       * Specifies spotIQ preference for that column while running analysis
       * </pre>
       *
       * <code>optional string spotiq_preference = 13;</code>
       * @return The spotiqPreference.
       */
      public java.lang.String getSpotiqPreference() {
        java.lang.Object ref = spotiqPreference_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            spotiqPreference_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Specifies spotIQ preference for that column while running analysis
       * </pre>
       *
       * <code>optional string spotiq_preference = 13;</code>
       * @return The bytes for spotiqPreference.
       */
      public com.google.protobuf.ByteString
          getSpotiqPreferenceBytes() {
        java.lang.Object ref = spotiqPreference_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          spotiqPreference_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Specifies spotIQ preference for that column while running analysis
       * </pre>
       *
       * <code>optional string spotiq_preference = 13;</code>
       * @param value The spotiqPreference to set.
       * @return This builder for chaining.
       */
      public Builder setSpotiqPreference(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        spotiqPreference_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies spotIQ preference for that column while running analysis
       * </pre>
       *
       * <code>optional string spotiq_preference = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpotiqPreference() {
        bitField0_ = (bitField0_ & ~0x00001000);
        spotiqPreference_ = getDefaultInstance().getSpotiqPreference();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies spotIQ preference for that column while running analysis
       * </pre>
       *
       * <code>optional string spotiq_preference = 13;</code>
       * @param value The bytes for spotiqPreference to set.
       * @return This builder for chaining.
       */
      public Builder setSpotiqPreferenceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        spotiqPreference_ = value;
        onChanged();
        return this;
      }

      private boolean searchIqPreferred_ ;
      /**
       * <pre>
       * Flag to specify if the column is preferred for search iq.
       * </pre>
       *
       * <code>optional bool search_iq_preferred = 14;</code>
       * @return Whether the searchIqPreferred field is set.
       */
      @java.lang.Override
      public boolean hasSearchIqPreferred() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       * Flag to specify if the column is preferred for search iq.
       * </pre>
       *
       * <code>optional bool search_iq_preferred = 14;</code>
       * @return The searchIqPreferred.
       */
      @java.lang.Override
      public boolean getSearchIqPreferred() {
        return searchIqPreferred_;
      }
      /**
       * <pre>
       * Flag to specify if the column is preferred for search iq.
       * </pre>
       *
       * <code>optional bool search_iq_preferred = 14;</code>
       * @param value The searchIqPreferred to set.
       * @return This builder for chaining.
       */
      public Builder setSearchIqPreferred(boolean value) {
        bitField0_ |= 0x00002000;
        searchIqPreferred_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flag to specify if the column is preferred for search iq.
       * </pre>
       *
       * <code>optional bool search_iq_preferred = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearSearchIqPreferred() {
        bitField0_ = (bitField0_ & ~0x00002000);
        searchIqPreferred_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ColumnProperties)
    }

    // @@protoc_insertion_point(class_scope:ColumnProperties)
    private static final EDoc.ColumnProperties DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.ColumnProperties();
    }

    public static EDoc.ColumnProperties getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ColumnProperties>
        PARSER = new com.google.protobuf.AbstractParser<ColumnProperties>() {
      @java.lang.Override
      public ColumnProperties parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ColumnProperties(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ColumnProperties> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ColumnProperties> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.ColumnProperties getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FormulaPropertiesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FormulaProperties)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Possible values:  ATTRIBUTE | MEASURE.
     * </pre>
     *
     * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
     * @return Whether the columnType field is set.
     */
    boolean hasColumnType();
    /**
     * <pre>
     * Possible values:  ATTRIBUTE | MEASURE.
     * </pre>
     *
     * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
     * @return The columnType.
     */
    java.lang.String getColumnType();
    /**
     * <pre>
     * Possible values:  ATTRIBUTE | MEASURE.
     * </pre>
     *
     * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
     * @return The bytes for columnType.
     */
    com.google.protobuf.ByteString
        getColumnTypeBytes();

    /**
     * <pre>
     * Default aggregation operator for the column.
     * </pre>
     *
     * <code>optional string aggregation = 3 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
     * @return Whether the aggregation field is set.
     */
    boolean hasAggregation();
    /**
     * <pre>
     * Default aggregation operator for the column.
     * </pre>
     *
     * <code>optional string aggregation = 3 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
     * @return The aggregation.
     */
    java.lang.String getAggregation();
    /**
     * <pre>
     * Default aggregation operator for the column.
     * </pre>
     *
     * <code>optional string aggregation = 3 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
     * @return The bytes for aggregation.
     */
    com.google.protobuf.ByteString
        getAggregationBytes();
  }
  /**
   * <pre>
   * Some properties defined at formula level. As of now these are only relevant
   * for in-answer formula as in case of worksheet these properties are defined
   * at worksheet column level.
   * Only those properties will be set whose value is different from the default
   * value. If all the properties are same as default value then properties
   * field in the Formula proto won't be set.
   * </pre>
   *
   * Protobuf type {@code FormulaProperties}
   */
  public static final class FormulaProperties extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:FormulaProperties)
      FormulaPropertiesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FormulaProperties.newBuilder() to construct.
    private FormulaProperties(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FormulaProperties() {
      columnType_ = "";
      aggregation_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FormulaProperties();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FormulaProperties(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              columnType_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              aggregation_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_FormulaProperties_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_FormulaProperties_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.FormulaProperties.class, EDoc.FormulaProperties.Builder.class);
    }

    private int bitField0_;
    public static final int COLUMN_TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object columnType_;
    /**
     * <pre>
     * Possible values:  ATTRIBUTE | MEASURE.
     * </pre>
     *
     * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
     * @return Whether the columnType field is set.
     */
    @java.lang.Override
    public boolean hasColumnType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Possible values:  ATTRIBUTE | MEASURE.
     * </pre>
     *
     * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
     * @return The columnType.
     */
    @java.lang.Override
    public java.lang.String getColumnType() {
      java.lang.Object ref = columnType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          columnType_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Possible values:  ATTRIBUTE | MEASURE.
     * </pre>
     *
     * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
     * @return The bytes for columnType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getColumnTypeBytes() {
      java.lang.Object ref = columnType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        columnType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AGGREGATION_FIELD_NUMBER = 3;
    private volatile java.lang.Object aggregation_;
    /**
     * <pre>
     * Default aggregation operator for the column.
     * </pre>
     *
     * <code>optional string aggregation = 3 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
     * @return Whether the aggregation field is set.
     */
    @java.lang.Override
    public boolean hasAggregation() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Default aggregation operator for the column.
     * </pre>
     *
     * <code>optional string aggregation = 3 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
     * @return The aggregation.
     */
    @java.lang.Override
    public java.lang.String getAggregation() {
      java.lang.Object ref = aggregation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          aggregation_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Default aggregation operator for the column.
     * </pre>
     *
     * <code>optional string aggregation = 3 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
     * @return The bytes for aggregation.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAggregationBytes() {
      java.lang.Object ref = aggregation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        aggregation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, columnType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, aggregation_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, columnType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, aggregation_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.FormulaProperties)) {
        return super.equals(obj);
      }
      EDoc.FormulaProperties other = (EDoc.FormulaProperties) obj;

      if (hasColumnType() != other.hasColumnType()) return false;
      if (hasColumnType()) {
        if (!getColumnType()
            .equals(other.getColumnType())) return false;
      }
      if (hasAggregation() != other.hasAggregation()) return false;
      if (hasAggregation()) {
        if (!getAggregation()
            .equals(other.getAggregation())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasColumnType()) {
        hash = (37 * hash) + COLUMN_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getColumnType().hashCode();
      }
      if (hasAggregation()) {
        hash = (37 * hash) + AGGREGATION_FIELD_NUMBER;
        hash = (53 * hash) + getAggregation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.FormulaProperties parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.FormulaProperties parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.FormulaProperties parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.FormulaProperties parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.FormulaProperties parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.FormulaProperties parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.FormulaProperties parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.FormulaProperties parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.FormulaProperties parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.FormulaProperties parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.FormulaProperties parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.FormulaProperties parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.FormulaProperties prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Some properties defined at formula level. As of now these are only relevant
     * for in-answer formula as in case of worksheet these properties are defined
     * at worksheet column level.
     * Only those properties will be set whose value is different from the default
     * value. If all the properties are same as default value then properties
     * field in the Formula proto won't be set.
     * </pre>
     *
     * Protobuf type {@code FormulaProperties}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FormulaProperties)
        EDoc.FormulaPropertiesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_FormulaProperties_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_FormulaProperties_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.FormulaProperties.class, EDoc.FormulaProperties.Builder.class);
      }

      // Construct using EDoc.FormulaProperties.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        columnType_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        aggregation_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_FormulaProperties_descriptor;
      }

      @java.lang.Override
      public EDoc.FormulaProperties getDefaultInstanceForType() {
        return EDoc.FormulaProperties.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.FormulaProperties build() {
        EDoc.FormulaProperties result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.FormulaProperties buildPartial() {
        EDoc.FormulaProperties result = new EDoc.FormulaProperties(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.columnType_ = columnType_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.aggregation_ = aggregation_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.FormulaProperties) {
          return mergeFrom((EDoc.FormulaProperties)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.FormulaProperties other) {
        if (other == EDoc.FormulaProperties.getDefaultInstance()) return this;
        if (other.hasColumnType()) {
          bitField0_ |= 0x00000001;
          columnType_ = other.columnType_;
          onChanged();
        }
        if (other.hasAggregation()) {
          bitField0_ |= 0x00000002;
          aggregation_ = other.aggregation_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.FormulaProperties parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.FormulaProperties) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object columnType_ = "";
      /**
       * <pre>
       * Possible values:  ATTRIBUTE | MEASURE.
       * </pre>
       *
       * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
       * @return Whether the columnType field is set.
       */
      public boolean hasColumnType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Possible values:  ATTRIBUTE | MEASURE.
       * </pre>
       *
       * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
       * @return The columnType.
       */
      public java.lang.String getColumnType() {
        java.lang.Object ref = columnType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            columnType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Possible values:  ATTRIBUTE | MEASURE.
       * </pre>
       *
       * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
       * @return The bytes for columnType.
       */
      public com.google.protobuf.ByteString
          getColumnTypeBytes() {
        java.lang.Object ref = columnType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          columnType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Possible values:  ATTRIBUTE | MEASURE.
       * </pre>
       *
       * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
       * @param value The columnType to set.
       * @return This builder for chaining.
       */
      public Builder setColumnType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        columnType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Possible values:  ATTRIBUTE | MEASURE.
       * </pre>
       *
       * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearColumnType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        columnType_ = getDefaultInstance().getColumnType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Possible values:  ATTRIBUTE | MEASURE.
       * </pre>
       *
       * <code>optional string column_type = 1 [(.Annotation.allowed_values_key) = "edoc.column_type"];</code>
       * @param value The bytes for columnType to set.
       * @return This builder for chaining.
       */
      public Builder setColumnTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        columnType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object aggregation_ = "";
      /**
       * <pre>
       * Default aggregation operator for the column.
       * </pre>
       *
       * <code>optional string aggregation = 3 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
       * @return Whether the aggregation field is set.
       */
      public boolean hasAggregation() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Default aggregation operator for the column.
       * </pre>
       *
       * <code>optional string aggregation = 3 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
       * @return The aggregation.
       */
      public java.lang.String getAggregation() {
        java.lang.Object ref = aggregation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            aggregation_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Default aggregation operator for the column.
       * </pre>
       *
       * <code>optional string aggregation = 3 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
       * @return The bytes for aggregation.
       */
      public com.google.protobuf.ByteString
          getAggregationBytes() {
        java.lang.Object ref = aggregation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          aggregation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Default aggregation operator for the column.
       * </pre>
       *
       * <code>optional string aggregation = 3 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
       * @param value The aggregation to set.
       * @return This builder for chaining.
       */
      public Builder setAggregation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        aggregation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default aggregation operator for the column.
       * </pre>
       *
       * <code>optional string aggregation = 3 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAggregation() {
        bitField0_ = (bitField0_ & ~0x00000002);
        aggregation_ = getDefaultInstance().getAggregation();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default aggregation operator for the column.
       * </pre>
       *
       * <code>optional string aggregation = 3 [(.Annotation.allowed_values_key) = "edoc.aggregation_type"];</code>
       * @param value The bytes for aggregation to set.
       * @return This builder for chaining.
       */
      public Builder setAggregationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        aggregation_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:FormulaProperties)
    }

    // @@protoc_insertion_point(class_scope:FormulaProperties)
    private static final EDoc.FormulaProperties DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.FormulaProperties();
    }

    public static EDoc.FormulaProperties getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FormulaProperties>
        PARSER = new com.google.protobuf.AbstractParser<FormulaProperties>() {
      @java.lang.Override
      public FormulaProperties parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FormulaProperties(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FormulaProperties> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FormulaProperties> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.FormulaProperties getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FormulaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Formula)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ID of the formula.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * ID of the formula.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * ID of the formula.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * Display Name of the formula.
     * </pre>
     *
     * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * Display Name of the formula.
     * </pre>
     *
     * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Display Name of the formula.
     * </pre>
     *
     * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * String representation of the expression. This would be of the form:
     *     1. SUM(LO::Revenue)
     *     2. LO::SHIPMODE IN ('air','road')
     *     3. sum(f1) + sum(f2)  // f1 and f2 are IDs of the formula.
     * </pre>
     *
     * <code>optional string expr = 3 [(.Annotation.compulsory) = true];</code>
     * @return Whether the expr field is set.
     */
    boolean hasExpr();
    /**
     * <pre>
     * String representation of the expression. This would be of the form:
     *     1. SUM(LO::Revenue)
     *     2. LO::SHIPMODE IN ('air','road')
     *     3. sum(f1) + sum(f2)  // f1 and f2 are IDs of the formula.
     * </pre>
     *
     * <code>optional string expr = 3 [(.Annotation.compulsory) = true];</code>
     * @return The expr.
     */
    java.lang.String getExpr();
    /**
     * <pre>
     * String representation of the expression. This would be of the form:
     *     1. SUM(LO::Revenue)
     *     2. LO::SHIPMODE IN ('air','road')
     *     3. sum(f1) + sum(f2)  // f1 and f2 are IDs of the formula.
     * </pre>
     *
     * <code>optional string expr = 3 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for expr.
     */
    com.google.protobuf.ByteString
        getExprBytes();

    /**
     * <pre>
     * non-default properties to specify for the given formula.
     * </pre>
     *
     * <code>optional .FormulaProperties properties = 4;</code>
     * @return Whether the properties field is set.
     */
    boolean hasProperties();
    /**
     * <pre>
     * non-default properties to specify for the given formula.
     * </pre>
     *
     * <code>optional .FormulaProperties properties = 4;</code>
     * @return The properties.
     */
    EDoc.FormulaProperties getProperties();
    /**
     * <pre>
     * non-default properties to specify for the given formula.
     * </pre>
     *
     * <code>optional .FormulaProperties properties = 4;</code>
     */
    EDoc.FormulaPropertiesOrBuilder getPropertiesOrBuilder();
  }
  /**
   * <pre>
   * Formula definitions.
   * </pre>
   *
   * Protobuf type {@code Formula}
   */
  public static final class Formula extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Formula)
      FormulaOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Formula.newBuilder() to construct.
    private Formula(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Formula() {
      id_ = "";
      name_ = "";
      expr_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Formula();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Formula(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              expr_ = bs;
              break;
            }
            case 34: {
              EDoc.FormulaProperties.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) != 0)) {
                subBuilder = properties_.toBuilder();
              }
              properties_ = input.readMessage(EDoc.FormulaProperties.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(properties_);
                properties_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_Formula_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_Formula_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.Formula.class, EDoc.Formula.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * ID of the formula.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * ID of the formula.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * ID of the formula.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Display Name of the formula.
     * </pre>
     *
     * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Display Name of the formula.
     * </pre>
     *
     * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Display Name of the formula.
     * </pre>
     *
     * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXPR_FIELD_NUMBER = 3;
    private volatile java.lang.Object expr_;
    /**
     * <pre>
     * String representation of the expression. This would be of the form:
     *     1. SUM(LO::Revenue)
     *     2. LO::SHIPMODE IN ('air','road')
     *     3. sum(f1) + sum(f2)  // f1 and f2 are IDs of the formula.
     * </pre>
     *
     * <code>optional string expr = 3 [(.Annotation.compulsory) = true];</code>
     * @return Whether the expr field is set.
     */
    @java.lang.Override
    public boolean hasExpr() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * String representation of the expression. This would be of the form:
     *     1. SUM(LO::Revenue)
     *     2. LO::SHIPMODE IN ('air','road')
     *     3. sum(f1) + sum(f2)  // f1 and f2 are IDs of the formula.
     * </pre>
     *
     * <code>optional string expr = 3 [(.Annotation.compulsory) = true];</code>
     * @return The expr.
     */
    @java.lang.Override
    public java.lang.String getExpr() {
      java.lang.Object ref = expr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          expr_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * String representation of the expression. This would be of the form:
     *     1. SUM(LO::Revenue)
     *     2. LO::SHIPMODE IN ('air','road')
     *     3. sum(f1) + sum(f2)  // f1 and f2 are IDs of the formula.
     * </pre>
     *
     * <code>optional string expr = 3 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for expr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExprBytes() {
      java.lang.Object ref = expr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        expr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROPERTIES_FIELD_NUMBER = 4;
    private EDoc.FormulaProperties properties_;
    /**
     * <pre>
     * non-default properties to specify for the given formula.
     * </pre>
     *
     * <code>optional .FormulaProperties properties = 4;</code>
     * @return Whether the properties field is set.
     */
    @java.lang.Override
    public boolean hasProperties() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * non-default properties to specify for the given formula.
     * </pre>
     *
     * <code>optional .FormulaProperties properties = 4;</code>
     * @return The properties.
     */
    @java.lang.Override
    public EDoc.FormulaProperties getProperties() {
      return properties_ == null ? EDoc.FormulaProperties.getDefaultInstance() : properties_;
    }
    /**
     * <pre>
     * non-default properties to specify for the given formula.
     * </pre>
     *
     * <code>optional .FormulaProperties properties = 4;</code>
     */
    @java.lang.Override
    public EDoc.FormulaPropertiesOrBuilder getPropertiesOrBuilder() {
      return properties_ == null ? EDoc.FormulaProperties.getDefaultInstance() : properties_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, expr_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(4, getProperties());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, expr_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getProperties());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.Formula)) {
        return super.equals(obj);
      }
      EDoc.Formula other = (EDoc.Formula) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasExpr() != other.hasExpr()) return false;
      if (hasExpr()) {
        if (!getExpr()
            .equals(other.getExpr())) return false;
      }
      if (hasProperties() != other.hasProperties()) return false;
      if (hasProperties()) {
        if (!getProperties()
            .equals(other.getProperties())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasExpr()) {
        hash = (37 * hash) + EXPR_FIELD_NUMBER;
        hash = (53 * hash) + getExpr().hashCode();
      }
      if (hasProperties()) {
        hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
        hash = (53 * hash) + getProperties().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.Formula parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Formula parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Formula parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Formula parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Formula parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Formula parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Formula parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.Formula parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.Formula parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.Formula parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.Formula parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.Formula parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.Formula prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Formula definitions.
     * </pre>
     *
     * Protobuf type {@code Formula}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Formula)
        EDoc.FormulaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_Formula_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_Formula_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.Formula.class, EDoc.Formula.Builder.class);
      }

      // Construct using EDoc.Formula.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPropertiesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        expr_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (propertiesBuilder_ == null) {
          properties_ = null;
        } else {
          propertiesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_Formula_descriptor;
      }

      @java.lang.Override
      public EDoc.Formula getDefaultInstanceForType() {
        return EDoc.Formula.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.Formula build() {
        EDoc.Formula result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.Formula buildPartial() {
        EDoc.Formula result = new EDoc.Formula(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.expr_ = expr_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          if (propertiesBuilder_ == null) {
            result.properties_ = properties_;
          } else {
            result.properties_ = propertiesBuilder_.build();
          }
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.Formula) {
          return mergeFrom((EDoc.Formula)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.Formula other) {
        if (other == EDoc.Formula.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasExpr()) {
          bitField0_ |= 0x00000004;
          expr_ = other.expr_;
          onChanged();
        }
        if (other.hasProperties()) {
          mergeProperties(other.getProperties());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.Formula parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.Formula) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * ID of the formula.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * ID of the formula.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ID of the formula.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ID of the formula.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the formula.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the formula.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Display Name of the formula.
       * </pre>
       *
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Display Name of the formula.
       * </pre>
       *
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Display Name of the formula.
       * </pre>
       *
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Display Name of the formula.
       * </pre>
       *
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Display Name of the formula.
       * </pre>
       *
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Display Name of the formula.
       * </pre>
       *
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object expr_ = "";
      /**
       * <pre>
       * String representation of the expression. This would be of the form:
       *     1. SUM(LO::Revenue)
       *     2. LO::SHIPMODE IN ('air','road')
       *     3. sum(f1) + sum(f2)  // f1 and f2 are IDs of the formula.
       * </pre>
       *
       * <code>optional string expr = 3 [(.Annotation.compulsory) = true];</code>
       * @return Whether the expr field is set.
       */
      public boolean hasExpr() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * String representation of the expression. This would be of the form:
       *     1. SUM(LO::Revenue)
       *     2. LO::SHIPMODE IN ('air','road')
       *     3. sum(f1) + sum(f2)  // f1 and f2 are IDs of the formula.
       * </pre>
       *
       * <code>optional string expr = 3 [(.Annotation.compulsory) = true];</code>
       * @return The expr.
       */
      public java.lang.String getExpr() {
        java.lang.Object ref = expr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            expr_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * String representation of the expression. This would be of the form:
       *     1. SUM(LO::Revenue)
       *     2. LO::SHIPMODE IN ('air','road')
       *     3. sum(f1) + sum(f2)  // f1 and f2 are IDs of the formula.
       * </pre>
       *
       * <code>optional string expr = 3 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for expr.
       */
      public com.google.protobuf.ByteString
          getExprBytes() {
        java.lang.Object ref = expr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          expr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * String representation of the expression. This would be of the form:
       *     1. SUM(LO::Revenue)
       *     2. LO::SHIPMODE IN ('air','road')
       *     3. sum(f1) + sum(f2)  // f1 and f2 are IDs of the formula.
       * </pre>
       *
       * <code>optional string expr = 3 [(.Annotation.compulsory) = true];</code>
       * @param value The expr to set.
       * @return This builder for chaining.
       */
      public Builder setExpr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        expr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * String representation of the expression. This would be of the form:
       *     1. SUM(LO::Revenue)
       *     2. LO::SHIPMODE IN ('air','road')
       *     3. sum(f1) + sum(f2)  // f1 and f2 are IDs of the formula.
       * </pre>
       *
       * <code>optional string expr = 3 [(.Annotation.compulsory) = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearExpr() {
        bitField0_ = (bitField0_ & ~0x00000004);
        expr_ = getDefaultInstance().getExpr();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * String representation of the expression. This would be of the form:
       *     1. SUM(LO::Revenue)
       *     2. LO::SHIPMODE IN ('air','road')
       *     3. sum(f1) + sum(f2)  // f1 and f2 are IDs of the formula.
       * </pre>
       *
       * <code>optional string expr = 3 [(.Annotation.compulsory) = true];</code>
       * @param value The bytes for expr to set.
       * @return This builder for chaining.
       */
      public Builder setExprBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        expr_ = value;
        onChanged();
        return this;
      }

      private EDoc.FormulaProperties properties_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.FormulaProperties, EDoc.FormulaProperties.Builder, EDoc.FormulaPropertiesOrBuilder> propertiesBuilder_;
      /**
       * <pre>
       * non-default properties to specify for the given formula.
       * </pre>
       *
       * <code>optional .FormulaProperties properties = 4;</code>
       * @return Whether the properties field is set.
       */
      public boolean hasProperties() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * non-default properties to specify for the given formula.
       * </pre>
       *
       * <code>optional .FormulaProperties properties = 4;</code>
       * @return The properties.
       */
      public EDoc.FormulaProperties getProperties() {
        if (propertiesBuilder_ == null) {
          return properties_ == null ? EDoc.FormulaProperties.getDefaultInstance() : properties_;
        } else {
          return propertiesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * non-default properties to specify for the given formula.
       * </pre>
       *
       * <code>optional .FormulaProperties properties = 4;</code>
       */
      public Builder setProperties(EDoc.FormulaProperties value) {
        if (propertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          properties_ = value;
          onChanged();
        } else {
          propertiesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * non-default properties to specify for the given formula.
       * </pre>
       *
       * <code>optional .FormulaProperties properties = 4;</code>
       */
      public Builder setProperties(
          EDoc.FormulaProperties.Builder builderForValue) {
        if (propertiesBuilder_ == null) {
          properties_ = builderForValue.build();
          onChanged();
        } else {
          propertiesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * non-default properties to specify for the given formula.
       * </pre>
       *
       * <code>optional .FormulaProperties properties = 4;</code>
       */
      public Builder mergeProperties(EDoc.FormulaProperties value) {
        if (propertiesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
              properties_ != null &&
              properties_ != EDoc.FormulaProperties.getDefaultInstance()) {
            properties_ =
              EDoc.FormulaProperties.newBuilder(properties_).mergeFrom(value).buildPartial();
          } else {
            properties_ = value;
          }
          onChanged();
        } else {
          propertiesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * non-default properties to specify for the given formula.
       * </pre>
       *
       * <code>optional .FormulaProperties properties = 4;</code>
       */
      public Builder clearProperties() {
        if (propertiesBuilder_ == null) {
          properties_ = null;
          onChanged();
        } else {
          propertiesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * non-default properties to specify for the given formula.
       * </pre>
       *
       * <code>optional .FormulaProperties properties = 4;</code>
       */
      public EDoc.FormulaProperties.Builder getPropertiesBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getPropertiesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * non-default properties to specify for the given formula.
       * </pre>
       *
       * <code>optional .FormulaProperties properties = 4;</code>
       */
      public EDoc.FormulaPropertiesOrBuilder getPropertiesOrBuilder() {
        if (propertiesBuilder_ != null) {
          return propertiesBuilder_.getMessageOrBuilder();
        } else {
          return properties_ == null ?
              EDoc.FormulaProperties.getDefaultInstance() : properties_;
        }
      }
      /**
       * <pre>
       * non-default properties to specify for the given formula.
       * </pre>
       *
       * <code>optional .FormulaProperties properties = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.FormulaProperties, EDoc.FormulaProperties.Builder, EDoc.FormulaPropertiesOrBuilder> 
          getPropertiesFieldBuilder() {
        if (propertiesBuilder_ == null) {
          propertiesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.FormulaProperties, EDoc.FormulaProperties.Builder, EDoc.FormulaPropertiesOrBuilder>(
                  getProperties(),
                  getParentForChildren(),
                  isClean());
          properties_ = null;
        }
        return propertiesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Formula)
    }

    // @@protoc_insertion_point(class_scope:Formula)
    private static final EDoc.Formula DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.Formula();
    }

    public static EDoc.Formula getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Formula>
        PARSER = new com.google.protobuf.AbstractParser<Formula>() {
      @java.lang.Override
      public Formula parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Formula(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Formula> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Formula> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.Formula getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Filter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * EDoc output column ID on which the filter is based.
     * </pre>
     *
     * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
     * @return A list containing the column.
     */
    java.util.List<java.lang.String>
        getColumnList();
    /**
     * <pre>
     * EDoc output column ID on which the filter is based.
     * </pre>
     *
     * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
     * @return The count of column.
     */
    int getColumnCount();
    /**
     * <pre>
     * EDoc output column ID on which the filter is based.
     * </pre>
     *
     * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
     * @param index The index of the element to return.
     * @return The column at the given index.
     */
    java.lang.String getColumn(int index);
    /**
     * <pre>
     * EDoc output column ID on which the filter is based.
     * </pre>
     *
     * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
     * @param index The index of the value to return.
     * @return The bytes of the column at the given index.
     */
    com.google.protobuf.ByteString
        getColumnBytes(int index);

    /**
     * <pre>
     * Operator to define a boolean condition on the &#64;column.
     * List of supported operators.
     *   [ =, !=, &lt;, &lt;=, &gt;, &gt;=, between, in, not in ]
     * Note: between is 'between-inclusive'. The other variations of
     * between like left-inclusive, right-inclusive and both-exclusive
     * are represented by changing the values.
     * e.g. between-exclusive(2,4) is represented as between(3,3).
     * </pre>
     *
     * <code>optional string oper = 2;</code>
     * @return Whether the oper field is set.
     */
    boolean hasOper();
    /**
     * <pre>
     * Operator to define a boolean condition on the &#64;column.
     * List of supported operators.
     *   [ =, !=, &lt;, &lt;=, &gt;, &gt;=, between, in, not in ]
     * Note: between is 'between-inclusive'. The other variations of
     * between like left-inclusive, right-inclusive and both-exclusive
     * are represented by changing the values.
     * e.g. between-exclusive(2,4) is represented as between(3,3).
     * </pre>
     *
     * <code>optional string oper = 2;</code>
     * @return The oper.
     */
    java.lang.String getOper();
    /**
     * <pre>
     * Operator to define a boolean condition on the &#64;column.
     * List of supported operators.
     *   [ =, !=, &lt;, &lt;=, &gt;, &gt;=, between, in, not in ]
     * Note: between is 'between-inclusive'. The other variations of
     * between like left-inclusive, right-inclusive and both-exclusive
     * are represented by changing the values.
     * e.g. between-exclusive(2,4) is represented as between(3,3).
     * </pre>
     *
     * <code>optional string oper = 2;</code>
     * @return The bytes for oper.
     */
    com.google.protobuf.ByteString
        getOperBytes();

    /**
     * <pre>
     * Values as arguments to the operator.
     * e.g. date &gt;= 03/01/2020 &lt;= 03/26/2020
     *      is represented as,
     *        column: date
     *        oper: "between"
     *        values: "03/01/2020"
     *        values: "03/26/2020”
     * Date values are expected to be a locale specific representation
     * of 'mm/dd/yyyy' format.
     * </pre>
     *
     * <code>repeated string values = 3;</code>
     * @return A list containing the values.
     */
    java.util.List<java.lang.String>
        getValuesList();
    /**
     * <pre>
     * Values as arguments to the operator.
     * e.g. date &gt;= 03/01/2020 &lt;= 03/26/2020
     *      is represented as,
     *        column: date
     *        oper: "between"
     *        values: "03/01/2020"
     *        values: "03/26/2020”
     * Date values are expected to be a locale specific representation
     * of 'mm/dd/yyyy' format.
     * </pre>
     *
     * <code>repeated string values = 3;</code>
     * @return The count of values.
     */
    int getValuesCount();
    /**
     * <pre>
     * Values as arguments to the operator.
     * e.g. date &gt;= 03/01/2020 &lt;= 03/26/2020
     *      is represented as,
     *        column: date
     *        oper: "between"
     *        values: "03/01/2020"
     *        values: "03/26/2020”
     * Date values are expected to be a locale specific representation
     * of 'mm/dd/yyyy' format.
     * </pre>
     *
     * <code>repeated string values = 3;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    java.lang.String getValues(int index);
    /**
     * <pre>
     * Values as arguments to the operator.
     * e.g. date &gt;= 03/01/2020 &lt;= 03/26/2020
     *      is represented as,
     *        column: date
     *        oper: "between"
     *        values: "03/01/2020"
     *        values: "03/26/2020”
     * Date values are expected to be a locale specific representation
     * of 'mm/dd/yyyy' format.
     * </pre>
     *
     * <code>repeated string values = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the values at the given index.
     */
    com.google.protobuf.ByteString
        getValuesBytes(int index);

    /**
     * <pre>
     * Visualizations(id) to which filter cannot be applied
     * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
     * excluded_visualizations will have viz_1 and viz_2
     * Note: If a viz is excluded from a filter which is linked to a primary
     * filter, the excluded viz of linked filter will be saved in the
     * list of excluded viz of primary filter
     * </pre>
     *
     * <code>repeated string excluded_visualizations = 4;</code>
     * @return A list containing the excludedVisualizations.
     */
    java.util.List<java.lang.String>
        getExcludedVisualizationsList();
    /**
     * <pre>
     * Visualizations(id) to which filter cannot be applied
     * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
     * excluded_visualizations will have viz_1 and viz_2
     * Note: If a viz is excluded from a filter which is linked to a primary
     * filter, the excluded viz of linked filter will be saved in the
     * list of excluded viz of primary filter
     * </pre>
     *
     * <code>repeated string excluded_visualizations = 4;</code>
     * @return The count of excludedVisualizations.
     */
    int getExcludedVisualizationsCount();
    /**
     * <pre>
     * Visualizations(id) to which filter cannot be applied
     * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
     * excluded_visualizations will have viz_1 and viz_2
     * Note: If a viz is excluded from a filter which is linked to a primary
     * filter, the excluded viz of linked filter will be saved in the
     * list of excluded viz of primary filter
     * </pre>
     *
     * <code>repeated string excluded_visualizations = 4;</code>
     * @param index The index of the element to return.
     * @return The excludedVisualizations at the given index.
     */
    java.lang.String getExcludedVisualizations(int index);
    /**
     * <pre>
     * Visualizations(id) to which filter cannot be applied
     * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
     * excluded_visualizations will have viz_1 and viz_2
     * Note: If a viz is excluded from a filter which is linked to a primary
     * filter, the excluded viz of linked filter will be saved in the
     * list of excluded viz of primary filter
     * </pre>
     *
     * <code>repeated string excluded_visualizations = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the excludedVisualizations at the given index.
     */
    com.google.protobuf.ByteString
        getExcludedVisualizationsBytes(int index);
  }
  /**
   * <pre>
   * This message is used to represent query filter on a single column.
   * </pre>
   *
   * Protobuf type {@code Filter}
   */
  public static final class Filter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Filter)
      FilterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Filter.newBuilder() to construct.
    private Filter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Filter() {
      column_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      oper_ = "";
      values_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      excludedVisualizations_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Filter();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Filter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                column_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              column_.add(bs);
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              oper_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                values_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              values_.add(bs);
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                excludedVisualizations_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              excludedVisualizations_.add(bs);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          column_ = column_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          values_ = values_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          excludedVisualizations_ = excludedVisualizations_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_Filter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_Filter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.Filter.class, EDoc.Filter.Builder.class);
    }

    private int bitField0_;
    public static final int COLUMN_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList column_;
    /**
     * <pre>
     * EDoc output column ID on which the filter is based.
     * </pre>
     *
     * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
     * @return A list containing the column.
     */
    public com.google.protobuf.ProtocolStringList
        getColumnList() {
      return column_;
    }
    /**
     * <pre>
     * EDoc output column ID on which the filter is based.
     * </pre>
     *
     * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
     * @return The count of column.
     */
    public int getColumnCount() {
      return column_.size();
    }
    /**
     * <pre>
     * EDoc output column ID on which the filter is based.
     * </pre>
     *
     * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
     * @param index The index of the element to return.
     * @return The column at the given index.
     */
    public java.lang.String getColumn(int index) {
      return column_.get(index);
    }
    /**
     * <pre>
     * EDoc output column ID on which the filter is based.
     * </pre>
     *
     * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
     * @param index The index of the value to return.
     * @return The bytes of the column at the given index.
     */
    public com.google.protobuf.ByteString
        getColumnBytes(int index) {
      return column_.getByteString(index);
    }

    public static final int OPER_FIELD_NUMBER = 2;
    private volatile java.lang.Object oper_;
    /**
     * <pre>
     * Operator to define a boolean condition on the &#64;column.
     * List of supported operators.
     *   [ =, !=, &lt;, &lt;=, &gt;, &gt;=, between, in, not in ]
     * Note: between is 'between-inclusive'. The other variations of
     * between like left-inclusive, right-inclusive and both-exclusive
     * are represented by changing the values.
     * e.g. between-exclusive(2,4) is represented as between(3,3).
     * </pre>
     *
     * <code>optional string oper = 2;</code>
     * @return Whether the oper field is set.
     */
    @java.lang.Override
    public boolean hasOper() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Operator to define a boolean condition on the &#64;column.
     * List of supported operators.
     *   [ =, !=, &lt;, &lt;=, &gt;, &gt;=, between, in, not in ]
     * Note: between is 'between-inclusive'. The other variations of
     * between like left-inclusive, right-inclusive and both-exclusive
     * are represented by changing the values.
     * e.g. between-exclusive(2,4) is represented as between(3,3).
     * </pre>
     *
     * <code>optional string oper = 2;</code>
     * @return The oper.
     */
    @java.lang.Override
    public java.lang.String getOper() {
      java.lang.Object ref = oper_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          oper_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Operator to define a boolean condition on the &#64;column.
     * List of supported operators.
     *   [ =, !=, &lt;, &lt;=, &gt;, &gt;=, between, in, not in ]
     * Note: between is 'between-inclusive'. The other variations of
     * between like left-inclusive, right-inclusive and both-exclusive
     * are represented by changing the values.
     * e.g. between-exclusive(2,4) is represented as between(3,3).
     * </pre>
     *
     * <code>optional string oper = 2;</code>
     * @return The bytes for oper.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOperBytes() {
      java.lang.Object ref = oper_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        oper_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUES_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList values_;
    /**
     * <pre>
     * Values as arguments to the operator.
     * e.g. date &gt;= 03/01/2020 &lt;= 03/26/2020
     *      is represented as,
     *        column: date
     *        oper: "between"
     *        values: "03/01/2020"
     *        values: "03/26/2020”
     * Date values are expected to be a locale specific representation
     * of 'mm/dd/yyyy' format.
     * </pre>
     *
     * <code>repeated string values = 3;</code>
     * @return A list containing the values.
     */
    public com.google.protobuf.ProtocolStringList
        getValuesList() {
      return values_;
    }
    /**
     * <pre>
     * Values as arguments to the operator.
     * e.g. date &gt;= 03/01/2020 &lt;= 03/26/2020
     *      is represented as,
     *        column: date
     *        oper: "between"
     *        values: "03/01/2020"
     *        values: "03/26/2020”
     * Date values are expected to be a locale specific representation
     * of 'mm/dd/yyyy' format.
     * </pre>
     *
     * <code>repeated string values = 3;</code>
     * @return The count of values.
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <pre>
     * Values as arguments to the operator.
     * e.g. date &gt;= 03/01/2020 &lt;= 03/26/2020
     *      is represented as,
     *        column: date
     *        oper: "between"
     *        values: "03/01/2020"
     *        values: "03/26/2020”
     * Date values are expected to be a locale specific representation
     * of 'mm/dd/yyyy' format.
     * </pre>
     *
     * <code>repeated string values = 3;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    public java.lang.String getValues(int index) {
      return values_.get(index);
    }
    /**
     * <pre>
     * Values as arguments to the operator.
     * e.g. date &gt;= 03/01/2020 &lt;= 03/26/2020
     *      is represented as,
     *        column: date
     *        oper: "between"
     *        values: "03/01/2020"
     *        values: "03/26/2020”
     * Date values are expected to be a locale specific representation
     * of 'mm/dd/yyyy' format.
     * </pre>
     *
     * <code>repeated string values = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the values at the given index.
     */
    public com.google.protobuf.ByteString
        getValuesBytes(int index) {
      return values_.getByteString(index);
    }

    public static final int EXCLUDED_VISUALIZATIONS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList excludedVisualizations_;
    /**
     * <pre>
     * Visualizations(id) to which filter cannot be applied
     * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
     * excluded_visualizations will have viz_1 and viz_2
     * Note: If a viz is excluded from a filter which is linked to a primary
     * filter, the excluded viz of linked filter will be saved in the
     * list of excluded viz of primary filter
     * </pre>
     *
     * <code>repeated string excluded_visualizations = 4;</code>
     * @return A list containing the excludedVisualizations.
     */
    public com.google.protobuf.ProtocolStringList
        getExcludedVisualizationsList() {
      return excludedVisualizations_;
    }
    /**
     * <pre>
     * Visualizations(id) to which filter cannot be applied
     * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
     * excluded_visualizations will have viz_1 and viz_2
     * Note: If a viz is excluded from a filter which is linked to a primary
     * filter, the excluded viz of linked filter will be saved in the
     * list of excluded viz of primary filter
     * </pre>
     *
     * <code>repeated string excluded_visualizations = 4;</code>
     * @return The count of excludedVisualizations.
     */
    public int getExcludedVisualizationsCount() {
      return excludedVisualizations_.size();
    }
    /**
     * <pre>
     * Visualizations(id) to which filter cannot be applied
     * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
     * excluded_visualizations will have viz_1 and viz_2
     * Note: If a viz is excluded from a filter which is linked to a primary
     * filter, the excluded viz of linked filter will be saved in the
     * list of excluded viz of primary filter
     * </pre>
     *
     * <code>repeated string excluded_visualizations = 4;</code>
     * @param index The index of the element to return.
     * @return The excludedVisualizations at the given index.
     */
    public java.lang.String getExcludedVisualizations(int index) {
      return excludedVisualizations_.get(index);
    }
    /**
     * <pre>
     * Visualizations(id) to which filter cannot be applied
     * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
     * excluded_visualizations will have viz_1 and viz_2
     * Note: If a viz is excluded from a filter which is linked to a primary
     * filter, the excluded viz of linked filter will be saved in the
     * list of excluded viz of primary filter
     * </pre>
     *
     * <code>repeated string excluded_visualizations = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the excludedVisualizations at the given index.
     */
    public com.google.protobuf.ByteString
        getExcludedVisualizationsBytes(int index) {
      return excludedVisualizations_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < column_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, column_.getRaw(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, oper_);
      }
      for (int i = 0; i < values_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, values_.getRaw(i));
      }
      for (int i = 0; i < excludedVisualizations_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, excludedVisualizations_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < column_.size(); i++) {
          dataSize += computeStringSizeNoTag(column_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getColumnList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, oper_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < values_.size(); i++) {
          dataSize += computeStringSizeNoTag(values_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getValuesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < excludedVisualizations_.size(); i++) {
          dataSize += computeStringSizeNoTag(excludedVisualizations_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getExcludedVisualizationsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.Filter)) {
        return super.equals(obj);
      }
      EDoc.Filter other = (EDoc.Filter) obj;

      if (!getColumnList()
          .equals(other.getColumnList())) return false;
      if (hasOper() != other.hasOper()) return false;
      if (hasOper()) {
        if (!getOper()
            .equals(other.getOper())) return false;
      }
      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!getExcludedVisualizationsList()
          .equals(other.getExcludedVisualizationsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getColumnCount() > 0) {
        hash = (37 * hash) + COLUMN_FIELD_NUMBER;
        hash = (53 * hash) + getColumnList().hashCode();
      }
      if (hasOper()) {
        hash = (37 * hash) + OPER_FIELD_NUMBER;
        hash = (53 * hash) + getOper().hashCode();
      }
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      if (getExcludedVisualizationsCount() > 0) {
        hash = (37 * hash) + EXCLUDED_VISUALIZATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getExcludedVisualizationsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.Filter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Filter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Filter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Filter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Filter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Filter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Filter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.Filter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.Filter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.Filter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.Filter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.Filter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.Filter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This message is used to represent query filter on a single column.
     * </pre>
     *
     * Protobuf type {@code Filter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Filter)
        EDoc.FilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_Filter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_Filter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.Filter.class, EDoc.Filter.Builder.class);
      }

      // Construct using EDoc.Filter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        column_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        oper_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        values_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        excludedVisualizations_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_Filter_descriptor;
      }

      @java.lang.Override
      public EDoc.Filter getDefaultInstanceForType() {
        return EDoc.Filter.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.Filter build() {
        EDoc.Filter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.Filter buildPartial() {
        EDoc.Filter result = new EDoc.Filter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          column_ = column_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.column_ = column_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oper_ = oper_;
        if (((bitField0_ & 0x00000004) != 0)) {
          values_ = values_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.values_ = values_;
        if (((bitField0_ & 0x00000008) != 0)) {
          excludedVisualizations_ = excludedVisualizations_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.excludedVisualizations_ = excludedVisualizations_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.Filter) {
          return mergeFrom((EDoc.Filter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.Filter other) {
        if (other == EDoc.Filter.getDefaultInstance()) return this;
        if (!other.column_.isEmpty()) {
          if (column_.isEmpty()) {
            column_ = other.column_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureColumnIsMutable();
            column_.addAll(other.column_);
          }
          onChanged();
        }
        if (other.hasOper()) {
          bitField0_ |= 0x00000002;
          oper_ = other.oper_;
          onChanged();
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        if (!other.excludedVisualizations_.isEmpty()) {
          if (excludedVisualizations_.isEmpty()) {
            excludedVisualizations_ = other.excludedVisualizations_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureExcludedVisualizationsIsMutable();
            excludedVisualizations_.addAll(other.excludedVisualizations_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.Filter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.Filter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList column_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureColumnIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          column_ = new com.google.protobuf.LazyStringArrayList(column_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * EDoc output column ID on which the filter is based.
       * </pre>
       *
       * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
       * @return A list containing the column.
       */
      public com.google.protobuf.ProtocolStringList
          getColumnList() {
        return column_.getUnmodifiableView();
      }
      /**
       * <pre>
       * EDoc output column ID on which the filter is based.
       * </pre>
       *
       * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
       * @return The count of column.
       */
      public int getColumnCount() {
        return column_.size();
      }
      /**
       * <pre>
       * EDoc output column ID on which the filter is based.
       * </pre>
       *
       * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
       * @param index The index of the element to return.
       * @return The column at the given index.
       */
      public java.lang.String getColumn(int index) {
        return column_.get(index);
      }
      /**
       * <pre>
       * EDoc output column ID on which the filter is based.
       * </pre>
       *
       * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
       * @param index The index of the value to return.
       * @return The bytes of the column at the given index.
       */
      public com.google.protobuf.ByteString
          getColumnBytes(int index) {
        return column_.getByteString(index);
      }
      /**
       * <pre>
       * EDoc output column ID on which the filter is based.
       * </pre>
       *
       * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
       * @param index The index to set the value at.
       * @param value The column to set.
       * @return This builder for chaining.
       */
      public Builder setColumn(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnIsMutable();
        column_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * EDoc output column ID on which the filter is based.
       * </pre>
       *
       * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
       * @param value The column to add.
       * @return This builder for chaining.
       */
      public Builder addColumn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnIsMutable();
        column_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * EDoc output column ID on which the filter is based.
       * </pre>
       *
       * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
       * @param values The column to add.
       * @return This builder for chaining.
       */
      public Builder addAllColumn(
          java.lang.Iterable<java.lang.String> values) {
        ensureColumnIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, column_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * EDoc output column ID on which the filter is based.
       * </pre>
       *
       * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearColumn() {
        column_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * EDoc output column ID on which the filter is based.
       * </pre>
       *
       * <code>repeated string column = 1 [(.Annotation.compulsory) = true];</code>
       * @param value The bytes of the column to add.
       * @return This builder for chaining.
       */
      public Builder addColumnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnIsMutable();
        column_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object oper_ = "";
      /**
       * <pre>
       * Operator to define a boolean condition on the &#64;column.
       * List of supported operators.
       *   [ =, !=, &lt;, &lt;=, &gt;, &gt;=, between, in, not in ]
       * Note: between is 'between-inclusive'. The other variations of
       * between like left-inclusive, right-inclusive and both-exclusive
       * are represented by changing the values.
       * e.g. between-exclusive(2,4) is represented as between(3,3).
       * </pre>
       *
       * <code>optional string oper = 2;</code>
       * @return Whether the oper field is set.
       */
      public boolean hasOper() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Operator to define a boolean condition on the &#64;column.
       * List of supported operators.
       *   [ =, !=, &lt;, &lt;=, &gt;, &gt;=, between, in, not in ]
       * Note: between is 'between-inclusive'. The other variations of
       * between like left-inclusive, right-inclusive and both-exclusive
       * are represented by changing the values.
       * e.g. between-exclusive(2,4) is represented as between(3,3).
       * </pre>
       *
       * <code>optional string oper = 2;</code>
       * @return The oper.
       */
      public java.lang.String getOper() {
        java.lang.Object ref = oper_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            oper_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Operator to define a boolean condition on the &#64;column.
       * List of supported operators.
       *   [ =, !=, &lt;, &lt;=, &gt;, &gt;=, between, in, not in ]
       * Note: between is 'between-inclusive'. The other variations of
       * between like left-inclusive, right-inclusive and both-exclusive
       * are represented by changing the values.
       * e.g. between-exclusive(2,4) is represented as between(3,3).
       * </pre>
       *
       * <code>optional string oper = 2;</code>
       * @return The bytes for oper.
       */
      public com.google.protobuf.ByteString
          getOperBytes() {
        java.lang.Object ref = oper_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          oper_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Operator to define a boolean condition on the &#64;column.
       * List of supported operators.
       *   [ =, !=, &lt;, &lt;=, &gt;, &gt;=, between, in, not in ]
       * Note: between is 'between-inclusive'. The other variations of
       * between like left-inclusive, right-inclusive and both-exclusive
       * are represented by changing the values.
       * e.g. between-exclusive(2,4) is represented as between(3,3).
       * </pre>
       *
       * <code>optional string oper = 2;</code>
       * @param value The oper to set.
       * @return This builder for chaining.
       */
      public Builder setOper(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        oper_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Operator to define a boolean condition on the &#64;column.
       * List of supported operators.
       *   [ =, !=, &lt;, &lt;=, &gt;, &gt;=, between, in, not in ]
       * Note: between is 'between-inclusive'. The other variations of
       * between like left-inclusive, right-inclusive and both-exclusive
       * are represented by changing the values.
       * e.g. between-exclusive(2,4) is represented as between(3,3).
       * </pre>
       *
       * <code>optional string oper = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOper() {
        bitField0_ = (bitField0_ & ~0x00000002);
        oper_ = getDefaultInstance().getOper();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Operator to define a boolean condition on the &#64;column.
       * List of supported operators.
       *   [ =, !=, &lt;, &lt;=, &gt;, &gt;=, between, in, not in ]
       * Note: between is 'between-inclusive'. The other variations of
       * between like left-inclusive, right-inclusive and both-exclusive
       * are represented by changing the values.
       * e.g. between-exclusive(2,4) is represented as between(3,3).
       * </pre>
       *
       * <code>optional string oper = 2;</code>
       * @param value The bytes for oper to set.
       * @return This builder for chaining.
       */
      public Builder setOperBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        oper_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList values_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          values_ = new com.google.protobuf.LazyStringArrayList(values_);
          bitField0_ |= 0x00000004;
         }
      }

      public com.google.protobuf.ProtocolStringList
          getValuesList() {
        return values_.getUnmodifiableView();
      }

      public int getValuesCount() {
        return values_.size();
      }

      
      
      public java.lang.String getValues(int index) {
        return values_.get(index);
      }

      public com.google.protobuf.ByteString
          getValuesBytes(int index) {
        return values_.getByteString(index);
      }

      public Builder setValues(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValuesIsMutable();
        values_.set(index, value);
        onChanged();
        return this;
      }

      public Builder addValues(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValuesIsMutable();
        values_.add(value);
        onChanged();
        return this;
      }

      public Builder addAllValues(
          java.lang.Iterable<java.lang.String> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
        return this;
      }

      public Builder clearValues() {
        values_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      public Builder addValuesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValuesIsMutable();
        values_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList excludedVisualizations_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExcludedVisualizationsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          excludedVisualizations_ = new com.google.protobuf.LazyStringArrayList(excludedVisualizations_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * Visualizations(id) to which filter cannot be applied
       * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
       * excluded_visualizations will have viz_1 and viz_2
       * Note: If a viz is excluded from a filter which is linked to a primary
       * filter, the excluded viz of linked filter will be saved in the
       * list of excluded viz of primary filter
       * </pre>
       *
       * <code>repeated string excluded_visualizations = 4;</code>
       * @return A list containing the excludedVisualizations.
       */
      public com.google.protobuf.ProtocolStringList
          getExcludedVisualizationsList() {
        return excludedVisualizations_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Visualizations(id) to which filter cannot be applied
       * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
       * excluded_visualizations will have viz_1 and viz_2
       * Note: If a viz is excluded from a filter which is linked to a primary
       * filter, the excluded viz of linked filter will be saved in the
       * list of excluded viz of primary filter
       * </pre>
       *
       * <code>repeated string excluded_visualizations = 4;</code>
       * @return The count of excludedVisualizations.
       */
      public int getExcludedVisualizationsCount() {
        return excludedVisualizations_.size();
      }
      /**
       * <pre>
       * Visualizations(id) to which filter cannot be applied
       * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
       * excluded_visualizations will have viz_1 and viz_2
       * Note: If a viz is excluded from a filter which is linked to a primary
       * filter, the excluded viz of linked filter will be saved in the
       * list of excluded viz of primary filter
       * </pre>
       *
       * <code>repeated string excluded_visualizations = 4;</code>
       * @param index The index of the element to return.
       * @return The excludedVisualizations at the given index.
       */
      public java.lang.String getExcludedVisualizations(int index) {
        return excludedVisualizations_.get(index);
      }
      /**
       * <pre>
       * Visualizations(id) to which filter cannot be applied
       * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
       * excluded_visualizations will have viz_1 and viz_2
       * Note: If a viz is excluded from a filter which is linked to a primary
       * filter, the excluded viz of linked filter will be saved in the
       * list of excluded viz of primary filter
       * </pre>
       *
       * <code>repeated string excluded_visualizations = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the excludedVisualizations at the given index.
       */
      public com.google.protobuf.ByteString
          getExcludedVisualizationsBytes(int index) {
        return excludedVisualizations_.getByteString(index);
      }
      /**
       * <pre>
       * Visualizations(id) to which filter cannot be applied
       * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
       * excluded_visualizations will have viz_1 and viz_2
       * Note: If a viz is excluded from a filter which is linked to a primary
       * filter, the excluded viz of linked filter will be saved in the
       * list of excluded viz of primary filter
       * </pre>
       *
       * <code>repeated string excluded_visualizations = 4;</code>
       * @param index The index to set the value at.
       * @param value The excludedVisualizations to set.
       * @return This builder for chaining.
       */
      public Builder setExcludedVisualizations(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExcludedVisualizationsIsMutable();
        excludedVisualizations_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Visualizations(id) to which filter cannot be applied
       * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
       * excluded_visualizations will have viz_1 and viz_2
       * Note: If a viz is excluded from a filter which is linked to a primary
       * filter, the excluded viz of linked filter will be saved in the
       * list of excluded viz of primary filter
       * </pre>
       *
       * <code>repeated string excluded_visualizations = 4;</code>
       * @param value The excludedVisualizations to add.
       * @return This builder for chaining.
       */
      public Builder addExcludedVisualizations(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExcludedVisualizationsIsMutable();
        excludedVisualizations_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Visualizations(id) to which filter cannot be applied
       * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
       * excluded_visualizations will have viz_1 and viz_2
       * Note: If a viz is excluded from a filter which is linked to a primary
       * filter, the excluded viz of linked filter will be saved in the
       * list of excluded viz of primary filter
       * </pre>
       *
       * <code>repeated string excluded_visualizations = 4;</code>
       * @param values The excludedVisualizations to add.
       * @return This builder for chaining.
       */
      public Builder addAllExcludedVisualizations(
          java.lang.Iterable<java.lang.String> values) {
        ensureExcludedVisualizationsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, excludedVisualizations_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Visualizations(id) to which filter cannot be applied
       * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
       * excluded_visualizations will have viz_1 and viz_2
       * Note: If a viz is excluded from a filter which is linked to a primary
       * filter, the excluded viz of linked filter will be saved in the
       * list of excluded viz of primary filter
       * </pre>
       *
       * <code>repeated string excluded_visualizations = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearExcludedVisualizations() {
        excludedVisualizations_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Visualizations(id) to which filter cannot be applied
       * e.g. if ws1.f1 cannot be applied to viz_1 and viz_2 then
       * excluded_visualizations will have viz_1 and viz_2
       * Note: If a viz is excluded from a filter which is linked to a primary
       * filter, the excluded viz of linked filter will be saved in the
       * list of excluded viz of primary filter
       * </pre>
       *
       * <code>repeated string excluded_visualizations = 4;</code>
       * @param value The bytes of the excludedVisualizations to add.
       * @return This builder for chaining.
       */
      public Builder addExcludedVisualizationsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExcludedVisualizationsIsMutable();
        excludedVisualizations_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Filter)
    }

    // @@protoc_insertion_point(class_scope:Filter)
    private static final EDoc.Filter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.Filter();
    }

    public static EDoc.Filter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Filter>
        PARSER = new com.google.protobuf.AbstractParser<Filter>() {
      @java.lang.Override
      public Filter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Filter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Filter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Filter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.Filter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface JoinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Join)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * To specify the join, the users can specify one of the following:
     * 1. (name,source,destination) -&gt; Unique to identify the join
     * 2. (name,source,destination,on) fields to specify the join like:
     *        source = LO
     *        destination = CUST
     *        on [LO.Key  =  CUST.Key]
     *        on [LO.Key1 =  CUST.Key1]
     * ID of the join to be used in the edoc. This is mostly of the form
     * LO-&gt;CUST. The source and destination are the IDs of the tables that
     * are involved in the join. In case there are more than one join between two
     * tables, the default IDs would be LO-&gt;CUST_1, LO-&gt;CUST_2 and so on.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * To specify the join, the users can specify one of the following:
     * 1. (name,source,destination) -&gt; Unique to identify the join
     * 2. (name,source,destination,on) fields to specify the join like:
     *        source = LO
     *        destination = CUST
     *        on [LO.Key  =  CUST.Key]
     *        on [LO.Key1 =  CUST.Key1]
     * ID of the join to be used in the edoc. This is mostly of the form
     * LO-&gt;CUST. The source and destination are the IDs of the tables that
     * are involved in the join. In case there are more than one join between two
     * tables, the default IDs would be LO-&gt;CUST_1, LO-&gt;CUST_2 and so on.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * To specify the join, the users can specify one of the following:
     * 1. (name,source,destination) -&gt; Unique to identify the join
     * 2. (name,source,destination,on) fields to specify the join like:
     *        source = LO
     *        destination = CUST
     *        on [LO.Key  =  CUST.Key]
     *        on [LO.Key1 =  CUST.Key1]
     * ID of the join to be used in the edoc. This is mostly of the form
     * LO-&gt;CUST. The source and destination are the IDs of the tables that
     * are involved in the join. In case there are more than one join between two
     * tables, the default IDs would be LO-&gt;CUST_1, LO-&gt;CUST_2 and so on.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional string source = 3 [(.Annotation.compulsory) = true];</code>
     * @return Whether the source field is set.
     */
    boolean hasSource();
    /**
     * <code>optional string source = 3 [(.Annotation.compulsory) = true];</code>
     * @return The source.
     */
    java.lang.String getSource();
    /**
     * <code>optional string source = 3 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for source.
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <code>optional string destination = 4 [(.Annotation.compulsory) = true];</code>
     * @return Whether the destination field is set.
     */
    boolean hasDestination();
    /**
     * <code>optional string destination = 4 [(.Annotation.compulsory) = true];</code>
     * @return The destination.
     */
    java.lang.String getDestination();
    /**
     * <code>optional string destination = 4 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for destination.
     */
    com.google.protobuf.ByteString
        getDestinationBytes();

    /**
     * <code>repeated string on = 5;</code>
     * @return A list containing the on.
     */
    java.util.List<java.lang.String>
        getOnList();
    /**
     * <code>repeated string on = 5;</code>
     * @return The count of on.
     */
    int getOnCount();
    /**
     * <code>repeated string on = 5;</code>
     * @param index The index of the element to return.
     * @return The on at the given index.
     */
    java.lang.String getOn(int index);
    /**
     * <code>repeated string on = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the on at the given index.
     */
    com.google.protobuf.ByteString
        getOnBytes(int index);

    /**
     * <pre>
     * Join properties in the context of the object it is being defined.
     * </pre>
     *
     * <code>optional string type = 6 [(.Annotation.allowed_values_key) = "edoc.join_type"];</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <pre>
     * Join properties in the context of the object it is being defined.
     * </pre>
     *
     * <code>optional string type = 6 [(.Annotation.allowed_values_key) = "edoc.join_type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * Join properties in the context of the object it is being defined.
     * </pre>
     *
     * <code>optional string type = 6 [(.Annotation.allowed_values_key) = "edoc.join_type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>optional bool is_one_to_one = 7 [default = false];</code>
     * @return Whether the isOneToOne field is set.
     */
    boolean hasIsOneToOne();
    /**
     * <code>optional bool is_one_to_one = 7 [default = false];</code>
     * @return The isOneToOne.
     */
    boolean getIsOneToOne();
  }
  /**
   * <pre>
   * Join definitions.
   * </pre>
   *
   * Protobuf type {@code Join}
   */
  public static final class Join extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Join)
      JoinOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Join.newBuilder() to construct.
    private Join(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Join() {
      id_ = "";
      name_ = "";
      source_ = "";
      destination_ = "";
      on_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Join();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Join(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              source_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              destination_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                on_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              on_.add(bs);
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              type_ = bs;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              isOneToOne_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          on_ = on_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_Join_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_Join_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.Join.class, EDoc.Join.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * To specify the join, the users can specify one of the following:
     * 1. (name,source,destination) -&gt; Unique to identify the join
     * 2. (name,source,destination,on) fields to specify the join like:
     *        source = LO
     *        destination = CUST
     *        on [LO.Key  =  CUST.Key]
     *        on [LO.Key1 =  CUST.Key1]
     * ID of the join to be used in the edoc. This is mostly of the form
     * LO-&gt;CUST. The source and destination are the IDs of the tables that
     * are involved in the join. In case there are more than one join between two
     * tables, the default IDs would be LO-&gt;CUST_1, LO-&gt;CUST_2 and so on.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * To specify the join, the users can specify one of the following:
     * 1. (name,source,destination) -&gt; Unique to identify the join
     * 2. (name,source,destination,on) fields to specify the join like:
     *        source = LO
     *        destination = CUST
     *        on [LO.Key  =  CUST.Key]
     *        on [LO.Key1 =  CUST.Key1]
     * ID of the join to be used in the edoc. This is mostly of the form
     * LO-&gt;CUST. The source and destination are the IDs of the tables that
     * are involved in the join. In case there are more than one join between two
     * tables, the default IDs would be LO-&gt;CUST_1, LO-&gt;CUST_2 and so on.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * To specify the join, the users can specify one of the following:
     * 1. (name,source,destination) -&gt; Unique to identify the join
     * 2. (name,source,destination,on) fields to specify the join like:
     *        source = LO
     *        destination = CUST
     *        on [LO.Key  =  CUST.Key]
     *        on [LO.Key1 =  CUST.Key1]
     * ID of the join to be used in the edoc. This is mostly of the form
     * LO-&gt;CUST. The source and destination are the IDs of the tables that
     * are involved in the join. In case there are more than one join between two
     * tables, the default IDs would be LO-&gt;CUST_1, LO-&gt;CUST_2 and so on.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_FIELD_NUMBER = 3;
    private volatile java.lang.Object source_;
    /**
     * <code>optional string source = 3 [(.Annotation.compulsory) = true];</code>
     * @return Whether the source field is set.
     */
    @java.lang.Override
    public boolean hasSource() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string source = 3 [(.Annotation.compulsory) = true];</code>
     * @return The source.
     */
    @java.lang.Override
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          source_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string source = 3 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for source.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESTINATION_FIELD_NUMBER = 4;
    private volatile java.lang.Object destination_;
    /**
     * <code>optional string destination = 4 [(.Annotation.compulsory) = true];</code>
     * @return Whether the destination field is set.
     */
    @java.lang.Override
    public boolean hasDestination() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional string destination = 4 [(.Annotation.compulsory) = true];</code>
     * @return The destination.
     */
    @java.lang.Override
    public java.lang.String getDestination() {
      java.lang.Object ref = destination_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          destination_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string destination = 4 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for destination.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDestinationBytes() {
      java.lang.Object ref = destination_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        destination_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ON_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList on_;
    /**
     * <code>repeated string on = 5;</code>
     * @return A list containing the on.
     */
    public com.google.protobuf.ProtocolStringList
        getOnList() {
      return on_;
    }
    /**
     * <code>repeated string on = 5;</code>
     * @return The count of on.
     */
    public int getOnCount() {
      return on_.size();
    }
    /**
     * <code>repeated string on = 5;</code>
     * @param index The index of the element to return.
     * @return The on at the given index.
     */
    public java.lang.String getOn(int index) {
      return on_.get(index);
    }
    /**
     * <code>repeated string on = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the on at the given index.
     */
    public com.google.protobuf.ByteString
        getOnBytes(int index) {
      return on_.getByteString(index);
    }

    public static final int TYPE_FIELD_NUMBER = 6;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * Join properties in the context of the object it is being defined.
     * </pre>
     *
     * <code>optional string type = 6 [(.Annotation.allowed_values_key) = "edoc.join_type"];</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Join properties in the context of the object it is being defined.
     * </pre>
     *
     * <code>optional string type = 6 [(.Annotation.allowed_values_key) = "edoc.join_type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Join properties in the context of the object it is being defined.
     * </pre>
     *
     * <code>optional string type = 6 [(.Annotation.allowed_values_key) = "edoc.join_type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IS_ONE_TO_ONE_FIELD_NUMBER = 7;
    private boolean isOneToOne_;
    /**
     * <code>optional bool is_one_to_one = 7 [default = false];</code>
     * @return Whether the isOneToOne field is set.
     */
    @java.lang.Override
    public boolean hasIsOneToOne() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional bool is_one_to_one = 7 [default = false];</code>
     * @return The isOneToOne.
     */
    @java.lang.Override
    public boolean getIsOneToOne() {
      return isOneToOne_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, source_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, destination_);
      }
      for (int i = 0; i < on_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, on_.getRaw(i));
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, type_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeBool(7, isOneToOne_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, source_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, destination_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < on_.size(); i++) {
          dataSize += computeStringSizeNoTag(on_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getOnList().size();
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, type_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isOneToOne_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.Join)) {
        return super.equals(obj);
      }
      EDoc.Join other = (EDoc.Join) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasSource() != other.hasSource()) return false;
      if (hasSource()) {
        if (!getSource()
            .equals(other.getSource())) return false;
      }
      if (hasDestination() != other.hasDestination()) return false;
      if (hasDestination()) {
        if (!getDestination()
            .equals(other.getDestination())) return false;
      }
      if (!getOnList()
          .equals(other.getOnList())) return false;
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (!getType()
            .equals(other.getType())) return false;
      }
      if (hasIsOneToOne() != other.hasIsOneToOne()) return false;
      if (hasIsOneToOne()) {
        if (getIsOneToOne()
            != other.getIsOneToOne()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasSource()) {
        hash = (37 * hash) + SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getSource().hashCode();
      }
      if (hasDestination()) {
        hash = (37 * hash) + DESTINATION_FIELD_NUMBER;
        hash = (53 * hash) + getDestination().hashCode();
      }
      if (getOnCount() > 0) {
        hash = (37 * hash) + ON_FIELD_NUMBER;
        hash = (53 * hash) + getOnList().hashCode();
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      if (hasIsOneToOne()) {
        hash = (37 * hash) + IS_ONE_TO_ONE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsOneToOne());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.Join parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Join parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Join parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Join parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Join parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Join parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Join parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.Join parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.Join parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.Join parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.Join parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.Join parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.Join prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Join definitions.
     * </pre>
     *
     * Protobuf type {@code Join}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Join)
        EDoc.JoinOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_Join_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_Join_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.Join.class, EDoc.Join.Builder.class);
      }

      // Construct using EDoc.Join.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        source_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        destination_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        on_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        isOneToOne_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_Join_descriptor;
      }

      @java.lang.Override
      public EDoc.Join getDefaultInstanceForType() {
        return EDoc.Join.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.Join build() {
        EDoc.Join result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.Join buildPartial() {
        EDoc.Join result = new EDoc.Join(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.source_ = source_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.destination_ = destination_;
        if (((bitField0_ & 0x00000010) != 0)) {
          on_ = on_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.on_ = on_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.isOneToOne_ = isOneToOne_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.Join) {
          return mergeFrom((EDoc.Join)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.Join other) {
        if (other == EDoc.Join.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasSource()) {
          bitField0_ |= 0x00000004;
          source_ = other.source_;
          onChanged();
        }
        if (other.hasDestination()) {
          bitField0_ |= 0x00000008;
          destination_ = other.destination_;
          onChanged();
        }
        if (!other.on_.isEmpty()) {
          if (on_.isEmpty()) {
            on_ = other.on_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureOnIsMutable();
            on_.addAll(other.on_);
          }
          onChanged();
        }
        if (other.hasType()) {
          bitField0_ |= 0x00000020;
          type_ = other.type_;
          onChanged();
        }
        if (other.hasIsOneToOne()) {
          setIsOneToOne(other.getIsOneToOne());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.Join parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.Join) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * To specify the join, the users can specify one of the following:
       * 1. (name,source,destination) -&gt; Unique to identify the join
       * 2. (name,source,destination,on) fields to specify the join like:
       *        source = LO
       *        destination = CUST
       *        on [LO.Key  =  CUST.Key]
       *        on [LO.Key1 =  CUST.Key1]
       * ID of the join to be used in the edoc. This is mostly of the form
       * LO-&gt;CUST. The source and destination are the IDs of the tables that
       * are involved in the join. In case there are more than one join between two
       * tables, the default IDs would be LO-&gt;CUST_1, LO-&gt;CUST_2 and so on.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * To specify the join, the users can specify one of the following:
       * 1. (name,source,destination) -&gt; Unique to identify the join
       * 2. (name,source,destination,on) fields to specify the join like:
       *        source = LO
       *        destination = CUST
       *        on [LO.Key  =  CUST.Key]
       *        on [LO.Key1 =  CUST.Key1]
       * ID of the join to be used in the edoc. This is mostly of the form
       * LO-&gt;CUST. The source and destination are the IDs of the tables that
       * are involved in the join. In case there are more than one join between two
       * tables, the default IDs would be LO-&gt;CUST_1, LO-&gt;CUST_2 and so on.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * To specify the join, the users can specify one of the following:
       * 1. (name,source,destination) -&gt; Unique to identify the join
       * 2. (name,source,destination,on) fields to specify the join like:
       *        source = LO
       *        destination = CUST
       *        on [LO.Key  =  CUST.Key]
       *        on [LO.Key1 =  CUST.Key1]
       * ID of the join to be used in the edoc. This is mostly of the form
       * LO-&gt;CUST. The source and destination are the IDs of the tables that
       * are involved in the join. In case there are more than one join between two
       * tables, the default IDs would be LO-&gt;CUST_1, LO-&gt;CUST_2 and so on.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * To specify the join, the users can specify one of the following:
       * 1. (name,source,destination) -&gt; Unique to identify the join
       * 2. (name,source,destination,on) fields to specify the join like:
       *        source = LO
       *        destination = CUST
       *        on [LO.Key  =  CUST.Key]
       *        on [LO.Key1 =  CUST.Key1]
       * ID of the join to be used in the edoc. This is mostly of the form
       * LO-&gt;CUST. The source and destination are the IDs of the tables that
       * are involved in the join. In case there are more than one join between two
       * tables, the default IDs would be LO-&gt;CUST_1, LO-&gt;CUST_2 and so on.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * To specify the join, the users can specify one of the following:
       * 1. (name,source,destination) -&gt; Unique to identify the join
       * 2. (name,source,destination,on) fields to specify the join like:
       *        source = LO
       *        destination = CUST
       *        on [LO.Key  =  CUST.Key]
       *        on [LO.Key1 =  CUST.Key1]
       * ID of the join to be used in the edoc. This is mostly of the form
       * LO-&gt;CUST. The source and destination are the IDs of the tables that
       * are involved in the join. In case there are more than one join between two
       * tables, the default IDs would be LO-&gt;CUST_1, LO-&gt;CUST_2 and so on.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * To specify the join, the users can specify one of the following:
       * 1. (name,source,destination) -&gt; Unique to identify the join
       * 2. (name,source,destination,on) fields to specify the join like:
       *        source = LO
       *        destination = CUST
       *        on [LO.Key  =  CUST.Key]
       *        on [LO.Key1 =  CUST.Key1]
       * ID of the join to be used in the edoc. This is mostly of the form
       * LO-&gt;CUST. The source and destination are the IDs of the tables that
       * are involved in the join. In case there are more than one join between two
       * tables, the default IDs would be LO-&gt;CUST_1, LO-&gt;CUST_2 and so on.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object source_ = "";
      /**
       * <code>optional string source = 3 [(.Annotation.compulsory) = true];</code>
       * @return Whether the source field is set.
       */
      public boolean hasSource() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string source = 3 [(.Annotation.compulsory) = true];</code>
       * @return The source.
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            source_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string source = 3 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for source.
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string source = 3 [(.Annotation.compulsory) = true];</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 3 [(.Annotation.compulsory) = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        bitField0_ = (bitField0_ & ~0x00000004);
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 3 [(.Annotation.compulsory) = true];</code>
       * @param value The bytes for source to set.
       * @return This builder for chaining.
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        source_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object destination_ = "";
      /**
       * <code>optional string destination = 4 [(.Annotation.compulsory) = true];</code>
       * @return Whether the destination field is set.
       */
      public boolean hasDestination() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional string destination = 4 [(.Annotation.compulsory) = true];</code>
       * @return The destination.
       */
      public java.lang.String getDestination() {
        java.lang.Object ref = destination_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            destination_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string destination = 4 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for destination.
       */
      public com.google.protobuf.ByteString
          getDestinationBytes() {
        java.lang.Object ref = destination_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          destination_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string destination = 4 [(.Annotation.compulsory) = true];</code>
       * @param value The destination to set.
       * @return This builder for chaining.
       */
      public Builder setDestination(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        destination_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string destination = 4 [(.Annotation.compulsory) = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearDestination() {
        bitField0_ = (bitField0_ & ~0x00000008);
        destination_ = getDefaultInstance().getDestination();
        onChanged();
        return this;
      }
      /**
       * <code>optional string destination = 4 [(.Annotation.compulsory) = true];</code>
       * @param value The bytes for destination to set.
       * @return This builder for chaining.
       */
      public Builder setDestinationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        destination_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList on_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureOnIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          on_ = new com.google.protobuf.LazyStringArrayList(on_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string on = 5;</code>
       * @return A list containing the on.
       */
      public com.google.protobuf.ProtocolStringList
          getOnList() {
        return on_.getUnmodifiableView();
      }
      /**
       * <code>repeated string on = 5;</code>
       * @return The count of on.
       */
      public int getOnCount() {
        return on_.size();
      }
      /**
       * <code>repeated string on = 5;</code>
       * @param index The index of the element to return.
       * @return The on at the given index.
       */
      public java.lang.String getOn(int index) {
        return on_.get(index);
      }
      /**
       * <code>repeated string on = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the on at the given index.
       */
      public com.google.protobuf.ByteString
          getOnBytes(int index) {
        return on_.getByteString(index);
      }
      /**
       * <code>repeated string on = 5;</code>
       * @param index The index to set the value at.
       * @param value The on to set.
       * @return This builder for chaining.
       */
      public Builder setOn(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOnIsMutable();
        on_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string on = 5;</code>
       * @param value The on to add.
       * @return This builder for chaining.
       */
      public Builder addOn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOnIsMutable();
        on_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string on = 5;</code>
       * @param values The on to add.
       * @return This builder for chaining.
       */
      public Builder addAllOn(
          java.lang.Iterable<java.lang.String> values) {
        ensureOnIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, on_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string on = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearOn() {
        on_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string on = 5;</code>
       * @param value The bytes of the on to add.
       * @return This builder for chaining.
       */
      public Builder addOnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOnIsMutable();
        on_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * Join properties in the context of the object it is being defined.
       * </pre>
       *
       * <code>optional string type = 6 [(.Annotation.allowed_values_key) = "edoc.join_type"];</code>
       * @return Whether the type field is set.
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Join properties in the context of the object it is being defined.
       * </pre>
       *
       * <code>optional string type = 6 [(.Annotation.allowed_values_key) = "edoc.join_type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            type_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Join properties in the context of the object it is being defined.
       * </pre>
       *
       * <code>optional string type = 6 [(.Annotation.allowed_values_key) = "edoc.join_type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Join properties in the context of the object it is being defined.
       * </pre>
       *
       * <code>optional string type = 6 [(.Annotation.allowed_values_key) = "edoc.join_type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Join properties in the context of the object it is being defined.
       * </pre>
       *
       * <code>optional string type = 6 [(.Annotation.allowed_values_key) = "edoc.join_type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Join properties in the context of the object it is being defined.
       * </pre>
       *
       * <code>optional string type = 6 [(.Annotation.allowed_values_key) = "edoc.join_type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        type_ = value;
        onChanged();
        return this;
      }

      private boolean isOneToOne_ ;
      /**
       * <code>optional bool is_one_to_one = 7 [default = false];</code>
       * @return Whether the isOneToOne field is set.
       */
      @java.lang.Override
      public boolean hasIsOneToOne() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional bool is_one_to_one = 7 [default = false];</code>
       * @return The isOneToOne.
       */
      @java.lang.Override
      public boolean getIsOneToOne() {
        return isOneToOne_;
      }
      /**
       * <code>optional bool is_one_to_one = 7 [default = false];</code>
       * @param value The isOneToOne to set.
       * @return This builder for chaining.
       */
      public Builder setIsOneToOne(boolean value) {
        bitField0_ |= 0x00000040;
        isOneToOne_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_one_to_one = 7 [default = false];</code>
       * @return This builder for chaining.
       */
      public Builder clearIsOneToOne() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isOneToOne_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Join)
    }

    // @@protoc_insertion_point(class_scope:Join)
    private static final EDoc.Join DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.Join();
    }

    public static EDoc.Join getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Join>
        PARSER = new com.google.protobuf.AbstractParser<Join>() {
      @java.lang.Override
      public Join parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Join(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Join> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Join> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.Join getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RelationEDocProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RelationEDocProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional string description = 2;</code>
     * @return Whether the description field is set.
     */
    boolean hasDescription();
    /**
     * <code>optional string description = 2;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <code>optional string description = 2;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * Identifier of the source table. If the 'RelationEDocProto' is used
     * for storing outgoing relationships in a table, &#64;source_table field can be
     * ignored.
     * </pre>
     *
     * <code>optional .Identity source = 3;</code>
     * @return Whether the source field is set.
     */
    boolean hasSource();
    /**
     * <pre>
     * Identifier of the source table. If the 'RelationEDocProto' is used
     * for storing outgoing relationships in a table, &#64;source_table field can be
     * ignored.
     * </pre>
     *
     * <code>optional .Identity source = 3;</code>
     * @return The source.
     */
    EDoc.Identity getSource();
    /**
     * <pre>
     * Identifier of the source table. If the 'RelationEDocProto' is used
     * for storing outgoing relationships in a table, &#64;source_table field can be
     * ignored.
     * </pre>
     *
     * <code>optional .Identity source = 3;</code>
     */
    EDoc.IdentityOrBuilder getSourceOrBuilder();

    /**
     * <pre>
     * Identifier of the destination table.
     * </pre>
     *
     * <code>optional .Identity destination = 4;</code>
     * @return Whether the destination field is set.
     */
    boolean hasDestination();
    /**
     * <pre>
     * Identifier of the destination table.
     * </pre>
     *
     * <code>optional .Identity destination = 4;</code>
     * @return The destination.
     */
    EDoc.Identity getDestination();
    /**
     * <pre>
     * Identifier of the destination table.
     * </pre>
     *
     * <code>optional .Identity destination = 4;</code>
     */
    EDoc.IdentityOrBuilder getDestinationOrBuilder();

    /**
     * <pre>
     * Join expression.
     * Eg: [lineorder::a] = [customer::b] AND [lineorder::c] = [customer::d]
     * </pre>
     *
     * <code>optional string on = 5;</code>
     * @return Whether the on field is set.
     */
    boolean hasOn();
    /**
     * <pre>
     * Join expression.
     * Eg: [lineorder::a] = [customer::b] AND [lineorder::c] = [customer::d]
     * </pre>
     *
     * <code>optional string on = 5;</code>
     * @return The on.
     */
    java.lang.String getOn();
    /**
     * <pre>
     * Join expression.
     * Eg: [lineorder::a] = [customer::b] AND [lineorder::c] = [customer::d]
     * </pre>
     *
     * <code>optional string on = 5;</code>
     * @return The bytes for on.
     */
    com.google.protobuf.ByteString
        getOnBytes();

    /**
     * <pre>
     * Join properties in the context of the object it is being defined.
     * Possible Values: INNER, OUTER, LEFT_OUTER, RIGHT_OUTER
     * </pre>
     *
     * <code>optional string type = 6;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <pre>
     * Join properties in the context of the object it is being defined.
     * Possible Values: INNER, OUTER, LEFT_OUTER, RIGHT_OUTER
     * </pre>
     *
     * <code>optional string type = 6;</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * Join properties in the context of the object it is being defined.
     * Possible Values: INNER, OUTER, LEFT_OUTER, RIGHT_OUTER
     * </pre>
     *
     * <code>optional string type = 6;</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>optional bool is_one_to_one = 7;</code>
     * @return Whether the isOneToOne field is set.
     */
    boolean hasIsOneToOne();
    /**
     * <code>optional bool is_one_to_one = 7;</code>
     * @return The isOneToOne.
     */
    boolean getIsOneToOne();
  }
  /**
   * <pre>
   * Relationship definition to be attached with a logical table.
   * Note: Join proto is pretty much similar to 'RelationEDocProto', However
   *       Join proto is used mostly for referring a relationship in a
   *       worksheet/view/answer or overriding certain properties of a join at
   *       worksheet level and Relationship proto is used for Relationship
   *       definition. The &#64;on field in Join proto is used only for displaying
   *       the join information, however the &#64;on field in RelationEDocProto is
   *       the main expression that defines the join condition.
   * </pre>
   *
   * Protobuf type {@code RelationEDocProto}
   */
  public static final class RelationEDocProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RelationEDocProto)
      RelationEDocProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RelationEDocProto.newBuilder() to construct.
    private RelationEDocProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RelationEDocProto() {
      name_ = "";
      description_ = "";
      on_ = "";
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RelationEDocProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RelationEDocProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              description_ = bs;
              break;
            }
            case 26: {
              EDoc.Identity.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) != 0)) {
                subBuilder = source_.toBuilder();
              }
              source_ = input.readMessage(EDoc.Identity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(source_);
                source_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              EDoc.Identity.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) != 0)) {
                subBuilder = destination_.toBuilder();
              }
              destination_ = input.readMessage(EDoc.Identity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(destination_);
                destination_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              on_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              type_ = bs;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              isOneToOne_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_RelationEDocProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_RelationEDocProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.RelationEDocProto.class, EDoc.RelationEDocProto.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object description_;
    /**
     * <code>optional string description = 2;</code>
     * @return Whether the description field is set.
     */
    @java.lang.Override
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string description = 2;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string description = 2;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_FIELD_NUMBER = 3;
    private EDoc.Identity source_;
    /**
     * <pre>
     * Identifier of the source table. If the 'RelationEDocProto' is used
     * for storing outgoing relationships in a table, &#64;source_table field can be
     * ignored.
     * </pre>
     *
     * <code>optional .Identity source = 3;</code>
     * @return Whether the source field is set.
     */
    @java.lang.Override
    public boolean hasSource() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Identifier of the source table. If the 'RelationEDocProto' is used
     * for storing outgoing relationships in a table, &#64;source_table field can be
     * ignored.
     * </pre>
     *
     * <code>optional .Identity source = 3;</code>
     * @return The source.
     */
    @java.lang.Override
    public EDoc.Identity getSource() {
      return source_ == null ? EDoc.Identity.getDefaultInstance() : source_;
    }
    /**
     * <pre>
     * Identifier of the source table. If the 'RelationEDocProto' is used
     * for storing outgoing relationships in a table, &#64;source_table field can be
     * ignored.
     * </pre>
     *
     * <code>optional .Identity source = 3;</code>
     */
    @java.lang.Override
    public EDoc.IdentityOrBuilder getSourceOrBuilder() {
      return source_ == null ? EDoc.Identity.getDefaultInstance() : source_;
    }

    public static final int DESTINATION_FIELD_NUMBER = 4;
    private EDoc.Identity destination_;
    /**
     * <pre>
     * Identifier of the destination table.
     * </pre>
     *
     * <code>optional .Identity destination = 4;</code>
     * @return Whether the destination field is set.
     */
    @java.lang.Override
    public boolean hasDestination() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Identifier of the destination table.
     * </pre>
     *
     * <code>optional .Identity destination = 4;</code>
     * @return The destination.
     */
    @java.lang.Override
    public EDoc.Identity getDestination() {
      return destination_ == null ? EDoc.Identity.getDefaultInstance() : destination_;
    }
    /**
     * <pre>
     * Identifier of the destination table.
     * </pre>
     *
     * <code>optional .Identity destination = 4;</code>
     */
    @java.lang.Override
    public EDoc.IdentityOrBuilder getDestinationOrBuilder() {
      return destination_ == null ? EDoc.Identity.getDefaultInstance() : destination_;
    }

    public static final int ON_FIELD_NUMBER = 5;
    private volatile java.lang.Object on_;
    /**
     * <pre>
     * Join expression.
     * Eg: [lineorder::a] = [customer::b] AND [lineorder::c] = [customer::d]
     * </pre>
     *
     * <code>optional string on = 5;</code>
     * @return Whether the on field is set.
     */
    @java.lang.Override
    public boolean hasOn() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Join expression.
     * Eg: [lineorder::a] = [customer::b] AND [lineorder::c] = [customer::d]
     * </pre>
     *
     * <code>optional string on = 5;</code>
     * @return The on.
     */
    @java.lang.Override
    public java.lang.String getOn() {
      java.lang.Object ref = on_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          on_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Join expression.
     * Eg: [lineorder::a] = [customer::b] AND [lineorder::c] = [customer::d]
     * </pre>
     *
     * <code>optional string on = 5;</code>
     * @return The bytes for on.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOnBytes() {
      java.lang.Object ref = on_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        on_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 6;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * Join properties in the context of the object it is being defined.
     * Possible Values: INNER, OUTER, LEFT_OUTER, RIGHT_OUTER
     * </pre>
     *
     * <code>optional string type = 6;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Join properties in the context of the object it is being defined.
     * Possible Values: INNER, OUTER, LEFT_OUTER, RIGHT_OUTER
     * </pre>
     *
     * <code>optional string type = 6;</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Join properties in the context of the object it is being defined.
     * Possible Values: INNER, OUTER, LEFT_OUTER, RIGHT_OUTER
     * </pre>
     *
     * <code>optional string type = 6;</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IS_ONE_TO_ONE_FIELD_NUMBER = 7;
    private boolean isOneToOne_;
    /**
     * <code>optional bool is_one_to_one = 7;</code>
     * @return Whether the isOneToOne field is set.
     */
    @java.lang.Override
    public boolean hasIsOneToOne() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional bool is_one_to_one = 7;</code>
     * @return The isOneToOne.
     */
    @java.lang.Override
    public boolean getIsOneToOne() {
      return isOneToOne_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getSource());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(4, getDestination());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, on_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, type_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeBool(7, isOneToOne_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSource());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getDestination());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, on_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, type_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isOneToOne_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.RelationEDocProto)) {
        return super.equals(obj);
      }
      EDoc.RelationEDocProto other = (EDoc.RelationEDocProto) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasDescription() != other.hasDescription()) return false;
      if (hasDescription()) {
        if (!getDescription()
            .equals(other.getDescription())) return false;
      }
      if (hasSource() != other.hasSource()) return false;
      if (hasSource()) {
        if (!getSource()
            .equals(other.getSource())) return false;
      }
      if (hasDestination() != other.hasDestination()) return false;
      if (hasDestination()) {
        if (!getDestination()
            .equals(other.getDestination())) return false;
      }
      if (hasOn() != other.hasOn()) return false;
      if (hasOn()) {
        if (!getOn()
            .equals(other.getOn())) return false;
      }
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (!getType()
            .equals(other.getType())) return false;
      }
      if (hasIsOneToOne() != other.hasIsOneToOne()) return false;
      if (hasIsOneToOne()) {
        if (getIsOneToOne()
            != other.getIsOneToOne()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasDescription()) {
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription().hashCode();
      }
      if (hasSource()) {
        hash = (37 * hash) + SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getSource().hashCode();
      }
      if (hasDestination()) {
        hash = (37 * hash) + DESTINATION_FIELD_NUMBER;
        hash = (53 * hash) + getDestination().hashCode();
      }
      if (hasOn()) {
        hash = (37 * hash) + ON_FIELD_NUMBER;
        hash = (53 * hash) + getOn().hashCode();
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      if (hasIsOneToOne()) {
        hash = (37 * hash) + IS_ONE_TO_ONE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsOneToOne());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.RelationEDocProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.RelationEDocProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.RelationEDocProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.RelationEDocProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.RelationEDocProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.RelationEDocProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.RelationEDocProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.RelationEDocProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.RelationEDocProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.RelationEDocProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.RelationEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.RelationEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.RelationEDocProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Relationship definition to be attached with a logical table.
     * Note: Join proto is pretty much similar to 'RelationEDocProto', However
     *       Join proto is used mostly for referring a relationship in a
     *       worksheet/view/answer or overriding certain properties of a join at
     *       worksheet level and Relationship proto is used for Relationship
     *       definition. The &#64;on field in Join proto is used only for displaying
     *       the join information, however the &#64;on field in RelationEDocProto is
     *       the main expression that defines the join condition.
     * </pre>
     *
     * Protobuf type {@code RelationEDocProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RelationEDocProto)
        EDoc.RelationEDocProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_RelationEDocProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_RelationEDocProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.RelationEDocProto.class, EDoc.RelationEDocProto.Builder.class);
      }

      // Construct using EDoc.RelationEDocProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSourceFieldBuilder();
          getDestinationFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (sourceBuilder_ == null) {
          source_ = null;
        } else {
          sourceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (destinationBuilder_ == null) {
          destination_ = null;
        } else {
          destinationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        on_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        isOneToOne_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_RelationEDocProto_descriptor;
      }

      @java.lang.Override
      public EDoc.RelationEDocProto getDefaultInstanceForType() {
        return EDoc.RelationEDocProto.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.RelationEDocProto build() {
        EDoc.RelationEDocProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.RelationEDocProto buildPartial() {
        EDoc.RelationEDocProto result = new EDoc.RelationEDocProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.description_ = description_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          if (sourceBuilder_ == null) {
            result.source_ = source_;
          } else {
            result.source_ = sourceBuilder_.build();
          }
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          if (destinationBuilder_ == null) {
            result.destination_ = destination_;
          } else {
            result.destination_ = destinationBuilder_.build();
          }
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.on_ = on_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          to_bitField0_ |= 0x00000020;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.isOneToOne_ = isOneToOne_;
          to_bitField0_ |= 0x00000040;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.RelationEDocProto) {
          return mergeFrom((EDoc.RelationEDocProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.RelationEDocProto other) {
        if (other == EDoc.RelationEDocProto.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000002;
          description_ = other.description_;
          onChanged();
        }
        if (other.hasSource()) {
          mergeSource(other.getSource());
        }
        if (other.hasDestination()) {
          mergeDestination(other.getDestination());
        }
        if (other.hasOn()) {
          bitField0_ |= 0x00000010;
          on_ = other.on_;
          onChanged();
        }
        if (other.hasType()) {
          bitField0_ |= 0x00000020;
          type_ = other.type_;
          onChanged();
        }
        if (other.hasIsOneToOne()) {
          setIsOneToOne(other.getIsOneToOne());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.RelationEDocProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.RelationEDocProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <code>optional string description = 2;</code>
       * @return Whether the description field is set.
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string description = 2;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string description = 2;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string description = 2;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 2;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }

      private EDoc.Identity source_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> sourceBuilder_;
      /**
       * <pre>
       * Identifier of the source table. If the 'RelationEDocProto' is used
       * for storing outgoing relationships in a table, &#64;source_table field can be
       * ignored.
       * </pre>
       *
       * <code>optional .Identity source = 3;</code>
       * @return Whether the source field is set.
       */
      public boolean hasSource() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Identifier of the source table. If the 'RelationEDocProto' is used
       * for storing outgoing relationships in a table, &#64;source_table field can be
       * ignored.
       * </pre>
       *
       * <code>optional .Identity source = 3;</code>
       * @return The source.
       */
      public EDoc.Identity getSource() {
        if (sourceBuilder_ == null) {
          return source_ == null ? EDoc.Identity.getDefaultInstance() : source_;
        } else {
          return sourceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Identifier of the source table. If the 'RelationEDocProto' is used
       * for storing outgoing relationships in a table, &#64;source_table field can be
       * ignored.
       * </pre>
       *
       * <code>optional .Identity source = 3;</code>
       */
      public Builder setSource(EDoc.Identity value) {
        if (sourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          source_ = value;
          onChanged();
        } else {
          sourceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Identifier of the source table. If the 'RelationEDocProto' is used
       * for storing outgoing relationships in a table, &#64;source_table field can be
       * ignored.
       * </pre>
       *
       * <code>optional .Identity source = 3;</code>
       */
      public Builder setSource(
          EDoc.Identity.Builder builderForValue) {
        if (sourceBuilder_ == null) {
          source_ = builderForValue.build();
          onChanged();
        } else {
          sourceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Identifier of the source table. If the 'RelationEDocProto' is used
       * for storing outgoing relationships in a table, &#64;source_table field can be
       * ignored.
       * </pre>
       *
       * <code>optional .Identity source = 3;</code>
       */
      public Builder mergeSource(EDoc.Identity value) {
        if (sourceBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
              source_ != null &&
              source_ != EDoc.Identity.getDefaultInstance()) {
            source_ =
              EDoc.Identity.newBuilder(source_).mergeFrom(value).buildPartial();
          } else {
            source_ = value;
          }
          onChanged();
        } else {
          sourceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Identifier of the source table. If the 'RelationEDocProto' is used
       * for storing outgoing relationships in a table, &#64;source_table field can be
       * ignored.
       * </pre>
       *
       * <code>optional .Identity source = 3;</code>
       */
      public Builder clearSource() {
        if (sourceBuilder_ == null) {
          source_ = null;
          onChanged();
        } else {
          sourceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * Identifier of the source table. If the 'RelationEDocProto' is used
       * for storing outgoing relationships in a table, &#64;source_table field can be
       * ignored.
       * </pre>
       *
       * <code>optional .Identity source = 3;</code>
       */
      public EDoc.Identity.Builder getSourceBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSourceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Identifier of the source table. If the 'RelationEDocProto' is used
       * for storing outgoing relationships in a table, &#64;source_table field can be
       * ignored.
       * </pre>
       *
       * <code>optional .Identity source = 3;</code>
       */
      public EDoc.IdentityOrBuilder getSourceOrBuilder() {
        if (sourceBuilder_ != null) {
          return sourceBuilder_.getMessageOrBuilder();
        } else {
          return source_ == null ?
              EDoc.Identity.getDefaultInstance() : source_;
        }
      }
      /**
       * <pre>
       * Identifier of the source table. If the 'RelationEDocProto' is used
       * for storing outgoing relationships in a table, &#64;source_table field can be
       * ignored.
       * </pre>
       *
       * <code>optional .Identity source = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> 
          getSourceFieldBuilder() {
        if (sourceBuilder_ == null) {
          sourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder>(
                  getSource(),
                  getParentForChildren(),
                  isClean());
          source_ = null;
        }
        return sourceBuilder_;
      }

      private EDoc.Identity destination_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> destinationBuilder_;
      /**
       * <pre>
       * Identifier of the destination table.
       * </pre>
       *
       * <code>optional .Identity destination = 4;</code>
       * @return Whether the destination field is set.
       */
      public boolean hasDestination() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Identifier of the destination table.
       * </pre>
       *
       * <code>optional .Identity destination = 4;</code>
       * @return The destination.
       */
      public EDoc.Identity getDestination() {
        if (destinationBuilder_ == null) {
          return destination_ == null ? EDoc.Identity.getDefaultInstance() : destination_;
        } else {
          return destinationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Identifier of the destination table.
       * </pre>
       *
       * <code>optional .Identity destination = 4;</code>
       */
      public Builder setDestination(EDoc.Identity value) {
        if (destinationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          destination_ = value;
          onChanged();
        } else {
          destinationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Identifier of the destination table.
       * </pre>
       *
       * <code>optional .Identity destination = 4;</code>
       */
      public Builder setDestination(
          EDoc.Identity.Builder builderForValue) {
        if (destinationBuilder_ == null) {
          destination_ = builderForValue.build();
          onChanged();
        } else {
          destinationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Identifier of the destination table.
       * </pre>
       *
       * <code>optional .Identity destination = 4;</code>
       */
      public Builder mergeDestination(EDoc.Identity value) {
        if (destinationBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
              destination_ != null &&
              destination_ != EDoc.Identity.getDefaultInstance()) {
            destination_ =
              EDoc.Identity.newBuilder(destination_).mergeFrom(value).buildPartial();
          } else {
            destination_ = value;
          }
          onChanged();
        } else {
          destinationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Identifier of the destination table.
       * </pre>
       *
       * <code>optional .Identity destination = 4;</code>
       */
      public Builder clearDestination() {
        if (destinationBuilder_ == null) {
          destination_ = null;
          onChanged();
        } else {
          destinationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * Identifier of the destination table.
       * </pre>
       *
       * <code>optional .Identity destination = 4;</code>
       */
      public EDoc.Identity.Builder getDestinationBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDestinationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Identifier of the destination table.
       * </pre>
       *
       * <code>optional .Identity destination = 4;</code>
       */
      public EDoc.IdentityOrBuilder getDestinationOrBuilder() {
        if (destinationBuilder_ != null) {
          return destinationBuilder_.getMessageOrBuilder();
        } else {
          return destination_ == null ?
              EDoc.Identity.getDefaultInstance() : destination_;
        }
      }
      /**
       * <pre>
       * Identifier of the destination table.
       * </pre>
       *
       * <code>optional .Identity destination = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> 
          getDestinationFieldBuilder() {
        if (destinationBuilder_ == null) {
          destinationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder>(
                  getDestination(),
                  getParentForChildren(),
                  isClean());
          destination_ = null;
        }
        return destinationBuilder_;
      }

      private java.lang.Object on_ = "";
      /**
       * <pre>
       * Join expression.
       * Eg: [lineorder::a] = [customer::b] AND [lineorder::c] = [customer::d]
       * </pre>
       *
       * <code>optional string on = 5;</code>
       * @return Whether the on field is set.
       */
      public boolean hasOn() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Join expression.
       * Eg: [lineorder::a] = [customer::b] AND [lineorder::c] = [customer::d]
       * </pre>
       *
       * <code>optional string on = 5;</code>
       * @return The on.
       */
      public java.lang.String getOn() {
        java.lang.Object ref = on_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            on_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Join expression.
       * Eg: [lineorder::a] = [customer::b] AND [lineorder::c] = [customer::d]
       * </pre>
       *
       * <code>optional string on = 5;</code>
       * @return The bytes for on.
       */
      public com.google.protobuf.ByteString
          getOnBytes() {
        java.lang.Object ref = on_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          on_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Join expression.
       * Eg: [lineorder::a] = [customer::b] AND [lineorder::c] = [customer::d]
       * </pre>
       *
       * <code>optional string on = 5;</code>
       * @param value The on to set.
       * @return This builder for chaining.
       */
      public Builder setOn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        on_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Join expression.
       * Eg: [lineorder::a] = [customer::b] AND [lineorder::c] = [customer::d]
       * </pre>
       *
       * <code>optional string on = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearOn() {
        bitField0_ = (bitField0_ & ~0x00000010);
        on_ = getDefaultInstance().getOn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Join expression.
       * Eg: [lineorder::a] = [customer::b] AND [lineorder::c] = [customer::d]
       * </pre>
       *
       * <code>optional string on = 5;</code>
       * @param value The bytes for on to set.
       * @return This builder for chaining.
       */
      public Builder setOnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        on_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * Join properties in the context of the object it is being defined.
       * Possible Values: INNER, OUTER, LEFT_OUTER, RIGHT_OUTER
       * </pre>
       *
       * <code>optional string type = 6;</code>
       * @return Whether the type field is set.
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Join properties in the context of the object it is being defined.
       * Possible Values: INNER, OUTER, LEFT_OUTER, RIGHT_OUTER
       * </pre>
       *
       * <code>optional string type = 6;</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            type_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Join properties in the context of the object it is being defined.
       * Possible Values: INNER, OUTER, LEFT_OUTER, RIGHT_OUTER
       * </pre>
       *
       * <code>optional string type = 6;</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Join properties in the context of the object it is being defined.
       * Possible Values: INNER, OUTER, LEFT_OUTER, RIGHT_OUTER
       * </pre>
       *
       * <code>optional string type = 6;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Join properties in the context of the object it is being defined.
       * Possible Values: INNER, OUTER, LEFT_OUTER, RIGHT_OUTER
       * </pre>
       *
       * <code>optional string type = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Join properties in the context of the object it is being defined.
       * Possible Values: INNER, OUTER, LEFT_OUTER, RIGHT_OUTER
       * </pre>
       *
       * <code>optional string type = 6;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        type_ = value;
        onChanged();
        return this;
      }

      private boolean isOneToOne_ ;
      /**
       * <code>optional bool is_one_to_one = 7;</code>
       * @return Whether the isOneToOne field is set.
       */
      @java.lang.Override
      public boolean hasIsOneToOne() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional bool is_one_to_one = 7;</code>
       * @return The isOneToOne.
       */
      @java.lang.Override
      public boolean getIsOneToOne() {
        return isOneToOne_;
      }
      /**
       * <code>optional bool is_one_to_one = 7;</code>
       * @param value The isOneToOne to set.
       * @return This builder for chaining.
       */
      public Builder setIsOneToOne(boolean value) {
        bitField0_ |= 0x00000040;
        isOneToOne_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_one_to_one = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsOneToOne() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isOneToOne_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RelationEDocProto)
    }

    // @@protoc_insertion_point(class_scope:RelationEDocProto)
    private static final EDoc.RelationEDocProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.RelationEDocProto();
    }

    public static EDoc.RelationEDocProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RelationEDocProto>
        PARSER = new com.google.protobuf.AbstractParser<RelationEDocProto>() {
      @java.lang.Override
      public RelationEDocProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RelationEDocProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RelationEDocProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RelationEDocProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.RelationEDocProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TablePathOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TablePath)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ID of the new table with join path. Ex : LINEORDER_1, LINEORDER_2
     * </pre>
     *
     * <code>optional string id = 1 [(.Annotation.compulsory) = true];</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * ID of the new table with join path. Ex : LINEORDER_1, LINEORDER_2
     * </pre>
     *
     * <code>optional string id = 1 [(.Annotation.compulsory) = true];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * ID of the new table with join path. Ex : LINEORDER_1, LINEORDER_2
     * </pre>
     *
     * <code>optional string id = 1 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * ID of the base table that is being used.
     * </pre>
     *
     * <code>optional string table = 2 [(.Annotation.compulsory) = true];</code>
     * @return Whether the table field is set.
     */
    boolean hasTable();
    /**
     * <pre>
     * ID of the base table that is being used.
     * </pre>
     *
     * <code>optional string table = 2 [(.Annotation.compulsory) = true];</code>
     * @return The table.
     */
    java.lang.String getTable();
    /**
     * <pre>
     * ID of the base table that is being used.
     * </pre>
     *
     * <code>optional string table = 2 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for table.
     */
    com.google.protobuf.ByteString
        getTableBytes();

    /**
     * <pre>
     * Join paths of the given set of columns. Consists of sequence of join IDs.
     * </pre>
     *
     * <code>repeated .TablePath.JoinPath join_path = 3;</code>
     */
    java.util.List<EDoc.TablePath.JoinPath> 
        getJoinPathList();
    /**
     * <pre>
     * Join paths of the given set of columns. Consists of sequence of join IDs.
     * </pre>
     *
     * <code>repeated .TablePath.JoinPath join_path = 3;</code>
     */
    EDoc.TablePath.JoinPath getJoinPath(int index);
    /**
     * <pre>
     * Join paths of the given set of columns. Consists of sequence of join IDs.
     * </pre>
     *
     * <code>repeated .TablePath.JoinPath join_path = 3;</code>
     */
    int getJoinPathCount();
    /**
     * <pre>
     * Join paths of the given set of columns. Consists of sequence of join IDs.
     * </pre>
     *
     * <code>repeated .TablePath.JoinPath join_path = 3;</code>
     */
    java.util.List<? extends EDoc.TablePath.JoinPathOrBuilder> 
        getJoinPathOrBuilderList();
    /**
     * <pre>
     * Join paths of the given set of columns. Consists of sequence of join IDs.
     * </pre>
     *
     * <code>repeated .TablePath.JoinPath join_path = 3;</code>
     */
    EDoc.TablePath.JoinPathOrBuilder getJoinPathOrBuilder(
        int index);

    /**
     * <pre>
     * Identity of the columns from the given table.
     * </pre>
     *
     * <code>repeated string column = 4;</code>
     * @return A list containing the column.
     */
    java.util.List<java.lang.String>
        getColumnList();
    /**
     * <pre>
     * Identity of the columns from the given table.
     * </pre>
     *
     * <code>repeated string column = 4;</code>
     * @return The count of column.
     */
    int getColumnCount();
    /**
     * <pre>
     * Identity of the columns from the given table.
     * </pre>
     *
     * <code>repeated string column = 4;</code>
     * @param index The index of the element to return.
     * @return The column at the given index.
     */
    java.lang.String getColumn(int index);
    /**
     * <pre>
     * Identity of the columns from the given table.
     * </pre>
     *
     * <code>repeated string column = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the column at the given index.
     */
    com.google.protobuf.ByteString
        getColumnBytes(int index);
  }
  /**
   * <pre>
   * Each table in the worksheet can have multiple manifestations. For each table,
   * we specify the table itself and the join path from the root of the object
   * to the table itself. For example, given the following structure:
   *      T1   T5
   *     / &#92;  /
   *   T2   T3
   *    &#92;  /
   *     T4
   * If there are two different join paths for columns in T4, we can have two
   * different manifestations of T4 with the following join paths:
   * T4_1 : [T1-&gt;T2, T2-&gt;T4], [T5-&gt;T3, T3-&gt;T4]
   * T4_2 : [T1-&gt;T3, T3-&gt;T4], [T5-&gt;T3, T3-&gt;T4]
   * </pre>
   *
   * Protobuf type {@code TablePath}
   */
  public static final class TablePath extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TablePath)
      TablePathOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TablePath.newBuilder() to construct.
    private TablePath(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TablePath() {
      id_ = "";
      table_ = "";
      joinPath_ = java.util.Collections.emptyList();
      column_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TablePath();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TablePath(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              table_ = bs;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                joinPath_ = new java.util.ArrayList<EDoc.TablePath.JoinPath>();
                mutable_bitField0_ |= 0x00000004;
              }
              joinPath_.add(
                  input.readMessage(EDoc.TablePath.JoinPath.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                column_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              column_.add(bs);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          joinPath_ = java.util.Collections.unmodifiableList(joinPath_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          column_ = column_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_TablePath_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_TablePath_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.TablePath.class, EDoc.TablePath.Builder.class);
    }

    public interface JoinPathOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TablePath.JoinPath)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The ID of the join in the join path as specified in the list of joins.
       * </pre>
       *
       * <code>repeated string join = 1;</code>
       * @return A list containing the join.
       */
      java.util.List<java.lang.String>
          getJoinList();
      /**
       * <pre>
       * The ID of the join in the join path as specified in the list of joins.
       * </pre>
       *
       * <code>repeated string join = 1;</code>
       * @return The count of join.
       */
      int getJoinCount();
      /**
       * <pre>
       * The ID of the join in the join path as specified in the list of joins.
       * </pre>
       *
       * <code>repeated string join = 1;</code>
       * @param index The index of the element to return.
       * @return The join at the given index.
       */
      java.lang.String getJoin(int index);
      /**
       * <pre>
       * The ID of the join in the join path as specified in the list of joins.
       * </pre>
       *
       * <code>repeated string join = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the join at the given index.
       */
      com.google.protobuf.ByteString
          getJoinBytes(int index);
    }
    /**
     * Protobuf type {@code TablePath.JoinPath}
     */
    public static final class JoinPath extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:TablePath.JoinPath)
        JoinPathOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use JoinPath.newBuilder() to construct.
      private JoinPath(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private JoinPath() {
        join_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new JoinPath();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private JoinPath(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  join_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000001;
                }
                join_.add(bs);
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            join_ = join_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_TablePath_JoinPath_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_TablePath_JoinPath_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.TablePath.JoinPath.class, EDoc.TablePath.JoinPath.Builder.class);
      }

      public static final int JOIN_FIELD_NUMBER = 1;
      private com.google.protobuf.LazyStringList join_;
      /**
       * <pre>
       * The ID of the join in the join path as specified in the list of joins.
       * </pre>
       *
       * <code>repeated string join = 1;</code>
       * @return A list containing the join.
       */
      public com.google.protobuf.ProtocolStringList
          getJoinList() {
        return join_;
      }
      /**
       * <pre>
       * The ID of the join in the join path as specified in the list of joins.
       * </pre>
       *
       * <code>repeated string join = 1;</code>
       * @return The count of join.
       */
      public int getJoinCount() {
        return join_.size();
      }
      /**
       * <pre>
       * The ID of the join in the join path as specified in the list of joins.
       * </pre>
       *
       * <code>repeated string join = 1;</code>
       * @param index The index of the element to return.
       * @return The join at the given index.
       */
      public java.lang.String getJoin(int index) {
        return join_.get(index);
      }
      /**
       * <pre>
       * The ID of the join in the join path as specified in the list of joins.
       * </pre>
       *
       * <code>repeated string join = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the join at the given index.
       */
      public com.google.protobuf.ByteString
          getJoinBytes(int index) {
        return join_.getByteString(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < join_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, join_.getRaw(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < join_.size(); i++) {
            dataSize += computeStringSizeNoTag(join_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getJoinList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.TablePath.JoinPath)) {
          return super.equals(obj);
        }
        EDoc.TablePath.JoinPath other = (EDoc.TablePath.JoinPath) obj;

        if (!getJoinList()
            .equals(other.getJoinList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getJoinCount() > 0) {
          hash = (37 * hash) + JOIN_FIELD_NUMBER;
          hash = (53 * hash) + getJoinList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.TablePath.JoinPath parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.TablePath.JoinPath parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.TablePath.JoinPath parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.TablePath.JoinPath parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.TablePath.JoinPath parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.TablePath.JoinPath parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.TablePath.JoinPath parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.TablePath.JoinPath parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.TablePath.JoinPath parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.TablePath.JoinPath parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.TablePath.JoinPath parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.TablePath.JoinPath parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.TablePath.JoinPath prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code TablePath.JoinPath}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:TablePath.JoinPath)
          EDoc.TablePath.JoinPathOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_TablePath_JoinPath_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_TablePath_JoinPath_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.TablePath.JoinPath.class, EDoc.TablePath.JoinPath.Builder.class);
        }

        // Construct using EDoc.TablePath.JoinPath.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          join_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_TablePath_JoinPath_descriptor;
        }

        @java.lang.Override
        public EDoc.TablePath.JoinPath getDefaultInstanceForType() {
          return EDoc.TablePath.JoinPath.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.TablePath.JoinPath build() {
          EDoc.TablePath.JoinPath result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.TablePath.JoinPath buildPartial() {
          EDoc.TablePath.JoinPath result = new EDoc.TablePath.JoinPath(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) != 0)) {
            join_ = join_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.join_ = join_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.TablePath.JoinPath) {
            return mergeFrom((EDoc.TablePath.JoinPath)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.TablePath.JoinPath other) {
          if (other == EDoc.TablePath.JoinPath.getDefaultInstance()) return this;
          if (!other.join_.isEmpty()) {
            if (join_.isEmpty()) {
              join_ = other.join_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureJoinIsMutable();
              join_.addAll(other.join_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.TablePath.JoinPath parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.TablePath.JoinPath) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.LazyStringList join_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureJoinIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            join_ = new com.google.protobuf.LazyStringArrayList(join_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <pre>
         * The ID of the join in the join path as specified in the list of joins.
         * </pre>
         *
         * <code>repeated string join = 1;</code>
         * @return A list containing the join.
         */
        public com.google.protobuf.ProtocolStringList
            getJoinList() {
          return join_.getUnmodifiableView();
        }
        /**
         * <pre>
         * The ID of the join in the join path as specified in the list of joins.
         * </pre>
         *
         * <code>repeated string join = 1;</code>
         * @return The count of join.
         */
        public int getJoinCount() {
          return join_.size();
        }
        /**
         * <pre>
         * The ID of the join in the join path as specified in the list of joins.
         * </pre>
         *
         * <code>repeated string join = 1;</code>
         * @param index The index of the element to return.
         * @return The join at the given index.
         */
        public java.lang.String getJoin(int index) {
          return join_.get(index);
        }
        /**
         * <pre>
         * The ID of the join in the join path as specified in the list of joins.
         * </pre>
         *
         * <code>repeated string join = 1;</code>
         * @param index The index of the value to return.
         * @return The bytes of the join at the given index.
         */
        public com.google.protobuf.ByteString
            getJoinBytes(int index) {
          return join_.getByteString(index);
        }
        /**
         * <pre>
         * The ID of the join in the join path as specified in the list of joins.
         * </pre>
         *
         * <code>repeated string join = 1;</code>
         * @param index The index to set the value at.
         * @param value The join to set.
         * @return This builder for chaining.
         */
        public Builder setJoin(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureJoinIsMutable();
          join_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The ID of the join in the join path as specified in the list of joins.
         * </pre>
         *
         * <code>repeated string join = 1;</code>
         * @param value The join to add.
         * @return This builder for chaining.
         */
        public Builder addJoin(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureJoinIsMutable();
          join_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The ID of the join in the join path as specified in the list of joins.
         * </pre>
         *
         * <code>repeated string join = 1;</code>
         * @param values The join to add.
         * @return This builder for chaining.
         */
        public Builder addAllJoin(
            java.lang.Iterable<java.lang.String> values) {
          ensureJoinIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, join_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The ID of the join in the join path as specified in the list of joins.
         * </pre>
         *
         * <code>repeated string join = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearJoin() {
          join_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The ID of the join in the join path as specified in the list of joins.
         * </pre>
         *
         * <code>repeated string join = 1;</code>
         * @param value The bytes of the join to add.
         * @return This builder for chaining.
         */
        public Builder addJoinBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureJoinIsMutable();
          join_.add(value);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:TablePath.JoinPath)
      }

      // @@protoc_insertion_point(class_scope:TablePath.JoinPath)
      private static final EDoc.TablePath.JoinPath DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.TablePath.JoinPath();
      }

      public static EDoc.TablePath.JoinPath getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<JoinPath>
          PARSER = new com.google.protobuf.AbstractParser<JoinPath>() {
        @java.lang.Override
        public JoinPath parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new JoinPath(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<JoinPath> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<JoinPath> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.TablePath.JoinPath getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * ID of the new table with join path. Ex : LINEORDER_1, LINEORDER_2
     * </pre>
     *
     * <code>optional string id = 1 [(.Annotation.compulsory) = true];</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * ID of the new table with join path. Ex : LINEORDER_1, LINEORDER_2
     * </pre>
     *
     * <code>optional string id = 1 [(.Annotation.compulsory) = true];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * ID of the new table with join path. Ex : LINEORDER_1, LINEORDER_2
     * </pre>
     *
     * <code>optional string id = 1 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TABLE_FIELD_NUMBER = 2;
    private volatile java.lang.Object table_;
    /**
     * <pre>
     * ID of the base table that is being used.
     * </pre>
     *
     * <code>optional string table = 2 [(.Annotation.compulsory) = true];</code>
     * @return Whether the table field is set.
     */
    @java.lang.Override
    public boolean hasTable() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * ID of the base table that is being used.
     * </pre>
     *
     * <code>optional string table = 2 [(.Annotation.compulsory) = true];</code>
     * @return The table.
     */
    @java.lang.Override
    public java.lang.String getTable() {
      java.lang.Object ref = table_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          table_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * ID of the base table that is being used.
     * </pre>
     *
     * <code>optional string table = 2 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for table.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTableBytes() {
      java.lang.Object ref = table_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        table_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int JOIN_PATH_FIELD_NUMBER = 3;
    private java.util.List<EDoc.TablePath.JoinPath> joinPath_;
    /**
     * <pre>
     * Join paths of the given set of columns. Consists of sequence of join IDs.
     * </pre>
     *
     * <code>repeated .TablePath.JoinPath join_path = 3;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.TablePath.JoinPath> getJoinPathList() {
      return joinPath_;
    }
    /**
     * <pre>
     * Join paths of the given set of columns. Consists of sequence of join IDs.
     * </pre>
     *
     * <code>repeated .TablePath.JoinPath join_path = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.TablePath.JoinPathOrBuilder> 
        getJoinPathOrBuilderList() {
      return joinPath_;
    }
    /**
     * <pre>
     * Join paths of the given set of columns. Consists of sequence of join IDs.
     * </pre>
     *
     * <code>repeated .TablePath.JoinPath join_path = 3;</code>
     */
    @java.lang.Override
    public int getJoinPathCount() {
      return joinPath_.size();
    }
    /**
     * <pre>
     * Join paths of the given set of columns. Consists of sequence of join IDs.
     * </pre>
     *
     * <code>repeated .TablePath.JoinPath join_path = 3;</code>
     */
    @java.lang.Override
    public EDoc.TablePath.JoinPath getJoinPath(int index) {
      return joinPath_.get(index);
    }
    /**
     * <pre>
     * Join paths of the given set of columns. Consists of sequence of join IDs.
     * </pre>
     *
     * <code>repeated .TablePath.JoinPath join_path = 3;</code>
     */
    @java.lang.Override
    public EDoc.TablePath.JoinPathOrBuilder getJoinPathOrBuilder(
        int index) {
      return joinPath_.get(index);
    }

    public static final int COLUMN_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList column_;
    /**
     * <pre>
     * Identity of the columns from the given table.
     * </pre>
     *
     * <code>repeated string column = 4;</code>
     * @return A list containing the column.
     */
    public com.google.protobuf.ProtocolStringList
        getColumnList() {
      return column_;
    }
    /**
     * <pre>
     * Identity of the columns from the given table.
     * </pre>
     *
     * <code>repeated string column = 4;</code>
     * @return The count of column.
     */
    public int getColumnCount() {
      return column_.size();
    }
    /**
     * <pre>
     * Identity of the columns from the given table.
     * </pre>
     *
     * <code>repeated string column = 4;</code>
     * @param index The index of the element to return.
     * @return The column at the given index.
     */
    public java.lang.String getColumn(int index) {
      return column_.get(index);
    }
    /**
     * <pre>
     * Identity of the columns from the given table.
     * </pre>
     *
     * <code>repeated string column = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the column at the given index.
     */
    public com.google.protobuf.ByteString
        getColumnBytes(int index) {
      return column_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, table_);
      }
      for (int i = 0; i < joinPath_.size(); i++) {
        output.writeMessage(3, joinPath_.get(i));
      }
      for (int i = 0; i < column_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, column_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, table_);
      }
      for (int i = 0; i < joinPath_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, joinPath_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < column_.size(); i++) {
          dataSize += computeStringSizeNoTag(column_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getColumnList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.TablePath)) {
        return super.equals(obj);
      }
      EDoc.TablePath other = (EDoc.TablePath) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (hasTable() != other.hasTable()) return false;
      if (hasTable()) {
        if (!getTable()
            .equals(other.getTable())) return false;
      }
      if (!getJoinPathList()
          .equals(other.getJoinPathList())) return false;
      if (!getColumnList()
          .equals(other.getColumnList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasTable()) {
        hash = (37 * hash) + TABLE_FIELD_NUMBER;
        hash = (53 * hash) + getTable().hashCode();
      }
      if (getJoinPathCount() > 0) {
        hash = (37 * hash) + JOIN_PATH_FIELD_NUMBER;
        hash = (53 * hash) + getJoinPathList().hashCode();
      }
      if (getColumnCount() > 0) {
        hash = (37 * hash) + COLUMN_FIELD_NUMBER;
        hash = (53 * hash) + getColumnList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.TablePath parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.TablePath parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.TablePath parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.TablePath parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.TablePath parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.TablePath parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.TablePath parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.TablePath parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.TablePath parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.TablePath parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.TablePath parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.TablePath parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.TablePath prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Each table in the worksheet can have multiple manifestations. For each table,
     * we specify the table itself and the join path from the root of the object
     * to the table itself. For example, given the following structure:
     *      T1   T5
     *     / &#92;  /
     *   T2   T3
     *    &#92;  /
     *     T4
     * If there are two different join paths for columns in T4, we can have two
     * different manifestations of T4 with the following join paths:
     * T4_1 : [T1-&gt;T2, T2-&gt;T4], [T5-&gt;T3, T3-&gt;T4]
     * T4_2 : [T1-&gt;T3, T3-&gt;T4], [T5-&gt;T3, T3-&gt;T4]
     * </pre>
     *
     * Protobuf type {@code TablePath}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TablePath)
        EDoc.TablePathOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_TablePath_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_TablePath_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.TablePath.class, EDoc.TablePath.Builder.class);
      }

      // Construct using EDoc.TablePath.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getJoinPathFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        table_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (joinPathBuilder_ == null) {
          joinPath_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          joinPathBuilder_.clear();
        }
        column_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_TablePath_descriptor;
      }

      @java.lang.Override
      public EDoc.TablePath getDefaultInstanceForType() {
        return EDoc.TablePath.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.TablePath build() {
        EDoc.TablePath result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.TablePath buildPartial() {
        EDoc.TablePath result = new EDoc.TablePath(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.table_ = table_;
        if (joinPathBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            joinPath_ = java.util.Collections.unmodifiableList(joinPath_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.joinPath_ = joinPath_;
        } else {
          result.joinPath_ = joinPathBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          column_ = column_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.column_ = column_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.TablePath) {
          return mergeFrom((EDoc.TablePath)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.TablePath other) {
        if (other == EDoc.TablePath.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasTable()) {
          bitField0_ |= 0x00000002;
          table_ = other.table_;
          onChanged();
        }
        if (joinPathBuilder_ == null) {
          if (!other.joinPath_.isEmpty()) {
            if (joinPath_.isEmpty()) {
              joinPath_ = other.joinPath_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureJoinPathIsMutable();
              joinPath_.addAll(other.joinPath_);
            }
            onChanged();
          }
        } else {
          if (!other.joinPath_.isEmpty()) {
            if (joinPathBuilder_.isEmpty()) {
              joinPathBuilder_.dispose();
              joinPathBuilder_ = null;
              joinPath_ = other.joinPath_;
              bitField0_ = (bitField0_ & ~0x00000004);
              joinPathBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getJoinPathFieldBuilder() : null;
            } else {
              joinPathBuilder_.addAllMessages(other.joinPath_);
            }
          }
        }
        if (!other.column_.isEmpty()) {
          if (column_.isEmpty()) {
            column_ = other.column_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureColumnIsMutable();
            column_.addAll(other.column_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.TablePath parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.TablePath) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * ID of the new table with join path. Ex : LINEORDER_1, LINEORDER_2
       * </pre>
       *
       * <code>optional string id = 1 [(.Annotation.compulsory) = true];</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * ID of the new table with join path. Ex : LINEORDER_1, LINEORDER_2
       * </pre>
       *
       * <code>optional string id = 1 [(.Annotation.compulsory) = true];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ID of the new table with join path. Ex : LINEORDER_1, LINEORDER_2
       * </pre>
       *
       * <code>optional string id = 1 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ID of the new table with join path. Ex : LINEORDER_1, LINEORDER_2
       * </pre>
       *
       * <code>optional string id = 1 [(.Annotation.compulsory) = true];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the new table with join path. Ex : LINEORDER_1, LINEORDER_2
       * </pre>
       *
       * <code>optional string id = 1 [(.Annotation.compulsory) = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the new table with join path. Ex : LINEORDER_1, LINEORDER_2
       * </pre>
       *
       * <code>optional string id = 1 [(.Annotation.compulsory) = true];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object table_ = "";
      /**
       * <pre>
       * ID of the base table that is being used.
       * </pre>
       *
       * <code>optional string table = 2 [(.Annotation.compulsory) = true];</code>
       * @return Whether the table field is set.
       */
      public boolean hasTable() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * ID of the base table that is being used.
       * </pre>
       *
       * <code>optional string table = 2 [(.Annotation.compulsory) = true];</code>
       * @return The table.
       */
      public java.lang.String getTable() {
        java.lang.Object ref = table_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            table_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ID of the base table that is being used.
       * </pre>
       *
       * <code>optional string table = 2 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for table.
       */
      public com.google.protobuf.ByteString
          getTableBytes() {
        java.lang.Object ref = table_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          table_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ID of the base table that is being used.
       * </pre>
       *
       * <code>optional string table = 2 [(.Annotation.compulsory) = true];</code>
       * @param value The table to set.
       * @return This builder for chaining.
       */
      public Builder setTable(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        table_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the base table that is being used.
       * </pre>
       *
       * <code>optional string table = 2 [(.Annotation.compulsory) = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearTable() {
        bitField0_ = (bitField0_ & ~0x00000002);
        table_ = getDefaultInstance().getTable();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the base table that is being used.
       * </pre>
       *
       * <code>optional string table = 2 [(.Annotation.compulsory) = true];</code>
       * @param value The bytes for table to set.
       * @return This builder for chaining.
       */
      public Builder setTableBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        table_ = value;
        onChanged();
        return this;
      }

      private java.util.List<EDoc.TablePath.JoinPath> joinPath_ =
        java.util.Collections.emptyList();
      private void ensureJoinPathIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          joinPath_ = new java.util.ArrayList<EDoc.TablePath.JoinPath>(joinPath_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.TablePath.JoinPath, EDoc.TablePath.JoinPath.Builder, EDoc.TablePath.JoinPathOrBuilder> joinPathBuilder_;

      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public java.util.List<EDoc.TablePath.JoinPath> getJoinPathList() {
        if (joinPathBuilder_ == null) {
          return java.util.Collections.unmodifiableList(joinPath_);
        } else {
          return joinPathBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public int getJoinPathCount() {
        if (joinPathBuilder_ == null) {
          return joinPath_.size();
        } else {
          return joinPathBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public EDoc.TablePath.JoinPath getJoinPath(int index) {
        if (joinPathBuilder_ == null) {
          return joinPath_.get(index);
        } else {
          return joinPathBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public Builder setJoinPath(
          int index, EDoc.TablePath.JoinPath value) {
        if (joinPathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinPathIsMutable();
          joinPath_.set(index, value);
          onChanged();
        } else {
          joinPathBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public Builder setJoinPath(
          int index, EDoc.TablePath.JoinPath.Builder builderForValue) {
        if (joinPathBuilder_ == null) {
          ensureJoinPathIsMutable();
          joinPath_.set(index, builderForValue.build());
          onChanged();
        } else {
          joinPathBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public Builder addJoinPath(EDoc.TablePath.JoinPath value) {
        if (joinPathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinPathIsMutable();
          joinPath_.add(value);
          onChanged();
        } else {
          joinPathBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public Builder addJoinPath(
          int index, EDoc.TablePath.JoinPath value) {
        if (joinPathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinPathIsMutable();
          joinPath_.add(index, value);
          onChanged();
        } else {
          joinPathBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public Builder addJoinPath(
          EDoc.TablePath.JoinPath.Builder builderForValue) {
        if (joinPathBuilder_ == null) {
          ensureJoinPathIsMutable();
          joinPath_.add(builderForValue.build());
          onChanged();
        } else {
          joinPathBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public Builder addJoinPath(
          int index, EDoc.TablePath.JoinPath.Builder builderForValue) {
        if (joinPathBuilder_ == null) {
          ensureJoinPathIsMutable();
          joinPath_.add(index, builderForValue.build());
          onChanged();
        } else {
          joinPathBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public Builder addAllJoinPath(
          java.lang.Iterable<? extends EDoc.TablePath.JoinPath> values) {
        if (joinPathBuilder_ == null) {
          ensureJoinPathIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, joinPath_);
          onChanged();
        } else {
          joinPathBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public Builder clearJoinPath() {
        if (joinPathBuilder_ == null) {
          joinPath_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          joinPathBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public Builder removeJoinPath(int index) {
        if (joinPathBuilder_ == null) {
          ensureJoinPathIsMutable();
          joinPath_.remove(index);
          onChanged();
        } else {
          joinPathBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public EDoc.TablePath.JoinPath.Builder getJoinPathBuilder(
          int index) {
        return getJoinPathFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public EDoc.TablePath.JoinPathOrBuilder getJoinPathOrBuilder(
          int index) {
        if (joinPathBuilder_ == null) {
          return joinPath_.get(index);  } else {
          return joinPathBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public java.util.List<? extends EDoc.TablePath.JoinPathOrBuilder> 
           getJoinPathOrBuilderList() {
        if (joinPathBuilder_ != null) {
          return joinPathBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(joinPath_);
        }
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public EDoc.TablePath.JoinPath.Builder addJoinPathBuilder() {
        return getJoinPathFieldBuilder().addBuilder(
            EDoc.TablePath.JoinPath.getDefaultInstance());
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public EDoc.TablePath.JoinPath.Builder addJoinPathBuilder(
          int index) {
        return getJoinPathFieldBuilder().addBuilder(
            index, EDoc.TablePath.JoinPath.getDefaultInstance());
      }
      /**
       * <pre>
       * Join paths of the given set of columns. Consists of sequence of join IDs.
       * </pre>
       *
       * <code>repeated .TablePath.JoinPath join_path = 3;</code>
       */
      public java.util.List<EDoc.TablePath.JoinPath.Builder> 
           getJoinPathBuilderList() {
        return getJoinPathFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.TablePath.JoinPath, EDoc.TablePath.JoinPath.Builder, EDoc.TablePath.JoinPathOrBuilder> 
          getJoinPathFieldBuilder() {
        if (joinPathBuilder_ == null) {
          joinPathBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.TablePath.JoinPath, EDoc.TablePath.JoinPath.Builder, EDoc.TablePath.JoinPathOrBuilder>(
                  joinPath_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          joinPath_ = null;
        }
        return joinPathBuilder_;
      }

      private com.google.protobuf.LazyStringList column_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureColumnIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          column_ = new com.google.protobuf.LazyStringArrayList(column_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * Identity of the columns from the given table.
       * </pre>
       *
       * <code>repeated string column = 4;</code>
       * @return A list containing the column.
       */
      public com.google.protobuf.ProtocolStringList
          getColumnList() {
        return column_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Identity of the columns from the given table.
       * </pre>
       *
       * <code>repeated string column = 4;</code>
       * @return The count of column.
       */
      public int getColumnCount() {
        return column_.size();
      }
      /**
       * <pre>
       * Identity of the columns from the given table.
       * </pre>
       *
       * <code>repeated string column = 4;</code>
       * @param index The index of the element to return.
       * @return The column at the given index.
       */
      public java.lang.String getColumn(int index) {
        return column_.get(index);
      }
      /**
       * <pre>
       * Identity of the columns from the given table.
       * </pre>
       *
       * <code>repeated string column = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the column at the given index.
       */
      public com.google.protobuf.ByteString
          getColumnBytes(int index) {
        return column_.getByteString(index);
      }
      /**
       * <pre>
       * Identity of the columns from the given table.
       * </pre>
       *
       * <code>repeated string column = 4;</code>
       * @param index The index to set the value at.
       * @param value The column to set.
       * @return This builder for chaining.
       */
      public Builder setColumn(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnIsMutable();
        column_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identity of the columns from the given table.
       * </pre>
       *
       * <code>repeated string column = 4;</code>
       * @param value The column to add.
       * @return This builder for chaining.
       */
      public Builder addColumn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnIsMutable();
        column_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identity of the columns from the given table.
       * </pre>
       *
       * <code>repeated string column = 4;</code>
       * @param values The column to add.
       * @return This builder for chaining.
       */
      public Builder addAllColumn(
          java.lang.Iterable<java.lang.String> values) {
        ensureColumnIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, column_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identity of the columns from the given table.
       * </pre>
       *
       * <code>repeated string column = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearColumn() {
        column_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identity of the columns from the given table.
       * </pre>
       *
       * <code>repeated string column = 4;</code>
       * @param value The bytes of the column to add.
       * @return This builder for chaining.
       */
      public Builder addColumnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnIsMutable();
        column_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TablePath)
    }

    // @@protoc_insertion_point(class_scope:TablePath)
    private static final EDoc.TablePath DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.TablePath();
    }

    public static EDoc.TablePath getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TablePath>
        PARSER = new com.google.protobuf.AbstractParser<TablePath>() {
      @java.lang.Override
      public TablePath parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TablePath(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TablePath> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TablePath> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.TablePath getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IdentityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Identity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ID of the base table as referred in the edoc.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * ID of the base table as referred in the edoc.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * ID of the base table as referred in the edoc.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * Name of the base table in the system.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * Name of the base table in the system.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name of the base table in the system.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * If there are two tables with the same name, optionally we can use
     * the fqn to figure out the object.
     * </pre>
     *
     * <code>optional string fqn = 3;</code>
     * @return Whether the fqn field is set.
     */
    boolean hasFqn();
    /**
     * <pre>
     * If there are two tables with the same name, optionally we can use
     * the fqn to figure out the object.
     * </pre>
     *
     * <code>optional string fqn = 3;</code>
     * @return The fqn.
     */
    java.lang.String getFqn();
    /**
     * <pre>
     * If there are two tables with the same name, optionally we can use
     * the fqn to figure out the object.
     * </pre>
     *
     * <code>optional string fqn = 3;</code>
     * @return The bytes for fqn.
     */
    com.google.protobuf.ByteString
        getFqnBytes();
  }
  /**
   * <pre>
   * Any table in the worksheet/rls rule that uses a joined table has to have a table identity to
   * specify the table.
   * </pre>
   *
   * Protobuf type {@code Identity}
   */
  public static final class Identity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Identity)
      IdentityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Identity.newBuilder() to construct.
    private Identity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Identity() {
      id_ = "";
      name_ = "";
      fqn_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Identity();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Identity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              fqn_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_Identity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_Identity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.Identity.class, EDoc.Identity.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * ID of the base table as referred in the edoc.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * ID of the base table as referred in the edoc.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * ID of the base table as referred in the edoc.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Name of the base table in the system.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Name of the base table in the system.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Name of the base table in the system.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FQN_FIELD_NUMBER = 3;
    private volatile java.lang.Object fqn_;
    /**
     * <pre>
     * If there are two tables with the same name, optionally we can use
     * the fqn to figure out the object.
     * </pre>
     *
     * <code>optional string fqn = 3;</code>
     * @return Whether the fqn field is set.
     */
    @java.lang.Override
    public boolean hasFqn() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * If there are two tables with the same name, optionally we can use
     * the fqn to figure out the object.
     * </pre>
     *
     * <code>optional string fqn = 3;</code>
     * @return The fqn.
     */
    @java.lang.Override
    public java.lang.String getFqn() {
      java.lang.Object ref = fqn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fqn_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * If there are two tables with the same name, optionally we can use
     * the fqn to figure out the object.
     * </pre>
     *
     * <code>optional string fqn = 3;</code>
     * @return The bytes for fqn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFqnBytes() {
      java.lang.Object ref = fqn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fqn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, fqn_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, fqn_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.Identity)) {
        return super.equals(obj);
      }
      EDoc.Identity other = (EDoc.Identity) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasFqn() != other.hasFqn()) return false;
      if (hasFqn()) {
        if (!getFqn()
            .equals(other.getFqn())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasFqn()) {
        hash = (37 * hash) + FQN_FIELD_NUMBER;
        hash = (53 * hash) + getFqn().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.Identity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Identity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Identity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Identity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Identity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Identity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Identity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.Identity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.Identity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.Identity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.Identity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.Identity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.Identity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Any table in the worksheet/rls rule that uses a joined table has to have a table identity to
     * specify the table.
     * </pre>
     *
     * Protobuf type {@code Identity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Identity)
        EDoc.IdentityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_Identity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_Identity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.Identity.class, EDoc.Identity.Builder.class);
      }

      // Construct using EDoc.Identity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        fqn_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_Identity_descriptor;
      }

      @java.lang.Override
      public EDoc.Identity getDefaultInstanceForType() {
        return EDoc.Identity.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.Identity build() {
        EDoc.Identity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.Identity buildPartial() {
        EDoc.Identity result = new EDoc.Identity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fqn_ = fqn_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.Identity) {
          return mergeFrom((EDoc.Identity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.Identity other) {
        if (other == EDoc.Identity.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasFqn()) {
          bitField0_ |= 0x00000004;
          fqn_ = other.fqn_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.Identity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.Identity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * ID of the base table as referred in the edoc.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * ID of the base table as referred in the edoc.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ID of the base table as referred in the edoc.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ID of the base table as referred in the edoc.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the base table as referred in the edoc.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the base table as referred in the edoc.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name of the base table in the system.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Name of the base table in the system.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the base table in the system.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the base table in the system.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the base table in the system.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the base table in the system.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object fqn_ = "";
      /**
       * <pre>
       * If there are two tables with the same name, optionally we can use
       * the fqn to figure out the object.
       * </pre>
       *
       * <code>optional string fqn = 3;</code>
       * @return Whether the fqn field is set.
       */
      public boolean hasFqn() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * If there are two tables with the same name, optionally we can use
       * the fqn to figure out the object.
       * </pre>
       *
       * <code>optional string fqn = 3;</code>
       * @return The fqn.
       */
      public java.lang.String getFqn() {
        java.lang.Object ref = fqn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fqn_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If there are two tables with the same name, optionally we can use
       * the fqn to figure out the object.
       * </pre>
       *
       * <code>optional string fqn = 3;</code>
       * @return The bytes for fqn.
       */
      public com.google.protobuf.ByteString
          getFqnBytes() {
        java.lang.Object ref = fqn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fqn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If there are two tables with the same name, optionally we can use
       * the fqn to figure out the object.
       * </pre>
       *
       * <code>optional string fqn = 3;</code>
       * @param value The fqn to set.
       * @return This builder for chaining.
       */
      public Builder setFqn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fqn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If there are two tables with the same name, optionally we can use
       * the fqn to figure out the object.
       * </pre>
       *
       * <code>optional string fqn = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFqn() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fqn_ = getDefaultInstance().getFqn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If there are two tables with the same name, optionally we can use
       * the fqn to figure out the object.
       * </pre>
       *
       * <code>optional string fqn = 3;</code>
       * @param value The bytes for fqn to set.
       * @return This builder for chaining.
       */
      public Builder setFqnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fqn_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Identity)
    }

    // @@protoc_insertion_point(class_scope:Identity)
    private static final EDoc.Identity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.Identity();
    }

    public static EDoc.Identity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Identity>
        PARSER = new com.google.protobuf.AbstractParser<Identity>() {
      @java.lang.Override
      public Identity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Identity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Identity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Identity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.Identity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TokenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Token)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>optional string text = 2;</code>
     * @return Whether the text field is set.
     */
    boolean hasText();
    /**
     * <code>optional string text = 2;</code>
     * @return The text.
     */
    java.lang.String getText();
    /**
     * <code>optional string text = 2;</code>
     * @return The bytes for text.
     */
    com.google.protobuf.ByteString
        getTextBytes();
  }
  /**
   * <pre>
   * In cases where the user used a sage query to generate the query, we would use
   * the tokens to specify the exact query.
   * </pre>
   *
   * Protobuf type {@code Token}
   */
  public static final class Token extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Token)
      TokenOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Token.newBuilder() to construct.
    private Token(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Token() {
      id_ = "";
      text_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Token();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Token(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              text_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_Token_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_Token_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.Token.class, EDoc.Token.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEXT_FIELD_NUMBER = 2;
    private volatile java.lang.Object text_;
    /**
     * <code>optional string text = 2;</code>
     * @return Whether the text field is set.
     */
    @java.lang.Override
    public boolean hasText() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string text = 2;</code>
     * @return The text.
     */
    @java.lang.Override
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          text_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string text = 2;</code>
     * @return The bytes for text.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, text_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, text_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.Token)) {
        return super.equals(obj);
      }
      EDoc.Token other = (EDoc.Token) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (hasText() != other.hasText()) return false;
      if (hasText()) {
        if (!getText()
            .equals(other.getText())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasText()) {
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getText().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.Token parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Token parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Token parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Token parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Token parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.Token parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.Token parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.Token parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.Token parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.Token parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.Token parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.Token parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.Token prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * In cases where the user used a sage query to generate the query, we would use
     * the tokens to specify the exact query.
     * </pre>
     *
     * Protobuf type {@code Token}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Token)
        EDoc.TokenOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_Token_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_Token_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.Token.class, EDoc.Token.Builder.class);
      }

      // Construct using EDoc.Token.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        text_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_Token_descriptor;
      }

      @java.lang.Override
      public EDoc.Token getDefaultInstanceForType() {
        return EDoc.Token.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.Token build() {
        EDoc.Token result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.Token buildPartial() {
        EDoc.Token result = new EDoc.Token(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.text_ = text_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.Token) {
          return mergeFrom((EDoc.Token)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.Token other) {
        if (other == EDoc.Token.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasText()) {
          bitField0_ |= 0x00000002;
          text_ = other.text_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.Token parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.Token) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object text_ = "";
      /**
       * <code>optional string text = 2;</code>
       * @return Whether the text field is set.
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string text = 2;</code>
       * @return The text.
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string text = 2;</code>
       * @return The bytes for text.
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string text = 2;</code>
       * @param value The text to set.
       * @return This builder for chaining.
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        text_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearText() {
        bitField0_ = (bitField0_ & ~0x00000002);
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 2;</code>
       * @param value The bytes for text to set.
       * @return This builder for chaining.
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        text_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Token)
    }

    // @@protoc_insertion_point(class_scope:Token)
    private static final EDoc.Token DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.Token();
    }

    public static EDoc.Token getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Token>
        PARSER = new com.google.protobuf.AbstractParser<Token>() {
      @java.lang.Override
      public Token parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Token(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Token> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Token> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.Token getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ObjectEDocProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ObjectEDocProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * In case the user wants to update an existing object, user can provid guid
     * of the object to update. This may or may not be used depending on whether
     * an external guid is set to override this.
     * Refer to ImportEPack API contract (edoc_service.proto) for more details.
     * NOTE: We are using "1" as field number for "guid" because we want "guid" to
     * be on top of the exported TML file for better readability.
     * </pre>
     *
     * <code>optional string guid = 1;</code>
     * @return Whether the guid field is set.
     */
    boolean hasGuid();
    /**
     * <pre>
     * In case the user wants to update an existing object, user can provid guid
     * of the object to update. This may or may not be used depending on whether
     * an external guid is set to override this.
     * Refer to ImportEPack API contract (edoc_service.proto) for more details.
     * NOTE: We are using "1" as field number for "guid" because we want "guid" to
     * be on top of the exported TML file for better readability.
     * </pre>
     *
     * <code>optional string guid = 1;</code>
     * @return The guid.
     */
    java.lang.String getGuid();
    /**
     * <pre>
     * In case the user wants to update an existing object, user can provid guid
     * of the object to update. This may or may not be used depending on whether
     * an external guid is set to override this.
     * Refer to ImportEPack API contract (edoc_service.proto) for more details.
     * NOTE: We are using "1" as field number for "guid" because we want "guid" to
     * be on top of the exported TML file for better readability.
     * </pre>
     *
     * <code>optional string guid = 1;</code>
     * @return The bytes for guid.
     */
    com.google.protobuf.ByteString
        getGuidBytes();

    /**
     * <pre>
     * Exactly only one of the properties below will be populated.
     * </pre>
     *
     * <code>optional .WorksheetEDocProto worksheet = 2;</code>
     * @return Whether the worksheet field is set.
     */
    boolean hasWorksheet();
    /**
     * <pre>
     * Exactly only one of the properties below will be populated.
     * </pre>
     *
     * <code>optional .WorksheetEDocProto worksheet = 2;</code>
     * @return The worksheet.
     */
    EDoc.WorksheetEDocProto getWorksheet();
    /**
     * <pre>
     * Exactly only one of the properties below will be populated.
     * </pre>
     *
     * <code>optional .WorksheetEDocProto worksheet = 2;</code>
     */
    EDoc.WorksheetEDocProtoOrBuilder getWorksheetOrBuilder();

    /**
     * <code>optional .ViewEDocProto view = 3;</code>
     * @return Whether the view field is set.
     */
    boolean hasView();
    /**
     * <code>optional .ViewEDocProto view = 3;</code>
     * @return The view.
     */
    EDoc.ViewEDocProto getView();
    /**
     * <code>optional .ViewEDocProto view = 3;</code>
     */
    EDoc.ViewEDocProtoOrBuilder getViewOrBuilder();

    /**
     * <code>optional .AnswerEDocProto answer = 4;</code>
     * @return Whether the answer field is set.
     */
    boolean hasAnswer();
    /**
     * <code>optional .AnswerEDocProto answer = 4;</code>
     * @return The answer.
     */
    EDoc.AnswerEDocProto getAnswer();
    /**
     * <code>optional .AnswerEDocProto answer = 4;</code>
     */
    EDoc.AnswerEDocProtoOrBuilder getAnswerOrBuilder();

    /**
     * <code>optional .PinboardEDocProto pinboard = 5;</code>
     * @return Whether the pinboard field is set.
     */
    boolean hasPinboard();
    /**
     * <code>optional .PinboardEDocProto pinboard = 5;</code>
     * @return The pinboard.
     */
    EDoc.PinboardEDocProto getPinboard();
    /**
     * <code>optional .PinboardEDocProto pinboard = 5;</code>
     */
    EDoc.PinboardEDocProtoOrBuilder getPinboardOrBuilder();

    /**
     * <code>optional .LogicalTableEDocProto table = 6;</code>
     * @return Whether the table field is set.
     */
    boolean hasTable();
    /**
     * <code>optional .LogicalTableEDocProto table = 6;</code>
     * @return The table.
     */
    EDoc.LogicalTableEDocProto getTable();
    /**
     * <code>optional .LogicalTableEDocProto table = 6;</code>
     */
    EDoc.LogicalTableEDocProtoOrBuilder getTableOrBuilder();

    /**
     * <code>repeated .RelationEDocProto joins = 7;</code>
     */
    java.util.List<EDoc.RelationEDocProto> 
        getJoinsList();
    /**
     * <code>repeated .RelationEDocProto joins = 7;</code>
     */
    EDoc.RelationEDocProto getJoins(int index);
    /**
     * <code>repeated .RelationEDocProto joins = 7;</code>
     */
    int getJoinsCount();
    /**
     * <code>repeated .RelationEDocProto joins = 7;</code>
     */
    java.util.List<? extends EDoc.RelationEDocProtoOrBuilder> 
        getJoinsOrBuilderList();
    /**
     * <code>repeated .RelationEDocProto joins = 7;</code>
     */
    EDoc.RelationEDocProtoOrBuilder getJoinsOrBuilder(
        int index);

    /**
     * <code>repeated .ObjectPermissions permissions = 8;</code>
     */
    java.util.List<EDoc.ObjectPermissions> 
        getPermissionsList();
    /**
     * <code>repeated .ObjectPermissions permissions = 8;</code>
     */
    EDoc.ObjectPermissions getPermissions(int index);
    /**
     * <code>repeated .ObjectPermissions permissions = 8;</code>
     */
    int getPermissionsCount();
    /**
     * <code>repeated .ObjectPermissions permissions = 8;</code>
     */
    java.util.List<? extends EDoc.ObjectPermissionsOrBuilder> 
        getPermissionsOrBuilderList();
    /**
     * <code>repeated .ObjectPermissions permissions = 8;</code>
     */
    EDoc.ObjectPermissionsOrBuilder getPermissionsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A wrapper around each of the documents that can be created.
   * </pre>
   *
   * Protobuf type {@code ObjectEDocProto}
   */
  public static final class ObjectEDocProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ObjectEDocProto)
      ObjectEDocProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ObjectEDocProto.newBuilder() to construct.
    private ObjectEDocProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ObjectEDocProto() {
      guid_ = "";
      joins_ = java.util.Collections.emptyList();
      permissions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ObjectEDocProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ObjectEDocProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              guid_ = bs;
              break;
            }
            case 18: {
              EDoc.WorksheetEDocProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) != 0)) {
                subBuilder = worksheet_.toBuilder();
              }
              worksheet_ = input.readMessage(EDoc.WorksheetEDocProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(worksheet_);
                worksheet_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              EDoc.ViewEDocProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) != 0)) {
                subBuilder = view_.toBuilder();
              }
              view_ = input.readMessage(EDoc.ViewEDocProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(view_);
                view_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              EDoc.AnswerEDocProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) != 0)) {
                subBuilder = answer_.toBuilder();
              }
              answer_ = input.readMessage(EDoc.AnswerEDocProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(answer_);
                answer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              EDoc.PinboardEDocProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) != 0)) {
                subBuilder = pinboard_.toBuilder();
              }
              pinboard_ = input.readMessage(EDoc.PinboardEDocProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pinboard_);
                pinboard_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              EDoc.LogicalTableEDocProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) != 0)) {
                subBuilder = table_.toBuilder();
              }
              table_ = input.readMessage(EDoc.LogicalTableEDocProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(table_);
                table_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                joins_ = new java.util.ArrayList<EDoc.RelationEDocProto>();
                mutable_bitField0_ |= 0x00000040;
              }
              joins_.add(
                  input.readMessage(EDoc.RelationEDocProto.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                permissions_ = new java.util.ArrayList<EDoc.ObjectPermissions>();
                mutable_bitField0_ |= 0x00000080;
              }
              permissions_.add(
                  input.readMessage(EDoc.ObjectPermissions.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          joins_ = java.util.Collections.unmodifiableList(joins_);
        }
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          permissions_ = java.util.Collections.unmodifiableList(permissions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_ObjectEDocProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_ObjectEDocProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.ObjectEDocProto.class, EDoc.ObjectEDocProto.Builder.class);
    }

    private int bitField0_;
    public static final int GUID_FIELD_NUMBER = 1;
    private volatile java.lang.Object guid_;
    /**
     * <pre>
     * In case the user wants to update an existing object, user can provid guid
     * of the object to update. This may or may not be used depending on whether
     * an external guid is set to override this.
     * Refer to ImportEPack API contract (edoc_service.proto) for more details.
     * NOTE: We are using "1" as field number for "guid" because we want "guid" to
     * be on top of the exported TML file for better readability.
     * </pre>
     *
     * <code>optional string guid = 1;</code>
     * @return Whether the guid field is set.
     */
    @java.lang.Override
    public boolean hasGuid() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * In case the user wants to update an existing object, user can provid guid
     * of the object to update. This may or may not be used depending on whether
     * an external guid is set to override this.
     * Refer to ImportEPack API contract (edoc_service.proto) for more details.
     * NOTE: We are using "1" as field number for "guid" because we want "guid" to
     * be on top of the exported TML file for better readability.
     * </pre>
     *
     * <code>optional string guid = 1;</code>
     * @return The guid.
     */
    @java.lang.Override
    public java.lang.String getGuid() {
      java.lang.Object ref = guid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          guid_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * In case the user wants to update an existing object, user can provid guid
     * of the object to update. This may or may not be used depending on whether
     * an external guid is set to override this.
     * Refer to ImportEPack API contract (edoc_service.proto) for more details.
     * NOTE: We are using "1" as field number for "guid" because we want "guid" to
     * be on top of the exported TML file for better readability.
     * </pre>
     *
     * <code>optional string guid = 1;</code>
     * @return The bytes for guid.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGuidBytes() {
      java.lang.Object ref = guid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        guid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WORKSHEET_FIELD_NUMBER = 2;
    private EDoc.WorksheetEDocProto worksheet_;
    /**
     * <pre>
     * Exactly only one of the properties below will be populated.
     * </pre>
     *
     * <code>optional .WorksheetEDocProto worksheet = 2;</code>
     * @return Whether the worksheet field is set.
     */
    @java.lang.Override
    public boolean hasWorksheet() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Exactly only one of the properties below will be populated.
     * </pre>
     *
     * <code>optional .WorksheetEDocProto worksheet = 2;</code>
     * @return The worksheet.
     */
    @java.lang.Override
    public EDoc.WorksheetEDocProto getWorksheet() {
      return worksheet_ == null ? EDoc.WorksheetEDocProto.getDefaultInstance() : worksheet_;
    }
    /**
     * <pre>
     * Exactly only one of the properties below will be populated.
     * </pre>
     *
     * <code>optional .WorksheetEDocProto worksheet = 2;</code>
     */
    @java.lang.Override
    public EDoc.WorksheetEDocProtoOrBuilder getWorksheetOrBuilder() {
      return worksheet_ == null ? EDoc.WorksheetEDocProto.getDefaultInstance() : worksheet_;
    }

    public static final int VIEW_FIELD_NUMBER = 3;
    private EDoc.ViewEDocProto view_;
    /**
     * <code>optional .ViewEDocProto view = 3;</code>
     * @return Whether the view field is set.
     */
    @java.lang.Override
    public boolean hasView() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .ViewEDocProto view = 3;</code>
     * @return The view.
     */
    @java.lang.Override
    public EDoc.ViewEDocProto getView() {
      return view_ == null ? EDoc.ViewEDocProto.getDefaultInstance() : view_;
    }
    /**
     * <code>optional .ViewEDocProto view = 3;</code>
     */
    @java.lang.Override
    public EDoc.ViewEDocProtoOrBuilder getViewOrBuilder() {
      return view_ == null ? EDoc.ViewEDocProto.getDefaultInstance() : view_;
    }

    public static final int ANSWER_FIELD_NUMBER = 4;
    private EDoc.AnswerEDocProto answer_;
    /**
     * <code>optional .AnswerEDocProto answer = 4;</code>
     * @return Whether the answer field is set.
     */
    @java.lang.Override
    public boolean hasAnswer() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .AnswerEDocProto answer = 4;</code>
     * @return The answer.
     */
    @java.lang.Override
    public EDoc.AnswerEDocProto getAnswer() {
      return answer_ == null ? EDoc.AnswerEDocProto.getDefaultInstance() : answer_;
    }
    /**
     * <code>optional .AnswerEDocProto answer = 4;</code>
     */
    @java.lang.Override
    public EDoc.AnswerEDocProtoOrBuilder getAnswerOrBuilder() {
      return answer_ == null ? EDoc.AnswerEDocProto.getDefaultInstance() : answer_;
    }

    public static final int PINBOARD_FIELD_NUMBER = 5;
    private EDoc.PinboardEDocProto pinboard_;
    /**
     * <code>optional .PinboardEDocProto pinboard = 5;</code>
     * @return Whether the pinboard field is set.
     */
    @java.lang.Override
    public boolean hasPinboard() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional .PinboardEDocProto pinboard = 5;</code>
     * @return The pinboard.
     */
    @java.lang.Override
    public EDoc.PinboardEDocProto getPinboard() {
      return pinboard_ == null ? EDoc.PinboardEDocProto.getDefaultInstance() : pinboard_;
    }
    /**
     * <code>optional .PinboardEDocProto pinboard = 5;</code>
     */
    @java.lang.Override
    public EDoc.PinboardEDocProtoOrBuilder getPinboardOrBuilder() {
      return pinboard_ == null ? EDoc.PinboardEDocProto.getDefaultInstance() : pinboard_;
    }

    public static final int TABLE_FIELD_NUMBER = 6;
    private EDoc.LogicalTableEDocProto table_;
    /**
     * <code>optional .LogicalTableEDocProto table = 6;</code>
     * @return Whether the table field is set.
     */
    @java.lang.Override
    public boolean hasTable() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional .LogicalTableEDocProto table = 6;</code>
     * @return The table.
     */
    @java.lang.Override
    public EDoc.LogicalTableEDocProto getTable() {
      return table_ == null ? EDoc.LogicalTableEDocProto.getDefaultInstance() : table_;
    }
    /**
     * <code>optional .LogicalTableEDocProto table = 6;</code>
     */
    @java.lang.Override
    public EDoc.LogicalTableEDocProtoOrBuilder getTableOrBuilder() {
      return table_ == null ? EDoc.LogicalTableEDocProto.getDefaultInstance() : table_;
    }

    public static final int JOINS_FIELD_NUMBER = 7;
    private java.util.List<EDoc.RelationEDocProto> joins_;
    /**
     * <code>repeated .RelationEDocProto joins = 7;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.RelationEDocProto> getJoinsList() {
      return joins_;
    }
    /**
     * <code>repeated .RelationEDocProto joins = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.RelationEDocProtoOrBuilder> 
        getJoinsOrBuilderList() {
      return joins_;
    }
    /**
     * <code>repeated .RelationEDocProto joins = 7;</code>
     */
    @java.lang.Override
    public int getJoinsCount() {
      return joins_.size();
    }
    /**
     * <code>repeated .RelationEDocProto joins = 7;</code>
     */
    @java.lang.Override
    public EDoc.RelationEDocProto getJoins(int index) {
      return joins_.get(index);
    }
    /**
     * <code>repeated .RelationEDocProto joins = 7;</code>
     */
    @java.lang.Override
    public EDoc.RelationEDocProtoOrBuilder getJoinsOrBuilder(
        int index) {
      return joins_.get(index);
    }

    public static final int PERMISSIONS_FIELD_NUMBER = 8;
    private java.util.List<EDoc.ObjectPermissions> permissions_;
    /**
     * <code>repeated .ObjectPermissions permissions = 8;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.ObjectPermissions> getPermissionsList() {
      return permissions_;
    }
    /**
     * <code>repeated .ObjectPermissions permissions = 8;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.ObjectPermissionsOrBuilder> 
        getPermissionsOrBuilderList() {
      return permissions_;
    }
    /**
     * <code>repeated .ObjectPermissions permissions = 8;</code>
     */
    @java.lang.Override
    public int getPermissionsCount() {
      return permissions_.size();
    }
    /**
     * <code>repeated .ObjectPermissions permissions = 8;</code>
     */
    @java.lang.Override
    public EDoc.ObjectPermissions getPermissions(int index) {
      return permissions_.get(index);
    }
    /**
     * <code>repeated .ObjectPermissions permissions = 8;</code>
     */
    @java.lang.Override
    public EDoc.ObjectPermissionsOrBuilder getPermissionsOrBuilder(
        int index) {
      return permissions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, guid_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getWorksheet());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getView());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(4, getAnswer());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(5, getPinboard());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeMessage(6, getTable());
      }
      for (int i = 0; i < joins_.size(); i++) {
        output.writeMessage(7, joins_.get(i));
      }
      for (int i = 0; i < permissions_.size(); i++) {
        output.writeMessage(8, permissions_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, guid_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getWorksheet());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getView());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAnswer());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getPinboard());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getTable());
      }
      for (int i = 0; i < joins_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, joins_.get(i));
      }
      for (int i = 0; i < permissions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, permissions_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.ObjectEDocProto)) {
        return super.equals(obj);
      }
      EDoc.ObjectEDocProto other = (EDoc.ObjectEDocProto) obj;

      if (hasGuid() != other.hasGuid()) return false;
      if (hasGuid()) {
        if (!getGuid()
            .equals(other.getGuid())) return false;
      }
      if (hasWorksheet() != other.hasWorksheet()) return false;
      if (hasWorksheet()) {
        if (!getWorksheet()
            .equals(other.getWorksheet())) return false;
      }
      if (hasView() != other.hasView()) return false;
      if (hasView()) {
        if (!getView()
            .equals(other.getView())) return false;
      }
      if (hasAnswer() != other.hasAnswer()) return false;
      if (hasAnswer()) {
        if (!getAnswer()
            .equals(other.getAnswer())) return false;
      }
      if (hasPinboard() != other.hasPinboard()) return false;
      if (hasPinboard()) {
        if (!getPinboard()
            .equals(other.getPinboard())) return false;
      }
      if (hasTable() != other.hasTable()) return false;
      if (hasTable()) {
        if (!getTable()
            .equals(other.getTable())) return false;
      }
      if (!getJoinsList()
          .equals(other.getJoinsList())) return false;
      if (!getPermissionsList()
          .equals(other.getPermissionsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasGuid()) {
        hash = (37 * hash) + GUID_FIELD_NUMBER;
        hash = (53 * hash) + getGuid().hashCode();
      }
      if (hasWorksheet()) {
        hash = (37 * hash) + WORKSHEET_FIELD_NUMBER;
        hash = (53 * hash) + getWorksheet().hashCode();
      }
      if (hasView()) {
        hash = (37 * hash) + VIEW_FIELD_NUMBER;
        hash = (53 * hash) + getView().hashCode();
      }
      if (hasAnswer()) {
        hash = (37 * hash) + ANSWER_FIELD_NUMBER;
        hash = (53 * hash) + getAnswer().hashCode();
      }
      if (hasPinboard()) {
        hash = (37 * hash) + PINBOARD_FIELD_NUMBER;
        hash = (53 * hash) + getPinboard().hashCode();
      }
      if (hasTable()) {
        hash = (37 * hash) + TABLE_FIELD_NUMBER;
        hash = (53 * hash) + getTable().hashCode();
      }
      if (getJoinsCount() > 0) {
        hash = (37 * hash) + JOINS_FIELD_NUMBER;
        hash = (53 * hash) + getJoinsList().hashCode();
      }
      if (getPermissionsCount() > 0) {
        hash = (37 * hash) + PERMISSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getPermissionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.ObjectEDocProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ObjectEDocProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ObjectEDocProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ObjectEDocProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ObjectEDocProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ObjectEDocProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ObjectEDocProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.ObjectEDocProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.ObjectEDocProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.ObjectEDocProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.ObjectEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.ObjectEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.ObjectEDocProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A wrapper around each of the documents that can be created.
     * </pre>
     *
     * Protobuf type {@code ObjectEDocProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ObjectEDocProto)
        EDoc.ObjectEDocProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ObjectEDocProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ObjectEDocProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ObjectEDocProto.class, EDoc.ObjectEDocProto.Builder.class);
      }

      // Construct using EDoc.ObjectEDocProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getWorksheetFieldBuilder();
          getViewFieldBuilder();
          getAnswerFieldBuilder();
          getPinboardFieldBuilder();
          getTableFieldBuilder();
          getJoinsFieldBuilder();
          getPermissionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        guid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (worksheetBuilder_ == null) {
          worksheet_ = null;
        } else {
          worksheetBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (viewBuilder_ == null) {
          view_ = null;
        } else {
          viewBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (answerBuilder_ == null) {
          answer_ = null;
        } else {
          answerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (pinboardBuilder_ == null) {
          pinboard_ = null;
        } else {
          pinboardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (tableBuilder_ == null) {
          table_ = null;
        } else {
          tableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (joinsBuilder_ == null) {
          joins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          joinsBuilder_.clear();
        }
        if (permissionsBuilder_ == null) {
          permissions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          permissionsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_ObjectEDocProto_descriptor;
      }

      @java.lang.Override
      public EDoc.ObjectEDocProto getDefaultInstanceForType() {
        return EDoc.ObjectEDocProto.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.ObjectEDocProto build() {
        EDoc.ObjectEDocProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.ObjectEDocProto buildPartial() {
        EDoc.ObjectEDocProto result = new EDoc.ObjectEDocProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.guid_ = guid_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (worksheetBuilder_ == null) {
            result.worksheet_ = worksheet_;
          } else {
            result.worksheet_ = worksheetBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          if (viewBuilder_ == null) {
            result.view_ = view_;
          } else {
            result.view_ = viewBuilder_.build();
          }
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          if (answerBuilder_ == null) {
            result.answer_ = answer_;
          } else {
            result.answer_ = answerBuilder_.build();
          }
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          if (pinboardBuilder_ == null) {
            result.pinboard_ = pinboard_;
          } else {
            result.pinboard_ = pinboardBuilder_.build();
          }
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          if (tableBuilder_ == null) {
            result.table_ = table_;
          } else {
            result.table_ = tableBuilder_.build();
          }
          to_bitField0_ |= 0x00000020;
        }
        if (joinsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            joins_ = java.util.Collections.unmodifiableList(joins_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.joins_ = joins_;
        } else {
          result.joins_ = joinsBuilder_.build();
        }
        if (permissionsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)) {
            permissions_ = java.util.Collections.unmodifiableList(permissions_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.permissions_ = permissions_;
        } else {
          result.permissions_ = permissionsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.ObjectEDocProto) {
          return mergeFrom((EDoc.ObjectEDocProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.ObjectEDocProto other) {
        if (other == EDoc.ObjectEDocProto.getDefaultInstance()) return this;
        if (other.hasGuid()) {
          bitField0_ |= 0x00000001;
          guid_ = other.guid_;
          onChanged();
        }
        if (other.hasWorksheet()) {
          mergeWorksheet(other.getWorksheet());
        }
        if (other.hasView()) {
          mergeView(other.getView());
        }
        if (other.hasAnswer()) {
          mergeAnswer(other.getAnswer());
        }
        if (other.hasPinboard()) {
          mergePinboard(other.getPinboard());
        }
        if (other.hasTable()) {
          mergeTable(other.getTable());
        }
        if (joinsBuilder_ == null) {
          if (!other.joins_.isEmpty()) {
            if (joins_.isEmpty()) {
              joins_ = other.joins_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureJoinsIsMutable();
              joins_.addAll(other.joins_);
            }
            onChanged();
          }
        } else {
          if (!other.joins_.isEmpty()) {
            if (joinsBuilder_.isEmpty()) {
              joinsBuilder_.dispose();
              joinsBuilder_ = null;
              joins_ = other.joins_;
              bitField0_ = (bitField0_ & ~0x00000040);
              joinsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getJoinsFieldBuilder() : null;
            } else {
              joinsBuilder_.addAllMessages(other.joins_);
            }
          }
        }
        if (permissionsBuilder_ == null) {
          if (!other.permissions_.isEmpty()) {
            if (permissions_.isEmpty()) {
              permissions_ = other.permissions_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensurePermissionsIsMutable();
              permissions_.addAll(other.permissions_);
            }
            onChanged();
          }
        } else {
          if (!other.permissions_.isEmpty()) {
            if (permissionsBuilder_.isEmpty()) {
              permissionsBuilder_.dispose();
              permissionsBuilder_ = null;
              permissions_ = other.permissions_;
              bitField0_ = (bitField0_ & ~0x00000080);
              permissionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPermissionsFieldBuilder() : null;
            } else {
              permissionsBuilder_.addAllMessages(other.permissions_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.ObjectEDocProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.ObjectEDocProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object guid_ = "";
      /**
       * <pre>
       * In case the user wants to update an existing object, user can provid guid
       * of the object to update. This may or may not be used depending on whether
       * an external guid is set to override this.
       * Refer to ImportEPack API contract (edoc_service.proto) for more details.
       * NOTE: We are using "1" as field number for "guid" because we want "guid" to
       * be on top of the exported TML file for better readability.
       * </pre>
       *
       * <code>optional string guid = 1;</code>
       * @return Whether the guid field is set.
       */
      public boolean hasGuid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * In case the user wants to update an existing object, user can provid guid
       * of the object to update. This may or may not be used depending on whether
       * an external guid is set to override this.
       * Refer to ImportEPack API contract (edoc_service.proto) for more details.
       * NOTE: We are using "1" as field number for "guid" because we want "guid" to
       * be on top of the exported TML file for better readability.
       * </pre>
       *
       * <code>optional string guid = 1;</code>
       * @return The guid.
       */
      public java.lang.String getGuid() {
        java.lang.Object ref = guid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            guid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * In case the user wants to update an existing object, user can provid guid
       * of the object to update. This may or may not be used depending on whether
       * an external guid is set to override this.
       * Refer to ImportEPack API contract (edoc_service.proto) for more details.
       * NOTE: We are using "1" as field number for "guid" because we want "guid" to
       * be on top of the exported TML file for better readability.
       * </pre>
       *
       * <code>optional string guid = 1;</code>
       * @return The bytes for guid.
       */
      public com.google.protobuf.ByteString
          getGuidBytes() {
        java.lang.Object ref = guid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          guid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * In case the user wants to update an existing object, user can provid guid
       * of the object to update. This may or may not be used depending on whether
       * an external guid is set to override this.
       * Refer to ImportEPack API contract (edoc_service.proto) for more details.
       * NOTE: We are using "1" as field number for "guid" because we want "guid" to
       * be on top of the exported TML file for better readability.
       * </pre>
       *
       * <code>optional string guid = 1;</code>
       * @param value The guid to set.
       * @return This builder for chaining.
       */
      public Builder setGuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        guid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In case the user wants to update an existing object, user can provid guid
       * of the object to update. This may or may not be used depending on whether
       * an external guid is set to override this.
       * Refer to ImportEPack API contract (edoc_service.proto) for more details.
       * NOTE: We are using "1" as field number for "guid" because we want "guid" to
       * be on top of the exported TML file for better readability.
       * </pre>
       *
       * <code>optional string guid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearGuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        guid_ = getDefaultInstance().getGuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In case the user wants to update an existing object, user can provid guid
       * of the object to update. This may or may not be used depending on whether
       * an external guid is set to override this.
       * Refer to ImportEPack API contract (edoc_service.proto) for more details.
       * NOTE: We are using "1" as field number for "guid" because we want "guid" to
       * be on top of the exported TML file for better readability.
       * </pre>
       *
       * <code>optional string guid = 1;</code>
       * @param value The bytes for guid to set.
       * @return This builder for chaining.
       */
      public Builder setGuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        guid_ = value;
        onChanged();
        return this;
      }

      private EDoc.WorksheetEDocProto worksheet_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.WorksheetEDocProto, EDoc.WorksheetEDocProto.Builder, EDoc.WorksheetEDocProtoOrBuilder> worksheetBuilder_;
      /**
       * <pre>
       * Exactly only one of the properties below will be populated.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto worksheet = 2;</code>
       * @return Whether the worksheet field is set.
       */
      public boolean hasWorksheet() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Exactly only one of the properties below will be populated.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto worksheet = 2;</code>
       * @return The worksheet.
       */
      public EDoc.WorksheetEDocProto getWorksheet() {
        if (worksheetBuilder_ == null) {
          return worksheet_ == null ? EDoc.WorksheetEDocProto.getDefaultInstance() : worksheet_;
        } else {
          return worksheetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Exactly only one of the properties below will be populated.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto worksheet = 2;</code>
       */
      public Builder setWorksheet(EDoc.WorksheetEDocProto value) {
        if (worksheetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          worksheet_ = value;
          onChanged();
        } else {
          worksheetBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Exactly only one of the properties below will be populated.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto worksheet = 2;</code>
       */
      public Builder setWorksheet(
          EDoc.WorksheetEDocProto.Builder builderForValue) {
        if (worksheetBuilder_ == null) {
          worksheet_ = builderForValue.build();
          onChanged();
        } else {
          worksheetBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Exactly only one of the properties below will be populated.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto worksheet = 2;</code>
       */
      public Builder mergeWorksheet(EDoc.WorksheetEDocProto value) {
        if (worksheetBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              worksheet_ != null &&
              worksheet_ != EDoc.WorksheetEDocProto.getDefaultInstance()) {
            worksheet_ =
              EDoc.WorksheetEDocProto.newBuilder(worksheet_).mergeFrom(value).buildPartial();
          } else {
            worksheet_ = value;
          }
          onChanged();
        } else {
          worksheetBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Exactly only one of the properties below will be populated.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto worksheet = 2;</code>
       */
      public Builder clearWorksheet() {
        if (worksheetBuilder_ == null) {
          worksheet_ = null;
          onChanged();
        } else {
          worksheetBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * Exactly only one of the properties below will be populated.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto worksheet = 2;</code>
       */
      public EDoc.WorksheetEDocProto.Builder getWorksheetBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getWorksheetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Exactly only one of the properties below will be populated.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto worksheet = 2;</code>
       */
      public EDoc.WorksheetEDocProtoOrBuilder getWorksheetOrBuilder() {
        if (worksheetBuilder_ != null) {
          return worksheetBuilder_.getMessageOrBuilder();
        } else {
          return worksheet_ == null ?
              EDoc.WorksheetEDocProto.getDefaultInstance() : worksheet_;
        }
      }
      /**
       * <pre>
       * Exactly only one of the properties below will be populated.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto worksheet = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.WorksheetEDocProto, EDoc.WorksheetEDocProto.Builder, EDoc.WorksheetEDocProtoOrBuilder> 
          getWorksheetFieldBuilder() {
        if (worksheetBuilder_ == null) {
          worksheetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.WorksheetEDocProto, EDoc.WorksheetEDocProto.Builder, EDoc.WorksheetEDocProtoOrBuilder>(
                  getWorksheet(),
                  getParentForChildren(),
                  isClean());
          worksheet_ = null;
        }
        return worksheetBuilder_;
      }

      private EDoc.ViewEDocProto view_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.ViewEDocProto, EDoc.ViewEDocProto.Builder, EDoc.ViewEDocProtoOrBuilder> viewBuilder_;
      /**
       * <code>optional .ViewEDocProto view = 3;</code>
       * @return Whether the view field is set.
       */
      public boolean hasView() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .ViewEDocProto view = 3;</code>
       * @return The view.
       */
      public EDoc.ViewEDocProto getView() {
        if (viewBuilder_ == null) {
          return view_ == null ? EDoc.ViewEDocProto.getDefaultInstance() : view_;
        } else {
          return viewBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ViewEDocProto view = 3;</code>
       */
      public Builder setView(EDoc.ViewEDocProto value) {
        if (viewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          view_ = value;
          onChanged();
        } else {
          viewBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ViewEDocProto view = 3;</code>
       */
      public Builder setView(
          EDoc.ViewEDocProto.Builder builderForValue) {
        if (viewBuilder_ == null) {
          view_ = builderForValue.build();
          onChanged();
        } else {
          viewBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ViewEDocProto view = 3;</code>
       */
      public Builder mergeView(EDoc.ViewEDocProto value) {
        if (viewBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
              view_ != null &&
              view_ != EDoc.ViewEDocProto.getDefaultInstance()) {
            view_ =
              EDoc.ViewEDocProto.newBuilder(view_).mergeFrom(value).buildPartial();
          } else {
            view_ = value;
          }
          onChanged();
        } else {
          viewBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ViewEDocProto view = 3;</code>
       */
      public Builder clearView() {
        if (viewBuilder_ == null) {
          view_ = null;
          onChanged();
        } else {
          viewBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .ViewEDocProto view = 3;</code>
       */
      public EDoc.ViewEDocProto.Builder getViewBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getViewFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ViewEDocProto view = 3;</code>
       */
      public EDoc.ViewEDocProtoOrBuilder getViewOrBuilder() {
        if (viewBuilder_ != null) {
          return viewBuilder_.getMessageOrBuilder();
        } else {
          return view_ == null ?
              EDoc.ViewEDocProto.getDefaultInstance() : view_;
        }
      }
      /**
       * <code>optional .ViewEDocProto view = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.ViewEDocProto, EDoc.ViewEDocProto.Builder, EDoc.ViewEDocProtoOrBuilder> 
          getViewFieldBuilder() {
        if (viewBuilder_ == null) {
          viewBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.ViewEDocProto, EDoc.ViewEDocProto.Builder, EDoc.ViewEDocProtoOrBuilder>(
                  getView(),
                  getParentForChildren(),
                  isClean());
          view_ = null;
        }
        return viewBuilder_;
      }

      private EDoc.AnswerEDocProto answer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.AnswerEDocProto, EDoc.AnswerEDocProto.Builder, EDoc.AnswerEDocProtoOrBuilder> answerBuilder_;
      /**
       * <code>optional .AnswerEDocProto answer = 4;</code>
       * @return Whether the answer field is set.
       */
      public boolean hasAnswer() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .AnswerEDocProto answer = 4;</code>
       * @return The answer.
       */
      public EDoc.AnswerEDocProto getAnswer() {
        if (answerBuilder_ == null) {
          return answer_ == null ? EDoc.AnswerEDocProto.getDefaultInstance() : answer_;
        } else {
          return answerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .AnswerEDocProto answer = 4;</code>
       */
      public Builder setAnswer(EDoc.AnswerEDocProto value) {
        if (answerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          answer_ = value;
          onChanged();
        } else {
          answerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .AnswerEDocProto answer = 4;</code>
       */
      public Builder setAnswer(
          EDoc.AnswerEDocProto.Builder builderForValue) {
        if (answerBuilder_ == null) {
          answer_ = builderForValue.build();
          onChanged();
        } else {
          answerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .AnswerEDocProto answer = 4;</code>
       */
      public Builder mergeAnswer(EDoc.AnswerEDocProto value) {
        if (answerBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
              answer_ != null &&
              answer_ != EDoc.AnswerEDocProto.getDefaultInstance()) {
            answer_ =
              EDoc.AnswerEDocProto.newBuilder(answer_).mergeFrom(value).buildPartial();
          } else {
            answer_ = value;
          }
          onChanged();
        } else {
          answerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .AnswerEDocProto answer = 4;</code>
       */
      public Builder clearAnswer() {
        if (answerBuilder_ == null) {
          answer_ = null;
          onChanged();
        } else {
          answerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .AnswerEDocProto answer = 4;</code>
       */
      public EDoc.AnswerEDocProto.Builder getAnswerBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getAnswerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .AnswerEDocProto answer = 4;</code>
       */
      public EDoc.AnswerEDocProtoOrBuilder getAnswerOrBuilder() {
        if (answerBuilder_ != null) {
          return answerBuilder_.getMessageOrBuilder();
        } else {
          return answer_ == null ?
              EDoc.AnswerEDocProto.getDefaultInstance() : answer_;
        }
      }
      /**
       * <code>optional .AnswerEDocProto answer = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.AnswerEDocProto, EDoc.AnswerEDocProto.Builder, EDoc.AnswerEDocProtoOrBuilder> 
          getAnswerFieldBuilder() {
        if (answerBuilder_ == null) {
          answerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.AnswerEDocProto, EDoc.AnswerEDocProto.Builder, EDoc.AnswerEDocProtoOrBuilder>(
                  getAnswer(),
                  getParentForChildren(),
                  isClean());
          answer_ = null;
        }
        return answerBuilder_;
      }

      private EDoc.PinboardEDocProto pinboard_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.PinboardEDocProto, EDoc.PinboardEDocProto.Builder, EDoc.PinboardEDocProtoOrBuilder> pinboardBuilder_;
      /**
       * <code>optional .PinboardEDocProto pinboard = 5;</code>
       * @return Whether the pinboard field is set.
       */
      public boolean hasPinboard() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional .PinboardEDocProto pinboard = 5;</code>
       * @return The pinboard.
       */
      public EDoc.PinboardEDocProto getPinboard() {
        if (pinboardBuilder_ == null) {
          return pinboard_ == null ? EDoc.PinboardEDocProto.getDefaultInstance() : pinboard_;
        } else {
          return pinboardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PinboardEDocProto pinboard = 5;</code>
       */
      public Builder setPinboard(EDoc.PinboardEDocProto value) {
        if (pinboardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pinboard_ = value;
          onChanged();
        } else {
          pinboardBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .PinboardEDocProto pinboard = 5;</code>
       */
      public Builder setPinboard(
          EDoc.PinboardEDocProto.Builder builderForValue) {
        if (pinboardBuilder_ == null) {
          pinboard_ = builderForValue.build();
          onChanged();
        } else {
          pinboardBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .PinboardEDocProto pinboard = 5;</code>
       */
      public Builder mergePinboard(EDoc.PinboardEDocProto value) {
        if (pinboardBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
              pinboard_ != null &&
              pinboard_ != EDoc.PinboardEDocProto.getDefaultInstance()) {
            pinboard_ =
              EDoc.PinboardEDocProto.newBuilder(pinboard_).mergeFrom(value).buildPartial();
          } else {
            pinboard_ = value;
          }
          onChanged();
        } else {
          pinboardBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .PinboardEDocProto pinboard = 5;</code>
       */
      public Builder clearPinboard() {
        if (pinboardBuilder_ == null) {
          pinboard_ = null;
          onChanged();
        } else {
          pinboardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .PinboardEDocProto pinboard = 5;</code>
       */
      public EDoc.PinboardEDocProto.Builder getPinboardBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getPinboardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PinboardEDocProto pinboard = 5;</code>
       */
      public EDoc.PinboardEDocProtoOrBuilder getPinboardOrBuilder() {
        if (pinboardBuilder_ != null) {
          return pinboardBuilder_.getMessageOrBuilder();
        } else {
          return pinboard_ == null ?
              EDoc.PinboardEDocProto.getDefaultInstance() : pinboard_;
        }
      }
      /**
       * <code>optional .PinboardEDocProto pinboard = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.PinboardEDocProto, EDoc.PinboardEDocProto.Builder, EDoc.PinboardEDocProtoOrBuilder> 
          getPinboardFieldBuilder() {
        if (pinboardBuilder_ == null) {
          pinboardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.PinboardEDocProto, EDoc.PinboardEDocProto.Builder, EDoc.PinboardEDocProtoOrBuilder>(
                  getPinboard(),
                  getParentForChildren(),
                  isClean());
          pinboard_ = null;
        }
        return pinboardBuilder_;
      }

      private EDoc.LogicalTableEDocProto table_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.LogicalTableEDocProto, EDoc.LogicalTableEDocProto.Builder, EDoc.LogicalTableEDocProtoOrBuilder> tableBuilder_;
      /**
       * <code>optional .LogicalTableEDocProto table = 6;</code>
       * @return Whether the table field is set.
       */
      public boolean hasTable() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .LogicalTableEDocProto table = 6;</code>
       * @return The table.
       */
      public EDoc.LogicalTableEDocProto getTable() {
        if (tableBuilder_ == null) {
          return table_ == null ? EDoc.LogicalTableEDocProto.getDefaultInstance() : table_;
        } else {
          return tableBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LogicalTableEDocProto table = 6;</code>
       */
      public Builder setTable(EDoc.LogicalTableEDocProto value) {
        if (tableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          table_ = value;
          onChanged();
        } else {
          tableBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .LogicalTableEDocProto table = 6;</code>
       */
      public Builder setTable(
          EDoc.LogicalTableEDocProto.Builder builderForValue) {
        if (tableBuilder_ == null) {
          table_ = builderForValue.build();
          onChanged();
        } else {
          tableBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .LogicalTableEDocProto table = 6;</code>
       */
      public Builder mergeTable(EDoc.LogicalTableEDocProto value) {
        if (tableBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
              table_ != null &&
              table_ != EDoc.LogicalTableEDocProto.getDefaultInstance()) {
            table_ =
              EDoc.LogicalTableEDocProto.newBuilder(table_).mergeFrom(value).buildPartial();
          } else {
            table_ = value;
          }
          onChanged();
        } else {
          tableBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .LogicalTableEDocProto table = 6;</code>
       */
      public Builder clearTable() {
        if (tableBuilder_ == null) {
          table_ = null;
          onChanged();
        } else {
          tableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .LogicalTableEDocProto table = 6;</code>
       */
      public EDoc.LogicalTableEDocProto.Builder getTableBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getTableFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LogicalTableEDocProto table = 6;</code>
       */
      public EDoc.LogicalTableEDocProtoOrBuilder getTableOrBuilder() {
        if (tableBuilder_ != null) {
          return tableBuilder_.getMessageOrBuilder();
        } else {
          return table_ == null ?
              EDoc.LogicalTableEDocProto.getDefaultInstance() : table_;
        }
      }
      /**
       * <code>optional .LogicalTableEDocProto table = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.LogicalTableEDocProto, EDoc.LogicalTableEDocProto.Builder, EDoc.LogicalTableEDocProtoOrBuilder> 
          getTableFieldBuilder() {
        if (tableBuilder_ == null) {
          tableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.LogicalTableEDocProto, EDoc.LogicalTableEDocProto.Builder, EDoc.LogicalTableEDocProtoOrBuilder>(
                  getTable(),
                  getParentForChildren(),
                  isClean());
          table_ = null;
        }
        return tableBuilder_;
      }

      private java.util.List<EDoc.RelationEDocProto> joins_ =
        java.util.Collections.emptyList();
      private void ensureJoinsIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          joins_ = new java.util.ArrayList<EDoc.RelationEDocProto>(joins_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.RelationEDocProto, EDoc.RelationEDocProto.Builder, EDoc.RelationEDocProtoOrBuilder> joinsBuilder_;

      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public java.util.List<EDoc.RelationEDocProto> getJoinsList() {
        if (joinsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(joins_);
        } else {
          return joinsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public int getJoinsCount() {
        if (joinsBuilder_ == null) {
          return joins_.size();
        } else {
          return joinsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public EDoc.RelationEDocProto getJoins(int index) {
        if (joinsBuilder_ == null) {
          return joins_.get(index);
        } else {
          return joinsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public Builder setJoins(
          int index, EDoc.RelationEDocProto value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.set(index, value);
          onChanged();
        } else {
          joinsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public Builder setJoins(
          int index, EDoc.RelationEDocProto.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.set(index, builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public Builder addJoins(EDoc.RelationEDocProto value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.add(value);
          onChanged();
        } else {
          joinsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public Builder addJoins(
          int index, EDoc.RelationEDocProto value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.add(index, value);
          onChanged();
        } else {
          joinsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public Builder addJoins(
          EDoc.RelationEDocProto.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.add(builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public Builder addJoins(
          int index, EDoc.RelationEDocProto.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.add(index, builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public Builder addAllJoins(
          java.lang.Iterable<? extends EDoc.RelationEDocProto> values) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, joins_);
          onChanged();
        } else {
          joinsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public Builder clearJoins() {
        if (joinsBuilder_ == null) {
          joins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          joinsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public Builder removeJoins(int index) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.remove(index);
          onChanged();
        } else {
          joinsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public EDoc.RelationEDocProto.Builder getJoinsBuilder(
          int index) {
        return getJoinsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public EDoc.RelationEDocProtoOrBuilder getJoinsOrBuilder(
          int index) {
        if (joinsBuilder_ == null) {
          return joins_.get(index);  } else {
          return joinsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public java.util.List<? extends EDoc.RelationEDocProtoOrBuilder> 
           getJoinsOrBuilderList() {
        if (joinsBuilder_ != null) {
          return joinsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(joins_);
        }
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public EDoc.RelationEDocProto.Builder addJoinsBuilder() {
        return getJoinsFieldBuilder().addBuilder(
            EDoc.RelationEDocProto.getDefaultInstance());
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public EDoc.RelationEDocProto.Builder addJoinsBuilder(
          int index) {
        return getJoinsFieldBuilder().addBuilder(
            index, EDoc.RelationEDocProto.getDefaultInstance());
      }
      /**
       * <code>repeated .RelationEDocProto joins = 7;</code>
       */
      public java.util.List<EDoc.RelationEDocProto.Builder> 
           getJoinsBuilderList() {
        return getJoinsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.RelationEDocProto, EDoc.RelationEDocProto.Builder, EDoc.RelationEDocProtoOrBuilder> 
          getJoinsFieldBuilder() {
        if (joinsBuilder_ == null) {
          joinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.RelationEDocProto, EDoc.RelationEDocProto.Builder, EDoc.RelationEDocProtoOrBuilder>(
                  joins_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          joins_ = null;
        }
        return joinsBuilder_;
      }

      private java.util.List<EDoc.ObjectPermissions> permissions_ =
        java.util.Collections.emptyList();
      private void ensurePermissionsIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          permissions_ = new java.util.ArrayList<EDoc.ObjectPermissions>(permissions_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.ObjectPermissions, EDoc.ObjectPermissions.Builder, EDoc.ObjectPermissionsOrBuilder> permissionsBuilder_;

      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public java.util.List<EDoc.ObjectPermissions> getPermissionsList() {
        if (permissionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(permissions_);
        } else {
          return permissionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public int getPermissionsCount() {
        if (permissionsBuilder_ == null) {
          return permissions_.size();
        } else {
          return permissionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public EDoc.ObjectPermissions getPermissions(int index) {
        if (permissionsBuilder_ == null) {
          return permissions_.get(index);
        } else {
          return permissionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public Builder setPermissions(
          int index, EDoc.ObjectPermissions value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.set(index, value);
          onChanged();
        } else {
          permissionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public Builder setPermissions(
          int index, EDoc.ObjectPermissions.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.set(index, builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public Builder addPermissions(EDoc.ObjectPermissions value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.add(value);
          onChanged();
        } else {
          permissionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public Builder addPermissions(
          int index, EDoc.ObjectPermissions value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.add(index, value);
          onChanged();
        } else {
          permissionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public Builder addPermissions(
          EDoc.ObjectPermissions.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.add(builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public Builder addPermissions(
          int index, EDoc.ObjectPermissions.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.add(index, builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public Builder addAllPermissions(
          java.lang.Iterable<? extends EDoc.ObjectPermissions> values) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, permissions_);
          onChanged();
        } else {
          permissionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public Builder clearPermissions() {
        if (permissionsBuilder_ == null) {
          permissions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          permissionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public Builder removePermissions(int index) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.remove(index);
          onChanged();
        } else {
          permissionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public EDoc.ObjectPermissions.Builder getPermissionsBuilder(
          int index) {
        return getPermissionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public EDoc.ObjectPermissionsOrBuilder getPermissionsOrBuilder(
          int index) {
        if (permissionsBuilder_ == null) {
          return permissions_.get(index);  } else {
          return permissionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public java.util.List<? extends EDoc.ObjectPermissionsOrBuilder> 
           getPermissionsOrBuilderList() {
        if (permissionsBuilder_ != null) {
          return permissionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(permissions_);
        }
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public EDoc.ObjectPermissions.Builder addPermissionsBuilder() {
        return getPermissionsFieldBuilder().addBuilder(
            EDoc.ObjectPermissions.getDefaultInstance());
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public EDoc.ObjectPermissions.Builder addPermissionsBuilder(
          int index) {
        return getPermissionsFieldBuilder().addBuilder(
            index, EDoc.ObjectPermissions.getDefaultInstance());
      }
      /**
       * <code>repeated .ObjectPermissions permissions = 8;</code>
       */
      public java.util.List<EDoc.ObjectPermissions.Builder> 
           getPermissionsBuilderList() {
        return getPermissionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.ObjectPermissions, EDoc.ObjectPermissions.Builder, EDoc.ObjectPermissionsOrBuilder> 
          getPermissionsFieldBuilder() {
        if (permissionsBuilder_ == null) {
          permissionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.ObjectPermissions, EDoc.ObjectPermissions.Builder, EDoc.ObjectPermissionsOrBuilder>(
                  permissions_,
                  ((bitField0_ & 0x00000080) != 0),
                  getParentForChildren(),
                  isClean());
          permissions_ = null;
        }
        return permissionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ObjectEDocProto)
    }

    // @@protoc_insertion_point(class_scope:ObjectEDocProto)
    private static final EDoc.ObjectEDocProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.ObjectEDocProto();
    }

    public static EDoc.ObjectEDocProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ObjectEDocProto>
        PARSER = new com.google.protobuf.AbstractParser<ObjectEDocProto>() {
      @java.lang.Override
      public ObjectEDocProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ObjectEDocProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ObjectEDocProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ObjectEDocProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.ObjectEDocProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WorksheetEDocProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:WorksheetEDocProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Display name of the worksheet.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * Display name of the worksheet.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Display name of the worksheet.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Description of the worksheet.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return Whether the description field is set.
     */
    boolean hasDescription();
    /**
     * <pre>
     * Description of the worksheet.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Description of the worksheet.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * All the tables referred in the worksheet.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    java.util.List<EDoc.Identity> 
        getTablesList();
    /**
     * <pre>
     * All the tables referred in the worksheet.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    EDoc.Identity getTables(int index);
    /**
     * <pre>
     * All the tables referred in the worksheet.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    int getTablesCount();
    /**
     * <pre>
     * All the tables referred in the worksheet.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    java.util.List<? extends EDoc.IdentityOrBuilder> 
        getTablesOrBuilderList();
    /**
     * <pre>
     * All the tables referred in the worksheet.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    EDoc.IdentityOrBuilder getTablesOrBuilder(
        int index);

    /**
     * <pre>
     * Joins that are used in creating of the worksheet.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<EDoc.Join> 
        getJoinsList();
    /**
     * <pre>
     * Joins that are used in creating of the worksheet.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.Join getJoins(int index);
    /**
     * <pre>
     * Joins that are used in creating of the worksheet.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    int getJoinsCount();
    /**
     * <pre>
     * Joins that are used in creating of the worksheet.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<? extends EDoc.JoinOrBuilder> 
        getJoinsOrBuilderList();
    /**
     * <pre>
     * Joins that are used in creating of the worksheet.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.JoinOrBuilder getJoinsOrBuilder(
        int index);

    /**
     * <pre>
     * Various manifestations of the tables in the worksheet.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<EDoc.TablePath> 
        getTablePathsList();
    /**
     * <pre>
     * Various manifestations of the tables in the worksheet.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.TablePath getTablePaths(int index);
    /**
     * <pre>
     * Various manifestations of the tables in the worksheet.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    int getTablePathsCount();
    /**
     * <pre>
     * Various manifestations of the tables in the worksheet.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<? extends EDoc.TablePathOrBuilder> 
        getTablePathsOrBuilderList();
    /**
     * <pre>
     * Various manifestations of the tables in the worksheet.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.TablePathOrBuilder getTablePathsOrBuilder(
        int index);

    /**
     * <pre>
     * Object manifestations defined in the worksheet.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<EDoc.Formula> 
        getFormulasList();
    /**
     * <pre>
     * Object manifestations defined in the worksheet.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.Formula getFormulas(int index);
    /**
     * <pre>
     * Object manifestations defined in the worksheet.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    int getFormulasCount();
    /**
     * <pre>
     * Object manifestations defined in the worksheet.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<? extends EDoc.FormulaOrBuilder> 
        getFormulasOrBuilderList();
    /**
     * <pre>
     * Object manifestations defined in the worksheet.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.FormulaOrBuilder getFormulasOrBuilder(
        int index);

    /**
     * <pre>
     * Filters defined in the worksheet.
     * The final result is the intersection/AND of all these filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 7;</code>
     */
    java.util.List<EDoc.Filter> 
        getFiltersList();
    /**
     * <pre>
     * Filters defined in the worksheet.
     * The final result is the intersection/AND of all these filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 7;</code>
     */
    EDoc.Filter getFilters(int index);
    /**
     * <pre>
     * Filters defined in the worksheet.
     * The final result is the intersection/AND of all these filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 7;</code>
     */
    int getFiltersCount();
    /**
     * <pre>
     * Filters defined in the worksheet.
     * The final result is the intersection/AND of all these filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 7;</code>
     */
    java.util.List<? extends EDoc.FilterOrBuilder> 
        getFiltersOrBuilderList();
    /**
     * <pre>
     * Filters defined in the worksheet.
     * The final result is the intersection/AND of all these filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 7;</code>
     */
    EDoc.FilterOrBuilder getFiltersOrBuilder(
        int index);

    /**
     * <pre>
     * All output columns.
     * </pre>
     *
     * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
     */
    java.util.List<EDoc.WorksheetEDocProto.WorksheetColumn> 
        getWorksheetColumnsList();
    /**
     * <pre>
     * All output columns.
     * </pre>
     *
     * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
     */
    EDoc.WorksheetEDocProto.WorksheetColumn getWorksheetColumns(int index);
    /**
     * <pre>
     * All output columns.
     * </pre>
     *
     * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
     */
    int getWorksheetColumnsCount();
    /**
     * <pre>
     * All output columns.
     * </pre>
     *
     * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
     */
    java.util.List<? extends EDoc.WorksheetEDocProto.WorksheetColumnOrBuilder> 
        getWorksheetColumnsOrBuilderList();
    /**
     * <pre>
     * All output columns.
     * </pre>
     *
     * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
     */
    EDoc.WorksheetEDocProto.WorksheetColumnOrBuilder getWorksheetColumnsOrBuilder(
        int index);

    /**
     * <pre>
     * Any special properties that can be specified by the user and which are
     * needed during query generation like bypassRLS, progressive v/s container.
     * </pre>
     *
     * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
     * @return Whether the properties field is set.
     */
    boolean hasProperties();
    /**
     * <pre>
     * Any special properties that can be specified by the user and which are
     * needed during query generation like bypassRLS, progressive v/s container.
     * </pre>
     *
     * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
     * @return The properties.
     */
    EDoc.WorksheetEDocProto.QueryProperties getProperties();
    /**
     * <pre>
     * Any special properties that can be specified by the user and which are
     * needed during query generation like bypassRLS, progressive v/s container.
     * </pre>
     *
     * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
     */
    EDoc.WorksheetEDocProto.QueryPropertiesOrBuilder getPropertiesOrBuilder();

    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 10;</code>
     */
    java.util.List<EDoc.RelationEDocProto> 
        getJoinsWithList();
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 10;</code>
     */
    EDoc.RelationEDocProto getJoinsWith(int index);
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 10;</code>
     */
    int getJoinsWithCount();
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 10;</code>
     */
    java.util.List<? extends EDoc.RelationEDocProtoOrBuilder> 
        getJoinsWithOrBuilderList();
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 10;</code>
     */
    EDoc.RelationEDocProtoOrBuilder getJoinsWithOrBuilder(
        int index);

    /**
     * <pre>
     * Generation Type of the worksheet.
     * </pre>
     *
     * <code>optional string generation_type = 11;</code>
     * @return Whether the generationType field is set.
     */
    boolean hasGenerationType();
    /**
     * <pre>
     * Generation Type of the worksheet.
     * </pre>
     *
     * <code>optional string generation_type = 11;</code>
     * @return The generationType.
     */
    java.lang.String getGenerationType();
    /**
     * <pre>
     * Generation Type of the worksheet.
     * </pre>
     *
     * <code>optional string generation_type = 11;</code>
     * @return The bytes for generationType.
     */
    com.google.protobuf.ByteString
        getGenerationTypeBytes();

    /**
     * <pre>
     * Lesson Plan Strings.
     * </pre>
     *
     * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
     */
    java.util.List<EDoc.LessonPlanEDocProto> 
        getLessonPlansList();
    /**
     * <pre>
     * Lesson Plan Strings.
     * </pre>
     *
     * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
     */
    EDoc.LessonPlanEDocProto getLessonPlans(int index);
    /**
     * <pre>
     * Lesson Plan Strings.
     * </pre>
     *
     * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
     */
    int getLessonPlansCount();
    /**
     * <pre>
     * Lesson Plan Strings.
     * </pre>
     *
     * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
     */
    java.util.List<? extends EDoc.LessonPlanEDocProtoOrBuilder> 
        getLessonPlansOrBuilderList();
    /**
     * <pre>
     * Lesson Plan Strings.
     * </pre>
     *
     * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
     */
    EDoc.LessonPlanEDocProtoOrBuilder getLessonPlansOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Proto definition of a worksheet doc.
   * </pre>
   *
   * Protobuf type {@code WorksheetEDocProto}
   */
  public static final class WorksheetEDocProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:WorksheetEDocProto)
      WorksheetEDocProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WorksheetEDocProto.newBuilder() to construct.
    private WorksheetEDocProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WorksheetEDocProto() {
      name_ = "";
      description_ = "";
      tables_ = java.util.Collections.emptyList();
      joins_ = java.util.Collections.emptyList();
      tablePaths_ = java.util.Collections.emptyList();
      formulas_ = java.util.Collections.emptyList();
      filters_ = java.util.Collections.emptyList();
      worksheetColumns_ = java.util.Collections.emptyList();
      joinsWith_ = java.util.Collections.emptyList();
      generationType_ = "";
      lessonPlans_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WorksheetEDocProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WorksheetEDocProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              description_ = bs;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                tables_ = new java.util.ArrayList<EDoc.Identity>();
                mutable_bitField0_ |= 0x00000004;
              }
              tables_.add(
                  input.readMessage(EDoc.Identity.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                joins_ = new java.util.ArrayList<EDoc.Join>();
                mutable_bitField0_ |= 0x00000008;
              }
              joins_.add(
                  input.readMessage(EDoc.Join.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                tablePaths_ = new java.util.ArrayList<EDoc.TablePath>();
                mutable_bitField0_ |= 0x00000010;
              }
              tablePaths_.add(
                  input.readMessage(EDoc.TablePath.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                formulas_ = new java.util.ArrayList<EDoc.Formula>();
                mutable_bitField0_ |= 0x00000020;
              }
              formulas_.add(
                  input.readMessage(EDoc.Formula.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                filters_ = new java.util.ArrayList<EDoc.Filter>();
                mutable_bitField0_ |= 0x00000040;
              }
              filters_.add(
                  input.readMessage(EDoc.Filter.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                worksheetColumns_ = new java.util.ArrayList<EDoc.WorksheetEDocProto.WorksheetColumn>();
                mutable_bitField0_ |= 0x00000080;
              }
              worksheetColumns_.add(
                  input.readMessage(EDoc.WorksheetEDocProto.WorksheetColumn.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              EDoc.WorksheetEDocProto.QueryProperties.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) != 0)) {
                subBuilder = properties_.toBuilder();
              }
              properties_ = input.readMessage(EDoc.WorksheetEDocProto.QueryProperties.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(properties_);
                properties_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                joinsWith_ = new java.util.ArrayList<EDoc.RelationEDocProto>();
                mutable_bitField0_ |= 0x00000200;
              }
              joinsWith_.add(
                  input.readMessage(EDoc.RelationEDocProto.PARSER, extensionRegistry));
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              generationType_ = bs;
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) != 0)) {
                lessonPlans_ = new java.util.ArrayList<EDoc.LessonPlanEDocProto>();
                mutable_bitField0_ |= 0x00000800;
              }
              lessonPlans_.add(
                  input.readMessage(EDoc.LessonPlanEDocProto.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          tables_ = java.util.Collections.unmodifiableList(tables_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          joins_ = java.util.Collections.unmodifiableList(joins_);
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          tablePaths_ = java.util.Collections.unmodifiableList(tablePaths_);
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          formulas_ = java.util.Collections.unmodifiableList(formulas_);
        }
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          filters_ = java.util.Collections.unmodifiableList(filters_);
        }
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          worksheetColumns_ = java.util.Collections.unmodifiableList(worksheetColumns_);
        }
        if (((mutable_bitField0_ & 0x00000200) != 0)) {
          joinsWith_ = java.util.Collections.unmodifiableList(joinsWith_);
        }
        if (((mutable_bitField0_ & 0x00000800) != 0)) {
          lessonPlans_ = java.util.Collections.unmodifiableList(lessonPlans_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_WorksheetEDocProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_WorksheetEDocProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.WorksheetEDocProto.class, EDoc.WorksheetEDocProto.Builder.class);
    }

    public interface QueryPropertiesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:WorksheetEDocProto.QueryProperties)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional bool is_bypass_rls = 1;</code>
       * @return Whether the isBypassRls field is set.
       */
      boolean hasIsBypassRls();
      /**
       * <code>optional bool is_bypass_rls = 1;</code>
       * @return The isBypassRls.
       */
      boolean getIsBypassRls();

      /**
       * <code>optional bool join_progressive = 2;</code>
       * @return Whether the joinProgressive field is set.
       */
      boolean hasJoinProgressive();
      /**
       * <code>optional bool join_progressive = 2;</code>
       * @return The joinProgressive.
       */
      boolean getJoinProgressive();
    }
    /**
     * <pre>
     * Specific properties for the worksheet that would be needed during query
     * generation.
     * </pre>
     *
     * Protobuf type {@code WorksheetEDocProto.QueryProperties}
     */
    public static final class QueryProperties extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:WorksheetEDocProto.QueryProperties)
        QueryPropertiesOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use QueryProperties.newBuilder() to construct.
      private QueryProperties(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private QueryProperties() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new QueryProperties();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private QueryProperties(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                isBypassRls_ = input.readBool();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                joinProgressive_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_WorksheetEDocProto_QueryProperties_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_WorksheetEDocProto_QueryProperties_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.WorksheetEDocProto.QueryProperties.class, EDoc.WorksheetEDocProto.QueryProperties.Builder.class);
      }

      private int bitField0_;
      public static final int IS_BYPASS_RLS_FIELD_NUMBER = 1;
      private boolean isBypassRls_;
      /**
       * <code>optional bool is_bypass_rls = 1;</code>
       * @return Whether the isBypassRls field is set.
       */
      @java.lang.Override
      public boolean hasIsBypassRls() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional bool is_bypass_rls = 1;</code>
       * @return The isBypassRls.
       */
      @java.lang.Override
      public boolean getIsBypassRls() {
        return isBypassRls_;
      }

      public static final int JOIN_PROGRESSIVE_FIELD_NUMBER = 2;
      private boolean joinProgressive_;
      /**
       * <code>optional bool join_progressive = 2;</code>
       * @return Whether the joinProgressive field is set.
       */
      @java.lang.Override
      public boolean hasJoinProgressive() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional bool join_progressive = 2;</code>
       * @return The joinProgressive.
       */
      @java.lang.Override
      public boolean getJoinProgressive() {
        return joinProgressive_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeBool(1, isBypassRls_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeBool(2, joinProgressive_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, isBypassRls_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, joinProgressive_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.WorksheetEDocProto.QueryProperties)) {
          return super.equals(obj);
        }
        EDoc.WorksheetEDocProto.QueryProperties other = (EDoc.WorksheetEDocProto.QueryProperties) obj;

        if (hasIsBypassRls() != other.hasIsBypassRls()) return false;
        if (hasIsBypassRls()) {
          if (getIsBypassRls()
              != other.getIsBypassRls()) return false;
        }
        if (hasJoinProgressive() != other.hasJoinProgressive()) return false;
        if (hasJoinProgressive()) {
          if (getJoinProgressive()
              != other.getJoinProgressive()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasIsBypassRls()) {
          hash = (37 * hash) + IS_BYPASS_RLS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsBypassRls());
        }
        if (hasJoinProgressive()) {
          hash = (37 * hash) + JOIN_PROGRESSIVE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getJoinProgressive());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.WorksheetEDocProto.QueryProperties parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.WorksheetEDocProto.QueryProperties parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.WorksheetEDocProto.QueryProperties parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.WorksheetEDocProto.QueryProperties parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.WorksheetEDocProto.QueryProperties parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.WorksheetEDocProto.QueryProperties parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.WorksheetEDocProto.QueryProperties parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.WorksheetEDocProto.QueryProperties parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.WorksheetEDocProto.QueryProperties parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.WorksheetEDocProto.QueryProperties parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.WorksheetEDocProto.QueryProperties parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.WorksheetEDocProto.QueryProperties parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.WorksheetEDocProto.QueryProperties prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Specific properties for the worksheet that would be needed during query
       * generation.
       * </pre>
       *
       * Protobuf type {@code WorksheetEDocProto.QueryProperties}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:WorksheetEDocProto.QueryProperties)
          EDoc.WorksheetEDocProto.QueryPropertiesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_WorksheetEDocProto_QueryProperties_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_WorksheetEDocProto_QueryProperties_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.WorksheetEDocProto.QueryProperties.class, EDoc.WorksheetEDocProto.QueryProperties.Builder.class);
        }

        // Construct using EDoc.WorksheetEDocProto.QueryProperties.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          isBypassRls_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          joinProgressive_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_WorksheetEDocProto_QueryProperties_descriptor;
        }

        @java.lang.Override
        public EDoc.WorksheetEDocProto.QueryProperties getDefaultInstanceForType() {
          return EDoc.WorksheetEDocProto.QueryProperties.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.WorksheetEDocProto.QueryProperties build() {
          EDoc.WorksheetEDocProto.QueryProperties result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.WorksheetEDocProto.QueryProperties buildPartial() {
          EDoc.WorksheetEDocProto.QueryProperties result = new EDoc.WorksheetEDocProto.QueryProperties(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.isBypassRls_ = isBypassRls_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.joinProgressive_ = joinProgressive_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.WorksheetEDocProto.QueryProperties) {
            return mergeFrom((EDoc.WorksheetEDocProto.QueryProperties)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.WorksheetEDocProto.QueryProperties other) {
          if (other == EDoc.WorksheetEDocProto.QueryProperties.getDefaultInstance()) return this;
          if (other.hasIsBypassRls()) {
            setIsBypassRls(other.getIsBypassRls());
          }
          if (other.hasJoinProgressive()) {
            setJoinProgressive(other.getJoinProgressive());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.WorksheetEDocProto.QueryProperties parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.WorksheetEDocProto.QueryProperties) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean isBypassRls_ ;
        /**
         * <code>optional bool is_bypass_rls = 1;</code>
         * @return Whether the isBypassRls field is set.
         */
        @java.lang.Override
        public boolean hasIsBypassRls() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional bool is_bypass_rls = 1;</code>
         * @return The isBypassRls.
         */
        @java.lang.Override
        public boolean getIsBypassRls() {
          return isBypassRls_;
        }
        /**
         * <code>optional bool is_bypass_rls = 1;</code>
         * @param value The isBypassRls to set.
         * @return This builder for chaining.
         */
        public Builder setIsBypassRls(boolean value) {
          bitField0_ |= 0x00000001;
          isBypassRls_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_bypass_rls = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearIsBypassRls() {
          bitField0_ = (bitField0_ & ~0x00000001);
          isBypassRls_ = false;
          onChanged();
          return this;
        }

        private boolean joinProgressive_ ;
        /**
         * <code>optional bool join_progressive = 2;</code>
         * @return Whether the joinProgressive field is set.
         */
        @java.lang.Override
        public boolean hasJoinProgressive() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional bool join_progressive = 2;</code>
         * @return The joinProgressive.
         */
        @java.lang.Override
        public boolean getJoinProgressive() {
          return joinProgressive_;
        }
        /**
         * <code>optional bool join_progressive = 2;</code>
         * @param value The joinProgressive to set.
         * @return This builder for chaining.
         */
        public Builder setJoinProgressive(boolean value) {
          bitField0_ |= 0x00000002;
          joinProgressive_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool join_progressive = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearJoinProgressive() {
          bitField0_ = (bitField0_ & ~0x00000002);
          joinProgressive_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:WorksheetEDocProto.QueryProperties)
      }

      // @@protoc_insertion_point(class_scope:WorksheetEDocProto.QueryProperties)
      private static final EDoc.WorksheetEDocProto.QueryProperties DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.WorksheetEDocProto.QueryProperties();
      }

      public static EDoc.WorksheetEDocProto.QueryProperties getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<QueryProperties>
          PARSER = new com.google.protobuf.AbstractParser<QueryProperties>() {
        @java.lang.Override
        public QueryProperties parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new QueryProperties(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<QueryProperties> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<QueryProperties> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.WorksheetEDocProto.QueryProperties getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface WorksheetColumnOrBuilder extends
        // @@protoc_insertion_point(interface_extends:WorksheetEDocProto.WorksheetColumn)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Name of the column as seen by users.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       * Name of the column as seen by users.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * Name of the column as seen by users.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * Description of the column.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return Whether the description field is set.
       */
      boolean hasDescription();
      /**
       * <pre>
       * Description of the column.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The description.
       */
      java.lang.String getDescription();
      /**
       * <pre>
       * Description of the column.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The bytes for description.
       */
      com.google.protobuf.ByteString
          getDescriptionBytes();

      /**
       * <pre>
       * ID of column of the table.
       * </pre>
       *
       * <code>optional string column_id = 3;</code>
       * @return Whether the columnId field is set.
       */
      boolean hasColumnId();
      /**
       * <pre>
       * ID of column of the table.
       * </pre>
       *
       * <code>optional string column_id = 3;</code>
       * @return The columnId.
       */
      java.lang.String getColumnId();
      /**
       * <pre>
       * ID of column of the table.
       * </pre>
       *
       * <code>optional string column_id = 3;</code>
       * @return The bytes for columnId.
       */
      com.google.protobuf.ByteString
          getColumnIdBytes();

      /**
       * <pre>
       * ID of formula to be used as a column.
       * </pre>
       *
       * <code>optional string formula_id = 4;</code>
       * @return Whether the formulaId field is set.
       */
      boolean hasFormulaId();
      /**
       * <pre>
       * ID of formula to be used as a column.
       * </pre>
       *
       * <code>optional string formula_id = 4;</code>
       * @return The formulaId.
       */
      java.lang.String getFormulaId();
      /**
       * <pre>
       * ID of formula to be used as a column.
       * </pre>
       *
       * <code>optional string formula_id = 4;</code>
       * @return The bytes for formulaId.
       */
      com.google.protobuf.ByteString
          getFormulaIdBytes();

      /**
       * <pre>
       * non-default properties to specify for the given column.
       * </pre>
       *
       * <code>optional .ColumnProperties properties = 5;</code>
       * @return Whether the properties field is set.
       */
      boolean hasProperties();
      /**
       * <pre>
       * non-default properties to specify for the given column.
       * </pre>
       *
       * <code>optional .ColumnProperties properties = 5;</code>
       * @return The properties.
       */
      EDoc.ColumnProperties getProperties();
      /**
       * <pre>
       * non-default properties to specify for the given column.
       * </pre>
       *
       * <code>optional .ColumnProperties properties = 5;</code>
       */
      EDoc.ColumnPropertiesOrBuilder getPropertiesOrBuilder();
    }
    /**
     * <pre>
     * All details for a worksheet column.
     * </pre>
     *
     * Protobuf type {@code WorksheetEDocProto.WorksheetColumn}
     */
    public static final class WorksheetColumn extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:WorksheetEDocProto.WorksheetColumn)
        WorksheetColumnOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use WorksheetColumn.newBuilder() to construct.
      private WorksheetColumn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private WorksheetColumn() {
        name_ = "";
        description_ = "";
        columnId_ = "";
        formulaId_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new WorksheetColumn();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private WorksheetColumn(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                description_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                columnId_ = bs;
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                formulaId_ = bs;
                break;
              }
              case 42: {
                EDoc.ColumnProperties.Builder subBuilder = null;
                if (((bitField0_ & 0x00000010) != 0)) {
                  subBuilder = properties_.toBuilder();
                }
                properties_ = input.readMessage(EDoc.ColumnProperties.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(properties_);
                  properties_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000010;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_WorksheetEDocProto_WorksheetColumn_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_WorksheetEDocProto_WorksheetColumn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.WorksheetEDocProto.WorksheetColumn.class, EDoc.WorksheetEDocProto.WorksheetColumn.Builder.class);
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * Name of the column as seen by users.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Name of the column as seen by users.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Name of the column as seen by users.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DESCRIPTION_FIELD_NUMBER = 2;
      private volatile java.lang.Object description_;
      /**
       * <pre>
       * Description of the column.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return Whether the description field is set.
       */
      @java.lang.Override
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Description of the column.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The description.
       */
      @java.lang.Override
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Description of the column.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The bytes for description.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int COLUMN_ID_FIELD_NUMBER = 3;
      private volatile java.lang.Object columnId_;
      /**
       * <pre>
       * ID of column of the table.
       * </pre>
       *
       * <code>optional string column_id = 3;</code>
       * @return Whether the columnId field is set.
       */
      @java.lang.Override
      public boolean hasColumnId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * ID of column of the table.
       * </pre>
       *
       * <code>optional string column_id = 3;</code>
       * @return The columnId.
       */
      @java.lang.Override
      public java.lang.String getColumnId() {
        java.lang.Object ref = columnId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            columnId_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * ID of column of the table.
       * </pre>
       *
       * <code>optional string column_id = 3;</code>
       * @return The bytes for columnId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getColumnIdBytes() {
        java.lang.Object ref = columnId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          columnId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FORMULA_ID_FIELD_NUMBER = 4;
      private volatile java.lang.Object formulaId_;
      /**
       * <pre>
       * ID of formula to be used as a column.
       * </pre>
       *
       * <code>optional string formula_id = 4;</code>
       * @return Whether the formulaId field is set.
       */
      @java.lang.Override
      public boolean hasFormulaId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * ID of formula to be used as a column.
       * </pre>
       *
       * <code>optional string formula_id = 4;</code>
       * @return The formulaId.
       */
      @java.lang.Override
      public java.lang.String getFormulaId() {
        java.lang.Object ref = formulaId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            formulaId_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * ID of formula to be used as a column.
       * </pre>
       *
       * <code>optional string formula_id = 4;</code>
       * @return The bytes for formulaId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFormulaIdBytes() {
        java.lang.Object ref = formulaId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          formulaId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PROPERTIES_FIELD_NUMBER = 5;
      private EDoc.ColumnProperties properties_;
      /**
       * <pre>
       * non-default properties to specify for the given column.
       * </pre>
       *
       * <code>optional .ColumnProperties properties = 5;</code>
       * @return Whether the properties field is set.
       */
      @java.lang.Override
      public boolean hasProperties() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * non-default properties to specify for the given column.
       * </pre>
       *
       * <code>optional .ColumnProperties properties = 5;</code>
       * @return The properties.
       */
      @java.lang.Override
      public EDoc.ColumnProperties getProperties() {
        return properties_ == null ? EDoc.ColumnProperties.getDefaultInstance() : properties_;
      }
      /**
       * <pre>
       * non-default properties to specify for the given column.
       * </pre>
       *
       * <code>optional .ColumnProperties properties = 5;</code>
       */
      @java.lang.Override
      public EDoc.ColumnPropertiesOrBuilder getPropertiesOrBuilder() {
        return properties_ == null ? EDoc.ColumnProperties.getDefaultInstance() : properties_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, columnId_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, formulaId_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeMessage(5, getProperties());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, columnId_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, formulaId_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getProperties());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.WorksheetEDocProto.WorksheetColumn)) {
          return super.equals(obj);
        }
        EDoc.WorksheetEDocProto.WorksheetColumn other = (EDoc.WorksheetEDocProto.WorksheetColumn) obj;

        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasDescription() != other.hasDescription()) return false;
        if (hasDescription()) {
          if (!getDescription()
              .equals(other.getDescription())) return false;
        }
        if (hasColumnId() != other.hasColumnId()) return false;
        if (hasColumnId()) {
          if (!getColumnId()
              .equals(other.getColumnId())) return false;
        }
        if (hasFormulaId() != other.hasFormulaId()) return false;
        if (hasFormulaId()) {
          if (!getFormulaId()
              .equals(other.getFormulaId())) return false;
        }
        if (hasProperties() != other.hasProperties()) return false;
        if (hasProperties()) {
          if (!getProperties()
              .equals(other.getProperties())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasDescription()) {
          hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getDescription().hashCode();
        }
        if (hasColumnId()) {
          hash = (37 * hash) + COLUMN_ID_FIELD_NUMBER;
          hash = (53 * hash) + getColumnId().hashCode();
        }
        if (hasFormulaId()) {
          hash = (37 * hash) + FORMULA_ID_FIELD_NUMBER;
          hash = (53 * hash) + getFormulaId().hashCode();
        }
        if (hasProperties()) {
          hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
          hash = (53 * hash) + getProperties().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.WorksheetEDocProto.WorksheetColumn parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.WorksheetEDocProto.WorksheetColumn parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.WorksheetEDocProto.WorksheetColumn parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.WorksheetEDocProto.WorksheetColumn parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.WorksheetEDocProto.WorksheetColumn parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.WorksheetEDocProto.WorksheetColumn parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.WorksheetEDocProto.WorksheetColumn parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.WorksheetEDocProto.WorksheetColumn parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.WorksheetEDocProto.WorksheetColumn parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.WorksheetEDocProto.WorksheetColumn parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.WorksheetEDocProto.WorksheetColumn parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.WorksheetEDocProto.WorksheetColumn parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.WorksheetEDocProto.WorksheetColumn prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * All details for a worksheet column.
       * </pre>
       *
       * Protobuf type {@code WorksheetEDocProto.WorksheetColumn}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:WorksheetEDocProto.WorksheetColumn)
          EDoc.WorksheetEDocProto.WorksheetColumnOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_WorksheetEDocProto_WorksheetColumn_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_WorksheetEDocProto_WorksheetColumn_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.WorksheetEDocProto.WorksheetColumn.class, EDoc.WorksheetEDocProto.WorksheetColumn.Builder.class);
        }

        // Construct using EDoc.WorksheetEDocProto.WorksheetColumn.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getPropertiesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          description_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          columnId_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          formulaId_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          if (propertiesBuilder_ == null) {
            properties_ = null;
          } else {
            propertiesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_WorksheetEDocProto_WorksheetColumn_descriptor;
        }

        @java.lang.Override
        public EDoc.WorksheetEDocProto.WorksheetColumn getDefaultInstanceForType() {
          return EDoc.WorksheetEDocProto.WorksheetColumn.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.WorksheetEDocProto.WorksheetColumn build() {
          EDoc.WorksheetEDocProto.WorksheetColumn result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.WorksheetEDocProto.WorksheetColumn buildPartial() {
          EDoc.WorksheetEDocProto.WorksheetColumn result = new EDoc.WorksheetEDocProto.WorksheetColumn(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.description_ = description_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            to_bitField0_ |= 0x00000004;
          }
          result.columnId_ = columnId_;
          if (((from_bitField0_ & 0x00000008) != 0)) {
            to_bitField0_ |= 0x00000008;
          }
          result.formulaId_ = formulaId_;
          if (((from_bitField0_ & 0x00000010) != 0)) {
            if (propertiesBuilder_ == null) {
              result.properties_ = properties_;
            } else {
              result.properties_ = propertiesBuilder_.build();
            }
            to_bitField0_ |= 0x00000010;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.WorksheetEDocProto.WorksheetColumn) {
            return mergeFrom((EDoc.WorksheetEDocProto.WorksheetColumn)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.WorksheetEDocProto.WorksheetColumn other) {
          if (other == EDoc.WorksheetEDocProto.WorksheetColumn.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasDescription()) {
            bitField0_ |= 0x00000002;
            description_ = other.description_;
            onChanged();
          }
          if (other.hasColumnId()) {
            bitField0_ |= 0x00000004;
            columnId_ = other.columnId_;
            onChanged();
          }
          if (other.hasFormulaId()) {
            bitField0_ |= 0x00000008;
            formulaId_ = other.formulaId_;
            onChanged();
          }
          if (other.hasProperties()) {
            mergeProperties(other.getProperties());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.WorksheetEDocProto.WorksheetColumn parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.WorksheetEDocProto.WorksheetColumn) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * Name of the column as seen by users.
         * </pre>
         *
         * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Name of the column as seen by users.
         * </pre>
         *
         * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Name of the column as seen by users.
         * </pre>
         *
         * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Name of the column as seen by users.
         * </pre>
         *
         * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the column as seen by users.
         * </pre>
         *
         * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the column as seen by users.
         * </pre>
         *
         * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object description_ = "";
        /**
         * <pre>
         * Description of the column.
         * </pre>
         *
         * <code>optional string description = 2;</code>
         * @return Whether the description field is set.
         */
        public boolean hasDescription() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Description of the column.
         * </pre>
         *
         * <code>optional string description = 2;</code>
         * @return The description.
         */
        public java.lang.String getDescription() {
          java.lang.Object ref = description_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              description_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Description of the column.
         * </pre>
         *
         * <code>optional string description = 2;</code>
         * @return The bytes for description.
         */
        public com.google.protobuf.ByteString
            getDescriptionBytes() {
          java.lang.Object ref = description_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            description_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Description of the column.
         * </pre>
         *
         * <code>optional string description = 2;</code>
         * @param value The description to set.
         * @return This builder for chaining.
         */
        public Builder setDescription(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          description_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Description of the column.
         * </pre>
         *
         * <code>optional string description = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearDescription() {
          bitField0_ = (bitField0_ & ~0x00000002);
          description_ = getDefaultInstance().getDescription();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Description of the column.
         * </pre>
         *
         * <code>optional string description = 2;</code>
         * @param value The bytes for description to set.
         * @return This builder for chaining.
         */
        public Builder setDescriptionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          description_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object columnId_ = "";
        /**
         * <pre>
         * ID of column of the table.
         * </pre>
         *
         * <code>optional string column_id = 3;</code>
         * @return Whether the columnId field is set.
         */
        public boolean hasColumnId() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * ID of column of the table.
         * </pre>
         *
         * <code>optional string column_id = 3;</code>
         * @return The columnId.
         */
        public java.lang.String getColumnId() {
          java.lang.Object ref = columnId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              columnId_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * ID of column of the table.
         * </pre>
         *
         * <code>optional string column_id = 3;</code>
         * @return The bytes for columnId.
         */
        public com.google.protobuf.ByteString
            getColumnIdBytes() {
          java.lang.Object ref = columnId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            columnId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * ID of column of the table.
         * </pre>
         *
         * <code>optional string column_id = 3;</code>
         * @param value The columnId to set.
         * @return This builder for chaining.
         */
        public Builder setColumnId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          columnId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * ID of column of the table.
         * </pre>
         *
         * <code>optional string column_id = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearColumnId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          columnId_ = getDefaultInstance().getColumnId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * ID of column of the table.
         * </pre>
         *
         * <code>optional string column_id = 3;</code>
         * @param value The bytes for columnId to set.
         * @return This builder for chaining.
         */
        public Builder setColumnIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          columnId_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object formulaId_ = "";
        /**
         * <pre>
         * ID of formula to be used as a column.
         * </pre>
         *
         * <code>optional string formula_id = 4;</code>
         * @return Whether the formulaId field is set.
         */
        public boolean hasFormulaId() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * ID of formula to be used as a column.
         * </pre>
         *
         * <code>optional string formula_id = 4;</code>
         * @return The formulaId.
         */
        public java.lang.String getFormulaId() {
          java.lang.Object ref = formulaId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              formulaId_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * ID of formula to be used as a column.
         * </pre>
         *
         * <code>optional string formula_id = 4;</code>
         * @return The bytes for formulaId.
         */
        public com.google.protobuf.ByteString
            getFormulaIdBytes() {
          java.lang.Object ref = formulaId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            formulaId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * ID of formula to be used as a column.
         * </pre>
         *
         * <code>optional string formula_id = 4;</code>
         * @param value The formulaId to set.
         * @return This builder for chaining.
         */
        public Builder setFormulaId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          formulaId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * ID of formula to be used as a column.
         * </pre>
         *
         * <code>optional string formula_id = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearFormulaId() {
          bitField0_ = (bitField0_ & ~0x00000008);
          formulaId_ = getDefaultInstance().getFormulaId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * ID of formula to be used as a column.
         * </pre>
         *
         * <code>optional string formula_id = 4;</code>
         * @param value The bytes for formulaId to set.
         * @return This builder for chaining.
         */
        public Builder setFormulaIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          formulaId_ = value;
          onChanged();
          return this;
        }

        private EDoc.ColumnProperties properties_;
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ColumnProperties, EDoc.ColumnProperties.Builder, EDoc.ColumnPropertiesOrBuilder> propertiesBuilder_;
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 5;</code>
         * @return Whether the properties field is set.
         */
        public boolean hasProperties() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 5;</code>
         * @return The properties.
         */
        public EDoc.ColumnProperties getProperties() {
          if (propertiesBuilder_ == null) {
            return properties_ == null ? EDoc.ColumnProperties.getDefaultInstance() : properties_;
          } else {
            return propertiesBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 5;</code>
         */
        public Builder setProperties(EDoc.ColumnProperties value) {
          if (propertiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            properties_ = value;
            onChanged();
          } else {
            propertiesBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 5;</code>
         */
        public Builder setProperties(
            EDoc.ColumnProperties.Builder builderForValue) {
          if (propertiesBuilder_ == null) {
            properties_ = builderForValue.build();
            onChanged();
          } else {
            propertiesBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 5;</code>
         */
        public Builder mergeProperties(EDoc.ColumnProperties value) {
          if (propertiesBuilder_ == null) {
            if (((bitField0_ & 0x00000010) != 0) &&
                properties_ != null &&
                properties_ != EDoc.ColumnProperties.getDefaultInstance()) {
              properties_ =
                EDoc.ColumnProperties.newBuilder(properties_).mergeFrom(value).buildPartial();
            } else {
              properties_ = value;
            }
            onChanged();
          } else {
            propertiesBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 5;</code>
         */
        public Builder clearProperties() {
          if (propertiesBuilder_ == null) {
            properties_ = null;
            onChanged();
          } else {
            propertiesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 5;</code>
         */
        public EDoc.ColumnProperties.Builder getPropertiesBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getPropertiesFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 5;</code>
         */
        public EDoc.ColumnPropertiesOrBuilder getPropertiesOrBuilder() {
          if (propertiesBuilder_ != null) {
            return propertiesBuilder_.getMessageOrBuilder();
          } else {
            return properties_ == null ?
                EDoc.ColumnProperties.getDefaultInstance() : properties_;
          }
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ColumnProperties, EDoc.ColumnProperties.Builder, EDoc.ColumnPropertiesOrBuilder> 
            getPropertiesFieldBuilder() {
          if (propertiesBuilder_ == null) {
            propertiesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                EDoc.ColumnProperties, EDoc.ColumnProperties.Builder, EDoc.ColumnPropertiesOrBuilder>(
                    getProperties(),
                    getParentForChildren(),
                    isClean());
            properties_ = null;
          }
          return propertiesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:WorksheetEDocProto.WorksheetColumn)
      }

      // @@protoc_insertion_point(class_scope:WorksheetEDocProto.WorksheetColumn)
      private static final EDoc.WorksheetEDocProto.WorksheetColumn DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.WorksheetEDocProto.WorksheetColumn();
      }

      public static EDoc.WorksheetEDocProto.WorksheetColumn getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<WorksheetColumn>
          PARSER = new com.google.protobuf.AbstractParser<WorksheetColumn>() {
        @java.lang.Override
        public WorksheetColumn parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new WorksheetColumn(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<WorksheetColumn> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<WorksheetColumn> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.WorksheetEDocProto.WorksheetColumn getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Display name of the worksheet.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Display name of the worksheet.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Display name of the worksheet.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * Description of the worksheet.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return Whether the description field is set.
     */
    @java.lang.Override
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Description of the worksheet.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Description of the worksheet.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TABLES_FIELD_NUMBER = 3;
    private java.util.List<EDoc.Identity> tables_;
    /**
     * <pre>
     * All the tables referred in the worksheet.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.Identity> getTablesList() {
      return tables_;
    }
    /**
     * <pre>
     * All the tables referred in the worksheet.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.IdentityOrBuilder> 
        getTablesOrBuilderList() {
      return tables_;
    }
    /**
     * <pre>
     * All the tables referred in the worksheet.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public int getTablesCount() {
      return tables_.size();
    }
    /**
     * <pre>
     * All the tables referred in the worksheet.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public EDoc.Identity getTables(int index) {
      return tables_.get(index);
    }
    /**
     * <pre>
     * All the tables referred in the worksheet.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public EDoc.IdentityOrBuilder getTablesOrBuilder(
        int index) {
      return tables_.get(index);
    }

    public static final int JOINS_FIELD_NUMBER = 4;
    private java.util.List<EDoc.Join> joins_;
    /**
     * <pre>
     * Joins that are used in creating of the worksheet.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.Join> getJoinsList() {
      return joins_;
    }
    /**
     * <pre>
     * Joins that are used in creating of the worksheet.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.JoinOrBuilder> 
        getJoinsOrBuilderList() {
      return joins_;
    }
    /**
     * <pre>
     * Joins that are used in creating of the worksheet.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public int getJoinsCount() {
      return joins_.size();
    }
    /**
     * <pre>
     * Joins that are used in creating of the worksheet.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.Join getJoins(int index) {
      return joins_.get(index);
    }
    /**
     * <pre>
     * Joins that are used in creating of the worksheet.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.JoinOrBuilder getJoinsOrBuilder(
        int index) {
      return joins_.get(index);
    }

    public static final int TABLE_PATHS_FIELD_NUMBER = 5;
    private java.util.List<EDoc.TablePath> tablePaths_;
    /**
     * <pre>
     * Various manifestations of the tables in the worksheet.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.TablePath> getTablePathsList() {
      return tablePaths_;
    }
    /**
     * <pre>
     * Various manifestations of the tables in the worksheet.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.TablePathOrBuilder> 
        getTablePathsOrBuilderList() {
      return tablePaths_;
    }
    /**
     * <pre>
     * Various manifestations of the tables in the worksheet.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public int getTablePathsCount() {
      return tablePaths_.size();
    }
    /**
     * <pre>
     * Various manifestations of the tables in the worksheet.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.TablePath getTablePaths(int index) {
      return tablePaths_.get(index);
    }
    /**
     * <pre>
     * Various manifestations of the tables in the worksheet.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.TablePathOrBuilder getTablePathsOrBuilder(
        int index) {
      return tablePaths_.get(index);
    }

    public static final int FORMULAS_FIELD_NUMBER = 6;
    private java.util.List<EDoc.Formula> formulas_;
    /**
     * <pre>
     * Object manifestations defined in the worksheet.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.Formula> getFormulasList() {
      return formulas_;
    }
    /**
     * <pre>
     * Object manifestations defined in the worksheet.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.FormulaOrBuilder> 
        getFormulasOrBuilderList() {
      return formulas_;
    }
    /**
     * <pre>
     * Object manifestations defined in the worksheet.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public int getFormulasCount() {
      return formulas_.size();
    }
    /**
     * <pre>
     * Object manifestations defined in the worksheet.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.Formula getFormulas(int index) {
      return formulas_.get(index);
    }
    /**
     * <pre>
     * Object manifestations defined in the worksheet.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.FormulaOrBuilder getFormulasOrBuilder(
        int index) {
      return formulas_.get(index);
    }

    public static final int FILTERS_FIELD_NUMBER = 7;
    private java.util.List<EDoc.Filter> filters_;
    /**
     * <pre>
     * Filters defined in the worksheet.
     * The final result is the intersection/AND of all these filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 7;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.Filter> getFiltersList() {
      return filters_;
    }
    /**
     * <pre>
     * Filters defined in the worksheet.
     * The final result is the intersection/AND of all these filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.FilterOrBuilder> 
        getFiltersOrBuilderList() {
      return filters_;
    }
    /**
     * <pre>
     * Filters defined in the worksheet.
     * The final result is the intersection/AND of all these filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 7;</code>
     */
    @java.lang.Override
    public int getFiltersCount() {
      return filters_.size();
    }
    /**
     * <pre>
     * Filters defined in the worksheet.
     * The final result is the intersection/AND of all these filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 7;</code>
     */
    @java.lang.Override
    public EDoc.Filter getFilters(int index) {
      return filters_.get(index);
    }
    /**
     * <pre>
     * Filters defined in the worksheet.
     * The final result is the intersection/AND of all these filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 7;</code>
     */
    @java.lang.Override
    public EDoc.FilterOrBuilder getFiltersOrBuilder(
        int index) {
      return filters_.get(index);
    }

    public static final int WORKSHEET_COLUMNS_FIELD_NUMBER = 8;
    private java.util.List<EDoc.WorksheetEDocProto.WorksheetColumn> worksheetColumns_;
    /**
     * <pre>
     * All output columns.
     * </pre>
     *
     * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.WorksheetEDocProto.WorksheetColumn> getWorksheetColumnsList() {
      return worksheetColumns_;
    }
    /**
     * <pre>
     * All output columns.
     * </pre>
     *
     * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.WorksheetEDocProto.WorksheetColumnOrBuilder> 
        getWorksheetColumnsOrBuilderList() {
      return worksheetColumns_;
    }
    /**
     * <pre>
     * All output columns.
     * </pre>
     *
     * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
     */
    @java.lang.Override
    public int getWorksheetColumnsCount() {
      return worksheetColumns_.size();
    }
    /**
     * <pre>
     * All output columns.
     * </pre>
     *
     * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
     */
    @java.lang.Override
    public EDoc.WorksheetEDocProto.WorksheetColumn getWorksheetColumns(int index) {
      return worksheetColumns_.get(index);
    }
    /**
     * <pre>
     * All output columns.
     * </pre>
     *
     * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
     */
    @java.lang.Override
    public EDoc.WorksheetEDocProto.WorksheetColumnOrBuilder getWorksheetColumnsOrBuilder(
        int index) {
      return worksheetColumns_.get(index);
    }

    public static final int PROPERTIES_FIELD_NUMBER = 9;
    private EDoc.WorksheetEDocProto.QueryProperties properties_;
    /**
     * <pre>
     * Any special properties that can be specified by the user and which are
     * needed during query generation like bypassRLS, progressive v/s container.
     * </pre>
     *
     * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
     * @return Whether the properties field is set.
     */
    @java.lang.Override
    public boolean hasProperties() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Any special properties that can be specified by the user and which are
     * needed during query generation like bypassRLS, progressive v/s container.
     * </pre>
     *
     * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
     * @return The properties.
     */
    @java.lang.Override
    public EDoc.WorksheetEDocProto.QueryProperties getProperties() {
      return properties_ == null ? EDoc.WorksheetEDocProto.QueryProperties.getDefaultInstance() : properties_;
    }
    /**
     * <pre>
     * Any special properties that can be specified by the user and which are
     * needed during query generation like bypassRLS, progressive v/s container.
     * </pre>
     *
     * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
     */
    @java.lang.Override
    public EDoc.WorksheetEDocProto.QueryPropertiesOrBuilder getPropertiesOrBuilder() {
      return properties_ == null ? EDoc.WorksheetEDocProto.QueryProperties.getDefaultInstance() : properties_;
    }

    public static final int JOINS_WITH_FIELD_NUMBER = 10;
    private java.util.List<EDoc.RelationEDocProto> joinsWith_;
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 10;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.RelationEDocProto> getJoinsWithList() {
      return joinsWith_;
    }
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 10;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.RelationEDocProtoOrBuilder> 
        getJoinsWithOrBuilderList() {
      return joinsWith_;
    }
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 10;</code>
     */
    @java.lang.Override
    public int getJoinsWithCount() {
      return joinsWith_.size();
    }
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 10;</code>
     */
    @java.lang.Override
    public EDoc.RelationEDocProto getJoinsWith(int index) {
      return joinsWith_.get(index);
    }
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 10;</code>
     */
    @java.lang.Override
    public EDoc.RelationEDocProtoOrBuilder getJoinsWithOrBuilder(
        int index) {
      return joinsWith_.get(index);
    }

    public static final int GENERATION_TYPE_FIELD_NUMBER = 11;
    private volatile java.lang.Object generationType_;
    /**
     * <pre>
     * Generation Type of the worksheet.
     * </pre>
     *
     * <code>optional string generation_type = 11;</code>
     * @return Whether the generationType field is set.
     */
    @java.lang.Override
    public boolean hasGenerationType() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Generation Type of the worksheet.
     * </pre>
     *
     * <code>optional string generation_type = 11;</code>
     * @return The generationType.
     */
    @java.lang.Override
    public java.lang.String getGenerationType() {
      java.lang.Object ref = generationType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          generationType_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Generation Type of the worksheet.
     * </pre>
     *
     * <code>optional string generation_type = 11;</code>
     * @return The bytes for generationType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGenerationTypeBytes() {
      java.lang.Object ref = generationType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        generationType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LESSON_PLANS_FIELD_NUMBER = 12;
    private java.util.List<EDoc.LessonPlanEDocProto> lessonPlans_;
    /**
     * <pre>
     * Lesson Plan Strings.
     * </pre>
     *
     * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.LessonPlanEDocProto> getLessonPlansList() {
      return lessonPlans_;
    }
    /**
     * <pre>
     * Lesson Plan Strings.
     * </pre>
     *
     * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.LessonPlanEDocProtoOrBuilder> 
        getLessonPlansOrBuilderList() {
      return lessonPlans_;
    }
    /**
     * <pre>
     * Lesson Plan Strings.
     * </pre>
     *
     * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
     */
    @java.lang.Override
    public int getLessonPlansCount() {
      return lessonPlans_.size();
    }
    /**
     * <pre>
     * Lesson Plan Strings.
     * </pre>
     *
     * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
     */
    @java.lang.Override
    public EDoc.LessonPlanEDocProto getLessonPlans(int index) {
      return lessonPlans_.get(index);
    }
    /**
     * <pre>
     * Lesson Plan Strings.
     * </pre>
     *
     * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
     */
    @java.lang.Override
    public EDoc.LessonPlanEDocProtoOrBuilder getLessonPlansOrBuilder(
        int index) {
      return lessonPlans_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
      }
      for (int i = 0; i < tables_.size(); i++) {
        output.writeMessage(3, tables_.get(i));
      }
      for (int i = 0; i < joins_.size(); i++) {
        output.writeMessage(4, joins_.get(i));
      }
      for (int i = 0; i < tablePaths_.size(); i++) {
        output.writeMessage(5, tablePaths_.get(i));
      }
      for (int i = 0; i < formulas_.size(); i++) {
        output.writeMessage(6, formulas_.get(i));
      }
      for (int i = 0; i < filters_.size(); i++) {
        output.writeMessage(7, filters_.get(i));
      }
      for (int i = 0; i < worksheetColumns_.size(); i++) {
        output.writeMessage(8, worksheetColumns_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(9, getProperties());
      }
      for (int i = 0; i < joinsWith_.size(); i++) {
        output.writeMessage(10, joinsWith_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, generationType_);
      }
      for (int i = 0; i < lessonPlans_.size(); i++) {
        output.writeMessage(12, lessonPlans_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
      }
      for (int i = 0; i < tables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tables_.get(i));
      }
      for (int i = 0; i < joins_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, joins_.get(i));
      }
      for (int i = 0; i < tablePaths_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, tablePaths_.get(i));
      }
      for (int i = 0; i < formulas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, formulas_.get(i));
      }
      for (int i = 0; i < filters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, filters_.get(i));
      }
      for (int i = 0; i < worksheetColumns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, worksheetColumns_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getProperties());
      }
      for (int i = 0; i < joinsWith_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, joinsWith_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, generationType_);
      }
      for (int i = 0; i < lessonPlans_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, lessonPlans_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.WorksheetEDocProto)) {
        return super.equals(obj);
      }
      EDoc.WorksheetEDocProto other = (EDoc.WorksheetEDocProto) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasDescription() != other.hasDescription()) return false;
      if (hasDescription()) {
        if (!getDescription()
            .equals(other.getDescription())) return false;
      }
      if (!getTablesList()
          .equals(other.getTablesList())) return false;
      if (!getJoinsList()
          .equals(other.getJoinsList())) return false;
      if (!getTablePathsList()
          .equals(other.getTablePathsList())) return false;
      if (!getFormulasList()
          .equals(other.getFormulasList())) return false;
      if (!getFiltersList()
          .equals(other.getFiltersList())) return false;
      if (!getWorksheetColumnsList()
          .equals(other.getWorksheetColumnsList())) return false;
      if (hasProperties() != other.hasProperties()) return false;
      if (hasProperties()) {
        if (!getProperties()
            .equals(other.getProperties())) return false;
      }
      if (!getJoinsWithList()
          .equals(other.getJoinsWithList())) return false;
      if (hasGenerationType() != other.hasGenerationType()) return false;
      if (hasGenerationType()) {
        if (!getGenerationType()
            .equals(other.getGenerationType())) return false;
      }
      if (!getLessonPlansList()
          .equals(other.getLessonPlansList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasDescription()) {
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription().hashCode();
      }
      if (getTablesCount() > 0) {
        hash = (37 * hash) + TABLES_FIELD_NUMBER;
        hash = (53 * hash) + getTablesList().hashCode();
      }
      if (getJoinsCount() > 0) {
        hash = (37 * hash) + JOINS_FIELD_NUMBER;
        hash = (53 * hash) + getJoinsList().hashCode();
      }
      if (getTablePathsCount() > 0) {
        hash = (37 * hash) + TABLE_PATHS_FIELD_NUMBER;
        hash = (53 * hash) + getTablePathsList().hashCode();
      }
      if (getFormulasCount() > 0) {
        hash = (37 * hash) + FORMULAS_FIELD_NUMBER;
        hash = (53 * hash) + getFormulasList().hashCode();
      }
      if (getFiltersCount() > 0) {
        hash = (37 * hash) + FILTERS_FIELD_NUMBER;
        hash = (53 * hash) + getFiltersList().hashCode();
      }
      if (getWorksheetColumnsCount() > 0) {
        hash = (37 * hash) + WORKSHEET_COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getWorksheetColumnsList().hashCode();
      }
      if (hasProperties()) {
        hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
        hash = (53 * hash) + getProperties().hashCode();
      }
      if (getJoinsWithCount() > 0) {
        hash = (37 * hash) + JOINS_WITH_FIELD_NUMBER;
        hash = (53 * hash) + getJoinsWithList().hashCode();
      }
      if (hasGenerationType()) {
        hash = (37 * hash) + GENERATION_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getGenerationType().hashCode();
      }
      if (getLessonPlansCount() > 0) {
        hash = (37 * hash) + LESSON_PLANS_FIELD_NUMBER;
        hash = (53 * hash) + getLessonPlansList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.WorksheetEDocProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.WorksheetEDocProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.WorksheetEDocProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.WorksheetEDocProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.WorksheetEDocProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.WorksheetEDocProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.WorksheetEDocProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.WorksheetEDocProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.WorksheetEDocProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.WorksheetEDocProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.WorksheetEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.WorksheetEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.WorksheetEDocProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Proto definition of a worksheet doc.
     * </pre>
     *
     * Protobuf type {@code WorksheetEDocProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:WorksheetEDocProto)
        EDoc.WorksheetEDocProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_WorksheetEDocProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_WorksheetEDocProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.WorksheetEDocProto.class, EDoc.WorksheetEDocProto.Builder.class);
      }

      // Construct using EDoc.WorksheetEDocProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTablesFieldBuilder();
          getJoinsFieldBuilder();
          getTablePathsFieldBuilder();
          getFormulasFieldBuilder();
          getFiltersFieldBuilder();
          getWorksheetColumnsFieldBuilder();
          getPropertiesFieldBuilder();
          getJoinsWithFieldBuilder();
          getLessonPlansFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          tablesBuilder_.clear();
        }
        if (joinsBuilder_ == null) {
          joins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          joinsBuilder_.clear();
        }
        if (tablePathsBuilder_ == null) {
          tablePaths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          tablePathsBuilder_.clear();
        }
        if (formulasBuilder_ == null) {
          formulas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          formulasBuilder_.clear();
        }
        if (filtersBuilder_ == null) {
          filters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          filtersBuilder_.clear();
        }
        if (worksheetColumnsBuilder_ == null) {
          worksheetColumns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          worksheetColumnsBuilder_.clear();
        }
        if (propertiesBuilder_ == null) {
          properties_ = null;
        } else {
          propertiesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (joinsWithBuilder_ == null) {
          joinsWith_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          joinsWithBuilder_.clear();
        }
        generationType_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        if (lessonPlansBuilder_ == null) {
          lessonPlans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          lessonPlansBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_WorksheetEDocProto_descriptor;
      }

      @java.lang.Override
      public EDoc.WorksheetEDocProto getDefaultInstanceForType() {
        return EDoc.WorksheetEDocProto.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.WorksheetEDocProto build() {
        EDoc.WorksheetEDocProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.WorksheetEDocProto buildPartial() {
        EDoc.WorksheetEDocProto result = new EDoc.WorksheetEDocProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.description_ = description_;
        if (tablesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            tables_ = java.util.Collections.unmodifiableList(tables_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.tables_ = tables_;
        } else {
          result.tables_ = tablesBuilder_.build();
        }
        if (joinsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            joins_ = java.util.Collections.unmodifiableList(joins_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.joins_ = joins_;
        } else {
          result.joins_ = joinsBuilder_.build();
        }
        if (tablePathsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            tablePaths_ = java.util.Collections.unmodifiableList(tablePaths_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.tablePaths_ = tablePaths_;
        } else {
          result.tablePaths_ = tablePathsBuilder_.build();
        }
        if (formulasBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            formulas_ = java.util.Collections.unmodifiableList(formulas_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.formulas_ = formulas_;
        } else {
          result.formulas_ = formulasBuilder_.build();
        }
        if (filtersBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            filters_ = java.util.Collections.unmodifiableList(filters_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.filters_ = filters_;
        } else {
          result.filters_ = filtersBuilder_.build();
        }
        if (worksheetColumnsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)) {
            worksheetColumns_ = java.util.Collections.unmodifiableList(worksheetColumns_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.worksheetColumns_ = worksheetColumns_;
        } else {
          result.worksheetColumns_ = worksheetColumnsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          if (propertiesBuilder_ == null) {
            result.properties_ = properties_;
          } else {
            result.properties_ = propertiesBuilder_.build();
          }
          to_bitField0_ |= 0x00000004;
        }
        if (joinsWithBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0)) {
            joinsWith_ = java.util.Collections.unmodifiableList(joinsWith_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.joinsWith_ = joinsWith_;
        } else {
          result.joinsWith_ = joinsWithBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.generationType_ = generationType_;
        if (lessonPlansBuilder_ == null) {
          if (((bitField0_ & 0x00000800) != 0)) {
            lessonPlans_ = java.util.Collections.unmodifiableList(lessonPlans_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.lessonPlans_ = lessonPlans_;
        } else {
          result.lessonPlans_ = lessonPlansBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.WorksheetEDocProto) {
          return mergeFrom((EDoc.WorksheetEDocProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.WorksheetEDocProto other) {
        if (other == EDoc.WorksheetEDocProto.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000002;
          description_ = other.description_;
          onChanged();
        }
        if (tablesBuilder_ == null) {
          if (!other.tables_.isEmpty()) {
            if (tables_.isEmpty()) {
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTablesIsMutable();
              tables_.addAll(other.tables_);
            }
            onChanged();
          }
        } else {
          if (!other.tables_.isEmpty()) {
            if (tablesBuilder_.isEmpty()) {
              tablesBuilder_.dispose();
              tablesBuilder_ = null;
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000004);
              tablesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTablesFieldBuilder() : null;
            } else {
              tablesBuilder_.addAllMessages(other.tables_);
            }
          }
        }
        if (joinsBuilder_ == null) {
          if (!other.joins_.isEmpty()) {
            if (joins_.isEmpty()) {
              joins_ = other.joins_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureJoinsIsMutable();
              joins_.addAll(other.joins_);
            }
            onChanged();
          }
        } else {
          if (!other.joins_.isEmpty()) {
            if (joinsBuilder_.isEmpty()) {
              joinsBuilder_.dispose();
              joinsBuilder_ = null;
              joins_ = other.joins_;
              bitField0_ = (bitField0_ & ~0x00000008);
              joinsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getJoinsFieldBuilder() : null;
            } else {
              joinsBuilder_.addAllMessages(other.joins_);
            }
          }
        }
        if (tablePathsBuilder_ == null) {
          if (!other.tablePaths_.isEmpty()) {
            if (tablePaths_.isEmpty()) {
              tablePaths_ = other.tablePaths_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureTablePathsIsMutable();
              tablePaths_.addAll(other.tablePaths_);
            }
            onChanged();
          }
        } else {
          if (!other.tablePaths_.isEmpty()) {
            if (tablePathsBuilder_.isEmpty()) {
              tablePathsBuilder_.dispose();
              tablePathsBuilder_ = null;
              tablePaths_ = other.tablePaths_;
              bitField0_ = (bitField0_ & ~0x00000010);
              tablePathsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTablePathsFieldBuilder() : null;
            } else {
              tablePathsBuilder_.addAllMessages(other.tablePaths_);
            }
          }
        }
        if (formulasBuilder_ == null) {
          if (!other.formulas_.isEmpty()) {
            if (formulas_.isEmpty()) {
              formulas_ = other.formulas_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureFormulasIsMutable();
              formulas_.addAll(other.formulas_);
            }
            onChanged();
          }
        } else {
          if (!other.formulas_.isEmpty()) {
            if (formulasBuilder_.isEmpty()) {
              formulasBuilder_.dispose();
              formulasBuilder_ = null;
              formulas_ = other.formulas_;
              bitField0_ = (bitField0_ & ~0x00000020);
              formulasBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFormulasFieldBuilder() : null;
            } else {
              formulasBuilder_.addAllMessages(other.formulas_);
            }
          }
        }
        if (filtersBuilder_ == null) {
          if (!other.filters_.isEmpty()) {
            if (filters_.isEmpty()) {
              filters_ = other.filters_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFiltersIsMutable();
              filters_.addAll(other.filters_);
            }
            onChanged();
          }
        } else {
          if (!other.filters_.isEmpty()) {
            if (filtersBuilder_.isEmpty()) {
              filtersBuilder_.dispose();
              filtersBuilder_ = null;
              filters_ = other.filters_;
              bitField0_ = (bitField0_ & ~0x00000040);
              filtersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFiltersFieldBuilder() : null;
            } else {
              filtersBuilder_.addAllMessages(other.filters_);
            }
          }
        }
        if (worksheetColumnsBuilder_ == null) {
          if (!other.worksheetColumns_.isEmpty()) {
            if (worksheetColumns_.isEmpty()) {
              worksheetColumns_ = other.worksheetColumns_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureWorksheetColumnsIsMutable();
              worksheetColumns_.addAll(other.worksheetColumns_);
            }
            onChanged();
          }
        } else {
          if (!other.worksheetColumns_.isEmpty()) {
            if (worksheetColumnsBuilder_.isEmpty()) {
              worksheetColumnsBuilder_.dispose();
              worksheetColumnsBuilder_ = null;
              worksheetColumns_ = other.worksheetColumns_;
              bitField0_ = (bitField0_ & ~0x00000080);
              worksheetColumnsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWorksheetColumnsFieldBuilder() : null;
            } else {
              worksheetColumnsBuilder_.addAllMessages(other.worksheetColumns_);
            }
          }
        }
        if (other.hasProperties()) {
          mergeProperties(other.getProperties());
        }
        if (joinsWithBuilder_ == null) {
          if (!other.joinsWith_.isEmpty()) {
            if (joinsWith_.isEmpty()) {
              joinsWith_ = other.joinsWith_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureJoinsWithIsMutable();
              joinsWith_.addAll(other.joinsWith_);
            }
            onChanged();
          }
        } else {
          if (!other.joinsWith_.isEmpty()) {
            if (joinsWithBuilder_.isEmpty()) {
              joinsWithBuilder_.dispose();
              joinsWithBuilder_ = null;
              joinsWith_ = other.joinsWith_;
              bitField0_ = (bitField0_ & ~0x00000200);
              joinsWithBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getJoinsWithFieldBuilder() : null;
            } else {
              joinsWithBuilder_.addAllMessages(other.joinsWith_);
            }
          }
        }
        if (other.hasGenerationType()) {
          bitField0_ |= 0x00000400;
          generationType_ = other.generationType_;
          onChanged();
        }
        if (lessonPlansBuilder_ == null) {
          if (!other.lessonPlans_.isEmpty()) {
            if (lessonPlans_.isEmpty()) {
              lessonPlans_ = other.lessonPlans_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureLessonPlansIsMutable();
              lessonPlans_.addAll(other.lessonPlans_);
            }
            onChanged();
          }
        } else {
          if (!other.lessonPlans_.isEmpty()) {
            if (lessonPlansBuilder_.isEmpty()) {
              lessonPlansBuilder_.dispose();
              lessonPlansBuilder_ = null;
              lessonPlans_ = other.lessonPlans_;
              bitField0_ = (bitField0_ & ~0x00000800);
              lessonPlansBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLessonPlansFieldBuilder() : null;
            } else {
              lessonPlansBuilder_.addAllMessages(other.lessonPlans_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.WorksheetEDocProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.WorksheetEDocProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Display name of the worksheet.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Display name of the worksheet.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Display name of the worksheet.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Display name of the worksheet.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Display name of the worksheet.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Display name of the worksheet.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * Description of the worksheet.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return Whether the description field is set.
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Description of the worksheet.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Description of the worksheet.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Description of the worksheet.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Description of the worksheet.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Description of the worksheet.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }

      private java.util.List<EDoc.Identity> tables_ =
        java.util.Collections.emptyList();
      private void ensureTablesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          tables_ = new java.util.ArrayList<EDoc.Identity>(tables_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> tablesBuilder_;

      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public java.util.List<EDoc.Identity> getTablesList() {
        if (tablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tables_);
        } else {
          return tablesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public int getTablesCount() {
        if (tablesBuilder_ == null) {
          return tables_.size();
        } else {
          return tablesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.Identity getTables(int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);
        } else {
          return tablesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder setTables(
          int index, EDoc.Identity value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.set(index, value);
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder setTables(
          int index, EDoc.Identity.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.set(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addTables(EDoc.Identity value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addTables(
          int index, EDoc.Identity value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(index, value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addTables(
          EDoc.Identity.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addTables(
          int index, EDoc.Identity.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addAllTables(
          java.lang.Iterable<? extends EDoc.Identity> values) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tables_);
          onChanged();
        } else {
          tablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder clearTables() {
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          tablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder removeTables(int index) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.remove(index);
          onChanged();
        } else {
          tablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.Identity.Builder getTablesBuilder(
          int index) {
        return getTablesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.IdentityOrBuilder getTablesOrBuilder(
          int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);  } else {
          return tablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public java.util.List<? extends EDoc.IdentityOrBuilder> 
           getTablesOrBuilderList() {
        if (tablesBuilder_ != null) {
          return tablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tables_);
        }
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.Identity.Builder addTablesBuilder() {
        return getTablesFieldBuilder().addBuilder(
            EDoc.Identity.getDefaultInstance());
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.Identity.Builder addTablesBuilder(
          int index) {
        return getTablesFieldBuilder().addBuilder(
            index, EDoc.Identity.getDefaultInstance());
      }
      /**
       * <pre>
       * All the tables referred in the worksheet.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public java.util.List<EDoc.Identity.Builder> 
           getTablesBuilderList() {
        return getTablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> 
          getTablesFieldBuilder() {
        if (tablesBuilder_ == null) {
          tablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder>(
                  tables_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          tables_ = null;
        }
        return tablesBuilder_;
      }

      private java.util.List<EDoc.Join> joins_ =
        java.util.Collections.emptyList();
      private void ensureJoinsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          joins_ = new java.util.ArrayList<EDoc.Join>(joins_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Join, EDoc.Join.Builder, EDoc.JoinOrBuilder> joinsBuilder_;

      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.Join> getJoinsList() {
        if (joinsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(joins_);
        } else {
          return joinsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public int getJoinsCount() {
        if (joinsBuilder_ == null) {
          return joins_.size();
        } else {
          return joinsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Join getJoins(int index) {
        if (joinsBuilder_ == null) {
          return joins_.get(index);
        } else {
          return joinsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setJoins(
          int index, EDoc.Join value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.set(index, value);
          onChanged();
        } else {
          joinsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setJoins(
          int index, EDoc.Join.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.set(index, builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addJoins(EDoc.Join value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.add(value);
          onChanged();
        } else {
          joinsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addJoins(
          int index, EDoc.Join value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.add(index, value);
          onChanged();
        } else {
          joinsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addJoins(
          EDoc.Join.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.add(builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addJoins(
          int index, EDoc.Join.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.add(index, builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addAllJoins(
          java.lang.Iterable<? extends EDoc.Join> values) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, joins_);
          onChanged();
        } else {
          joinsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder clearJoins() {
        if (joinsBuilder_ == null) {
          joins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          joinsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder removeJoins(int index) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.remove(index);
          onChanged();
        } else {
          joinsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Join.Builder getJoinsBuilder(
          int index) {
        return getJoinsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.JoinOrBuilder getJoinsOrBuilder(
          int index) {
        if (joinsBuilder_ == null) {
          return joins_.get(index);  } else {
          return joinsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<? extends EDoc.JoinOrBuilder> 
           getJoinsOrBuilderList() {
        if (joinsBuilder_ != null) {
          return joinsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(joins_);
        }
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Join.Builder addJoinsBuilder() {
        return getJoinsFieldBuilder().addBuilder(
            EDoc.Join.getDefaultInstance());
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Join.Builder addJoinsBuilder(
          int index) {
        return getJoinsFieldBuilder().addBuilder(
            index, EDoc.Join.getDefaultInstance());
      }
      /**
       * <pre>
       * Joins that are used in creating of the worksheet.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.Join.Builder> 
           getJoinsBuilderList() {
        return getJoinsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Join, EDoc.Join.Builder, EDoc.JoinOrBuilder> 
          getJoinsFieldBuilder() {
        if (joinsBuilder_ == null) {
          joinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.Join, EDoc.Join.Builder, EDoc.JoinOrBuilder>(
                  joins_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          joins_ = null;
        }
        return joinsBuilder_;
      }

      private java.util.List<EDoc.TablePath> tablePaths_ =
        java.util.Collections.emptyList();
      private void ensureTablePathsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          tablePaths_ = new java.util.ArrayList<EDoc.TablePath>(tablePaths_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.TablePath, EDoc.TablePath.Builder, EDoc.TablePathOrBuilder> tablePathsBuilder_;

      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.TablePath> getTablePathsList() {
        if (tablePathsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tablePaths_);
        } else {
          return tablePathsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public int getTablePathsCount() {
        if (tablePathsBuilder_ == null) {
          return tablePaths_.size();
        } else {
          return tablePathsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePath getTablePaths(int index) {
        if (tablePathsBuilder_ == null) {
          return tablePaths_.get(index);
        } else {
          return tablePathsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setTablePaths(
          int index, EDoc.TablePath value) {
        if (tablePathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablePathsIsMutable();
          tablePaths_.set(index, value);
          onChanged();
        } else {
          tablePathsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setTablePaths(
          int index, EDoc.TablePath.Builder builderForValue) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          tablePaths_.set(index, builderForValue.build());
          onChanged();
        } else {
          tablePathsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addTablePaths(EDoc.TablePath value) {
        if (tablePathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablePathsIsMutable();
          tablePaths_.add(value);
          onChanged();
        } else {
          tablePathsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addTablePaths(
          int index, EDoc.TablePath value) {
        if (tablePathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablePathsIsMutable();
          tablePaths_.add(index, value);
          onChanged();
        } else {
          tablePathsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addTablePaths(
          EDoc.TablePath.Builder builderForValue) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          tablePaths_.add(builderForValue.build());
          onChanged();
        } else {
          tablePathsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addTablePaths(
          int index, EDoc.TablePath.Builder builderForValue) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          tablePaths_.add(index, builderForValue.build());
          onChanged();
        } else {
          tablePathsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addAllTablePaths(
          java.lang.Iterable<? extends EDoc.TablePath> values) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tablePaths_);
          onChanged();
        } else {
          tablePathsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder clearTablePaths() {
        if (tablePathsBuilder_ == null) {
          tablePaths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          tablePathsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder removeTablePaths(int index) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          tablePaths_.remove(index);
          onChanged();
        } else {
          tablePathsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePath.Builder getTablePathsBuilder(
          int index) {
        return getTablePathsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePathOrBuilder getTablePathsOrBuilder(
          int index) {
        if (tablePathsBuilder_ == null) {
          return tablePaths_.get(index);  } else {
          return tablePathsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<? extends EDoc.TablePathOrBuilder> 
           getTablePathsOrBuilderList() {
        if (tablePathsBuilder_ != null) {
          return tablePathsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tablePaths_);
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePath.Builder addTablePathsBuilder() {
        return getTablePathsFieldBuilder().addBuilder(
            EDoc.TablePath.getDefaultInstance());
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePath.Builder addTablePathsBuilder(
          int index) {
        return getTablePathsFieldBuilder().addBuilder(
            index, EDoc.TablePath.getDefaultInstance());
      }
      /**
       * <pre>
       * Various manifestations of the tables in the worksheet.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.TablePath.Builder> 
           getTablePathsBuilderList() {
        return getTablePathsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.TablePath, EDoc.TablePath.Builder, EDoc.TablePathOrBuilder> 
          getTablePathsFieldBuilder() {
        if (tablePathsBuilder_ == null) {
          tablePathsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.TablePath, EDoc.TablePath.Builder, EDoc.TablePathOrBuilder>(
                  tablePaths_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          tablePaths_ = null;
        }
        return tablePathsBuilder_;
      }

      private java.util.List<EDoc.Formula> formulas_ =
        java.util.Collections.emptyList();
      private void ensureFormulasIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          formulas_ = new java.util.ArrayList<EDoc.Formula>(formulas_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Formula, EDoc.Formula.Builder, EDoc.FormulaOrBuilder> formulasBuilder_;

      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.Formula> getFormulasList() {
        if (formulasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(formulas_);
        } else {
          return formulasBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public int getFormulasCount() {
        if (formulasBuilder_ == null) {
          return formulas_.size();
        } else {
          return formulasBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Formula getFormulas(int index) {
        if (formulasBuilder_ == null) {
          return formulas_.get(index);
        } else {
          return formulasBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setFormulas(
          int index, EDoc.Formula value) {
        if (formulasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormulasIsMutable();
          formulas_.set(index, value);
          onChanged();
        } else {
          formulasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setFormulas(
          int index, EDoc.Formula.Builder builderForValue) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          formulas_.set(index, builderForValue.build());
          onChanged();
        } else {
          formulasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addFormulas(EDoc.Formula value) {
        if (formulasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormulasIsMutable();
          formulas_.add(value);
          onChanged();
        } else {
          formulasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addFormulas(
          int index, EDoc.Formula value) {
        if (formulasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormulasIsMutable();
          formulas_.add(index, value);
          onChanged();
        } else {
          formulasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addFormulas(
          EDoc.Formula.Builder builderForValue) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          formulas_.add(builderForValue.build());
          onChanged();
        } else {
          formulasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addFormulas(
          int index, EDoc.Formula.Builder builderForValue) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          formulas_.add(index, builderForValue.build());
          onChanged();
        } else {
          formulasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addAllFormulas(
          java.lang.Iterable<? extends EDoc.Formula> values) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, formulas_);
          onChanged();
        } else {
          formulasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder clearFormulas() {
        if (formulasBuilder_ == null) {
          formulas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          formulasBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder removeFormulas(int index) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          formulas_.remove(index);
          onChanged();
        } else {
          formulasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Formula.Builder getFormulasBuilder(
          int index) {
        return getFormulasFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.FormulaOrBuilder getFormulasOrBuilder(
          int index) {
        if (formulasBuilder_ == null) {
          return formulas_.get(index);  } else {
          return formulasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<? extends EDoc.FormulaOrBuilder> 
           getFormulasOrBuilderList() {
        if (formulasBuilder_ != null) {
          return formulasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(formulas_);
        }
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Formula.Builder addFormulasBuilder() {
        return getFormulasFieldBuilder().addBuilder(
            EDoc.Formula.getDefaultInstance());
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Formula.Builder addFormulasBuilder(
          int index) {
        return getFormulasFieldBuilder().addBuilder(
            index, EDoc.Formula.getDefaultInstance());
      }
      /**
       * <pre>
       * Object manifestations defined in the worksheet.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.Formula.Builder> 
           getFormulasBuilderList() {
        return getFormulasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Formula, EDoc.Formula.Builder, EDoc.FormulaOrBuilder> 
          getFormulasFieldBuilder() {
        if (formulasBuilder_ == null) {
          formulasBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.Formula, EDoc.Formula.Builder, EDoc.FormulaOrBuilder>(
                  formulas_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          formulas_ = null;
        }
        return formulasBuilder_;
      }

      private java.util.List<EDoc.Filter> filters_ =
        java.util.Collections.emptyList();
      private void ensureFiltersIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          filters_ = new java.util.ArrayList<EDoc.Filter>(filters_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Filter, EDoc.Filter.Builder, EDoc.FilterOrBuilder> filtersBuilder_;

      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public java.util.List<EDoc.Filter> getFiltersList() {
        if (filtersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(filters_);
        } else {
          return filtersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public int getFiltersCount() {
        if (filtersBuilder_ == null) {
          return filters_.size();
        } else {
          return filtersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public EDoc.Filter getFilters(int index) {
        if (filtersBuilder_ == null) {
          return filters_.get(index);
        } else {
          return filtersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public Builder setFilters(
          int index, EDoc.Filter value) {
        if (filtersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiltersIsMutable();
          filters_.set(index, value);
          onChanged();
        } else {
          filtersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public Builder setFilters(
          int index, EDoc.Filter.Builder builderForValue) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          filters_.set(index, builderForValue.build());
          onChanged();
        } else {
          filtersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public Builder addFilters(EDoc.Filter value) {
        if (filtersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiltersIsMutable();
          filters_.add(value);
          onChanged();
        } else {
          filtersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public Builder addFilters(
          int index, EDoc.Filter value) {
        if (filtersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiltersIsMutable();
          filters_.add(index, value);
          onChanged();
        } else {
          filtersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public Builder addFilters(
          EDoc.Filter.Builder builderForValue) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          filters_.add(builderForValue.build());
          onChanged();
        } else {
          filtersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public Builder addFilters(
          int index, EDoc.Filter.Builder builderForValue) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          filters_.add(index, builderForValue.build());
          onChanged();
        } else {
          filtersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public Builder addAllFilters(
          java.lang.Iterable<? extends EDoc.Filter> values) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, filters_);
          onChanged();
        } else {
          filtersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public Builder clearFilters() {
        if (filtersBuilder_ == null) {
          filters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          filtersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public Builder removeFilters(int index) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          filters_.remove(index);
          onChanged();
        } else {
          filtersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public EDoc.Filter.Builder getFiltersBuilder(
          int index) {
        return getFiltersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public EDoc.FilterOrBuilder getFiltersOrBuilder(
          int index) {
        if (filtersBuilder_ == null) {
          return filters_.get(index);  } else {
          return filtersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public java.util.List<? extends EDoc.FilterOrBuilder> 
           getFiltersOrBuilderList() {
        if (filtersBuilder_ != null) {
          return filtersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(filters_);
        }
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public EDoc.Filter.Builder addFiltersBuilder() {
        return getFiltersFieldBuilder().addBuilder(
            EDoc.Filter.getDefaultInstance());
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public EDoc.Filter.Builder addFiltersBuilder(
          int index) {
        return getFiltersFieldBuilder().addBuilder(
            index, EDoc.Filter.getDefaultInstance());
      }
      /**
       * <pre>
       * Filters defined in the worksheet.
       * The final result is the intersection/AND of all these filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 7;</code>
       */
      public java.util.List<EDoc.Filter.Builder> 
           getFiltersBuilderList() {
        return getFiltersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Filter, EDoc.Filter.Builder, EDoc.FilterOrBuilder> 
          getFiltersFieldBuilder() {
        if (filtersBuilder_ == null) {
          filtersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.Filter, EDoc.Filter.Builder, EDoc.FilterOrBuilder>(
                  filters_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          filters_ = null;
        }
        return filtersBuilder_;
      }

      private java.util.List<EDoc.WorksheetEDocProto.WorksheetColumn> worksheetColumns_ =
        java.util.Collections.emptyList();
      private void ensureWorksheetColumnsIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          worksheetColumns_ = new java.util.ArrayList<EDoc.WorksheetEDocProto.WorksheetColumn>(worksheetColumns_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.WorksheetEDocProto.WorksheetColumn, EDoc.WorksheetEDocProto.WorksheetColumn.Builder, EDoc.WorksheetEDocProto.WorksheetColumnOrBuilder> worksheetColumnsBuilder_;

      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public java.util.List<EDoc.WorksheetEDocProto.WorksheetColumn> getWorksheetColumnsList() {
        if (worksheetColumnsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(worksheetColumns_);
        } else {
          return worksheetColumnsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public int getWorksheetColumnsCount() {
        if (worksheetColumnsBuilder_ == null) {
          return worksheetColumns_.size();
        } else {
          return worksheetColumnsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public EDoc.WorksheetEDocProto.WorksheetColumn getWorksheetColumns(int index) {
        if (worksheetColumnsBuilder_ == null) {
          return worksheetColumns_.get(index);
        } else {
          return worksheetColumnsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public Builder setWorksheetColumns(
          int index, EDoc.WorksheetEDocProto.WorksheetColumn value) {
        if (worksheetColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorksheetColumnsIsMutable();
          worksheetColumns_.set(index, value);
          onChanged();
        } else {
          worksheetColumnsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public Builder setWorksheetColumns(
          int index, EDoc.WorksheetEDocProto.WorksheetColumn.Builder builderForValue) {
        if (worksheetColumnsBuilder_ == null) {
          ensureWorksheetColumnsIsMutable();
          worksheetColumns_.set(index, builderForValue.build());
          onChanged();
        } else {
          worksheetColumnsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public Builder addWorksheetColumns(EDoc.WorksheetEDocProto.WorksheetColumn value) {
        if (worksheetColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorksheetColumnsIsMutable();
          worksheetColumns_.add(value);
          onChanged();
        } else {
          worksheetColumnsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public Builder addWorksheetColumns(
          int index, EDoc.WorksheetEDocProto.WorksheetColumn value) {
        if (worksheetColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorksheetColumnsIsMutable();
          worksheetColumns_.add(index, value);
          onChanged();
        } else {
          worksheetColumnsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public Builder addWorksheetColumns(
          EDoc.WorksheetEDocProto.WorksheetColumn.Builder builderForValue) {
        if (worksheetColumnsBuilder_ == null) {
          ensureWorksheetColumnsIsMutable();
          worksheetColumns_.add(builderForValue.build());
          onChanged();
        } else {
          worksheetColumnsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public Builder addWorksheetColumns(
          int index, EDoc.WorksheetEDocProto.WorksheetColumn.Builder builderForValue) {
        if (worksheetColumnsBuilder_ == null) {
          ensureWorksheetColumnsIsMutable();
          worksheetColumns_.add(index, builderForValue.build());
          onChanged();
        } else {
          worksheetColumnsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public Builder addAllWorksheetColumns(
          java.lang.Iterable<? extends EDoc.WorksheetEDocProto.WorksheetColumn> values) {
        if (worksheetColumnsBuilder_ == null) {
          ensureWorksheetColumnsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, worksheetColumns_);
          onChanged();
        } else {
          worksheetColumnsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public Builder clearWorksheetColumns() {
        if (worksheetColumnsBuilder_ == null) {
          worksheetColumns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          worksheetColumnsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public Builder removeWorksheetColumns(int index) {
        if (worksheetColumnsBuilder_ == null) {
          ensureWorksheetColumnsIsMutable();
          worksheetColumns_.remove(index);
          onChanged();
        } else {
          worksheetColumnsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public EDoc.WorksheetEDocProto.WorksheetColumn.Builder getWorksheetColumnsBuilder(
          int index) {
        return getWorksheetColumnsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public EDoc.WorksheetEDocProto.WorksheetColumnOrBuilder getWorksheetColumnsOrBuilder(
          int index) {
        if (worksheetColumnsBuilder_ == null) {
          return worksheetColumns_.get(index);  } else {
          return worksheetColumnsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public java.util.List<? extends EDoc.WorksheetEDocProto.WorksheetColumnOrBuilder> 
           getWorksheetColumnsOrBuilderList() {
        if (worksheetColumnsBuilder_ != null) {
          return worksheetColumnsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(worksheetColumns_);
        }
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public EDoc.WorksheetEDocProto.WorksheetColumn.Builder addWorksheetColumnsBuilder() {
        return getWorksheetColumnsFieldBuilder().addBuilder(
            EDoc.WorksheetEDocProto.WorksheetColumn.getDefaultInstance());
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public EDoc.WorksheetEDocProto.WorksheetColumn.Builder addWorksheetColumnsBuilder(
          int index) {
        return getWorksheetColumnsFieldBuilder().addBuilder(
            index, EDoc.WorksheetEDocProto.WorksheetColumn.getDefaultInstance());
      }
      /**
       * <pre>
       * All output columns.
       * </pre>
       *
       * <code>repeated .WorksheetEDocProto.WorksheetColumn worksheet_columns = 8 [(.Annotation.compulsory) = true, (.Annotation.unique) = "name,column_id,formula_id"];</code>
       */
      public java.util.List<EDoc.WorksheetEDocProto.WorksheetColumn.Builder> 
           getWorksheetColumnsBuilderList() {
        return getWorksheetColumnsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.WorksheetEDocProto.WorksheetColumn, EDoc.WorksheetEDocProto.WorksheetColumn.Builder, EDoc.WorksheetEDocProto.WorksheetColumnOrBuilder> 
          getWorksheetColumnsFieldBuilder() {
        if (worksheetColumnsBuilder_ == null) {
          worksheetColumnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.WorksheetEDocProto.WorksheetColumn, EDoc.WorksheetEDocProto.WorksheetColumn.Builder, EDoc.WorksheetEDocProto.WorksheetColumnOrBuilder>(
                  worksheetColumns_,
                  ((bitField0_ & 0x00000080) != 0),
                  getParentForChildren(),
                  isClean());
          worksheetColumns_ = null;
        }
        return worksheetColumnsBuilder_;
      }

      private EDoc.WorksheetEDocProto.QueryProperties properties_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.WorksheetEDocProto.QueryProperties, EDoc.WorksheetEDocProto.QueryProperties.Builder, EDoc.WorksheetEDocProto.QueryPropertiesOrBuilder> propertiesBuilder_;
      /**
       * <pre>
       * Any special properties that can be specified by the user and which are
       * needed during query generation like bypassRLS, progressive v/s container.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
       * @return Whether the properties field is set.
       */
      public boolean hasProperties() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Any special properties that can be specified by the user and which are
       * needed during query generation like bypassRLS, progressive v/s container.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
       * @return The properties.
       */
      public EDoc.WorksheetEDocProto.QueryProperties getProperties() {
        if (propertiesBuilder_ == null) {
          return properties_ == null ? EDoc.WorksheetEDocProto.QueryProperties.getDefaultInstance() : properties_;
        } else {
          return propertiesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Any special properties that can be specified by the user and which are
       * needed during query generation like bypassRLS, progressive v/s container.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
       */
      public Builder setProperties(EDoc.WorksheetEDocProto.QueryProperties value) {
        if (propertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          properties_ = value;
          onChanged();
        } else {
          propertiesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Any special properties that can be specified by the user and which are
       * needed during query generation like bypassRLS, progressive v/s container.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
       */
      public Builder setProperties(
          EDoc.WorksheetEDocProto.QueryProperties.Builder builderForValue) {
        if (propertiesBuilder_ == null) {
          properties_ = builderForValue.build();
          onChanged();
        } else {
          propertiesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Any special properties that can be specified by the user and which are
       * needed during query generation like bypassRLS, progressive v/s container.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
       */
      public Builder mergeProperties(EDoc.WorksheetEDocProto.QueryProperties value) {
        if (propertiesBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0) &&
              properties_ != null &&
              properties_ != EDoc.WorksheetEDocProto.QueryProperties.getDefaultInstance()) {
            properties_ =
              EDoc.WorksheetEDocProto.QueryProperties.newBuilder(properties_).mergeFrom(value).buildPartial();
          } else {
            properties_ = value;
          }
          onChanged();
        } else {
          propertiesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Any special properties that can be specified by the user and which are
       * needed during query generation like bypassRLS, progressive v/s container.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
       */
      public Builder clearProperties() {
        if (propertiesBuilder_ == null) {
          properties_ = null;
          onChanged();
        } else {
          propertiesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <pre>
       * Any special properties that can be specified by the user and which are
       * needed during query generation like bypassRLS, progressive v/s container.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
       */
      public EDoc.WorksheetEDocProto.QueryProperties.Builder getPropertiesBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getPropertiesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Any special properties that can be specified by the user and which are
       * needed during query generation like bypassRLS, progressive v/s container.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
       */
      public EDoc.WorksheetEDocProto.QueryPropertiesOrBuilder getPropertiesOrBuilder() {
        if (propertiesBuilder_ != null) {
          return propertiesBuilder_.getMessageOrBuilder();
        } else {
          return properties_ == null ?
              EDoc.WorksheetEDocProto.QueryProperties.getDefaultInstance() : properties_;
        }
      }
      /**
       * <pre>
       * Any special properties that can be specified by the user and which are
       * needed during query generation like bypassRLS, progressive v/s container.
       * </pre>
       *
       * <code>optional .WorksheetEDocProto.QueryProperties properties = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.WorksheetEDocProto.QueryProperties, EDoc.WorksheetEDocProto.QueryProperties.Builder, EDoc.WorksheetEDocProto.QueryPropertiesOrBuilder> 
          getPropertiesFieldBuilder() {
        if (propertiesBuilder_ == null) {
          propertiesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.WorksheetEDocProto.QueryProperties, EDoc.WorksheetEDocProto.QueryProperties.Builder, EDoc.WorksheetEDocProto.QueryPropertiesOrBuilder>(
                  getProperties(),
                  getParentForChildren(),
                  isClean());
          properties_ = null;
        }
        return propertiesBuilder_;
      }

      private java.util.List<EDoc.RelationEDocProto> joinsWith_ =
        java.util.Collections.emptyList();
      private void ensureJoinsWithIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          joinsWith_ = new java.util.ArrayList<EDoc.RelationEDocProto>(joinsWith_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.RelationEDocProto, EDoc.RelationEDocProto.Builder, EDoc.RelationEDocProtoOrBuilder> joinsWithBuilder_;

      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public java.util.List<EDoc.RelationEDocProto> getJoinsWithList() {
        if (joinsWithBuilder_ == null) {
          return java.util.Collections.unmodifiableList(joinsWith_);
        } else {
          return joinsWithBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public int getJoinsWithCount() {
        if (joinsWithBuilder_ == null) {
          return joinsWith_.size();
        } else {
          return joinsWithBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public EDoc.RelationEDocProto getJoinsWith(int index) {
        if (joinsWithBuilder_ == null) {
          return joinsWith_.get(index);
        } else {
          return joinsWithBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public Builder setJoinsWith(
          int index, EDoc.RelationEDocProto value) {
        if (joinsWithBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsWithIsMutable();
          joinsWith_.set(index, value);
          onChanged();
        } else {
          joinsWithBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public Builder setJoinsWith(
          int index, EDoc.RelationEDocProto.Builder builderForValue) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          joinsWith_.set(index, builderForValue.build());
          onChanged();
        } else {
          joinsWithBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public Builder addJoinsWith(EDoc.RelationEDocProto value) {
        if (joinsWithBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsWithIsMutable();
          joinsWith_.add(value);
          onChanged();
        } else {
          joinsWithBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public Builder addJoinsWith(
          int index, EDoc.RelationEDocProto value) {
        if (joinsWithBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsWithIsMutable();
          joinsWith_.add(index, value);
          onChanged();
        } else {
          joinsWithBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public Builder addJoinsWith(
          EDoc.RelationEDocProto.Builder builderForValue) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          joinsWith_.add(builderForValue.build());
          onChanged();
        } else {
          joinsWithBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public Builder addJoinsWith(
          int index, EDoc.RelationEDocProto.Builder builderForValue) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          joinsWith_.add(index, builderForValue.build());
          onChanged();
        } else {
          joinsWithBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public Builder addAllJoinsWith(
          java.lang.Iterable<? extends EDoc.RelationEDocProto> values) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, joinsWith_);
          onChanged();
        } else {
          joinsWithBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public Builder clearJoinsWith() {
        if (joinsWithBuilder_ == null) {
          joinsWith_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          joinsWithBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public Builder removeJoinsWith(int index) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          joinsWith_.remove(index);
          onChanged();
        } else {
          joinsWithBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public EDoc.RelationEDocProto.Builder getJoinsWithBuilder(
          int index) {
        return getJoinsWithFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public EDoc.RelationEDocProtoOrBuilder getJoinsWithOrBuilder(
          int index) {
        if (joinsWithBuilder_ == null) {
          return joinsWith_.get(index);  } else {
          return joinsWithBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public java.util.List<? extends EDoc.RelationEDocProtoOrBuilder> 
           getJoinsWithOrBuilderList() {
        if (joinsWithBuilder_ != null) {
          return joinsWithBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(joinsWith_);
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public EDoc.RelationEDocProto.Builder addJoinsWithBuilder() {
        return getJoinsWithFieldBuilder().addBuilder(
            EDoc.RelationEDocProto.getDefaultInstance());
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public EDoc.RelationEDocProto.Builder addJoinsWithBuilder(
          int index) {
        return getJoinsWithFieldBuilder().addBuilder(
            index, EDoc.RelationEDocProto.getDefaultInstance());
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 10;</code>
       */
      public java.util.List<EDoc.RelationEDocProto.Builder> 
           getJoinsWithBuilderList() {
        return getJoinsWithFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.RelationEDocProto, EDoc.RelationEDocProto.Builder, EDoc.RelationEDocProtoOrBuilder> 
          getJoinsWithFieldBuilder() {
        if (joinsWithBuilder_ == null) {
          joinsWithBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.RelationEDocProto, EDoc.RelationEDocProto.Builder, EDoc.RelationEDocProtoOrBuilder>(
                  joinsWith_,
                  ((bitField0_ & 0x00000200) != 0),
                  getParentForChildren(),
                  isClean());
          joinsWith_ = null;
        }
        return joinsWithBuilder_;
      }

      private java.lang.Object generationType_ = "";
      /**
       * <pre>
       * Generation Type of the worksheet.
       * </pre>
       *
       * <code>optional string generation_type = 11;</code>
       * @return Whether the generationType field is set.
       */
      public boolean hasGenerationType() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * Generation Type of the worksheet.
       * </pre>
       *
       * <code>optional string generation_type = 11;</code>
       * @return The generationType.
       */
      public java.lang.String getGenerationType() {
        java.lang.Object ref = generationType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            generationType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Generation Type of the worksheet.
       * </pre>
       *
       * <code>optional string generation_type = 11;</code>
       * @return The bytes for generationType.
       */
      public com.google.protobuf.ByteString
          getGenerationTypeBytes() {
        java.lang.Object ref = generationType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          generationType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Generation Type of the worksheet.
       * </pre>
       *
       * <code>optional string generation_type = 11;</code>
       * @param value The generationType to set.
       * @return This builder for chaining.
       */
      public Builder setGenerationType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        generationType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Generation Type of the worksheet.
       * </pre>
       *
       * <code>optional string generation_type = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearGenerationType() {
        bitField0_ = (bitField0_ & ~0x00000400);
        generationType_ = getDefaultInstance().getGenerationType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Generation Type of the worksheet.
       * </pre>
       *
       * <code>optional string generation_type = 11;</code>
       * @param value The bytes for generationType to set.
       * @return This builder for chaining.
       */
      public Builder setGenerationTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        generationType_ = value;
        onChanged();
        return this;
      }

      private java.util.List<EDoc.LessonPlanEDocProto> lessonPlans_ =
        java.util.Collections.emptyList();
      private void ensureLessonPlansIsMutable() {
        if (!((bitField0_ & 0x00000800) != 0)) {
          lessonPlans_ = new java.util.ArrayList<EDoc.LessonPlanEDocProto>(lessonPlans_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.LessonPlanEDocProto, EDoc.LessonPlanEDocProto.Builder, EDoc.LessonPlanEDocProtoOrBuilder> lessonPlansBuilder_;

      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public java.util.List<EDoc.LessonPlanEDocProto> getLessonPlansList() {
        if (lessonPlansBuilder_ == null) {
          return java.util.Collections.unmodifiableList(lessonPlans_);
        } else {
          return lessonPlansBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public int getLessonPlansCount() {
        if (lessonPlansBuilder_ == null) {
          return lessonPlans_.size();
        } else {
          return lessonPlansBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public EDoc.LessonPlanEDocProto getLessonPlans(int index) {
        if (lessonPlansBuilder_ == null) {
          return lessonPlans_.get(index);
        } else {
          return lessonPlansBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public Builder setLessonPlans(
          int index, EDoc.LessonPlanEDocProto value) {
        if (lessonPlansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLessonPlansIsMutable();
          lessonPlans_.set(index, value);
          onChanged();
        } else {
          lessonPlansBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public Builder setLessonPlans(
          int index, EDoc.LessonPlanEDocProto.Builder builderForValue) {
        if (lessonPlansBuilder_ == null) {
          ensureLessonPlansIsMutable();
          lessonPlans_.set(index, builderForValue.build());
          onChanged();
        } else {
          lessonPlansBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public Builder addLessonPlans(EDoc.LessonPlanEDocProto value) {
        if (lessonPlansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLessonPlansIsMutable();
          lessonPlans_.add(value);
          onChanged();
        } else {
          lessonPlansBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public Builder addLessonPlans(
          int index, EDoc.LessonPlanEDocProto value) {
        if (lessonPlansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLessonPlansIsMutable();
          lessonPlans_.add(index, value);
          onChanged();
        } else {
          lessonPlansBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public Builder addLessonPlans(
          EDoc.LessonPlanEDocProto.Builder builderForValue) {
        if (lessonPlansBuilder_ == null) {
          ensureLessonPlansIsMutable();
          lessonPlans_.add(builderForValue.build());
          onChanged();
        } else {
          lessonPlansBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public Builder addLessonPlans(
          int index, EDoc.LessonPlanEDocProto.Builder builderForValue) {
        if (lessonPlansBuilder_ == null) {
          ensureLessonPlansIsMutable();
          lessonPlans_.add(index, builderForValue.build());
          onChanged();
        } else {
          lessonPlansBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public Builder addAllLessonPlans(
          java.lang.Iterable<? extends EDoc.LessonPlanEDocProto> values) {
        if (lessonPlansBuilder_ == null) {
          ensureLessonPlansIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lessonPlans_);
          onChanged();
        } else {
          lessonPlansBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public Builder clearLessonPlans() {
        if (lessonPlansBuilder_ == null) {
          lessonPlans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          lessonPlansBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public Builder removeLessonPlans(int index) {
        if (lessonPlansBuilder_ == null) {
          ensureLessonPlansIsMutable();
          lessonPlans_.remove(index);
          onChanged();
        } else {
          lessonPlansBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public EDoc.LessonPlanEDocProto.Builder getLessonPlansBuilder(
          int index) {
        return getLessonPlansFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public EDoc.LessonPlanEDocProtoOrBuilder getLessonPlansOrBuilder(
          int index) {
        if (lessonPlansBuilder_ == null) {
          return lessonPlans_.get(index);  } else {
          return lessonPlansBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public java.util.List<? extends EDoc.LessonPlanEDocProtoOrBuilder> 
           getLessonPlansOrBuilderList() {
        if (lessonPlansBuilder_ != null) {
          return lessonPlansBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(lessonPlans_);
        }
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public EDoc.LessonPlanEDocProto.Builder addLessonPlansBuilder() {
        return getLessonPlansFieldBuilder().addBuilder(
            EDoc.LessonPlanEDocProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public EDoc.LessonPlanEDocProto.Builder addLessonPlansBuilder(
          int index) {
        return getLessonPlansFieldBuilder().addBuilder(
            index, EDoc.LessonPlanEDocProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Lesson Plan Strings.
       * </pre>
       *
       * <code>repeated .LessonPlanEDocProto lesson_plans = 12;</code>
       */
      public java.util.List<EDoc.LessonPlanEDocProto.Builder> 
           getLessonPlansBuilderList() {
        return getLessonPlansFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.LessonPlanEDocProto, EDoc.LessonPlanEDocProto.Builder, EDoc.LessonPlanEDocProtoOrBuilder> 
          getLessonPlansFieldBuilder() {
        if (lessonPlansBuilder_ == null) {
          lessonPlansBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.LessonPlanEDocProto, EDoc.LessonPlanEDocProto.Builder, EDoc.LessonPlanEDocProtoOrBuilder>(
                  lessonPlans_,
                  ((bitField0_ & 0x00000800) != 0),
                  getParentForChildren(),
                  isClean());
          lessonPlans_ = null;
        }
        return lessonPlansBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:WorksheetEDocProto)
    }

    // @@protoc_insertion_point(class_scope:WorksheetEDocProto)
    private static final EDoc.WorksheetEDocProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.WorksheetEDocProto();
    }

    public static EDoc.WorksheetEDocProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<WorksheetEDocProto>
        PARSER = new com.google.protobuf.AbstractParser<WorksheetEDocProto>() {
      @java.lang.Override
      public WorksheetEDocProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WorksheetEDocProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WorksheetEDocProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WorksheetEDocProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.WorksheetEDocProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LessonPlanEDocProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LessonPlanEDocProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Index of the lesson in a dictionary.
     * Note: lesson id is mapped to a query template for a lesson.
     * For example: lesson_id = 0 lesson plan = &lt;measure&gt;&lt;operator&gt;&lt;filter&gt;
     * </pre>
     *
     * <code>optional int32 lesson_id = 1;</code>
     * @return Whether the lessonId field is set.
     */
    boolean hasLessonId();
    /**
     * <pre>
     * Index of the lesson in a dictionary.
     * Note: lesson id is mapped to a query template for a lesson.
     * For example: lesson_id = 0 lesson plan = &lt;measure&gt;&lt;operator&gt;&lt;filter&gt;
     * </pre>
     *
     * <code>optional int32 lesson_id = 1;</code>
     * @return The lessonId.
     */
    int getLessonId();

    /**
     * <pre>
     * String representing a lesson plan.
     * </pre>
     *
     * <code>optional string lesson_plan_string = 2;</code>
     * @return Whether the lessonPlanString field is set.
     */
    boolean hasLessonPlanString();
    /**
     * <pre>
     * String representing a lesson plan.
     * </pre>
     *
     * <code>optional string lesson_plan_string = 2;</code>
     * @return The lessonPlanString.
     */
    java.lang.String getLessonPlanString();
    /**
     * <pre>
     * String representing a lesson plan.
     * </pre>
     *
     * <code>optional string lesson_plan_string = 2;</code>
     * @return The bytes for lessonPlanString.
     */
    com.google.protobuf.ByteString
        getLessonPlanStringBytes();
  }
  /**
   * Protobuf type {@code LessonPlanEDocProto}
   */
  public static final class LessonPlanEDocProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:LessonPlanEDocProto)
      LessonPlanEDocProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LessonPlanEDocProto.newBuilder() to construct.
    private LessonPlanEDocProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LessonPlanEDocProto() {
      lessonPlanString_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LessonPlanEDocProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LessonPlanEDocProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              lessonId_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              lessonPlanString_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_LessonPlanEDocProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_LessonPlanEDocProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.LessonPlanEDocProto.class, EDoc.LessonPlanEDocProto.Builder.class);
    }

    private int bitField0_;
    public static final int LESSON_ID_FIELD_NUMBER = 1;
    private int lessonId_;
    /**
     * <pre>
     * Index of the lesson in a dictionary.
     * Note: lesson id is mapped to a query template for a lesson.
     * For example: lesson_id = 0 lesson plan = &lt;measure&gt;&lt;operator&gt;&lt;filter&gt;
     * </pre>
     *
     * <code>optional int32 lesson_id = 1;</code>
     * @return Whether the lessonId field is set.
     */
    @java.lang.Override
    public boolean hasLessonId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Index of the lesson in a dictionary.
     * Note: lesson id is mapped to a query template for a lesson.
     * For example: lesson_id = 0 lesson plan = &lt;measure&gt;&lt;operator&gt;&lt;filter&gt;
     * </pre>
     *
     * <code>optional int32 lesson_id = 1;</code>
     * @return The lessonId.
     */
    @java.lang.Override
    public int getLessonId() {
      return lessonId_;
    }

    public static final int LESSON_PLAN_STRING_FIELD_NUMBER = 2;
    private volatile java.lang.Object lessonPlanString_;
    /**
     * <pre>
     * String representing a lesson plan.
     * </pre>
     *
     * <code>optional string lesson_plan_string = 2;</code>
     * @return Whether the lessonPlanString field is set.
     */
    @java.lang.Override
    public boolean hasLessonPlanString() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * String representing a lesson plan.
     * </pre>
     *
     * <code>optional string lesson_plan_string = 2;</code>
     * @return The lessonPlanString.
     */
    @java.lang.Override
    public java.lang.String getLessonPlanString() {
      java.lang.Object ref = lessonPlanString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          lessonPlanString_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * String representing a lesson plan.
     * </pre>
     *
     * <code>optional string lesson_plan_string = 2;</code>
     * @return The bytes for lessonPlanString.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLessonPlanStringBytes() {
      java.lang.Object ref = lessonPlanString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lessonPlanString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, lessonId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, lessonPlanString_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, lessonId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, lessonPlanString_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.LessonPlanEDocProto)) {
        return super.equals(obj);
      }
      EDoc.LessonPlanEDocProto other = (EDoc.LessonPlanEDocProto) obj;

      if (hasLessonId() != other.hasLessonId()) return false;
      if (hasLessonId()) {
        if (getLessonId()
            != other.getLessonId()) return false;
      }
      if (hasLessonPlanString() != other.hasLessonPlanString()) return false;
      if (hasLessonPlanString()) {
        if (!getLessonPlanString()
            .equals(other.getLessonPlanString())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLessonId()) {
        hash = (37 * hash) + LESSON_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLessonId();
      }
      if (hasLessonPlanString()) {
        hash = (37 * hash) + LESSON_PLAN_STRING_FIELD_NUMBER;
        hash = (53 * hash) + getLessonPlanString().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.LessonPlanEDocProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.LessonPlanEDocProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.LessonPlanEDocProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.LessonPlanEDocProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.LessonPlanEDocProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.LessonPlanEDocProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.LessonPlanEDocProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.LessonPlanEDocProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.LessonPlanEDocProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.LessonPlanEDocProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.LessonPlanEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.LessonPlanEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.LessonPlanEDocProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LessonPlanEDocProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LessonPlanEDocProto)
        EDoc.LessonPlanEDocProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_LessonPlanEDocProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_LessonPlanEDocProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.LessonPlanEDocProto.class, EDoc.LessonPlanEDocProto.Builder.class);
      }

      // Construct using EDoc.LessonPlanEDocProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        lessonId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        lessonPlanString_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_LessonPlanEDocProto_descriptor;
      }

      @java.lang.Override
      public EDoc.LessonPlanEDocProto getDefaultInstanceForType() {
        return EDoc.LessonPlanEDocProto.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.LessonPlanEDocProto build() {
        EDoc.LessonPlanEDocProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.LessonPlanEDocProto buildPartial() {
        EDoc.LessonPlanEDocProto result = new EDoc.LessonPlanEDocProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.lessonId_ = lessonId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lessonPlanString_ = lessonPlanString_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.LessonPlanEDocProto) {
          return mergeFrom((EDoc.LessonPlanEDocProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.LessonPlanEDocProto other) {
        if (other == EDoc.LessonPlanEDocProto.getDefaultInstance()) return this;
        if (other.hasLessonId()) {
          setLessonId(other.getLessonId());
        }
        if (other.hasLessonPlanString()) {
          bitField0_ |= 0x00000002;
          lessonPlanString_ = other.lessonPlanString_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.LessonPlanEDocProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.LessonPlanEDocProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int lessonId_ ;
      /**
       * <pre>
       * Index of the lesson in a dictionary.
       * Note: lesson id is mapped to a query template for a lesson.
       * For example: lesson_id = 0 lesson plan = &lt;measure&gt;&lt;operator&gt;&lt;filter&gt;
       * </pre>
       *
       * <code>optional int32 lesson_id = 1;</code>
       * @return Whether the lessonId field is set.
       */
      @java.lang.Override
      public boolean hasLessonId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Index of the lesson in a dictionary.
       * Note: lesson id is mapped to a query template for a lesson.
       * For example: lesson_id = 0 lesson plan = &lt;measure&gt;&lt;operator&gt;&lt;filter&gt;
       * </pre>
       *
       * <code>optional int32 lesson_id = 1;</code>
       * @return The lessonId.
       */
      @java.lang.Override
      public int getLessonId() {
        return lessonId_;
      }
      /**
       * <pre>
       * Index of the lesson in a dictionary.
       * Note: lesson id is mapped to a query template for a lesson.
       * For example: lesson_id = 0 lesson plan = &lt;measure&gt;&lt;operator&gt;&lt;filter&gt;
       * </pre>
       *
       * <code>optional int32 lesson_id = 1;</code>
       * @param value The lessonId to set.
       * @return This builder for chaining.
       */
      public Builder setLessonId(int value) {
        bitField0_ |= 0x00000001;
        lessonId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Index of the lesson in a dictionary.
       * Note: lesson id is mapped to a query template for a lesson.
       * For example: lesson_id = 0 lesson plan = &lt;measure&gt;&lt;operator&gt;&lt;filter&gt;
       * </pre>
       *
       * <code>optional int32 lesson_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLessonId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lessonId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object lessonPlanString_ = "";
      /**
       * <pre>
       * String representing a lesson plan.
       * </pre>
       *
       * <code>optional string lesson_plan_string = 2;</code>
       * @return Whether the lessonPlanString field is set.
       */
      public boolean hasLessonPlanString() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * String representing a lesson plan.
       * </pre>
       *
       * <code>optional string lesson_plan_string = 2;</code>
       * @return The lessonPlanString.
       */
      public java.lang.String getLessonPlanString() {
        java.lang.Object ref = lessonPlanString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            lessonPlanString_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * String representing a lesson plan.
       * </pre>
       *
       * <code>optional string lesson_plan_string = 2;</code>
       * @return The bytes for lessonPlanString.
       */
      public com.google.protobuf.ByteString
          getLessonPlanStringBytes() {
        java.lang.Object ref = lessonPlanString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lessonPlanString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * String representing a lesson plan.
       * </pre>
       *
       * <code>optional string lesson_plan_string = 2;</code>
       * @param value The lessonPlanString to set.
       * @return This builder for chaining.
       */
      public Builder setLessonPlanString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        lessonPlanString_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * String representing a lesson plan.
       * </pre>
       *
       * <code>optional string lesson_plan_string = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLessonPlanString() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lessonPlanString_ = getDefaultInstance().getLessonPlanString();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * String representing a lesson plan.
       * </pre>
       *
       * <code>optional string lesson_plan_string = 2;</code>
       * @param value The bytes for lessonPlanString to set.
       * @return This builder for chaining.
       */
      public Builder setLessonPlanStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        lessonPlanString_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:LessonPlanEDocProto)
    }

    // @@protoc_insertion_point(class_scope:LessonPlanEDocProto)
    private static final EDoc.LessonPlanEDocProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.LessonPlanEDocProto();
    }

    public static EDoc.LessonPlanEDocProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LessonPlanEDocProto>
        PARSER = new com.google.protobuf.AbstractParser<LessonPlanEDocProto>() {
      @java.lang.Override
      public LessonPlanEDocProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LessonPlanEDocProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LessonPlanEDocProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LessonPlanEDocProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.LessonPlanEDocProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ViewEDocProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ViewEDocProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Display name of the view.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * Display name of the view.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Display name of the view.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Description of the view.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return Whether the description field is set.
     */
    boolean hasDescription();
    /**
     * <pre>
     * Description of the view.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Description of the view.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * All the tables referred in the view.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    java.util.List<EDoc.Identity> 
        getTablesList();
    /**
     * <pre>
     * All the tables referred in the view.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    EDoc.Identity getTables(int index);
    /**
     * <pre>
     * All the tables referred in the view.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    int getTablesCount();
    /**
     * <pre>
     * All the tables referred in the view.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    java.util.List<? extends EDoc.IdentityOrBuilder> 
        getTablesOrBuilderList();
    /**
     * <pre>
     * All the tables referred in the view.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    EDoc.IdentityOrBuilder getTablesOrBuilder(
        int index);

    /**
     * <pre>
     * All the joins used in the creation of the view.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<EDoc.Join> 
        getJoinsList();
    /**
     * <pre>
     * All the joins used in the creation of the view.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.Join getJoins(int index);
    /**
     * <pre>
     * All the joins used in the creation of the view.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    int getJoinsCount();
    /**
     * <pre>
     * All the joins used in the creation of the view.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<? extends EDoc.JoinOrBuilder> 
        getJoinsOrBuilderList();
    /**
     * <pre>
     * All the joins used in the creation of the view.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.JoinOrBuilder getJoinsOrBuilder(
        int index);

    /**
     * <pre>
     * Various manifestations of the tables in the view.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<EDoc.TablePath> 
        getTablePathsList();
    /**
     * <pre>
     * Various manifestations of the tables in the view.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.TablePath getTablePaths(int index);
    /**
     * <pre>
     * Various manifestations of the tables in the view.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    int getTablePathsCount();
    /**
     * <pre>
     * Various manifestations of the tables in the view.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<? extends EDoc.TablePathOrBuilder> 
        getTablePathsOrBuilderList();
    /**
     * <pre>
     * Various manifestations of the tables in the view.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.TablePathOrBuilder getTablePathsOrBuilder(
        int index);

    /**
     * <pre>
     * In context formula.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<EDoc.Formula> 
        getFormulasList();
    /**
     * <pre>
     * In context formula.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.Formula getFormulas(int index);
    /**
     * <pre>
     * In context formula.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    int getFormulasCount();
    /**
     * <pre>
     * In context formula.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<? extends EDoc.FormulaOrBuilder> 
        getFormulasOrBuilderList();
    /**
     * <pre>
     * In context formula.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.FormulaOrBuilder getFormulasOrBuilder(
        int index);

    /**
     * <pre>
     * String representing fully disambiguated Search Query.
     * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
     * </pre>
     *
     * <code>optional string search_query = 7;</code>
     * @return Whether the searchQuery field is set.
     */
    boolean hasSearchQuery();
    /**
     * <pre>
     * String representing fully disambiguated Search Query.
     * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
     * </pre>
     *
     * <code>optional string search_query = 7;</code>
     * @return The searchQuery.
     */
    java.lang.String getSearchQuery();
    /**
     * <pre>
     * String representing fully disambiguated Search Query.
     * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
     * </pre>
     *
     * <code>optional string search_query = 7;</code>
     * @return The bytes for searchQuery.
     */
    com.google.protobuf.ByteString
        getSearchQueryBytes();

    /**
     * <pre>
     * List of columns in this view. Each entry contains the modeling properties
     * for that column. Note: This list can be a subset of the number of columns
     * that are created from the search query for this view. For the columns that
     * are missing, we use default column properties.
     * </pre>
     *
     * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
     */
    java.util.List<EDoc.ViewEDocProto.ViewColumn> 
        getViewColumnsList();
    /**
     * <pre>
     * List of columns in this view. Each entry contains the modeling properties
     * for that column. Note: This list can be a subset of the number of columns
     * that are created from the search query for this view. For the columns that
     * are missing, we use default column properties.
     * </pre>
     *
     * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
     */
    EDoc.ViewEDocProto.ViewColumn getViewColumns(int index);
    /**
     * <pre>
     * List of columns in this view. Each entry contains the modeling properties
     * for that column. Note: This list can be a subset of the number of columns
     * that are created from the search query for this view. For the columns that
     * are missing, we use default column properties.
     * </pre>
     *
     * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
     */
    int getViewColumnsCount();
    /**
     * <pre>
     * List of columns in this view. Each entry contains the modeling properties
     * for that column. Note: This list can be a subset of the number of columns
     * that are created from the search query for this view. For the columns that
     * are missing, we use default column properties.
     * </pre>
     *
     * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
     */
    java.util.List<? extends EDoc.ViewEDocProto.ViewColumnOrBuilder> 
        getViewColumnsOrBuilderList();
    /**
     * <pre>
     * List of columns in this view. Each entry contains the modeling properties
     * for that column. Note: This list can be a subset of the number of columns
     * that are created from the search query for this view. For the columns that
     * are missing, we use default column properties.
     * </pre>
     *
     * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
     */
    EDoc.ViewEDocProto.ViewColumnOrBuilder getViewColumnsOrBuilder(
        int index);

    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    java.util.List<EDoc.RelationEDocProto> 
        getJoinsWithList();
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    EDoc.RelationEDocProto getJoinsWith(int index);
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    int getJoinsWithCount();
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    java.util.List<? extends EDoc.RelationEDocProtoOrBuilder> 
        getJoinsWithOrBuilderList();
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    EDoc.RelationEDocProtoOrBuilder getJoinsWithOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ViewEDocProto}
   */
  public static final class ViewEDocProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ViewEDocProto)
      ViewEDocProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ViewEDocProto.newBuilder() to construct.
    private ViewEDocProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ViewEDocProto() {
      name_ = "";
      description_ = "";
      tables_ = java.util.Collections.emptyList();
      joins_ = java.util.Collections.emptyList();
      tablePaths_ = java.util.Collections.emptyList();
      formulas_ = java.util.Collections.emptyList();
      searchQuery_ = "";
      viewColumns_ = java.util.Collections.emptyList();
      joinsWith_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ViewEDocProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ViewEDocProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              description_ = bs;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                tables_ = new java.util.ArrayList<EDoc.Identity>();
                mutable_bitField0_ |= 0x00000004;
              }
              tables_.add(
                  input.readMessage(EDoc.Identity.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                joins_ = new java.util.ArrayList<EDoc.Join>();
                mutable_bitField0_ |= 0x00000008;
              }
              joins_.add(
                  input.readMessage(EDoc.Join.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                tablePaths_ = new java.util.ArrayList<EDoc.TablePath>();
                mutable_bitField0_ |= 0x00000010;
              }
              tablePaths_.add(
                  input.readMessage(EDoc.TablePath.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                formulas_ = new java.util.ArrayList<EDoc.Formula>();
                mutable_bitField0_ |= 0x00000020;
              }
              formulas_.add(
                  input.readMessage(EDoc.Formula.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              searchQuery_ = bs;
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                viewColumns_ = new java.util.ArrayList<EDoc.ViewEDocProto.ViewColumn>();
                mutable_bitField0_ |= 0x00000080;
              }
              viewColumns_.add(
                  input.readMessage(EDoc.ViewEDocProto.ViewColumn.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                joinsWith_ = new java.util.ArrayList<EDoc.RelationEDocProto>();
                mutable_bitField0_ |= 0x00000100;
              }
              joinsWith_.add(
                  input.readMessage(EDoc.RelationEDocProto.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          tables_ = java.util.Collections.unmodifiableList(tables_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          joins_ = java.util.Collections.unmodifiableList(joins_);
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          tablePaths_ = java.util.Collections.unmodifiableList(tablePaths_);
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          formulas_ = java.util.Collections.unmodifiableList(formulas_);
        }
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          viewColumns_ = java.util.Collections.unmodifiableList(viewColumns_);
        }
        if (((mutable_bitField0_ & 0x00000100) != 0)) {
          joinsWith_ = java.util.Collections.unmodifiableList(joinsWith_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_ViewEDocProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_ViewEDocProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.ViewEDocProto.class, EDoc.ViewEDocProto.Builder.class);
    }

    public interface ViewColumnOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ViewEDocProto.ViewColumn)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * [OPTIONAL].
       * Name of the column as seen by users. This field is optional. If not
       * provided, we use the search_output_column to display.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       * [OPTIONAL].
       * Name of the column as seen by users. This field is optional. If not
       * provided, we use the search_output_column to display.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * [OPTIONAL].
       * Name of the column as seen by users. This field is optional. If not
       * provided, we use the search_output_column to display.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * Description of the column.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return Whether the description field is set.
       */
      boolean hasDescription();
      /**
       * <pre>
       * Description of the column.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The description.
       */
      java.lang.String getDescription();
      /**
       * <pre>
       * Description of the column.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The bytes for description.
       */
      com.google.protobuf.ByteString
          getDescriptionBytes();

      /**
       * <pre>
       * ID of the column to refer to in the edoc.
       * </pre>
       *
       * <code>optional string search_output_column = 3 [(.Annotation.compulsory) = true];</code>
       * @return Whether the searchOutputColumn field is set.
       */
      boolean hasSearchOutputColumn();
      /**
       * <pre>
       * ID of the column to refer to in the edoc.
       * </pre>
       *
       * <code>optional string search_output_column = 3 [(.Annotation.compulsory) = true];</code>
       * @return The searchOutputColumn.
       */
      java.lang.String getSearchOutputColumn();
      /**
       * <pre>
       * ID of the column to refer to in the edoc.
       * </pre>
       *
       * <code>optional string search_output_column = 3 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for searchOutputColumn.
       */
      com.google.protobuf.ByteString
          getSearchOutputColumnBytes();

      /**
       * <pre>
       * non-default properties to specify for the given column.
       * </pre>
       *
       * <code>optional .ColumnProperties properties = 4;</code>
       * @return Whether the properties field is set.
       */
      boolean hasProperties();
      /**
       * <pre>
       * non-default properties to specify for the given column.
       * </pre>
       *
       * <code>optional .ColumnProperties properties = 4;</code>
       * @return The properties.
       */
      EDoc.ColumnProperties getProperties();
      /**
       * <pre>
       * non-default properties to specify for the given column.
       * </pre>
       *
       * <code>optional .ColumnProperties properties = 4;</code>
       */
      EDoc.ColumnPropertiesOrBuilder getPropertiesOrBuilder();
    }
    /**
     * <pre>
     * Details related to columns present in the view.
     * </pre>
     *
     * Protobuf type {@code ViewEDocProto.ViewColumn}
     */
    public static final class ViewColumn extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:ViewEDocProto.ViewColumn)
        ViewColumnOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ViewColumn.newBuilder() to construct.
      private ViewColumn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ViewColumn() {
        name_ = "";
        description_ = "";
        searchOutputColumn_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ViewColumn();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ViewColumn(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                description_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                searchOutputColumn_ = bs;
                break;
              }
              case 34: {
                EDoc.ColumnProperties.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) != 0)) {
                  subBuilder = properties_.toBuilder();
                }
                properties_ = input.readMessage(EDoc.ColumnProperties.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(properties_);
                  properties_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ViewEDocProto_ViewColumn_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ViewEDocProto_ViewColumn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ViewEDocProto.ViewColumn.class, EDoc.ViewEDocProto.ViewColumn.Builder.class);
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * [OPTIONAL].
       * Name of the column as seen by users. This field is optional. If not
       * provided, we use the search_output_column to display.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * [OPTIONAL].
       * Name of the column as seen by users. This field is optional. If not
       * provided, we use the search_output_column to display.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * [OPTIONAL].
       * Name of the column as seen by users. This field is optional. If not
       * provided, we use the search_output_column to display.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DESCRIPTION_FIELD_NUMBER = 2;
      private volatile java.lang.Object description_;
      /**
       * <pre>
       * Description of the column.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return Whether the description field is set.
       */
      @java.lang.Override
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Description of the column.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The description.
       */
      @java.lang.Override
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Description of the column.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The bytes for description.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SEARCH_OUTPUT_COLUMN_FIELD_NUMBER = 3;
      private volatile java.lang.Object searchOutputColumn_;
      /**
       * <pre>
       * ID of the column to refer to in the edoc.
       * </pre>
       *
       * <code>optional string search_output_column = 3 [(.Annotation.compulsory) = true];</code>
       * @return Whether the searchOutputColumn field is set.
       */
      @java.lang.Override
      public boolean hasSearchOutputColumn() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * ID of the column to refer to in the edoc.
       * </pre>
       *
       * <code>optional string search_output_column = 3 [(.Annotation.compulsory) = true];</code>
       * @return The searchOutputColumn.
       */
      @java.lang.Override
      public java.lang.String getSearchOutputColumn() {
        java.lang.Object ref = searchOutputColumn_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            searchOutputColumn_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * ID of the column to refer to in the edoc.
       * </pre>
       *
       * <code>optional string search_output_column = 3 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for searchOutputColumn.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSearchOutputColumnBytes() {
        java.lang.Object ref = searchOutputColumn_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          searchOutputColumn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PROPERTIES_FIELD_NUMBER = 4;
      private EDoc.ColumnProperties properties_;
      /**
       * <pre>
       * non-default properties to specify for the given column.
       * </pre>
       *
       * <code>optional .ColumnProperties properties = 4;</code>
       * @return Whether the properties field is set.
       */
      @java.lang.Override
      public boolean hasProperties() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * non-default properties to specify for the given column.
       * </pre>
       *
       * <code>optional .ColumnProperties properties = 4;</code>
       * @return The properties.
       */
      @java.lang.Override
      public EDoc.ColumnProperties getProperties() {
        return properties_ == null ? EDoc.ColumnProperties.getDefaultInstance() : properties_;
      }
      /**
       * <pre>
       * non-default properties to specify for the given column.
       * </pre>
       *
       * <code>optional .ColumnProperties properties = 4;</code>
       */
      @java.lang.Override
      public EDoc.ColumnPropertiesOrBuilder getPropertiesOrBuilder() {
        return properties_ == null ? EDoc.ColumnProperties.getDefaultInstance() : properties_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, searchOutputColumn_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeMessage(4, getProperties());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, searchOutputColumn_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getProperties());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.ViewEDocProto.ViewColumn)) {
          return super.equals(obj);
        }
        EDoc.ViewEDocProto.ViewColumn other = (EDoc.ViewEDocProto.ViewColumn) obj;

        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasDescription() != other.hasDescription()) return false;
        if (hasDescription()) {
          if (!getDescription()
              .equals(other.getDescription())) return false;
        }
        if (hasSearchOutputColumn() != other.hasSearchOutputColumn()) return false;
        if (hasSearchOutputColumn()) {
          if (!getSearchOutputColumn()
              .equals(other.getSearchOutputColumn())) return false;
        }
        if (hasProperties() != other.hasProperties()) return false;
        if (hasProperties()) {
          if (!getProperties()
              .equals(other.getProperties())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasDescription()) {
          hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getDescription().hashCode();
        }
        if (hasSearchOutputColumn()) {
          hash = (37 * hash) + SEARCH_OUTPUT_COLUMN_FIELD_NUMBER;
          hash = (53 * hash) + getSearchOutputColumn().hashCode();
        }
        if (hasProperties()) {
          hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
          hash = (53 * hash) + getProperties().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.ViewEDocProto.ViewColumn parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ViewEDocProto.ViewColumn parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ViewEDocProto.ViewColumn parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ViewEDocProto.ViewColumn parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ViewEDocProto.ViewColumn parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ViewEDocProto.ViewColumn parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ViewEDocProto.ViewColumn parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ViewEDocProto.ViewColumn parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ViewEDocProto.ViewColumn parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.ViewEDocProto.ViewColumn parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ViewEDocProto.ViewColumn parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ViewEDocProto.ViewColumn parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.ViewEDocProto.ViewColumn prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Details related to columns present in the view.
       * </pre>
       *
       * Protobuf type {@code ViewEDocProto.ViewColumn}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ViewEDocProto.ViewColumn)
          EDoc.ViewEDocProto.ViewColumnOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_ViewEDocProto_ViewColumn_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_ViewEDocProto_ViewColumn_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.ViewEDocProto.ViewColumn.class, EDoc.ViewEDocProto.ViewColumn.Builder.class);
        }

        // Construct using EDoc.ViewEDocProto.ViewColumn.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getPropertiesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          description_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          searchOutputColumn_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          if (propertiesBuilder_ == null) {
            properties_ = null;
          } else {
            propertiesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_ViewEDocProto_ViewColumn_descriptor;
        }

        @java.lang.Override
        public EDoc.ViewEDocProto.ViewColumn getDefaultInstanceForType() {
          return EDoc.ViewEDocProto.ViewColumn.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.ViewEDocProto.ViewColumn build() {
          EDoc.ViewEDocProto.ViewColumn result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.ViewEDocProto.ViewColumn buildPartial() {
          EDoc.ViewEDocProto.ViewColumn result = new EDoc.ViewEDocProto.ViewColumn(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.description_ = description_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            to_bitField0_ |= 0x00000004;
          }
          result.searchOutputColumn_ = searchOutputColumn_;
          if (((from_bitField0_ & 0x00000008) != 0)) {
            if (propertiesBuilder_ == null) {
              result.properties_ = properties_;
            } else {
              result.properties_ = propertiesBuilder_.build();
            }
            to_bitField0_ |= 0x00000008;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.ViewEDocProto.ViewColumn) {
            return mergeFrom((EDoc.ViewEDocProto.ViewColumn)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.ViewEDocProto.ViewColumn other) {
          if (other == EDoc.ViewEDocProto.ViewColumn.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasDescription()) {
            bitField0_ |= 0x00000002;
            description_ = other.description_;
            onChanged();
          }
          if (other.hasSearchOutputColumn()) {
            bitField0_ |= 0x00000004;
            searchOutputColumn_ = other.searchOutputColumn_;
            onChanged();
          }
          if (other.hasProperties()) {
            mergeProperties(other.getProperties());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.ViewEDocProto.ViewColumn parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.ViewEDocProto.ViewColumn) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * [OPTIONAL].
         * Name of the column as seen by users. This field is optional. If not
         * provided, we use the search_output_column to display.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Name of the column as seen by users. This field is optional. If not
         * provided, we use the search_output_column to display.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Name of the column as seen by users. This field is optional. If not
         * provided, we use the search_output_column to display.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Name of the column as seen by users. This field is optional. If not
         * provided, we use the search_output_column to display.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Name of the column as seen by users. This field is optional. If not
         * provided, we use the search_output_column to display.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Name of the column as seen by users. This field is optional. If not
         * provided, we use the search_output_column to display.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object description_ = "";
        /**
         * <pre>
         * Description of the column.
         * </pre>
         *
         * <code>optional string description = 2;</code>
         * @return Whether the description field is set.
         */
        public boolean hasDescription() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Description of the column.
         * </pre>
         *
         * <code>optional string description = 2;</code>
         * @return The description.
         */
        public java.lang.String getDescription() {
          java.lang.Object ref = description_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              description_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Description of the column.
         * </pre>
         *
         * <code>optional string description = 2;</code>
         * @return The bytes for description.
         */
        public com.google.protobuf.ByteString
            getDescriptionBytes() {
          java.lang.Object ref = description_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            description_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Description of the column.
         * </pre>
         *
         * <code>optional string description = 2;</code>
         * @param value The description to set.
         * @return This builder for chaining.
         */
        public Builder setDescription(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          description_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Description of the column.
         * </pre>
         *
         * <code>optional string description = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearDescription() {
          bitField0_ = (bitField0_ & ~0x00000002);
          description_ = getDefaultInstance().getDescription();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Description of the column.
         * </pre>
         *
         * <code>optional string description = 2;</code>
         * @param value The bytes for description to set.
         * @return This builder for chaining.
         */
        public Builder setDescriptionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          description_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object searchOutputColumn_ = "";
        /**
         * <pre>
         * ID of the column to refer to in the edoc.
         * </pre>
         *
         * <code>optional string search_output_column = 3 [(.Annotation.compulsory) = true];</code>
         * @return Whether the searchOutputColumn field is set.
         */
        public boolean hasSearchOutputColumn() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * ID of the column to refer to in the edoc.
         * </pre>
         *
         * <code>optional string search_output_column = 3 [(.Annotation.compulsory) = true];</code>
         * @return The searchOutputColumn.
         */
        public java.lang.String getSearchOutputColumn() {
          java.lang.Object ref = searchOutputColumn_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              searchOutputColumn_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * ID of the column to refer to in the edoc.
         * </pre>
         *
         * <code>optional string search_output_column = 3 [(.Annotation.compulsory) = true];</code>
         * @return The bytes for searchOutputColumn.
         */
        public com.google.protobuf.ByteString
            getSearchOutputColumnBytes() {
          java.lang.Object ref = searchOutputColumn_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            searchOutputColumn_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * ID of the column to refer to in the edoc.
         * </pre>
         *
         * <code>optional string search_output_column = 3 [(.Annotation.compulsory) = true];</code>
         * @param value The searchOutputColumn to set.
         * @return This builder for chaining.
         */
        public Builder setSearchOutputColumn(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          searchOutputColumn_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * ID of the column to refer to in the edoc.
         * </pre>
         *
         * <code>optional string search_output_column = 3 [(.Annotation.compulsory) = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearSearchOutputColumn() {
          bitField0_ = (bitField0_ & ~0x00000004);
          searchOutputColumn_ = getDefaultInstance().getSearchOutputColumn();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * ID of the column to refer to in the edoc.
         * </pre>
         *
         * <code>optional string search_output_column = 3 [(.Annotation.compulsory) = true];</code>
         * @param value The bytes for searchOutputColumn to set.
         * @return This builder for chaining.
         */
        public Builder setSearchOutputColumnBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          searchOutputColumn_ = value;
          onChanged();
          return this;
        }

        private EDoc.ColumnProperties properties_;
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ColumnProperties, EDoc.ColumnProperties.Builder, EDoc.ColumnPropertiesOrBuilder> propertiesBuilder_;
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 4;</code>
         * @return Whether the properties field is set.
         */
        public boolean hasProperties() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 4;</code>
         * @return The properties.
         */
        public EDoc.ColumnProperties getProperties() {
          if (propertiesBuilder_ == null) {
            return properties_ == null ? EDoc.ColumnProperties.getDefaultInstance() : properties_;
          } else {
            return propertiesBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 4;</code>
         */
        public Builder setProperties(EDoc.ColumnProperties value) {
          if (propertiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            properties_ = value;
            onChanged();
          } else {
            propertiesBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 4;</code>
         */
        public Builder setProperties(
            EDoc.ColumnProperties.Builder builderForValue) {
          if (propertiesBuilder_ == null) {
            properties_ = builderForValue.build();
            onChanged();
          } else {
            propertiesBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 4;</code>
         */
        public Builder mergeProperties(EDoc.ColumnProperties value) {
          if (propertiesBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0) &&
                properties_ != null &&
                properties_ != EDoc.ColumnProperties.getDefaultInstance()) {
              properties_ =
                EDoc.ColumnProperties.newBuilder(properties_).mergeFrom(value).buildPartial();
            } else {
              properties_ = value;
            }
            onChanged();
          } else {
            propertiesBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 4;</code>
         */
        public Builder clearProperties() {
          if (propertiesBuilder_ == null) {
            properties_ = null;
            onChanged();
          } else {
            propertiesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 4;</code>
         */
        public EDoc.ColumnProperties.Builder getPropertiesBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getPropertiesFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 4;</code>
         */
        public EDoc.ColumnPropertiesOrBuilder getPropertiesOrBuilder() {
          if (propertiesBuilder_ != null) {
            return propertiesBuilder_.getMessageOrBuilder();
          } else {
            return properties_ == null ?
                EDoc.ColumnProperties.getDefaultInstance() : properties_;
          }
        }
        /**
         * <pre>
         * non-default properties to specify for the given column.
         * </pre>
         *
         * <code>optional .ColumnProperties properties = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ColumnProperties, EDoc.ColumnProperties.Builder, EDoc.ColumnPropertiesOrBuilder> 
            getPropertiesFieldBuilder() {
          if (propertiesBuilder_ == null) {
            propertiesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                EDoc.ColumnProperties, EDoc.ColumnProperties.Builder, EDoc.ColumnPropertiesOrBuilder>(
                    getProperties(),
                    getParentForChildren(),
                    isClean());
            properties_ = null;
          }
          return propertiesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:ViewEDocProto.ViewColumn)
      }

      // @@protoc_insertion_point(class_scope:ViewEDocProto.ViewColumn)
      private static final EDoc.ViewEDocProto.ViewColumn DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.ViewEDocProto.ViewColumn();
      }

      public static EDoc.ViewEDocProto.ViewColumn getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ViewColumn>
          PARSER = new com.google.protobuf.AbstractParser<ViewColumn>() {
        @java.lang.Override
        public ViewColumn parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ViewColumn(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ViewColumn> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ViewColumn> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.ViewEDocProto.ViewColumn getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Display name of the view.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Display name of the view.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Display name of the view.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * Description of the view.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return Whether the description field is set.
     */
    @java.lang.Override
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Description of the view.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Description of the view.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TABLES_FIELD_NUMBER = 3;
    private java.util.List<EDoc.Identity> tables_;
    /**
     * <pre>
     * All the tables referred in the view.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.Identity> getTablesList() {
      return tables_;
    }
    /**
     * <pre>
     * All the tables referred in the view.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.IdentityOrBuilder> 
        getTablesOrBuilderList() {
      return tables_;
    }
    /**
     * <pre>
     * All the tables referred in the view.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public int getTablesCount() {
      return tables_.size();
    }
    /**
     * <pre>
     * All the tables referred in the view.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public EDoc.Identity getTables(int index) {
      return tables_.get(index);
    }
    /**
     * <pre>
     * All the tables referred in the view.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public EDoc.IdentityOrBuilder getTablesOrBuilder(
        int index) {
      return tables_.get(index);
    }

    public static final int JOINS_FIELD_NUMBER = 4;
    private java.util.List<EDoc.Join> joins_;
    /**
     * <pre>
     * All the joins used in the creation of the view.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.Join> getJoinsList() {
      return joins_;
    }
    /**
     * <pre>
     * All the joins used in the creation of the view.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.JoinOrBuilder> 
        getJoinsOrBuilderList() {
      return joins_;
    }
    /**
     * <pre>
     * All the joins used in the creation of the view.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public int getJoinsCount() {
      return joins_.size();
    }
    /**
     * <pre>
     * All the joins used in the creation of the view.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.Join getJoins(int index) {
      return joins_.get(index);
    }
    /**
     * <pre>
     * All the joins used in the creation of the view.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.JoinOrBuilder getJoinsOrBuilder(
        int index) {
      return joins_.get(index);
    }

    public static final int TABLE_PATHS_FIELD_NUMBER = 5;
    private java.util.List<EDoc.TablePath> tablePaths_;
    /**
     * <pre>
     * Various manifestations of the tables in the view.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.TablePath> getTablePathsList() {
      return tablePaths_;
    }
    /**
     * <pre>
     * Various manifestations of the tables in the view.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.TablePathOrBuilder> 
        getTablePathsOrBuilderList() {
      return tablePaths_;
    }
    /**
     * <pre>
     * Various manifestations of the tables in the view.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public int getTablePathsCount() {
      return tablePaths_.size();
    }
    /**
     * <pre>
     * Various manifestations of the tables in the view.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.TablePath getTablePaths(int index) {
      return tablePaths_.get(index);
    }
    /**
     * <pre>
     * Various manifestations of the tables in the view.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.TablePathOrBuilder getTablePathsOrBuilder(
        int index) {
      return tablePaths_.get(index);
    }

    public static final int FORMULAS_FIELD_NUMBER = 6;
    private java.util.List<EDoc.Formula> formulas_;
    /**
     * <pre>
     * In context formula.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.Formula> getFormulasList() {
      return formulas_;
    }
    /**
     * <pre>
     * In context formula.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.FormulaOrBuilder> 
        getFormulasOrBuilderList() {
      return formulas_;
    }
    /**
     * <pre>
     * In context formula.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public int getFormulasCount() {
      return formulas_.size();
    }
    /**
     * <pre>
     * In context formula.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.Formula getFormulas(int index) {
      return formulas_.get(index);
    }
    /**
     * <pre>
     * In context formula.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.FormulaOrBuilder getFormulasOrBuilder(
        int index) {
      return formulas_.get(index);
    }

    public static final int SEARCH_QUERY_FIELD_NUMBER = 7;
    private volatile java.lang.Object searchQuery_;
    /**
     * <pre>
     * String representing fully disambiguated Search Query.
     * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
     * </pre>
     *
     * <code>optional string search_query = 7;</code>
     * @return Whether the searchQuery field is set.
     */
    @java.lang.Override
    public boolean hasSearchQuery() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * String representing fully disambiguated Search Query.
     * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
     * </pre>
     *
     * <code>optional string search_query = 7;</code>
     * @return The searchQuery.
     */
    @java.lang.Override
    public java.lang.String getSearchQuery() {
      java.lang.Object ref = searchQuery_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          searchQuery_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * String representing fully disambiguated Search Query.
     * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
     * </pre>
     *
     * <code>optional string search_query = 7;</code>
     * @return The bytes for searchQuery.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSearchQueryBytes() {
      java.lang.Object ref = searchQuery_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        searchQuery_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VIEW_COLUMNS_FIELD_NUMBER = 8;
    private java.util.List<EDoc.ViewEDocProto.ViewColumn> viewColumns_;
    /**
     * <pre>
     * List of columns in this view. Each entry contains the modeling properties
     * for that column. Note: This list can be a subset of the number of columns
     * that are created from the search query for this view. For the columns that
     * are missing, we use default column properties.
     * </pre>
     *
     * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.ViewEDocProto.ViewColumn> getViewColumnsList() {
      return viewColumns_;
    }
    /**
     * <pre>
     * List of columns in this view. Each entry contains the modeling properties
     * for that column. Note: This list can be a subset of the number of columns
     * that are created from the search query for this view. For the columns that
     * are missing, we use default column properties.
     * </pre>
     *
     * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.ViewEDocProto.ViewColumnOrBuilder> 
        getViewColumnsOrBuilderList() {
      return viewColumns_;
    }
    /**
     * <pre>
     * List of columns in this view. Each entry contains the modeling properties
     * for that column. Note: This list can be a subset of the number of columns
     * that are created from the search query for this view. For the columns that
     * are missing, we use default column properties.
     * </pre>
     *
     * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
     */
    @java.lang.Override
    public int getViewColumnsCount() {
      return viewColumns_.size();
    }
    /**
     * <pre>
     * List of columns in this view. Each entry contains the modeling properties
     * for that column. Note: This list can be a subset of the number of columns
     * that are created from the search query for this view. For the columns that
     * are missing, we use default column properties.
     * </pre>
     *
     * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
     */
    @java.lang.Override
    public EDoc.ViewEDocProto.ViewColumn getViewColumns(int index) {
      return viewColumns_.get(index);
    }
    /**
     * <pre>
     * List of columns in this view. Each entry contains the modeling properties
     * for that column. Note: This list can be a subset of the number of columns
     * that are created from the search query for this view. For the columns that
     * are missing, we use default column properties.
     * </pre>
     *
     * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
     */
    @java.lang.Override
    public EDoc.ViewEDocProto.ViewColumnOrBuilder getViewColumnsOrBuilder(
        int index) {
      return viewColumns_.get(index);
    }

    public static final int JOINS_WITH_FIELD_NUMBER = 9;
    private java.util.List<EDoc.RelationEDocProto> joinsWith_;
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.RelationEDocProto> getJoinsWithList() {
      return joinsWith_;
    }
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.RelationEDocProtoOrBuilder> 
        getJoinsWithOrBuilderList() {
      return joinsWith_;
    }
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    @java.lang.Override
    public int getJoinsWithCount() {
      return joinsWith_.size();
    }
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    @java.lang.Override
    public EDoc.RelationEDocProto getJoinsWith(int index) {
      return joinsWith_.get(index);
    }
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    @java.lang.Override
    public EDoc.RelationEDocProtoOrBuilder getJoinsWithOrBuilder(
        int index) {
      return joinsWith_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
      }
      for (int i = 0; i < tables_.size(); i++) {
        output.writeMessage(3, tables_.get(i));
      }
      for (int i = 0; i < joins_.size(); i++) {
        output.writeMessage(4, joins_.get(i));
      }
      for (int i = 0; i < tablePaths_.size(); i++) {
        output.writeMessage(5, tablePaths_.get(i));
      }
      for (int i = 0; i < formulas_.size(); i++) {
        output.writeMessage(6, formulas_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, searchQuery_);
      }
      for (int i = 0; i < viewColumns_.size(); i++) {
        output.writeMessage(8, viewColumns_.get(i));
      }
      for (int i = 0; i < joinsWith_.size(); i++) {
        output.writeMessage(9, joinsWith_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
      }
      for (int i = 0; i < tables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tables_.get(i));
      }
      for (int i = 0; i < joins_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, joins_.get(i));
      }
      for (int i = 0; i < tablePaths_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, tablePaths_.get(i));
      }
      for (int i = 0; i < formulas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, formulas_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, searchQuery_);
      }
      for (int i = 0; i < viewColumns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, viewColumns_.get(i));
      }
      for (int i = 0; i < joinsWith_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, joinsWith_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.ViewEDocProto)) {
        return super.equals(obj);
      }
      EDoc.ViewEDocProto other = (EDoc.ViewEDocProto) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasDescription() != other.hasDescription()) return false;
      if (hasDescription()) {
        if (!getDescription()
            .equals(other.getDescription())) return false;
      }
      if (!getTablesList()
          .equals(other.getTablesList())) return false;
      if (!getJoinsList()
          .equals(other.getJoinsList())) return false;
      if (!getTablePathsList()
          .equals(other.getTablePathsList())) return false;
      if (!getFormulasList()
          .equals(other.getFormulasList())) return false;
      if (hasSearchQuery() != other.hasSearchQuery()) return false;
      if (hasSearchQuery()) {
        if (!getSearchQuery()
            .equals(other.getSearchQuery())) return false;
      }
      if (!getViewColumnsList()
          .equals(other.getViewColumnsList())) return false;
      if (!getJoinsWithList()
          .equals(other.getJoinsWithList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasDescription()) {
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription().hashCode();
      }
      if (getTablesCount() > 0) {
        hash = (37 * hash) + TABLES_FIELD_NUMBER;
        hash = (53 * hash) + getTablesList().hashCode();
      }
      if (getJoinsCount() > 0) {
        hash = (37 * hash) + JOINS_FIELD_NUMBER;
        hash = (53 * hash) + getJoinsList().hashCode();
      }
      if (getTablePathsCount() > 0) {
        hash = (37 * hash) + TABLE_PATHS_FIELD_NUMBER;
        hash = (53 * hash) + getTablePathsList().hashCode();
      }
      if (getFormulasCount() > 0) {
        hash = (37 * hash) + FORMULAS_FIELD_NUMBER;
        hash = (53 * hash) + getFormulasList().hashCode();
      }
      if (hasSearchQuery()) {
        hash = (37 * hash) + SEARCH_QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getSearchQuery().hashCode();
      }
      if (getViewColumnsCount() > 0) {
        hash = (37 * hash) + VIEW_COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getViewColumnsList().hashCode();
      }
      if (getJoinsWithCount() > 0) {
        hash = (37 * hash) + JOINS_WITH_FIELD_NUMBER;
        hash = (53 * hash) + getJoinsWithList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.ViewEDocProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ViewEDocProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ViewEDocProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ViewEDocProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ViewEDocProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ViewEDocProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ViewEDocProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.ViewEDocProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.ViewEDocProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.ViewEDocProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.ViewEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.ViewEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.ViewEDocProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ViewEDocProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ViewEDocProto)
        EDoc.ViewEDocProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ViewEDocProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ViewEDocProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ViewEDocProto.class, EDoc.ViewEDocProto.Builder.class);
      }

      // Construct using EDoc.ViewEDocProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTablesFieldBuilder();
          getJoinsFieldBuilder();
          getTablePathsFieldBuilder();
          getFormulasFieldBuilder();
          getViewColumnsFieldBuilder();
          getJoinsWithFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          tablesBuilder_.clear();
        }
        if (joinsBuilder_ == null) {
          joins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          joinsBuilder_.clear();
        }
        if (tablePathsBuilder_ == null) {
          tablePaths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          tablePathsBuilder_.clear();
        }
        if (formulasBuilder_ == null) {
          formulas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          formulasBuilder_.clear();
        }
        searchQuery_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        if (viewColumnsBuilder_ == null) {
          viewColumns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          viewColumnsBuilder_.clear();
        }
        if (joinsWithBuilder_ == null) {
          joinsWith_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          joinsWithBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_ViewEDocProto_descriptor;
      }

      @java.lang.Override
      public EDoc.ViewEDocProto getDefaultInstanceForType() {
        return EDoc.ViewEDocProto.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.ViewEDocProto build() {
        EDoc.ViewEDocProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.ViewEDocProto buildPartial() {
        EDoc.ViewEDocProto result = new EDoc.ViewEDocProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.description_ = description_;
        if (tablesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            tables_ = java.util.Collections.unmodifiableList(tables_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.tables_ = tables_;
        } else {
          result.tables_ = tablesBuilder_.build();
        }
        if (joinsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            joins_ = java.util.Collections.unmodifiableList(joins_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.joins_ = joins_;
        } else {
          result.joins_ = joinsBuilder_.build();
        }
        if (tablePathsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            tablePaths_ = java.util.Collections.unmodifiableList(tablePaths_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.tablePaths_ = tablePaths_;
        } else {
          result.tablePaths_ = tablePathsBuilder_.build();
        }
        if (formulasBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            formulas_ = java.util.Collections.unmodifiableList(formulas_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.formulas_ = formulas_;
        } else {
          result.formulas_ = formulasBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.searchQuery_ = searchQuery_;
        if (viewColumnsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)) {
            viewColumns_ = java.util.Collections.unmodifiableList(viewColumns_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.viewColumns_ = viewColumns_;
        } else {
          result.viewColumns_ = viewColumnsBuilder_.build();
        }
        if (joinsWithBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0)) {
            joinsWith_ = java.util.Collections.unmodifiableList(joinsWith_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.joinsWith_ = joinsWith_;
        } else {
          result.joinsWith_ = joinsWithBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.ViewEDocProto) {
          return mergeFrom((EDoc.ViewEDocProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.ViewEDocProto other) {
        if (other == EDoc.ViewEDocProto.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000002;
          description_ = other.description_;
          onChanged();
        }
        if (tablesBuilder_ == null) {
          if (!other.tables_.isEmpty()) {
            if (tables_.isEmpty()) {
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTablesIsMutable();
              tables_.addAll(other.tables_);
            }
            onChanged();
          }
        } else {
          if (!other.tables_.isEmpty()) {
            if (tablesBuilder_.isEmpty()) {
              tablesBuilder_.dispose();
              tablesBuilder_ = null;
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000004);
              tablesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTablesFieldBuilder() : null;
            } else {
              tablesBuilder_.addAllMessages(other.tables_);
            }
          }
        }
        if (joinsBuilder_ == null) {
          if (!other.joins_.isEmpty()) {
            if (joins_.isEmpty()) {
              joins_ = other.joins_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureJoinsIsMutable();
              joins_.addAll(other.joins_);
            }
            onChanged();
          }
        } else {
          if (!other.joins_.isEmpty()) {
            if (joinsBuilder_.isEmpty()) {
              joinsBuilder_.dispose();
              joinsBuilder_ = null;
              joins_ = other.joins_;
              bitField0_ = (bitField0_ & ~0x00000008);
              joinsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getJoinsFieldBuilder() : null;
            } else {
              joinsBuilder_.addAllMessages(other.joins_);
            }
          }
        }
        if (tablePathsBuilder_ == null) {
          if (!other.tablePaths_.isEmpty()) {
            if (tablePaths_.isEmpty()) {
              tablePaths_ = other.tablePaths_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureTablePathsIsMutable();
              tablePaths_.addAll(other.tablePaths_);
            }
            onChanged();
          }
        } else {
          if (!other.tablePaths_.isEmpty()) {
            if (tablePathsBuilder_.isEmpty()) {
              tablePathsBuilder_.dispose();
              tablePathsBuilder_ = null;
              tablePaths_ = other.tablePaths_;
              bitField0_ = (bitField0_ & ~0x00000010);
              tablePathsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTablePathsFieldBuilder() : null;
            } else {
              tablePathsBuilder_.addAllMessages(other.tablePaths_);
            }
          }
        }
        if (formulasBuilder_ == null) {
          if (!other.formulas_.isEmpty()) {
            if (formulas_.isEmpty()) {
              formulas_ = other.formulas_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureFormulasIsMutable();
              formulas_.addAll(other.formulas_);
            }
            onChanged();
          }
        } else {
          if (!other.formulas_.isEmpty()) {
            if (formulasBuilder_.isEmpty()) {
              formulasBuilder_.dispose();
              formulasBuilder_ = null;
              formulas_ = other.formulas_;
              bitField0_ = (bitField0_ & ~0x00000020);
              formulasBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFormulasFieldBuilder() : null;
            } else {
              formulasBuilder_.addAllMessages(other.formulas_);
            }
          }
        }
        if (other.hasSearchQuery()) {
          bitField0_ |= 0x00000040;
          searchQuery_ = other.searchQuery_;
          onChanged();
        }
        if (viewColumnsBuilder_ == null) {
          if (!other.viewColumns_.isEmpty()) {
            if (viewColumns_.isEmpty()) {
              viewColumns_ = other.viewColumns_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureViewColumnsIsMutable();
              viewColumns_.addAll(other.viewColumns_);
            }
            onChanged();
          }
        } else {
          if (!other.viewColumns_.isEmpty()) {
            if (viewColumnsBuilder_.isEmpty()) {
              viewColumnsBuilder_.dispose();
              viewColumnsBuilder_ = null;
              viewColumns_ = other.viewColumns_;
              bitField0_ = (bitField0_ & ~0x00000080);
              viewColumnsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getViewColumnsFieldBuilder() : null;
            } else {
              viewColumnsBuilder_.addAllMessages(other.viewColumns_);
            }
          }
        }
        if (joinsWithBuilder_ == null) {
          if (!other.joinsWith_.isEmpty()) {
            if (joinsWith_.isEmpty()) {
              joinsWith_ = other.joinsWith_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureJoinsWithIsMutable();
              joinsWith_.addAll(other.joinsWith_);
            }
            onChanged();
          }
        } else {
          if (!other.joinsWith_.isEmpty()) {
            if (joinsWithBuilder_.isEmpty()) {
              joinsWithBuilder_.dispose();
              joinsWithBuilder_ = null;
              joinsWith_ = other.joinsWith_;
              bitField0_ = (bitField0_ & ~0x00000100);
              joinsWithBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getJoinsWithFieldBuilder() : null;
            } else {
              joinsWithBuilder_.addAllMessages(other.joinsWith_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.ViewEDocProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.ViewEDocProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Display name of the view.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Display name of the view.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Display name of the view.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Display name of the view.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Display name of the view.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Display name of the view.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * Description of the view.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return Whether the description field is set.
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Description of the view.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Description of the view.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Description of the view.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Description of the view.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Description of the view.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }

      private java.util.List<EDoc.Identity> tables_ =
        java.util.Collections.emptyList();
      private void ensureTablesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          tables_ = new java.util.ArrayList<EDoc.Identity>(tables_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> tablesBuilder_;

      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public java.util.List<EDoc.Identity> getTablesList() {
        if (tablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tables_);
        } else {
          return tablesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public int getTablesCount() {
        if (tablesBuilder_ == null) {
          return tables_.size();
        } else {
          return tablesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.Identity getTables(int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);
        } else {
          return tablesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder setTables(
          int index, EDoc.Identity value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.set(index, value);
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder setTables(
          int index, EDoc.Identity.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.set(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addTables(EDoc.Identity value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addTables(
          int index, EDoc.Identity value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(index, value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addTables(
          EDoc.Identity.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addTables(
          int index, EDoc.Identity.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addAllTables(
          java.lang.Iterable<? extends EDoc.Identity> values) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tables_);
          onChanged();
        } else {
          tablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder clearTables() {
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          tablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder removeTables(int index) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.remove(index);
          onChanged();
        } else {
          tablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.Identity.Builder getTablesBuilder(
          int index) {
        return getTablesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.IdentityOrBuilder getTablesOrBuilder(
          int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);  } else {
          return tablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public java.util.List<? extends EDoc.IdentityOrBuilder> 
           getTablesOrBuilderList() {
        if (tablesBuilder_ != null) {
          return tablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tables_);
        }
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.Identity.Builder addTablesBuilder() {
        return getTablesFieldBuilder().addBuilder(
            EDoc.Identity.getDefaultInstance());
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.Identity.Builder addTablesBuilder(
          int index) {
        return getTablesFieldBuilder().addBuilder(
            index, EDoc.Identity.getDefaultInstance());
      }
      /**
       * <pre>
       * All the tables referred in the view.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public java.util.List<EDoc.Identity.Builder> 
           getTablesBuilderList() {
        return getTablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> 
          getTablesFieldBuilder() {
        if (tablesBuilder_ == null) {
          tablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder>(
                  tables_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          tables_ = null;
        }
        return tablesBuilder_;
      }

      private java.util.List<EDoc.Join> joins_ =
        java.util.Collections.emptyList();
      private void ensureJoinsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          joins_ = new java.util.ArrayList<EDoc.Join>(joins_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Join, EDoc.Join.Builder, EDoc.JoinOrBuilder> joinsBuilder_;

      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.Join> getJoinsList() {
        if (joinsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(joins_);
        } else {
          return joinsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public int getJoinsCount() {
        if (joinsBuilder_ == null) {
          return joins_.size();
        } else {
          return joinsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Join getJoins(int index) {
        if (joinsBuilder_ == null) {
          return joins_.get(index);
        } else {
          return joinsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setJoins(
          int index, EDoc.Join value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.set(index, value);
          onChanged();
        } else {
          joinsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setJoins(
          int index, EDoc.Join.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.set(index, builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addJoins(EDoc.Join value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.add(value);
          onChanged();
        } else {
          joinsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addJoins(
          int index, EDoc.Join value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.add(index, value);
          onChanged();
        } else {
          joinsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addJoins(
          EDoc.Join.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.add(builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addJoins(
          int index, EDoc.Join.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.add(index, builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addAllJoins(
          java.lang.Iterable<? extends EDoc.Join> values) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, joins_);
          onChanged();
        } else {
          joinsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder clearJoins() {
        if (joinsBuilder_ == null) {
          joins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          joinsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder removeJoins(int index) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.remove(index);
          onChanged();
        } else {
          joinsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Join.Builder getJoinsBuilder(
          int index) {
        return getJoinsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.JoinOrBuilder getJoinsOrBuilder(
          int index) {
        if (joinsBuilder_ == null) {
          return joins_.get(index);  } else {
          return joinsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<? extends EDoc.JoinOrBuilder> 
           getJoinsOrBuilderList() {
        if (joinsBuilder_ != null) {
          return joinsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(joins_);
        }
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Join.Builder addJoinsBuilder() {
        return getJoinsFieldBuilder().addBuilder(
            EDoc.Join.getDefaultInstance());
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Join.Builder addJoinsBuilder(
          int index) {
        return getJoinsFieldBuilder().addBuilder(
            index, EDoc.Join.getDefaultInstance());
      }
      /**
       * <pre>
       * All the joins used in the creation of the view.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.Join.Builder> 
           getJoinsBuilderList() {
        return getJoinsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Join, EDoc.Join.Builder, EDoc.JoinOrBuilder> 
          getJoinsFieldBuilder() {
        if (joinsBuilder_ == null) {
          joinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.Join, EDoc.Join.Builder, EDoc.JoinOrBuilder>(
                  joins_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          joins_ = null;
        }
        return joinsBuilder_;
      }

      private java.util.List<EDoc.TablePath> tablePaths_ =
        java.util.Collections.emptyList();
      private void ensureTablePathsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          tablePaths_ = new java.util.ArrayList<EDoc.TablePath>(tablePaths_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.TablePath, EDoc.TablePath.Builder, EDoc.TablePathOrBuilder> tablePathsBuilder_;

      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.TablePath> getTablePathsList() {
        if (tablePathsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tablePaths_);
        } else {
          return tablePathsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public int getTablePathsCount() {
        if (tablePathsBuilder_ == null) {
          return tablePaths_.size();
        } else {
          return tablePathsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePath getTablePaths(int index) {
        if (tablePathsBuilder_ == null) {
          return tablePaths_.get(index);
        } else {
          return tablePathsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setTablePaths(
          int index, EDoc.TablePath value) {
        if (tablePathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablePathsIsMutable();
          tablePaths_.set(index, value);
          onChanged();
        } else {
          tablePathsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setTablePaths(
          int index, EDoc.TablePath.Builder builderForValue) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          tablePaths_.set(index, builderForValue.build());
          onChanged();
        } else {
          tablePathsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addTablePaths(EDoc.TablePath value) {
        if (tablePathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablePathsIsMutable();
          tablePaths_.add(value);
          onChanged();
        } else {
          tablePathsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addTablePaths(
          int index, EDoc.TablePath value) {
        if (tablePathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablePathsIsMutable();
          tablePaths_.add(index, value);
          onChanged();
        } else {
          tablePathsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addTablePaths(
          EDoc.TablePath.Builder builderForValue) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          tablePaths_.add(builderForValue.build());
          onChanged();
        } else {
          tablePathsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addTablePaths(
          int index, EDoc.TablePath.Builder builderForValue) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          tablePaths_.add(index, builderForValue.build());
          onChanged();
        } else {
          tablePathsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addAllTablePaths(
          java.lang.Iterable<? extends EDoc.TablePath> values) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tablePaths_);
          onChanged();
        } else {
          tablePathsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder clearTablePaths() {
        if (tablePathsBuilder_ == null) {
          tablePaths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          tablePathsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder removeTablePaths(int index) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          tablePaths_.remove(index);
          onChanged();
        } else {
          tablePathsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePath.Builder getTablePathsBuilder(
          int index) {
        return getTablePathsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePathOrBuilder getTablePathsOrBuilder(
          int index) {
        if (tablePathsBuilder_ == null) {
          return tablePaths_.get(index);  } else {
          return tablePathsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<? extends EDoc.TablePathOrBuilder> 
           getTablePathsOrBuilderList() {
        if (tablePathsBuilder_ != null) {
          return tablePathsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tablePaths_);
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePath.Builder addTablePathsBuilder() {
        return getTablePathsFieldBuilder().addBuilder(
            EDoc.TablePath.getDefaultInstance());
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePath.Builder addTablePathsBuilder(
          int index) {
        return getTablePathsFieldBuilder().addBuilder(
            index, EDoc.TablePath.getDefaultInstance());
      }
      /**
       * <pre>
       * Various manifestations of the tables in the view.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.TablePath.Builder> 
           getTablePathsBuilderList() {
        return getTablePathsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.TablePath, EDoc.TablePath.Builder, EDoc.TablePathOrBuilder> 
          getTablePathsFieldBuilder() {
        if (tablePathsBuilder_ == null) {
          tablePathsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.TablePath, EDoc.TablePath.Builder, EDoc.TablePathOrBuilder>(
                  tablePaths_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          tablePaths_ = null;
        }
        return tablePathsBuilder_;
      }

      private java.util.List<EDoc.Formula> formulas_ =
        java.util.Collections.emptyList();
      private void ensureFormulasIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          formulas_ = new java.util.ArrayList<EDoc.Formula>(formulas_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Formula, EDoc.Formula.Builder, EDoc.FormulaOrBuilder> formulasBuilder_;

      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.Formula> getFormulasList() {
        if (formulasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(formulas_);
        } else {
          return formulasBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public int getFormulasCount() {
        if (formulasBuilder_ == null) {
          return formulas_.size();
        } else {
          return formulasBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Formula getFormulas(int index) {
        if (formulasBuilder_ == null) {
          return formulas_.get(index);
        } else {
          return formulasBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setFormulas(
          int index, EDoc.Formula value) {
        if (formulasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormulasIsMutable();
          formulas_.set(index, value);
          onChanged();
        } else {
          formulasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setFormulas(
          int index, EDoc.Formula.Builder builderForValue) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          formulas_.set(index, builderForValue.build());
          onChanged();
        } else {
          formulasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addFormulas(EDoc.Formula value) {
        if (formulasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormulasIsMutable();
          formulas_.add(value);
          onChanged();
        } else {
          formulasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addFormulas(
          int index, EDoc.Formula value) {
        if (formulasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormulasIsMutable();
          formulas_.add(index, value);
          onChanged();
        } else {
          formulasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addFormulas(
          EDoc.Formula.Builder builderForValue) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          formulas_.add(builderForValue.build());
          onChanged();
        } else {
          formulasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addFormulas(
          int index, EDoc.Formula.Builder builderForValue) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          formulas_.add(index, builderForValue.build());
          onChanged();
        } else {
          formulasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addAllFormulas(
          java.lang.Iterable<? extends EDoc.Formula> values) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, formulas_);
          onChanged();
        } else {
          formulasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder clearFormulas() {
        if (formulasBuilder_ == null) {
          formulas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          formulasBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder removeFormulas(int index) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          formulas_.remove(index);
          onChanged();
        } else {
          formulasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Formula.Builder getFormulasBuilder(
          int index) {
        return getFormulasFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.FormulaOrBuilder getFormulasOrBuilder(
          int index) {
        if (formulasBuilder_ == null) {
          return formulas_.get(index);  } else {
          return formulasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<? extends EDoc.FormulaOrBuilder> 
           getFormulasOrBuilderList() {
        if (formulasBuilder_ != null) {
          return formulasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(formulas_);
        }
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Formula.Builder addFormulasBuilder() {
        return getFormulasFieldBuilder().addBuilder(
            EDoc.Formula.getDefaultInstance());
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Formula.Builder addFormulasBuilder(
          int index) {
        return getFormulasFieldBuilder().addBuilder(
            index, EDoc.Formula.getDefaultInstance());
      }
      /**
       * <pre>
       * In context formula.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.Formula.Builder> 
           getFormulasBuilderList() {
        return getFormulasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Formula, EDoc.Formula.Builder, EDoc.FormulaOrBuilder> 
          getFormulasFieldBuilder() {
        if (formulasBuilder_ == null) {
          formulasBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.Formula, EDoc.Formula.Builder, EDoc.FormulaOrBuilder>(
                  formulas_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          formulas_ = null;
        }
        return formulasBuilder_;
      }

      private java.lang.Object searchQuery_ = "";
      /**
       * <pre>
       * String representing fully disambiguated Search Query.
       * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
       * </pre>
       *
       * <code>optional string search_query = 7;</code>
       * @return Whether the searchQuery field is set.
       */
      public boolean hasSearchQuery() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * String representing fully disambiguated Search Query.
       * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
       * </pre>
       *
       * <code>optional string search_query = 7;</code>
       * @return The searchQuery.
       */
      public java.lang.String getSearchQuery() {
        java.lang.Object ref = searchQuery_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            searchQuery_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * String representing fully disambiguated Search Query.
       * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
       * </pre>
       *
       * <code>optional string search_query = 7;</code>
       * @return The bytes for searchQuery.
       */
      public com.google.protobuf.ByteString
          getSearchQueryBytes() {
        java.lang.Object ref = searchQuery_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          searchQuery_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * String representing fully disambiguated Search Query.
       * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
       * </pre>
       *
       * <code>optional string search_query = 7;</code>
       * @param value The searchQuery to set.
       * @return This builder for chaining.
       */
      public Builder setSearchQuery(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        searchQuery_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * String representing fully disambiguated Search Query.
       * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
       * </pre>
       *
       * <code>optional string search_query = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSearchQuery() {
        bitField0_ = (bitField0_ & ~0x00000040);
        searchQuery_ = getDefaultInstance().getSearchQuery();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * String representing fully disambiguated Search Query.
       * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
       * </pre>
       *
       * <code>optional string search_query = 7;</code>
       * @param value The bytes for searchQuery to set.
       * @return This builder for chaining.
       */
      public Builder setSearchQueryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        searchQuery_ = value;
        onChanged();
        return this;
      }

      private java.util.List<EDoc.ViewEDocProto.ViewColumn> viewColumns_ =
        java.util.Collections.emptyList();
      private void ensureViewColumnsIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          viewColumns_ = new java.util.ArrayList<EDoc.ViewEDocProto.ViewColumn>(viewColumns_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.ViewEDocProto.ViewColumn, EDoc.ViewEDocProto.ViewColumn.Builder, EDoc.ViewEDocProto.ViewColumnOrBuilder> viewColumnsBuilder_;

      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public java.util.List<EDoc.ViewEDocProto.ViewColumn> getViewColumnsList() {
        if (viewColumnsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(viewColumns_);
        } else {
          return viewColumnsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public int getViewColumnsCount() {
        if (viewColumnsBuilder_ == null) {
          return viewColumns_.size();
        } else {
          return viewColumnsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public EDoc.ViewEDocProto.ViewColumn getViewColumns(int index) {
        if (viewColumnsBuilder_ == null) {
          return viewColumns_.get(index);
        } else {
          return viewColumnsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public Builder setViewColumns(
          int index, EDoc.ViewEDocProto.ViewColumn value) {
        if (viewColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureViewColumnsIsMutable();
          viewColumns_.set(index, value);
          onChanged();
        } else {
          viewColumnsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public Builder setViewColumns(
          int index, EDoc.ViewEDocProto.ViewColumn.Builder builderForValue) {
        if (viewColumnsBuilder_ == null) {
          ensureViewColumnsIsMutable();
          viewColumns_.set(index, builderForValue.build());
          onChanged();
        } else {
          viewColumnsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public Builder addViewColumns(EDoc.ViewEDocProto.ViewColumn value) {
        if (viewColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureViewColumnsIsMutable();
          viewColumns_.add(value);
          onChanged();
        } else {
          viewColumnsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public Builder addViewColumns(
          int index, EDoc.ViewEDocProto.ViewColumn value) {
        if (viewColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureViewColumnsIsMutable();
          viewColumns_.add(index, value);
          onChanged();
        } else {
          viewColumnsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public Builder addViewColumns(
          EDoc.ViewEDocProto.ViewColumn.Builder builderForValue) {
        if (viewColumnsBuilder_ == null) {
          ensureViewColumnsIsMutable();
          viewColumns_.add(builderForValue.build());
          onChanged();
        } else {
          viewColumnsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public Builder addViewColumns(
          int index, EDoc.ViewEDocProto.ViewColumn.Builder builderForValue) {
        if (viewColumnsBuilder_ == null) {
          ensureViewColumnsIsMutable();
          viewColumns_.add(index, builderForValue.build());
          onChanged();
        } else {
          viewColumnsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public Builder addAllViewColumns(
          java.lang.Iterable<? extends EDoc.ViewEDocProto.ViewColumn> values) {
        if (viewColumnsBuilder_ == null) {
          ensureViewColumnsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, viewColumns_);
          onChanged();
        } else {
          viewColumnsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public Builder clearViewColumns() {
        if (viewColumnsBuilder_ == null) {
          viewColumns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          viewColumnsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public Builder removeViewColumns(int index) {
        if (viewColumnsBuilder_ == null) {
          ensureViewColumnsIsMutable();
          viewColumns_.remove(index);
          onChanged();
        } else {
          viewColumnsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public EDoc.ViewEDocProto.ViewColumn.Builder getViewColumnsBuilder(
          int index) {
        return getViewColumnsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public EDoc.ViewEDocProto.ViewColumnOrBuilder getViewColumnsOrBuilder(
          int index) {
        if (viewColumnsBuilder_ == null) {
          return viewColumns_.get(index);  } else {
          return viewColumnsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public java.util.List<? extends EDoc.ViewEDocProto.ViewColumnOrBuilder> 
           getViewColumnsOrBuilderList() {
        if (viewColumnsBuilder_ != null) {
          return viewColumnsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(viewColumns_);
        }
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public EDoc.ViewEDocProto.ViewColumn.Builder addViewColumnsBuilder() {
        return getViewColumnsFieldBuilder().addBuilder(
            EDoc.ViewEDocProto.ViewColumn.getDefaultInstance());
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public EDoc.ViewEDocProto.ViewColumn.Builder addViewColumnsBuilder(
          int index) {
        return getViewColumnsFieldBuilder().addBuilder(
            index, EDoc.ViewEDocProto.ViewColumn.getDefaultInstance());
      }
      /**
       * <pre>
       * List of columns in this view. Each entry contains the modeling properties
       * for that column. Note: This list can be a subset of the number of columns
       * that are created from the search query for this view. For the columns that
       * are missing, we use default column properties.
       * </pre>
       *
       * <code>repeated .ViewEDocProto.ViewColumn view_columns = 8 [(.Annotation.unique) = "search_output_column"];</code>
       */
      public java.util.List<EDoc.ViewEDocProto.ViewColumn.Builder> 
           getViewColumnsBuilderList() {
        return getViewColumnsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.ViewEDocProto.ViewColumn, EDoc.ViewEDocProto.ViewColumn.Builder, EDoc.ViewEDocProto.ViewColumnOrBuilder> 
          getViewColumnsFieldBuilder() {
        if (viewColumnsBuilder_ == null) {
          viewColumnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.ViewEDocProto.ViewColumn, EDoc.ViewEDocProto.ViewColumn.Builder, EDoc.ViewEDocProto.ViewColumnOrBuilder>(
                  viewColumns_,
                  ((bitField0_ & 0x00000080) != 0),
                  getParentForChildren(),
                  isClean());
          viewColumns_ = null;
        }
        return viewColumnsBuilder_;
      }

      private java.util.List<EDoc.RelationEDocProto> joinsWith_ =
        java.util.Collections.emptyList();
      private void ensureJoinsWithIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          joinsWith_ = new java.util.ArrayList<EDoc.RelationEDocProto>(joinsWith_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.RelationEDocProto, EDoc.RelationEDocProto.Builder, EDoc.RelationEDocProtoOrBuilder> joinsWithBuilder_;

      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public java.util.List<EDoc.RelationEDocProto> getJoinsWithList() {
        if (joinsWithBuilder_ == null) {
          return java.util.Collections.unmodifiableList(joinsWith_);
        } else {
          return joinsWithBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public int getJoinsWithCount() {
        if (joinsWithBuilder_ == null) {
          return joinsWith_.size();
        } else {
          return joinsWithBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public EDoc.RelationEDocProto getJoinsWith(int index) {
        if (joinsWithBuilder_ == null) {
          return joinsWith_.get(index);
        } else {
          return joinsWithBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder setJoinsWith(
          int index, EDoc.RelationEDocProto value) {
        if (joinsWithBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsWithIsMutable();
          joinsWith_.set(index, value);
          onChanged();
        } else {
          joinsWithBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder setJoinsWith(
          int index, EDoc.RelationEDocProto.Builder builderForValue) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          joinsWith_.set(index, builderForValue.build());
          onChanged();
        } else {
          joinsWithBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder addJoinsWith(EDoc.RelationEDocProto value) {
        if (joinsWithBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsWithIsMutable();
          joinsWith_.add(value);
          onChanged();
        } else {
          joinsWithBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder addJoinsWith(
          int index, EDoc.RelationEDocProto value) {
        if (joinsWithBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsWithIsMutable();
          joinsWith_.add(index, value);
          onChanged();
        } else {
          joinsWithBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder addJoinsWith(
          EDoc.RelationEDocProto.Builder builderForValue) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          joinsWith_.add(builderForValue.build());
          onChanged();
        } else {
          joinsWithBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder addJoinsWith(
          int index, EDoc.RelationEDocProto.Builder builderForValue) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          joinsWith_.add(index, builderForValue.build());
          onChanged();
        } else {
          joinsWithBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder addAllJoinsWith(
          java.lang.Iterable<? extends EDoc.RelationEDocProto> values) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, joinsWith_);
          onChanged();
        } else {
          joinsWithBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder clearJoinsWith() {
        if (joinsWithBuilder_ == null) {
          joinsWith_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          joinsWithBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder removeJoinsWith(int index) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          joinsWith_.remove(index);
          onChanged();
        } else {
          joinsWithBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public EDoc.RelationEDocProto.Builder getJoinsWithBuilder(
          int index) {
        return getJoinsWithFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public EDoc.RelationEDocProtoOrBuilder getJoinsWithOrBuilder(
          int index) {
        if (joinsWithBuilder_ == null) {
          return joinsWith_.get(index);  } else {
          return joinsWithBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public java.util.List<? extends EDoc.RelationEDocProtoOrBuilder> 
           getJoinsWithOrBuilderList() {
        if (joinsWithBuilder_ != null) {
          return joinsWithBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(joinsWith_);
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public EDoc.RelationEDocProto.Builder addJoinsWithBuilder() {
        return getJoinsWithFieldBuilder().addBuilder(
            EDoc.RelationEDocProto.getDefaultInstance());
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public EDoc.RelationEDocProto.Builder addJoinsWithBuilder(
          int index) {
        return getJoinsWithFieldBuilder().addBuilder(
            index, EDoc.RelationEDocProto.getDefaultInstance());
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public java.util.List<EDoc.RelationEDocProto.Builder> 
           getJoinsWithBuilderList() {
        return getJoinsWithFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.RelationEDocProto, EDoc.RelationEDocProto.Builder, EDoc.RelationEDocProtoOrBuilder> 
          getJoinsWithFieldBuilder() {
        if (joinsWithBuilder_ == null) {
          joinsWithBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.RelationEDocProto, EDoc.RelationEDocProto.Builder, EDoc.RelationEDocProtoOrBuilder>(
                  joinsWith_,
                  ((bitField0_ & 0x00000100) != 0),
                  getParentForChildren(),
                  isClean());
          joinsWith_ = null;
        }
        return joinsWithBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ViewEDocProto)
    }

    // @@protoc_insertion_point(class_scope:ViewEDocProto)
    private static final EDoc.ViewEDocProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.ViewEDocProto();
    }

    public static EDoc.ViewEDocProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ViewEDocProto>
        PARSER = new com.google.protobuf.AbstractParser<ViewEDocProto>() {
      @java.lang.Override
      public ViewEDocProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ViewEDocProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ViewEDocProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ViewEDocProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.ViewEDocProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConnectionDocOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ConnectionDoc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of the connection.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * Name of the connection.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name of the connection.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Type of Connection.
     * </pre>
     *
     * <code>optional string type = 2;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <pre>
     * Type of Connection.
     * </pre>
     *
     * <code>optional string type = 2;</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * Type of Connection.
     * </pre>
     *
     * <code>optional string type = 2;</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * Authentication type of Connection.
     * Mentioned in "atlas/public/metadata.proto" Datasource - authenticationType enum
     * </pre>
     *
     * <code>optional string authentication_type = 3;</code>
     * @return Whether the authenticationType field is set.
     */
    boolean hasAuthenticationType();
    /**
     * <pre>
     * Authentication type of Connection.
     * Mentioned in "atlas/public/metadata.proto" Datasource - authenticationType enum
     * </pre>
     *
     * <code>optional string authentication_type = 3;</code>
     * @return The authenticationType.
     */
    java.lang.String getAuthenticationType();
    /**
     * <pre>
     * Authentication type of Connection.
     * Mentioned in "atlas/public/metadata.proto" Datasource - authenticationType enum
     * </pre>
     *
     * <code>optional string authentication_type = 3;</code>
     * @return The bytes for authenticationType.
     */
    com.google.protobuf.ByteString
        getAuthenticationTypeBytes();

    /**
     * <pre>
     * Properties of Connection.
     *repeated common.KeyValueStr properties = 4;
     * List of TableDoc.
     * </pre>
     *
     * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
     */
    java.util.List<EDoc.ConnectionDoc.TableDoc> 
        getTableList();
    /**
     * <pre>
     * Properties of Connection.
     *repeated common.KeyValueStr properties = 4;
     * List of TableDoc.
     * </pre>
     *
     * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
     */
    EDoc.ConnectionDoc.TableDoc getTable(int index);
    /**
     * <pre>
     * Properties of Connection.
     *repeated common.KeyValueStr properties = 4;
     * List of TableDoc.
     * </pre>
     *
     * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
     */
    int getTableCount();
    /**
     * <pre>
     * Properties of Connection.
     *repeated common.KeyValueStr properties = 4;
     * List of TableDoc.
     * </pre>
     *
     * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
     */
    java.util.List<? extends EDoc.ConnectionDoc.TableDocOrBuilder> 
        getTableOrBuilderList();
    /**
     * <pre>
     * Properties of Connection.
     *repeated common.KeyValueStr properties = 4;
     * List of TableDoc.
     * </pre>
     *
     * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
     */
    EDoc.ConnectionDoc.TableDocOrBuilder getTableOrBuilder(
        int index);
  }
  /**
   * <pre>
   * ConnectionDoc represents mapping of table and columns created from external
   * data warehouse like Snowflake, Redshift, etc. The basic idea is to give user
   * an option to change the mapping of existing tables and columns to other
   * tables and columns in same DataSource or different DataSource. DataSource can
   * be updated by changing the properties in the ConnectionDoc.
   * </pre>
   *
   * Protobuf type {@code ConnectionDoc}
   */
  public static final class ConnectionDoc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ConnectionDoc)
      ConnectionDocOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConnectionDoc.newBuilder() to construct.
    private ConnectionDoc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConnectionDoc() {
      name_ = "";
      type_ = "";
      authenticationType_ = "";
      table_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConnectionDoc();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConnectionDoc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              type_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              authenticationType_ = bs;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                table_ = new java.util.ArrayList<EDoc.ConnectionDoc.TableDoc>();
                mutable_bitField0_ |= 0x00000008;
              }
              table_.add(
                  input.readMessage(EDoc.ConnectionDoc.TableDoc.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          table_ = java.util.Collections.unmodifiableList(table_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_ConnectionDoc_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_ConnectionDoc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.ConnectionDoc.class, EDoc.ConnectionDoc.Builder.class);
    }

    public interface TableDocOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ConnectionDoc.TableDoc)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Name of the logical table.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       * Name of the logical table.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * Name of the logical table.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * String representing id of the logical table.
       * </pre>
       *
       * <code>optional string id = 2;</code>
       * @return Whether the id field is set.
       */
      boolean hasId();
      /**
       * <pre>
       * String representing id of the logical table.
       * </pre>
       *
       * <code>optional string id = 2;</code>
       * @return The id.
       */
      java.lang.String getId();
      /**
       * <pre>
       * String representing id of the logical table.
       * </pre>
       *
       * <code>optional string id = 2;</code>
       * @return The bytes for id.
       */
      com.google.protobuf.ByteString
          getIdBytes();

      /**
       * <pre>
       * Properties representing external mapping.
       * </pre>
       *
       * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
       * @return Whether the externalTable field is set.
       */
      boolean hasExternalTable();
      /**
       * <pre>
       * Properties representing external mapping.
       * </pre>
       *
       * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
       * @return The externalTable.
       */
      EDoc.ConnectionDoc.TableDoc.ExternalTableMapping getExternalTable();
      /**
       * <pre>
       * Properties representing external mapping.
       * </pre>
       *
       * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
       */
      EDoc.ConnectionDoc.TableDoc.ExternalTableMappingOrBuilder getExternalTableOrBuilder();

      /**
       * <pre>
       * List of ColumnDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
       */
      java.util.List<EDoc.ConnectionDoc.TableDoc.ColumnDoc> 
          getColumnList();
      /**
       * <pre>
       * List of ColumnDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
       */
      EDoc.ConnectionDoc.TableDoc.ColumnDoc getColumn(int index);
      /**
       * <pre>
       * List of ColumnDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
       */
      int getColumnCount();
      /**
       * <pre>
       * List of ColumnDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
       */
      java.util.List<? extends EDoc.ConnectionDoc.TableDoc.ColumnDocOrBuilder> 
          getColumnOrBuilderList();
      /**
       * <pre>
       * List of ColumnDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
       */
      EDoc.ConnectionDoc.TableDoc.ColumnDocOrBuilder getColumnOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code ConnectionDoc.TableDoc}
     */
    public static final class TableDoc extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:ConnectionDoc.TableDoc)
        TableDocOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TableDoc.newBuilder() to construct.
      private TableDoc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TableDoc() {
        name_ = "";
        id_ = "";
        column_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TableDoc();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TableDoc(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                id_ = bs;
                break;
              }
              case 26: {
                EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) != 0)) {
                  subBuilder = externalTable_.toBuilder();
                }
                externalTable_ = input.readMessage(EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(externalTable_);
                  externalTable_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 34: {
                if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                  column_ = new java.util.ArrayList<EDoc.ConnectionDoc.TableDoc.ColumnDoc>();
                  mutable_bitField0_ |= 0x00000008;
                }
                column_.add(
                    input.readMessage(EDoc.ConnectionDoc.TableDoc.ColumnDoc.PARSER, extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000008) != 0)) {
            column_ = java.util.Collections.unmodifiableList(column_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ConnectionDoc_TableDoc_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ConnectionDoc_TableDoc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ConnectionDoc.TableDoc.class, EDoc.ConnectionDoc.TableDoc.Builder.class);
      }

      public interface ExternalTableMappingOrBuilder extends
          // @@protoc_insertion_point(interface_extends:ConnectionDoc.TableDoc.ExternalTableMapping)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * String representing database name in external source.
         * </pre>
         *
         * <code>optional string db_name = 1;</code>
         * @return Whether the dbName field is set.
         */
        boolean hasDbName();
        /**
         * <pre>
         * String representing database name in external source.
         * </pre>
         *
         * <code>optional string db_name = 1;</code>
         * @return The dbName.
         */
        java.lang.String getDbName();
        /**
         * <pre>
         * String representing database name in external source.
         * </pre>
         *
         * <code>optional string db_name = 1;</code>
         * @return The bytes for dbName.
         */
        com.google.protobuf.ByteString
            getDbNameBytes();

        /**
         * <pre>
         * String representing schema name in external source.
         * </pre>
         *
         * <code>optional string schema_name = 2;</code>
         * @return Whether the schemaName field is set.
         */
        boolean hasSchemaName();
        /**
         * <pre>
         * String representing schema name in external source.
         * </pre>
         *
         * <code>optional string schema_name = 2;</code>
         * @return The schemaName.
         */
        java.lang.String getSchemaName();
        /**
         * <pre>
         * String representing schema name in external source.
         * </pre>
         *
         * <code>optional string schema_name = 2;</code>
         * @return The bytes for schemaName.
         */
        com.google.protobuf.ByteString
            getSchemaNameBytes();

        /**
         * <pre>
         * String representing table name in external source.
         * </pre>
         *
         * <code>optional string table_name = 3;</code>
         * @return Whether the tableName field is set.
         */
        boolean hasTableName();
        /**
         * <pre>
         * String representing table name in external source.
         * </pre>
         *
         * <code>optional string table_name = 3;</code>
         * @return The tableName.
         */
        java.lang.String getTableName();
        /**
         * <pre>
         * String representing table name in external source.
         * </pre>
         *
         * <code>optional string table_name = 3;</code>
         * @return The bytes for tableName.
         */
        com.google.protobuf.ByteString
            getTableNameBytes();
      }
      /**
       * Protobuf type {@code ConnectionDoc.TableDoc.ExternalTableMapping}
       */
      public static final class ExternalTableMapping extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:ConnectionDoc.TableDoc.ExternalTableMapping)
          ExternalTableMappingOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ExternalTableMapping.newBuilder() to construct.
        private ExternalTableMapping(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ExternalTableMapping() {
          dbName_ = "";
          schemaName_ = "";
          tableName_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new ExternalTableMapping();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private ExternalTableMapping(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000001;
                  dbName_ = bs;
                  break;
                }
                case 18: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  schemaName_ = bs;
                  break;
                }
                case 26: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000004;
                  tableName_ = bs;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_ConnectionDoc_TableDoc_ExternalTableMapping_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_ConnectionDoc_TableDoc_ExternalTableMapping_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.class, EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.Builder.class);
        }

        private int bitField0_;
        public static final int DB_NAME_FIELD_NUMBER = 1;
        private volatile java.lang.Object dbName_;
        /**
         * <pre>
         * String representing database name in external source.
         * </pre>
         *
         * <code>optional string db_name = 1;</code>
         * @return Whether the dbName field is set.
         */
        @java.lang.Override
        public boolean hasDbName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * String representing database name in external source.
         * </pre>
         *
         * <code>optional string db_name = 1;</code>
         * @return The dbName.
         */
        @java.lang.Override
        public java.lang.String getDbName() {
          java.lang.Object ref = dbName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              dbName_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * String representing database name in external source.
         * </pre>
         *
         * <code>optional string db_name = 1;</code>
         * @return The bytes for dbName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getDbNameBytes() {
          java.lang.Object ref = dbName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            dbName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int SCHEMA_NAME_FIELD_NUMBER = 2;
        private volatile java.lang.Object schemaName_;
        /**
         * <pre>
         * String representing schema name in external source.
         * </pre>
         *
         * <code>optional string schema_name = 2;</code>
         * @return Whether the schemaName field is set.
         */
        @java.lang.Override
        public boolean hasSchemaName() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * String representing schema name in external source.
         * </pre>
         *
         * <code>optional string schema_name = 2;</code>
         * @return The schemaName.
         */
        @java.lang.Override
        public java.lang.String getSchemaName() {
          java.lang.Object ref = schemaName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              schemaName_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * String representing schema name in external source.
         * </pre>
         *
         * <code>optional string schema_name = 2;</code>
         * @return The bytes for schemaName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getSchemaNameBytes() {
          java.lang.Object ref = schemaName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            schemaName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TABLE_NAME_FIELD_NUMBER = 3;
        private volatile java.lang.Object tableName_;
        /**
         * <pre>
         * String representing table name in external source.
         * </pre>
         *
         * <code>optional string table_name = 3;</code>
         * @return Whether the tableName field is set.
         */
        @java.lang.Override
        public boolean hasTableName() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * String representing table name in external source.
         * </pre>
         *
         * <code>optional string table_name = 3;</code>
         * @return The tableName.
         */
        @java.lang.Override
        public java.lang.String getTableName() {
          java.lang.Object ref = tableName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              tableName_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * String representing table name in external source.
         * </pre>
         *
         * <code>optional string table_name = 3;</code>
         * @return The bytes for tableName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getTableNameBytes() {
          java.lang.Object ref = tableName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            tableName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, dbName_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, schemaName_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tableName_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, dbName_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, schemaName_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, tableName_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof EDoc.ConnectionDoc.TableDoc.ExternalTableMapping)) {
            return super.equals(obj);
          }
          EDoc.ConnectionDoc.TableDoc.ExternalTableMapping other = (EDoc.ConnectionDoc.TableDoc.ExternalTableMapping) obj;

          if (hasDbName() != other.hasDbName()) return false;
          if (hasDbName()) {
            if (!getDbName()
                .equals(other.getDbName())) return false;
          }
          if (hasSchemaName() != other.hasSchemaName()) return false;
          if (hasSchemaName()) {
            if (!getSchemaName()
                .equals(other.getSchemaName())) return false;
          }
          if (hasTableName() != other.hasTableName()) return false;
          if (hasTableName()) {
            if (!getTableName()
                .equals(other.getTableName())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasDbName()) {
            hash = (37 * hash) + DB_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getDbName().hashCode();
          }
          if (hasSchemaName()) {
            hash = (37 * hash) + SCHEMA_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getSchemaName().hashCode();
          }
          if (hasTableName()) {
            hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getTableName().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static EDoc.ConnectionDoc.TableDoc.ExternalTableMapping parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static EDoc.ConnectionDoc.TableDoc.ExternalTableMapping parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static EDoc.ConnectionDoc.TableDoc.ExternalTableMapping parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static EDoc.ConnectionDoc.TableDoc.ExternalTableMapping parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static EDoc.ConnectionDoc.TableDoc.ExternalTableMapping parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static EDoc.ConnectionDoc.TableDoc.ExternalTableMapping parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static EDoc.ConnectionDoc.TableDoc.ExternalTableMapping parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static EDoc.ConnectionDoc.TableDoc.ExternalTableMapping parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static EDoc.ConnectionDoc.TableDoc.ExternalTableMapping parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static EDoc.ConnectionDoc.TableDoc.ExternalTableMapping parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static EDoc.ConnectionDoc.TableDoc.ExternalTableMapping parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static EDoc.ConnectionDoc.TableDoc.ExternalTableMapping parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(EDoc.ConnectionDoc.TableDoc.ExternalTableMapping prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code ConnectionDoc.TableDoc.ExternalTableMapping}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:ConnectionDoc.TableDoc.ExternalTableMapping)
            EDoc.ConnectionDoc.TableDoc.ExternalTableMappingOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return EDoc.internal_static_ConnectionDoc_TableDoc_ExternalTableMapping_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return EDoc.internal_static_ConnectionDoc_TableDoc_ExternalTableMapping_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.class, EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.Builder.class);
          }

          // Construct using EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            dbName_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            schemaName_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            tableName_ = "";
            bitField0_ = (bitField0_ & ~0x00000004);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return EDoc.internal_static_ConnectionDoc_TableDoc_ExternalTableMapping_descriptor;
          }

          @java.lang.Override
          public EDoc.ConnectionDoc.TableDoc.ExternalTableMapping getDefaultInstanceForType() {
            return EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.getDefaultInstance();
          }

          @java.lang.Override
          public EDoc.ConnectionDoc.TableDoc.ExternalTableMapping build() {
            EDoc.ConnectionDoc.TableDoc.ExternalTableMapping result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public EDoc.ConnectionDoc.TableDoc.ExternalTableMapping buildPartial() {
            EDoc.ConnectionDoc.TableDoc.ExternalTableMapping result = new EDoc.ConnectionDoc.TableDoc.ExternalTableMapping(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              to_bitField0_ |= 0x00000001;
            }
            result.dbName_ = dbName_;
            if (((from_bitField0_ & 0x00000002) != 0)) {
              to_bitField0_ |= 0x00000002;
            }
            result.schemaName_ = schemaName_;
            if (((from_bitField0_ & 0x00000004) != 0)) {
              to_bitField0_ |= 0x00000004;
            }
            result.tableName_ = tableName_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof EDoc.ConnectionDoc.TableDoc.ExternalTableMapping) {
              return mergeFrom((EDoc.ConnectionDoc.TableDoc.ExternalTableMapping)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(EDoc.ConnectionDoc.TableDoc.ExternalTableMapping other) {
            if (other == EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.getDefaultInstance()) return this;
            if (other.hasDbName()) {
              bitField0_ |= 0x00000001;
              dbName_ = other.dbName_;
              onChanged();
            }
            if (other.hasSchemaName()) {
              bitField0_ |= 0x00000002;
              schemaName_ = other.schemaName_;
              onChanged();
            }
            if (other.hasTableName()) {
              bitField0_ |= 0x00000004;
              tableName_ = other.tableName_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            EDoc.ConnectionDoc.TableDoc.ExternalTableMapping parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (EDoc.ConnectionDoc.TableDoc.ExternalTableMapping) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object dbName_ = "";
          /**
           * <pre>
           * String representing database name in external source.
           * </pre>
           *
           * <code>optional string db_name = 1;</code>
           * @return Whether the dbName field is set.
           */
          public boolean hasDbName() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * String representing database name in external source.
           * </pre>
           *
           * <code>optional string db_name = 1;</code>
           * @return The dbName.
           */
          public java.lang.String getDbName() {
            java.lang.Object ref = dbName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                dbName_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * String representing database name in external source.
           * </pre>
           *
           * <code>optional string db_name = 1;</code>
           * @return The bytes for dbName.
           */
          public com.google.protobuf.ByteString
              getDbNameBytes() {
            java.lang.Object ref = dbName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              dbName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * String representing database name in external source.
           * </pre>
           *
           * <code>optional string db_name = 1;</code>
           * @param value The dbName to set.
           * @return This builder for chaining.
           */
          public Builder setDbName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            dbName_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * String representing database name in external source.
           * </pre>
           *
           * <code>optional string db_name = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearDbName() {
            bitField0_ = (bitField0_ & ~0x00000001);
            dbName_ = getDefaultInstance().getDbName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * String representing database name in external source.
           * </pre>
           *
           * <code>optional string db_name = 1;</code>
           * @param value The bytes for dbName to set.
           * @return This builder for chaining.
           */
          public Builder setDbNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            dbName_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object schemaName_ = "";
          /**
           * <pre>
           * String representing schema name in external source.
           * </pre>
           *
           * <code>optional string schema_name = 2;</code>
           * @return Whether the schemaName field is set.
           */
          public boolean hasSchemaName() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * String representing schema name in external source.
           * </pre>
           *
           * <code>optional string schema_name = 2;</code>
           * @return The schemaName.
           */
          public java.lang.String getSchemaName() {
            java.lang.Object ref = schemaName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                schemaName_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * String representing schema name in external source.
           * </pre>
           *
           * <code>optional string schema_name = 2;</code>
           * @return The bytes for schemaName.
           */
          public com.google.protobuf.ByteString
              getSchemaNameBytes() {
            java.lang.Object ref = schemaName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              schemaName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * String representing schema name in external source.
           * </pre>
           *
           * <code>optional string schema_name = 2;</code>
           * @param value The schemaName to set.
           * @return This builder for chaining.
           */
          public Builder setSchemaName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            schemaName_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * String representing schema name in external source.
           * </pre>
           *
           * <code>optional string schema_name = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearSchemaName() {
            bitField0_ = (bitField0_ & ~0x00000002);
            schemaName_ = getDefaultInstance().getSchemaName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * String representing schema name in external source.
           * </pre>
           *
           * <code>optional string schema_name = 2;</code>
           * @param value The bytes for schemaName to set.
           * @return This builder for chaining.
           */
          public Builder setSchemaNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            schemaName_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object tableName_ = "";
          /**
           * <pre>
           * String representing table name in external source.
           * </pre>
           *
           * <code>optional string table_name = 3;</code>
           * @return Whether the tableName field is set.
           */
          public boolean hasTableName() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * String representing table name in external source.
           * </pre>
           *
           * <code>optional string table_name = 3;</code>
           * @return The tableName.
           */
          public java.lang.String getTableName() {
            java.lang.Object ref = tableName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                tableName_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * String representing table name in external source.
           * </pre>
           *
           * <code>optional string table_name = 3;</code>
           * @return The bytes for tableName.
           */
          public com.google.protobuf.ByteString
              getTableNameBytes() {
            java.lang.Object ref = tableName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              tableName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * String representing table name in external source.
           * </pre>
           *
           * <code>optional string table_name = 3;</code>
           * @param value The tableName to set.
           * @return This builder for chaining.
           */
          public Builder setTableName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            tableName_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * String representing table name in external source.
           * </pre>
           *
           * <code>optional string table_name = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearTableName() {
            bitField0_ = (bitField0_ & ~0x00000004);
            tableName_ = getDefaultInstance().getTableName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * String representing table name in external source.
           * </pre>
           *
           * <code>optional string table_name = 3;</code>
           * @param value The bytes for tableName to set.
           * @return This builder for chaining.
           */
          public Builder setTableNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            tableName_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:ConnectionDoc.TableDoc.ExternalTableMapping)
        }

        // @@protoc_insertion_point(class_scope:ConnectionDoc.TableDoc.ExternalTableMapping)
        private static final EDoc.ConnectionDoc.TableDoc.ExternalTableMapping DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new EDoc.ConnectionDoc.TableDoc.ExternalTableMapping();
        }

        public static EDoc.ConnectionDoc.TableDoc.ExternalTableMapping getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<ExternalTableMapping>
            PARSER = new com.google.protobuf.AbstractParser<ExternalTableMapping>() {
          @java.lang.Override
          public ExternalTableMapping parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ExternalTableMapping(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<ExternalTableMapping> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ExternalTableMapping> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public EDoc.ConnectionDoc.TableDoc.ExternalTableMapping getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface ColumnDocOrBuilder extends
          // @@protoc_insertion_point(interface_extends:ConnectionDoc.TableDoc.ColumnDoc)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * String representing name of the logical column.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        boolean hasName();
        /**
         * <pre>
         * String representing name of the logical column.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The name.
         */
        java.lang.String getName();
        /**
         * <pre>
         * String representing name of the logical column.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The bytes for name.
         */
        com.google.protobuf.ByteString
            getNameBytes();

        /**
         * <pre>
         * String representing id of the logical column.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @return Whether the id field is set.
         */
        boolean hasId();
        /**
         * <pre>
         * String representing id of the logical column.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @return The id.
         */
        java.lang.String getId();
        /**
         * <pre>
         * String representing id of the logical column.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @return The bytes for id.
         */
        com.google.protobuf.ByteString
            getIdBytes();

        /**
         * <pre>
         * String representing data type of the logic column.
         * </pre>
         *
         * <code>optional string data_type = 3;</code>
         * @return Whether the dataType field is set.
         */
        boolean hasDataType();
        /**
         * <pre>
         * String representing data type of the logic column.
         * </pre>
         *
         * <code>optional string data_type = 3;</code>
         * @return The dataType.
         */
        java.lang.String getDataType();
        /**
         * <pre>
         * String representing data type of the logic column.
         * </pre>
         *
         * <code>optional string data_type = 3;</code>
         * @return The bytes for dataType.
         */
        com.google.protobuf.ByteString
            getDataTypeBytes();

        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional string external_column = 4;</code>
         * @return Whether the externalColumn field is set.
         */
        boolean hasExternalColumn();
        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional string external_column = 4;</code>
         * @return The externalColumn.
         */
        java.lang.String getExternalColumn();
        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional string external_column = 4;</code>
         * @return The bytes for externalColumn.
         */
        com.google.protobuf.ByteString
            getExternalColumnBytes();
      }
      /**
       * Protobuf type {@code ConnectionDoc.TableDoc.ColumnDoc}
       */
      public static final class ColumnDoc extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:ConnectionDoc.TableDoc.ColumnDoc)
          ColumnDocOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ColumnDoc.newBuilder() to construct.
        private ColumnDoc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ColumnDoc() {
          name_ = "";
          id_ = "";
          dataType_ = "";
          externalColumn_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new ColumnDoc();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private ColumnDoc(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000001;
                  name_ = bs;
                  break;
                }
                case 18: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  id_ = bs;
                  break;
                }
                case 26: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000004;
                  dataType_ = bs;
                  break;
                }
                case 34: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000008;
                  externalColumn_ = bs;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_ConnectionDoc_TableDoc_ColumnDoc_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_ConnectionDoc_TableDoc_ColumnDoc_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.ConnectionDoc.TableDoc.ColumnDoc.class, EDoc.ConnectionDoc.TableDoc.ColumnDoc.Builder.class);
        }

        private int bitField0_;
        public static final int NAME_FIELD_NUMBER = 1;
        private volatile java.lang.Object name_;
        /**
         * <pre>
         * String representing name of the logical column.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        @java.lang.Override
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * String representing name of the logical column.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The name.
         */
        @java.lang.Override
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * String representing name of the logical column.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The bytes for name.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int ID_FIELD_NUMBER = 2;
        private volatile java.lang.Object id_;
        /**
         * <pre>
         * String representing id of the logical column.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @return Whether the id field is set.
         */
        @java.lang.Override
        public boolean hasId() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * String representing id of the logical column.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @return The id.
         */
        @java.lang.Override
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              id_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * String representing id of the logical column.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @return The bytes for id.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int DATA_TYPE_FIELD_NUMBER = 3;
        private volatile java.lang.Object dataType_;
        /**
         * <pre>
         * String representing data type of the logic column.
         * </pre>
         *
         * <code>optional string data_type = 3;</code>
         * @return Whether the dataType field is set.
         */
        @java.lang.Override
        public boolean hasDataType() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * String representing data type of the logic column.
         * </pre>
         *
         * <code>optional string data_type = 3;</code>
         * @return The dataType.
         */
        @java.lang.Override
        public java.lang.String getDataType() {
          java.lang.Object ref = dataType_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              dataType_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * String representing data type of the logic column.
         * </pre>
         *
         * <code>optional string data_type = 3;</code>
         * @return The bytes for dataType.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getDataTypeBytes() {
          java.lang.Object ref = dataType_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            dataType_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int EXTERNAL_COLUMN_FIELD_NUMBER = 4;
        private volatile java.lang.Object externalColumn_;
        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional string external_column = 4;</code>
         * @return Whether the externalColumn field is set.
         */
        @java.lang.Override
        public boolean hasExternalColumn() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional string external_column = 4;</code>
         * @return The externalColumn.
         */
        @java.lang.Override
        public java.lang.String getExternalColumn() {
          java.lang.Object ref = externalColumn_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              externalColumn_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional string external_column = 4;</code>
         * @return The bytes for externalColumn.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getExternalColumnBytes() {
          java.lang.Object ref = externalColumn_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            externalColumn_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, dataType_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 4, externalColumn_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, dataType_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, externalColumn_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof EDoc.ConnectionDoc.TableDoc.ColumnDoc)) {
            return super.equals(obj);
          }
          EDoc.ConnectionDoc.TableDoc.ColumnDoc other = (EDoc.ConnectionDoc.TableDoc.ColumnDoc) obj;

          if (hasName() != other.hasName()) return false;
          if (hasName()) {
            if (!getName()
                .equals(other.getName())) return false;
          }
          if (hasId() != other.hasId()) return false;
          if (hasId()) {
            if (!getId()
                .equals(other.getId())) return false;
          }
          if (hasDataType() != other.hasDataType()) return false;
          if (hasDataType()) {
            if (!getDataType()
                .equals(other.getDataType())) return false;
          }
          if (hasExternalColumn() != other.hasExternalColumn()) return false;
          if (hasExternalColumn()) {
            if (!getExternalColumn()
                .equals(other.getExternalColumn())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasName()) {
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
          }
          if (hasId()) {
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getId().hashCode();
          }
          if (hasDataType()) {
            hash = (37 * hash) + DATA_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + getDataType().hashCode();
          }
          if (hasExternalColumn()) {
            hash = (37 * hash) + EXTERNAL_COLUMN_FIELD_NUMBER;
            hash = (53 * hash) + getExternalColumn().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static EDoc.ConnectionDoc.TableDoc.ColumnDoc parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static EDoc.ConnectionDoc.TableDoc.ColumnDoc parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static EDoc.ConnectionDoc.TableDoc.ColumnDoc parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static EDoc.ConnectionDoc.TableDoc.ColumnDoc parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static EDoc.ConnectionDoc.TableDoc.ColumnDoc parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static EDoc.ConnectionDoc.TableDoc.ColumnDoc parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static EDoc.ConnectionDoc.TableDoc.ColumnDoc parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static EDoc.ConnectionDoc.TableDoc.ColumnDoc parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static EDoc.ConnectionDoc.TableDoc.ColumnDoc parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static EDoc.ConnectionDoc.TableDoc.ColumnDoc parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static EDoc.ConnectionDoc.TableDoc.ColumnDoc parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static EDoc.ConnectionDoc.TableDoc.ColumnDoc parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(EDoc.ConnectionDoc.TableDoc.ColumnDoc prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code ConnectionDoc.TableDoc.ColumnDoc}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:ConnectionDoc.TableDoc.ColumnDoc)
            EDoc.ConnectionDoc.TableDoc.ColumnDocOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return EDoc.internal_static_ConnectionDoc_TableDoc_ColumnDoc_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return EDoc.internal_static_ConnectionDoc_TableDoc_ColumnDoc_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    EDoc.ConnectionDoc.TableDoc.ColumnDoc.class, EDoc.ConnectionDoc.TableDoc.ColumnDoc.Builder.class);
          }

          // Construct using EDoc.ConnectionDoc.TableDoc.ColumnDoc.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            name_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            id_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            dataType_ = "";
            bitField0_ = (bitField0_ & ~0x00000004);
            externalColumn_ = "";
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return EDoc.internal_static_ConnectionDoc_TableDoc_ColumnDoc_descriptor;
          }

          @java.lang.Override
          public EDoc.ConnectionDoc.TableDoc.ColumnDoc getDefaultInstanceForType() {
            return EDoc.ConnectionDoc.TableDoc.ColumnDoc.getDefaultInstance();
          }

          @java.lang.Override
          public EDoc.ConnectionDoc.TableDoc.ColumnDoc build() {
            EDoc.ConnectionDoc.TableDoc.ColumnDoc result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public EDoc.ConnectionDoc.TableDoc.ColumnDoc buildPartial() {
            EDoc.ConnectionDoc.TableDoc.ColumnDoc result = new EDoc.ConnectionDoc.TableDoc.ColumnDoc(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              to_bitField0_ |= 0x00000001;
            }
            result.name_ = name_;
            if (((from_bitField0_ & 0x00000002) != 0)) {
              to_bitField0_ |= 0x00000002;
            }
            result.id_ = id_;
            if (((from_bitField0_ & 0x00000004) != 0)) {
              to_bitField0_ |= 0x00000004;
            }
            result.dataType_ = dataType_;
            if (((from_bitField0_ & 0x00000008) != 0)) {
              to_bitField0_ |= 0x00000008;
            }
            result.externalColumn_ = externalColumn_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof EDoc.ConnectionDoc.TableDoc.ColumnDoc) {
              return mergeFrom((EDoc.ConnectionDoc.TableDoc.ColumnDoc)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(EDoc.ConnectionDoc.TableDoc.ColumnDoc other) {
            if (other == EDoc.ConnectionDoc.TableDoc.ColumnDoc.getDefaultInstance()) return this;
            if (other.hasName()) {
              bitField0_ |= 0x00000001;
              name_ = other.name_;
              onChanged();
            }
            if (other.hasId()) {
              bitField0_ |= 0x00000002;
              id_ = other.id_;
              onChanged();
            }
            if (other.hasDataType()) {
              bitField0_ |= 0x00000004;
              dataType_ = other.dataType_;
              onChanged();
            }
            if (other.hasExternalColumn()) {
              bitField0_ |= 0x00000008;
              externalColumn_ = other.externalColumn_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            EDoc.ConnectionDoc.TableDoc.ColumnDoc parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (EDoc.ConnectionDoc.TableDoc.ColumnDoc) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object name_ = "";
          /**
           * <pre>
           * String representing name of the logical column.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           * @return Whether the name field is set.
           */
          public boolean hasName() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * String representing name of the logical column.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           * @return The name.
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                name_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * String representing name of the logical column.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           * @return The bytes for name.
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * String representing name of the logical column.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           * @param value The name to set.
           * @return This builder for chaining.
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            name_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * String representing name of the logical column.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearName() {
            bitField0_ = (bitField0_ & ~0x00000001);
            name_ = getDefaultInstance().getName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * String representing name of the logical column.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           * @param value The bytes for name to set.
           * @return This builder for chaining.
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            name_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object id_ = "";
          /**
           * <pre>
           * String representing id of the logical column.
           * </pre>
           *
           * <code>optional string id = 2;</code>
           * @return Whether the id field is set.
           */
          public boolean hasId() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * String representing id of the logical column.
           * </pre>
           *
           * <code>optional string id = 2;</code>
           * @return The id.
           */
          public java.lang.String getId() {
            java.lang.Object ref = id_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                id_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * String representing id of the logical column.
           * </pre>
           *
           * <code>optional string id = 2;</code>
           * @return The bytes for id.
           */
          public com.google.protobuf.ByteString
              getIdBytes() {
            java.lang.Object ref = id_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              id_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * String representing id of the logical column.
           * </pre>
           *
           * <code>optional string id = 2;</code>
           * @param value The id to set.
           * @return This builder for chaining.
           */
          public Builder setId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            id_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * String representing id of the logical column.
           * </pre>
           *
           * <code>optional string id = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearId() {
            bitField0_ = (bitField0_ & ~0x00000002);
            id_ = getDefaultInstance().getId();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * String representing id of the logical column.
           * </pre>
           *
           * <code>optional string id = 2;</code>
           * @param value The bytes for id to set.
           * @return This builder for chaining.
           */
          public Builder setIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            id_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object dataType_ = "";
          /**
           * <pre>
           * String representing data type of the logic column.
           * </pre>
           *
           * <code>optional string data_type = 3;</code>
           * @return Whether the dataType field is set.
           */
          public boolean hasDataType() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * String representing data type of the logic column.
           * </pre>
           *
           * <code>optional string data_type = 3;</code>
           * @return The dataType.
           */
          public java.lang.String getDataType() {
            java.lang.Object ref = dataType_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                dataType_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * String representing data type of the logic column.
           * </pre>
           *
           * <code>optional string data_type = 3;</code>
           * @return The bytes for dataType.
           */
          public com.google.protobuf.ByteString
              getDataTypeBytes() {
            java.lang.Object ref = dataType_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              dataType_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * String representing data type of the logic column.
           * </pre>
           *
           * <code>optional string data_type = 3;</code>
           * @param value The dataType to set.
           * @return This builder for chaining.
           */
          public Builder setDataType(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            dataType_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * String representing data type of the logic column.
           * </pre>
           *
           * <code>optional string data_type = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearDataType() {
            bitField0_ = (bitField0_ & ~0x00000004);
            dataType_ = getDefaultInstance().getDataType();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * String representing data type of the logic column.
           * </pre>
           *
           * <code>optional string data_type = 3;</code>
           * @param value The bytes for dataType to set.
           * @return This builder for chaining.
           */
          public Builder setDataTypeBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            dataType_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object externalColumn_ = "";
          /**
           * <pre>
           * Properties representing external mapping.
           * </pre>
           *
           * <code>optional string external_column = 4;</code>
           * @return Whether the externalColumn field is set.
           */
          public boolean hasExternalColumn() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           * Properties representing external mapping.
           * </pre>
           *
           * <code>optional string external_column = 4;</code>
           * @return The externalColumn.
           */
          public java.lang.String getExternalColumn() {
            java.lang.Object ref = externalColumn_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                externalColumn_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Properties representing external mapping.
           * </pre>
           *
           * <code>optional string external_column = 4;</code>
           * @return The bytes for externalColumn.
           */
          public com.google.protobuf.ByteString
              getExternalColumnBytes() {
            java.lang.Object ref = externalColumn_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              externalColumn_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Properties representing external mapping.
           * </pre>
           *
           * <code>optional string external_column = 4;</code>
           * @param value The externalColumn to set.
           * @return This builder for chaining.
           */
          public Builder setExternalColumn(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            externalColumn_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Properties representing external mapping.
           * </pre>
           *
           * <code>optional string external_column = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearExternalColumn() {
            bitField0_ = (bitField0_ & ~0x00000008);
            externalColumn_ = getDefaultInstance().getExternalColumn();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Properties representing external mapping.
           * </pre>
           *
           * <code>optional string external_column = 4;</code>
           * @param value The bytes for externalColumn to set.
           * @return This builder for chaining.
           */
          public Builder setExternalColumnBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            externalColumn_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:ConnectionDoc.TableDoc.ColumnDoc)
        }

        // @@protoc_insertion_point(class_scope:ConnectionDoc.TableDoc.ColumnDoc)
        private static final EDoc.ConnectionDoc.TableDoc.ColumnDoc DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new EDoc.ConnectionDoc.TableDoc.ColumnDoc();
        }

        public static EDoc.ConnectionDoc.TableDoc.ColumnDoc getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<ColumnDoc>
            PARSER = new com.google.protobuf.AbstractParser<ColumnDoc>() {
          @java.lang.Override
          public ColumnDoc parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ColumnDoc(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<ColumnDoc> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ColumnDoc> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public EDoc.ConnectionDoc.TableDoc.ColumnDoc getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * Name of the logical table.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Name of the logical table.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Name of the logical table.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ID_FIELD_NUMBER = 2;
      private volatile java.lang.Object id_;
      /**
       * <pre>
       * String representing id of the logical table.
       * </pre>
       *
       * <code>optional string id = 2;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * String representing id of the logical table.
       * </pre>
       *
       * <code>optional string id = 2;</code>
       * @return The id.
       */
      @java.lang.Override
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * String representing id of the logical table.
       * </pre>
       *
       * <code>optional string id = 2;</code>
       * @return The bytes for id.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int EXTERNAL_TABLE_FIELD_NUMBER = 3;
      private EDoc.ConnectionDoc.TableDoc.ExternalTableMapping externalTable_;
      /**
       * <pre>
       * Properties representing external mapping.
       * </pre>
       *
       * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
       * @return Whether the externalTable field is set.
       */
      @java.lang.Override
      public boolean hasExternalTable() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Properties representing external mapping.
       * </pre>
       *
       * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
       * @return The externalTable.
       */
      @java.lang.Override
      public EDoc.ConnectionDoc.TableDoc.ExternalTableMapping getExternalTable() {
        return externalTable_ == null ? EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.getDefaultInstance() : externalTable_;
      }
      /**
       * <pre>
       * Properties representing external mapping.
       * </pre>
       *
       * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
       */
      @java.lang.Override
      public EDoc.ConnectionDoc.TableDoc.ExternalTableMappingOrBuilder getExternalTableOrBuilder() {
        return externalTable_ == null ? EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.getDefaultInstance() : externalTable_;
      }

      public static final int COLUMN_FIELD_NUMBER = 4;
      private java.util.List<EDoc.ConnectionDoc.TableDoc.ColumnDoc> column_;
      /**
       * <pre>
       * List of ColumnDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
       */
      @java.lang.Override
      public java.util.List<EDoc.ConnectionDoc.TableDoc.ColumnDoc> getColumnList() {
        return column_;
      }
      /**
       * <pre>
       * List of ColumnDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
       */
      @java.lang.Override
      public java.util.List<? extends EDoc.ConnectionDoc.TableDoc.ColumnDocOrBuilder> 
          getColumnOrBuilderList() {
        return column_;
      }
      /**
       * <pre>
       * List of ColumnDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
       */
      @java.lang.Override
      public int getColumnCount() {
        return column_.size();
      }
      /**
       * <pre>
       * List of ColumnDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
       */
      @java.lang.Override
      public EDoc.ConnectionDoc.TableDoc.ColumnDoc getColumn(int index) {
        return column_.get(index);
      }
      /**
       * <pre>
       * List of ColumnDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
       */
      @java.lang.Override
      public EDoc.ConnectionDoc.TableDoc.ColumnDocOrBuilder getColumnOrBuilder(
          int index) {
        return column_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeMessage(3, getExternalTable());
        }
        for (int i = 0; i < column_.size(); i++) {
          output.writeMessage(4, column_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getExternalTable());
        }
        for (int i = 0; i < column_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, column_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.ConnectionDoc.TableDoc)) {
          return super.equals(obj);
        }
        EDoc.ConnectionDoc.TableDoc other = (EDoc.ConnectionDoc.TableDoc) obj;

        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasId() != other.hasId()) return false;
        if (hasId()) {
          if (!getId()
              .equals(other.getId())) return false;
        }
        if (hasExternalTable() != other.hasExternalTable()) return false;
        if (hasExternalTable()) {
          if (!getExternalTable()
              .equals(other.getExternalTable())) return false;
        }
        if (!getColumnList()
            .equals(other.getColumnList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasId()) {
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId().hashCode();
        }
        if (hasExternalTable()) {
          hash = (37 * hash) + EXTERNAL_TABLE_FIELD_NUMBER;
          hash = (53 * hash) + getExternalTable().hashCode();
        }
        if (getColumnCount() > 0) {
          hash = (37 * hash) + COLUMN_FIELD_NUMBER;
          hash = (53 * hash) + getColumnList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.ConnectionDoc.TableDoc parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ConnectionDoc.TableDoc parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ConnectionDoc.TableDoc parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ConnectionDoc.TableDoc parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ConnectionDoc.TableDoc parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ConnectionDoc.TableDoc parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ConnectionDoc.TableDoc parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ConnectionDoc.TableDoc parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ConnectionDoc.TableDoc parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.ConnectionDoc.TableDoc parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ConnectionDoc.TableDoc parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ConnectionDoc.TableDoc parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.ConnectionDoc.TableDoc prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code ConnectionDoc.TableDoc}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ConnectionDoc.TableDoc)
          EDoc.ConnectionDoc.TableDocOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_ConnectionDoc_TableDoc_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_ConnectionDoc_TableDoc_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.ConnectionDoc.TableDoc.class, EDoc.ConnectionDoc.TableDoc.Builder.class);
        }

        // Construct using EDoc.ConnectionDoc.TableDoc.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getExternalTableFieldBuilder();
            getColumnFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          if (externalTableBuilder_ == null) {
            externalTable_ = null;
          } else {
            externalTableBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (columnBuilder_ == null) {
            column_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            columnBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_ConnectionDoc_TableDoc_descriptor;
        }

        @java.lang.Override
        public EDoc.ConnectionDoc.TableDoc getDefaultInstanceForType() {
          return EDoc.ConnectionDoc.TableDoc.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.ConnectionDoc.TableDoc build() {
          EDoc.ConnectionDoc.TableDoc result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.ConnectionDoc.TableDoc buildPartial() {
          EDoc.ConnectionDoc.TableDoc result = new EDoc.ConnectionDoc.TableDoc(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            if (externalTableBuilder_ == null) {
              result.externalTable_ = externalTable_;
            } else {
              result.externalTable_ = externalTableBuilder_.build();
            }
            to_bitField0_ |= 0x00000004;
          }
          if (columnBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0)) {
              column_ = java.util.Collections.unmodifiableList(column_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.column_ = column_;
          } else {
            result.column_ = columnBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.ConnectionDoc.TableDoc) {
            return mergeFrom((EDoc.ConnectionDoc.TableDoc)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.ConnectionDoc.TableDoc other) {
          if (other == EDoc.ConnectionDoc.TableDoc.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasId()) {
            bitField0_ |= 0x00000002;
            id_ = other.id_;
            onChanged();
          }
          if (other.hasExternalTable()) {
            mergeExternalTable(other.getExternalTable());
          }
          if (columnBuilder_ == null) {
            if (!other.column_.isEmpty()) {
              if (column_.isEmpty()) {
                column_ = other.column_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureColumnIsMutable();
                column_.addAll(other.column_);
              }
              onChanged();
            }
          } else {
            if (!other.column_.isEmpty()) {
              if (columnBuilder_.isEmpty()) {
                columnBuilder_.dispose();
                columnBuilder_ = null;
                column_ = other.column_;
                bitField0_ = (bitField0_ & ~0x00000008);
                columnBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getColumnFieldBuilder() : null;
              } else {
                columnBuilder_.addAllMessages(other.column_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.ConnectionDoc.TableDoc parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.ConnectionDoc.TableDoc) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * Name of the logical table.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Name of the logical table.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Name of the logical table.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Name of the logical table.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the logical table.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the logical table.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object id_ = "";
        /**
         * <pre>
         * String representing id of the logical table.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @return Whether the id field is set.
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * String representing id of the logical table.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @return The id.
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              id_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * String representing id of the logical table.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @return The bytes for id.
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * String representing id of the logical table.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * String representing id of the logical table.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * String representing id of the logical table.
         * </pre>
         *
         * <code>optional string id = 2;</code>
         * @param value The bytes for id to set.
         * @return This builder for chaining.
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          id_ = value;
          onChanged();
          return this;
        }

        private EDoc.ConnectionDoc.TableDoc.ExternalTableMapping externalTable_;
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ConnectionDoc.TableDoc.ExternalTableMapping, EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.Builder, EDoc.ConnectionDoc.TableDoc.ExternalTableMappingOrBuilder> externalTableBuilder_;
        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
         * @return Whether the externalTable field is set.
         */
        public boolean hasExternalTable() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
         * @return The externalTable.
         */
        public EDoc.ConnectionDoc.TableDoc.ExternalTableMapping getExternalTable() {
          if (externalTableBuilder_ == null) {
            return externalTable_ == null ? EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.getDefaultInstance() : externalTable_;
          } else {
            return externalTableBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
         */
        public Builder setExternalTable(EDoc.ConnectionDoc.TableDoc.ExternalTableMapping value) {
          if (externalTableBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            externalTable_ = value;
            onChanged();
          } else {
            externalTableBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
         */
        public Builder setExternalTable(
            EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.Builder builderForValue) {
          if (externalTableBuilder_ == null) {
            externalTable_ = builderForValue.build();
            onChanged();
          } else {
            externalTableBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
         */
        public Builder mergeExternalTable(EDoc.ConnectionDoc.TableDoc.ExternalTableMapping value) {
          if (externalTableBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0) &&
                externalTable_ != null &&
                externalTable_ != EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.getDefaultInstance()) {
              externalTable_ =
                EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.newBuilder(externalTable_).mergeFrom(value).buildPartial();
            } else {
              externalTable_ = value;
            }
            onChanged();
          } else {
            externalTableBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
         */
        public Builder clearExternalTable() {
          if (externalTableBuilder_ == null) {
            externalTable_ = null;
            onChanged();
          } else {
            externalTableBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
         */
        public EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.Builder getExternalTableBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getExternalTableFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
         */
        public EDoc.ConnectionDoc.TableDoc.ExternalTableMappingOrBuilder getExternalTableOrBuilder() {
          if (externalTableBuilder_ != null) {
            return externalTableBuilder_.getMessageOrBuilder();
          } else {
            return externalTable_ == null ?
                EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.getDefaultInstance() : externalTable_;
          }
        }
        /**
         * <pre>
         * Properties representing external mapping.
         * </pre>
         *
         * <code>optional .ConnectionDoc.TableDoc.ExternalTableMapping external_table = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ConnectionDoc.TableDoc.ExternalTableMapping, EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.Builder, EDoc.ConnectionDoc.TableDoc.ExternalTableMappingOrBuilder> 
            getExternalTableFieldBuilder() {
          if (externalTableBuilder_ == null) {
            externalTableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                EDoc.ConnectionDoc.TableDoc.ExternalTableMapping, EDoc.ConnectionDoc.TableDoc.ExternalTableMapping.Builder, EDoc.ConnectionDoc.TableDoc.ExternalTableMappingOrBuilder>(
                    getExternalTable(),
                    getParentForChildren(),
                    isClean());
            externalTable_ = null;
          }
          return externalTableBuilder_;
        }

        private java.util.List<EDoc.ConnectionDoc.TableDoc.ColumnDoc> column_ =
          java.util.Collections.emptyList();
        private void ensureColumnIsMutable() {
          if (!((bitField0_ & 0x00000008) != 0)) {
            column_ = new java.util.ArrayList<EDoc.ConnectionDoc.TableDoc.ColumnDoc>(column_);
            bitField0_ |= 0x00000008;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            EDoc.ConnectionDoc.TableDoc.ColumnDoc, EDoc.ConnectionDoc.TableDoc.ColumnDoc.Builder, EDoc.ConnectionDoc.TableDoc.ColumnDocOrBuilder> columnBuilder_;

        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public java.util.List<EDoc.ConnectionDoc.TableDoc.ColumnDoc> getColumnList() {
          if (columnBuilder_ == null) {
            return java.util.Collections.unmodifiableList(column_);
          } else {
            return columnBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public int getColumnCount() {
          if (columnBuilder_ == null) {
            return column_.size();
          } else {
            return columnBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public EDoc.ConnectionDoc.TableDoc.ColumnDoc getColumn(int index) {
          if (columnBuilder_ == null) {
            return column_.get(index);
          } else {
            return columnBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public Builder setColumn(
            int index, EDoc.ConnectionDoc.TableDoc.ColumnDoc value) {
          if (columnBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureColumnIsMutable();
            column_.set(index, value);
            onChanged();
          } else {
            columnBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public Builder setColumn(
            int index, EDoc.ConnectionDoc.TableDoc.ColumnDoc.Builder builderForValue) {
          if (columnBuilder_ == null) {
            ensureColumnIsMutable();
            column_.set(index, builderForValue.build());
            onChanged();
          } else {
            columnBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public Builder addColumn(EDoc.ConnectionDoc.TableDoc.ColumnDoc value) {
          if (columnBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureColumnIsMutable();
            column_.add(value);
            onChanged();
          } else {
            columnBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public Builder addColumn(
            int index, EDoc.ConnectionDoc.TableDoc.ColumnDoc value) {
          if (columnBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureColumnIsMutable();
            column_.add(index, value);
            onChanged();
          } else {
            columnBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public Builder addColumn(
            EDoc.ConnectionDoc.TableDoc.ColumnDoc.Builder builderForValue) {
          if (columnBuilder_ == null) {
            ensureColumnIsMutable();
            column_.add(builderForValue.build());
            onChanged();
          } else {
            columnBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public Builder addColumn(
            int index, EDoc.ConnectionDoc.TableDoc.ColumnDoc.Builder builderForValue) {
          if (columnBuilder_ == null) {
            ensureColumnIsMutable();
            column_.add(index, builderForValue.build());
            onChanged();
          } else {
            columnBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public Builder addAllColumn(
            java.lang.Iterable<? extends EDoc.ConnectionDoc.TableDoc.ColumnDoc> values) {
          if (columnBuilder_ == null) {
            ensureColumnIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, column_);
            onChanged();
          } else {
            columnBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public Builder clearColumn() {
          if (columnBuilder_ == null) {
            column_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
          } else {
            columnBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public Builder removeColumn(int index) {
          if (columnBuilder_ == null) {
            ensureColumnIsMutable();
            column_.remove(index);
            onChanged();
          } else {
            columnBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public EDoc.ConnectionDoc.TableDoc.ColumnDoc.Builder getColumnBuilder(
            int index) {
          return getColumnFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public EDoc.ConnectionDoc.TableDoc.ColumnDocOrBuilder getColumnOrBuilder(
            int index) {
          if (columnBuilder_ == null) {
            return column_.get(index);  } else {
            return columnBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public java.util.List<? extends EDoc.ConnectionDoc.TableDoc.ColumnDocOrBuilder> 
             getColumnOrBuilderList() {
          if (columnBuilder_ != null) {
            return columnBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(column_);
          }
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public EDoc.ConnectionDoc.TableDoc.ColumnDoc.Builder addColumnBuilder() {
          return getColumnFieldBuilder().addBuilder(
              EDoc.ConnectionDoc.TableDoc.ColumnDoc.getDefaultInstance());
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public EDoc.ConnectionDoc.TableDoc.ColumnDoc.Builder addColumnBuilder(
            int index) {
          return getColumnFieldBuilder().addBuilder(
              index, EDoc.ConnectionDoc.TableDoc.ColumnDoc.getDefaultInstance());
        }
        /**
         * <pre>
         * List of ColumnDoc.
         * </pre>
         *
         * <code>repeated .ConnectionDoc.TableDoc.ColumnDoc column = 4;</code>
         */
        public java.util.List<EDoc.ConnectionDoc.TableDoc.ColumnDoc.Builder> 
             getColumnBuilderList() {
          return getColumnFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            EDoc.ConnectionDoc.TableDoc.ColumnDoc, EDoc.ConnectionDoc.TableDoc.ColumnDoc.Builder, EDoc.ConnectionDoc.TableDoc.ColumnDocOrBuilder> 
            getColumnFieldBuilder() {
          if (columnBuilder_ == null) {
            columnBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                EDoc.ConnectionDoc.TableDoc.ColumnDoc, EDoc.ConnectionDoc.TableDoc.ColumnDoc.Builder, EDoc.ConnectionDoc.TableDoc.ColumnDocOrBuilder>(
                    column_,
                    ((bitField0_ & 0x00000008) != 0),
                    getParentForChildren(),
                    isClean());
            column_ = null;
          }
          return columnBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:ConnectionDoc.TableDoc)
      }

      // @@protoc_insertion_point(class_scope:ConnectionDoc.TableDoc)
      private static final EDoc.ConnectionDoc.TableDoc DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.ConnectionDoc.TableDoc();
      }

      public static EDoc.ConnectionDoc.TableDoc getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<TableDoc>
          PARSER = new com.google.protobuf.AbstractParser<TableDoc>() {
        @java.lang.Override
        public TableDoc parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TableDoc(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TableDoc> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TableDoc> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.ConnectionDoc.TableDoc getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Name of the connection.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Name of the connection.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Name of the connection.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * Type of Connection.
     * </pre>
     *
     * <code>optional string type = 2;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Type of Connection.
     * </pre>
     *
     * <code>optional string type = 2;</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Type of Connection.
     * </pre>
     *
     * <code>optional string type = 2;</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AUTHENTICATION_TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object authenticationType_;
    /**
     * <pre>
     * Authentication type of Connection.
     * Mentioned in "atlas/public/metadata.proto" Datasource - authenticationType enum
     * </pre>
     *
     * <code>optional string authentication_type = 3;</code>
     * @return Whether the authenticationType field is set.
     */
    @java.lang.Override
    public boolean hasAuthenticationType() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Authentication type of Connection.
     * Mentioned in "atlas/public/metadata.proto" Datasource - authenticationType enum
     * </pre>
     *
     * <code>optional string authentication_type = 3;</code>
     * @return The authenticationType.
     */
    @java.lang.Override
    public java.lang.String getAuthenticationType() {
      java.lang.Object ref = authenticationType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          authenticationType_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Authentication type of Connection.
     * Mentioned in "atlas/public/metadata.proto" Datasource - authenticationType enum
     * </pre>
     *
     * <code>optional string authentication_type = 3;</code>
     * @return The bytes for authenticationType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAuthenticationTypeBytes() {
      java.lang.Object ref = authenticationType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        authenticationType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TABLE_FIELD_NUMBER = 5;
    private java.util.List<EDoc.ConnectionDoc.TableDoc> table_;
    /**
     * <pre>
     * Properties of Connection.
     *repeated common.KeyValueStr properties = 4;
     * List of TableDoc.
     * </pre>
     *
     * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.ConnectionDoc.TableDoc> getTableList() {
      return table_;
    }
    /**
     * <pre>
     * Properties of Connection.
     *repeated common.KeyValueStr properties = 4;
     * List of TableDoc.
     * </pre>
     *
     * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.ConnectionDoc.TableDocOrBuilder> 
        getTableOrBuilderList() {
      return table_;
    }
    /**
     * <pre>
     * Properties of Connection.
     *repeated common.KeyValueStr properties = 4;
     * List of TableDoc.
     * </pre>
     *
     * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
     */
    @java.lang.Override
    public int getTableCount() {
      return table_.size();
    }
    /**
     * <pre>
     * Properties of Connection.
     *repeated common.KeyValueStr properties = 4;
     * List of TableDoc.
     * </pre>
     *
     * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
     */
    @java.lang.Override
    public EDoc.ConnectionDoc.TableDoc getTable(int index) {
      return table_.get(index);
    }
    /**
     * <pre>
     * Properties of Connection.
     *repeated common.KeyValueStr properties = 4;
     * List of TableDoc.
     * </pre>
     *
     * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
     */
    @java.lang.Override
    public EDoc.ConnectionDoc.TableDocOrBuilder getTableOrBuilder(
        int index) {
      return table_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, type_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, authenticationType_);
      }
      for (int i = 0; i < table_.size(); i++) {
        output.writeMessage(5, table_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, type_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, authenticationType_);
      }
      for (int i = 0; i < table_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, table_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.ConnectionDoc)) {
        return super.equals(obj);
      }
      EDoc.ConnectionDoc other = (EDoc.ConnectionDoc) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (!getType()
            .equals(other.getType())) return false;
      }
      if (hasAuthenticationType() != other.hasAuthenticationType()) return false;
      if (hasAuthenticationType()) {
        if (!getAuthenticationType()
            .equals(other.getAuthenticationType())) return false;
      }
      if (!getTableList()
          .equals(other.getTableList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      if (hasAuthenticationType()) {
        hash = (37 * hash) + AUTHENTICATION_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getAuthenticationType().hashCode();
      }
      if (getTableCount() > 0) {
        hash = (37 * hash) + TABLE_FIELD_NUMBER;
        hash = (53 * hash) + getTableList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.ConnectionDoc parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ConnectionDoc parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ConnectionDoc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ConnectionDoc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ConnectionDoc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ConnectionDoc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ConnectionDoc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.ConnectionDoc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.ConnectionDoc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.ConnectionDoc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.ConnectionDoc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.ConnectionDoc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.ConnectionDoc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ConnectionDoc represents mapping of table and columns created from external
     * data warehouse like Snowflake, Redshift, etc. The basic idea is to give user
     * an option to change the mapping of existing tables and columns to other
     * tables and columns in same DataSource or different DataSource. DataSource can
     * be updated by changing the properties in the ConnectionDoc.
     * </pre>
     *
     * Protobuf type {@code ConnectionDoc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ConnectionDoc)
        EDoc.ConnectionDocOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ConnectionDoc_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ConnectionDoc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ConnectionDoc.class, EDoc.ConnectionDoc.Builder.class);
      }

      // Construct using EDoc.ConnectionDoc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTableFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        authenticationType_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (tableBuilder_ == null) {
          table_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          tableBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_ConnectionDoc_descriptor;
      }

      @java.lang.Override
      public EDoc.ConnectionDoc getDefaultInstanceForType() {
        return EDoc.ConnectionDoc.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.ConnectionDoc build() {
        EDoc.ConnectionDoc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.ConnectionDoc buildPartial() {
        EDoc.ConnectionDoc result = new EDoc.ConnectionDoc(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.authenticationType_ = authenticationType_;
        if (tableBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            table_ = java.util.Collections.unmodifiableList(table_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.table_ = table_;
        } else {
          result.table_ = tableBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.ConnectionDoc) {
          return mergeFrom((EDoc.ConnectionDoc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.ConnectionDoc other) {
        if (other == EDoc.ConnectionDoc.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasType()) {
          bitField0_ |= 0x00000002;
          type_ = other.type_;
          onChanged();
        }
        if (other.hasAuthenticationType()) {
          bitField0_ |= 0x00000004;
          authenticationType_ = other.authenticationType_;
          onChanged();
        }
        if (tableBuilder_ == null) {
          if (!other.table_.isEmpty()) {
            if (table_.isEmpty()) {
              table_ = other.table_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureTableIsMutable();
              table_.addAll(other.table_);
            }
            onChanged();
          }
        } else {
          if (!other.table_.isEmpty()) {
            if (tableBuilder_.isEmpty()) {
              tableBuilder_.dispose();
              tableBuilder_ = null;
              table_ = other.table_;
              bitField0_ = (bitField0_ & ~0x00000008);
              tableBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTableFieldBuilder() : null;
            } else {
              tableBuilder_.addAllMessages(other.table_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.ConnectionDoc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.ConnectionDoc) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name of the connection.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Name of the connection.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the connection.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the connection.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the connection.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the connection.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * Type of Connection.
       * </pre>
       *
       * <code>optional string type = 2;</code>
       * @return Whether the type field is set.
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Type of Connection.
       * </pre>
       *
       * <code>optional string type = 2;</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            type_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Type of Connection.
       * </pre>
       *
       * <code>optional string type = 2;</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Type of Connection.
       * </pre>
       *
       * <code>optional string type = 2;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of Connection.
       * </pre>
       *
       * <code>optional string type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of Connection.
       * </pre>
       *
       * <code>optional string type = 2;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object authenticationType_ = "";
      /**
       * <pre>
       * Authentication type of Connection.
       * Mentioned in "atlas/public/metadata.proto" Datasource - authenticationType enum
       * </pre>
       *
       * <code>optional string authentication_type = 3;</code>
       * @return Whether the authenticationType field is set.
       */
      public boolean hasAuthenticationType() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Authentication type of Connection.
       * Mentioned in "atlas/public/metadata.proto" Datasource - authenticationType enum
       * </pre>
       *
       * <code>optional string authentication_type = 3;</code>
       * @return The authenticationType.
       */
      public java.lang.String getAuthenticationType() {
        java.lang.Object ref = authenticationType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            authenticationType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Authentication type of Connection.
       * Mentioned in "atlas/public/metadata.proto" Datasource - authenticationType enum
       * </pre>
       *
       * <code>optional string authentication_type = 3;</code>
       * @return The bytes for authenticationType.
       */
      public com.google.protobuf.ByteString
          getAuthenticationTypeBytes() {
        java.lang.Object ref = authenticationType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          authenticationType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Authentication type of Connection.
       * Mentioned in "atlas/public/metadata.proto" Datasource - authenticationType enum
       * </pre>
       *
       * <code>optional string authentication_type = 3;</code>
       * @param value The authenticationType to set.
       * @return This builder for chaining.
       */
      public Builder setAuthenticationType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        authenticationType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Authentication type of Connection.
       * Mentioned in "atlas/public/metadata.proto" Datasource - authenticationType enum
       * </pre>
       *
       * <code>optional string authentication_type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuthenticationType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        authenticationType_ = getDefaultInstance().getAuthenticationType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Authentication type of Connection.
       * Mentioned in "atlas/public/metadata.proto" Datasource - authenticationType enum
       * </pre>
       *
       * <code>optional string authentication_type = 3;</code>
       * @param value The bytes for authenticationType to set.
       * @return This builder for chaining.
       */
      public Builder setAuthenticationTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        authenticationType_ = value;
        onChanged();
        return this;
      }

      private java.util.List<EDoc.ConnectionDoc.TableDoc> table_ =
        java.util.Collections.emptyList();
      private void ensureTableIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          table_ = new java.util.ArrayList<EDoc.ConnectionDoc.TableDoc>(table_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.ConnectionDoc.TableDoc, EDoc.ConnectionDoc.TableDoc.Builder, EDoc.ConnectionDoc.TableDocOrBuilder> tableBuilder_;

      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public java.util.List<EDoc.ConnectionDoc.TableDoc> getTableList() {
        if (tableBuilder_ == null) {
          return java.util.Collections.unmodifiableList(table_);
        } else {
          return tableBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public int getTableCount() {
        if (tableBuilder_ == null) {
          return table_.size();
        } else {
          return tableBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public EDoc.ConnectionDoc.TableDoc getTable(int index) {
        if (tableBuilder_ == null) {
          return table_.get(index);
        } else {
          return tableBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public Builder setTable(
          int index, EDoc.ConnectionDoc.TableDoc value) {
        if (tableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableIsMutable();
          table_.set(index, value);
          onChanged();
        } else {
          tableBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public Builder setTable(
          int index, EDoc.ConnectionDoc.TableDoc.Builder builderForValue) {
        if (tableBuilder_ == null) {
          ensureTableIsMutable();
          table_.set(index, builderForValue.build());
          onChanged();
        } else {
          tableBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public Builder addTable(EDoc.ConnectionDoc.TableDoc value) {
        if (tableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableIsMutable();
          table_.add(value);
          onChanged();
        } else {
          tableBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public Builder addTable(
          int index, EDoc.ConnectionDoc.TableDoc value) {
        if (tableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableIsMutable();
          table_.add(index, value);
          onChanged();
        } else {
          tableBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public Builder addTable(
          EDoc.ConnectionDoc.TableDoc.Builder builderForValue) {
        if (tableBuilder_ == null) {
          ensureTableIsMutable();
          table_.add(builderForValue.build());
          onChanged();
        } else {
          tableBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public Builder addTable(
          int index, EDoc.ConnectionDoc.TableDoc.Builder builderForValue) {
        if (tableBuilder_ == null) {
          ensureTableIsMutable();
          table_.add(index, builderForValue.build());
          onChanged();
        } else {
          tableBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public Builder addAllTable(
          java.lang.Iterable<? extends EDoc.ConnectionDoc.TableDoc> values) {
        if (tableBuilder_ == null) {
          ensureTableIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, table_);
          onChanged();
        } else {
          tableBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public Builder clearTable() {
        if (tableBuilder_ == null) {
          table_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          tableBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public Builder removeTable(int index) {
        if (tableBuilder_ == null) {
          ensureTableIsMutable();
          table_.remove(index);
          onChanged();
        } else {
          tableBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public EDoc.ConnectionDoc.TableDoc.Builder getTableBuilder(
          int index) {
        return getTableFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public EDoc.ConnectionDoc.TableDocOrBuilder getTableOrBuilder(
          int index) {
        if (tableBuilder_ == null) {
          return table_.get(index);  } else {
          return tableBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public java.util.List<? extends EDoc.ConnectionDoc.TableDocOrBuilder> 
           getTableOrBuilderList() {
        if (tableBuilder_ != null) {
          return tableBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(table_);
        }
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public EDoc.ConnectionDoc.TableDoc.Builder addTableBuilder() {
        return getTableFieldBuilder().addBuilder(
            EDoc.ConnectionDoc.TableDoc.getDefaultInstance());
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public EDoc.ConnectionDoc.TableDoc.Builder addTableBuilder(
          int index) {
        return getTableFieldBuilder().addBuilder(
            index, EDoc.ConnectionDoc.TableDoc.getDefaultInstance());
      }
      /**
       * <pre>
       * Properties of Connection.
       *repeated common.KeyValueStr properties = 4;
       * List of TableDoc.
       * </pre>
       *
       * <code>repeated .ConnectionDoc.TableDoc table = 5;</code>
       */
      public java.util.List<EDoc.ConnectionDoc.TableDoc.Builder> 
           getTableBuilderList() {
        return getTableFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.ConnectionDoc.TableDoc, EDoc.ConnectionDoc.TableDoc.Builder, EDoc.ConnectionDoc.TableDocOrBuilder> 
          getTableFieldBuilder() {
        if (tableBuilder_ == null) {
          tableBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.ConnectionDoc.TableDoc, EDoc.ConnectionDoc.TableDoc.Builder, EDoc.ConnectionDoc.TableDocOrBuilder>(
                  table_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          table_ = null;
        }
        return tableBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ConnectionDoc)
    }

    // @@protoc_insertion_point(class_scope:ConnectionDoc)
    private static final EDoc.ConnectionDoc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.ConnectionDoc();
    }

    public static EDoc.ConnectionDoc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ConnectionDoc>
        PARSER = new com.google.protobuf.AbstractParser<ConnectionDoc>() {
      @java.lang.Override
      public ConnectionDoc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConnectionDoc(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConnectionDoc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConnectionDoc> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.ConnectionDoc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConditionalFormattingProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ConditionalFormattingProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * We can have multiple rules defined for the same column.
     * </pre>
     *
     * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
     */
    java.util.List<EDoc.ConditionalFormattingProto.Rule> 
        getRuleList();
    /**
     * <pre>
     * We can have multiple rules defined for the same column.
     * </pre>
     *
     * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
     */
    EDoc.ConditionalFormattingProto.Rule getRule(int index);
    /**
     * <pre>
     * We can have multiple rules defined for the same column.
     * </pre>
     *
     * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
     */
    int getRuleCount();
    /**
     * <pre>
     * We can have multiple rules defined for the same column.
     * </pre>
     *
     * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
     */
    java.util.List<? extends EDoc.ConditionalFormattingProto.RuleOrBuilder> 
        getRuleOrBuilderList();
    /**
     * <pre>
     * We can have multiple rules defined for the same column.
     * </pre>
     *
     * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
     */
    EDoc.ConditionalFormattingProto.RuleOrBuilder getRuleOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Proto used to define conditional formatting for a numeric column in a
   * visualization.
   * Based on MetricDefinitionProto defined in callosum/client/metric.proto.
   * TODO(Archit): Should we re-use MetricDefinitionProto? There are some extra
   * fields in MetricDefinitionProto which are not used in conditional formatting
   * but we can still re-use if we keep the structure same. For re-use, we have to
   * also settle with non-intuitive field names like Row instead of Rule.
   * </pre>
   *
   * Protobuf type {@code ConditionalFormattingProto}
   */
  public static final class ConditionalFormattingProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ConditionalFormattingProto)
      ConditionalFormattingProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConditionalFormattingProto.newBuilder() to construct.
    private ConditionalFormattingProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConditionalFormattingProto() {
      rule_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConditionalFormattingProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConditionalFormattingProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                rule_ = new java.util.ArrayList<EDoc.ConditionalFormattingProto.Rule>();
                mutable_bitField0_ |= 0x00000001;
              }
              rule_.add(
                  input.readMessage(EDoc.ConditionalFormattingProto.Rule.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          rule_ = java.util.Collections.unmodifiableList(rule_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_ConditionalFormattingProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_ConditionalFormattingProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.ConditionalFormattingProto.class, EDoc.ConditionalFormattingProto.Builder.class);
    }

    public interface RangeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ConditionalFormattingProto.Range)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional double min = 1;</code>
       * @return Whether the min field is set.
       */
      boolean hasMin();
      /**
       * <code>optional double min = 1;</code>
       * @return The min.
       */
      double getMin();

      /**
       * <code>optional double max = 2;</code>
       * @return Whether the max field is set.
       */
      boolean hasMax();
      /**
       * <code>optional double max = 2;</code>
       * @return The max.
       */
      double getMax();
    }
    /**
     * <pre>
     * Condition specified for formatting using [min-max] range.
     * </pre>
     *
     * Protobuf type {@code ConditionalFormattingProto.Range}
     */
    public static final class Range extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:ConditionalFormattingProto.Range)
        RangeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Range.newBuilder() to construct.
      private Range(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Range() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Range();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Range(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                bitField0_ |= 0x00000001;
                min_ = input.readDouble();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                max_ = input.readDouble();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ConditionalFormattingProto_Range_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ConditionalFormattingProto_Range_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ConditionalFormattingProto.Range.class, EDoc.ConditionalFormattingProto.Range.Builder.class);
      }

      private int bitField0_;
      public static final int MIN_FIELD_NUMBER = 1;
      private double min_;
      /**
       * <code>optional double min = 1;</code>
       * @return Whether the min field is set.
       */
      @java.lang.Override
      public boolean hasMin() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional double min = 1;</code>
       * @return The min.
       */
      @java.lang.Override
      public double getMin() {
        return min_;
      }

      public static final int MAX_FIELD_NUMBER = 2;
      private double max_;
      /**
       * <code>optional double max = 2;</code>
       * @return Whether the max field is set.
       */
      @java.lang.Override
      public boolean hasMax() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional double max = 2;</code>
       * @return The max.
       */
      @java.lang.Override
      public double getMax() {
        return max_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeDouble(1, min_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeDouble(2, max_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, min_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, max_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.ConditionalFormattingProto.Range)) {
          return super.equals(obj);
        }
        EDoc.ConditionalFormattingProto.Range other = (EDoc.ConditionalFormattingProto.Range) obj;

        if (hasMin() != other.hasMin()) return false;
        if (hasMin()) {
          if (java.lang.Double.doubleToLongBits(getMin())
              != java.lang.Double.doubleToLongBits(
                  other.getMin())) return false;
        }
        if (hasMax() != other.hasMax()) return false;
        if (hasMax()) {
          if (java.lang.Double.doubleToLongBits(getMax())
              != java.lang.Double.doubleToLongBits(
                  other.getMax())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMin()) {
          hash = (37 * hash) + MIN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getMin()));
        }
        if (hasMax()) {
          hash = (37 * hash) + MAX_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getMax()));
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.ConditionalFormattingProto.Range parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ConditionalFormattingProto.Range parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ConditionalFormattingProto.Range parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ConditionalFormattingProto.Range parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ConditionalFormattingProto.Range parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ConditionalFormattingProto.Range parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ConditionalFormattingProto.Range parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ConditionalFormattingProto.Range parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ConditionalFormattingProto.Range parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.ConditionalFormattingProto.Range parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ConditionalFormattingProto.Range parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ConditionalFormattingProto.Range parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.ConditionalFormattingProto.Range prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Condition specified for formatting using [min-max] range.
       * </pre>
       *
       * Protobuf type {@code ConditionalFormattingProto.Range}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ConditionalFormattingProto.Range)
          EDoc.ConditionalFormattingProto.RangeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_ConditionalFormattingProto_Range_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_ConditionalFormattingProto_Range_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.ConditionalFormattingProto.Range.class, EDoc.ConditionalFormattingProto.Range.Builder.class);
        }

        // Construct using EDoc.ConditionalFormattingProto.Range.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          min_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000001);
          max_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_ConditionalFormattingProto_Range_descriptor;
        }

        @java.lang.Override
        public EDoc.ConditionalFormattingProto.Range getDefaultInstanceForType() {
          return EDoc.ConditionalFormattingProto.Range.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.ConditionalFormattingProto.Range build() {
          EDoc.ConditionalFormattingProto.Range result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.ConditionalFormattingProto.Range buildPartial() {
          EDoc.ConditionalFormattingProto.Range result = new EDoc.ConditionalFormattingProto.Range(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.min_ = min_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.max_ = max_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.ConditionalFormattingProto.Range) {
            return mergeFrom((EDoc.ConditionalFormattingProto.Range)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.ConditionalFormattingProto.Range other) {
          if (other == EDoc.ConditionalFormattingProto.Range.getDefaultInstance()) return this;
          if (other.hasMin()) {
            setMin(other.getMin());
          }
          if (other.hasMax()) {
            setMax(other.getMax());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.ConditionalFormattingProto.Range parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.ConditionalFormattingProto.Range) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private double min_ ;
        /**
         * <code>optional double min = 1;</code>
         * @return Whether the min field is set.
         */
        @java.lang.Override
        public boolean hasMin() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional double min = 1;</code>
         * @return The min.
         */
        @java.lang.Override
        public double getMin() {
          return min_;
        }
        /**
         * <code>optional double min = 1;</code>
         * @param value The min to set.
         * @return This builder for chaining.
         */
        public Builder setMin(double value) {
          bitField0_ |= 0x00000001;
          min_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double min = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearMin() {
          bitField0_ = (bitField0_ & ~0x00000001);
          min_ = 0D;
          onChanged();
          return this;
        }

        private double max_ ;
        /**
         * <code>optional double max = 2;</code>
         * @return Whether the max field is set.
         */
        @java.lang.Override
        public boolean hasMax() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional double max = 2;</code>
         * @return The max.
         */
        @java.lang.Override
        public double getMax() {
          return max_;
        }
        /**
         * <code>optional double max = 2;</code>
         * @param value The max to set.
         * @return This builder for chaining.
         */
        public Builder setMax(double value) {
          bitField0_ |= 0x00000002;
          max_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double max = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearMax() {
          bitField0_ = (bitField0_ & ~0x00000002);
          max_ = 0D;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:ConditionalFormattingProto.Range)
      }

      // @@protoc_insertion_point(class_scope:ConditionalFormattingProto.Range)
      private static final EDoc.ConditionalFormattingProto.Range DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.ConditionalFormattingProto.Range();
      }

      public static EDoc.ConditionalFormattingProto.Range getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Range>
          PARSER = new com.google.protobuf.AbstractParser<Range>() {
        @java.lang.Override
        public Range parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Range(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Range> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Range> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.ConditionalFormattingProto.Range getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RuleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ConditionalFormattingProto.Rule)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Value range.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
       * @return Whether the range field is set.
       */
      boolean hasRange();
      /**
       * <pre>
       * Value range.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
       * @return The range.
       */
      EDoc.ConditionalFormattingProto.Range getRange();
      /**
       * <pre>
       * Value range.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
       */
      EDoc.ConditionalFormattingProto.RangeOrBuilder getRangeOrBuilder();

      /**
       * <pre>
       * Color associated with range.
       * </pre>
       *
       * <code>optional string color = 2;</code>
       * @return Whether the color field is set.
       */
      boolean hasColor();
      /**
       * <pre>
       * Color associated with range.
       * </pre>
       *
       * <code>optional string color = 2;</code>
       * @return The color.
       */
      java.lang.String getColor();
      /**
       * <pre>
       * Color associated with range.
       * </pre>
       *
       * <code>optional string color = 2;</code>
       * @return The bytes for color.
       */
      com.google.protobuf.ByteString
          getColorBytes();

      /**
       * <pre>
       * Whether to plot this metric like a band on the Visualization.
       * TODO(Archit): Come up with a better name for this. On UI we show this
       * option as "Fill Chart".
       * </pre>
       *
       * <code>optional bool plotAsBand = 5;</code>
       * @return Whether the plotAsBand field is set.
       */
      boolean hasPlotAsBand();
      /**
       * <pre>
       * Whether to plot this metric like a band on the Visualization.
       * TODO(Archit): Come up with a better name for this. On UI we show this
       * option as "Fill Chart".
       * </pre>
       *
       * <code>optional bool plotAsBand = 5;</code>
       * @return The plotAsBand.
       */
      boolean getPlotAsBand();
    }
    /**
     * <pre>
     * Rule defining a condition and corresponding visual properties like color
     * for formatting.
     * </pre>
     *
     * Protobuf type {@code ConditionalFormattingProto.Rule}
     */
    public static final class Rule extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:ConditionalFormattingProto.Rule)
        RuleOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Rule.newBuilder() to construct.
      private Rule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Rule() {
        color_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Rule();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Rule(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                EDoc.ConditionalFormattingProto.Range.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) != 0)) {
                  subBuilder = range_.toBuilder();
                }
                range_ = input.readMessage(EDoc.ConditionalFormattingProto.Range.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(range_);
                  range_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                color_ = bs;
                break;
              }
              case 40: {
                bitField0_ |= 0x00000004;
                plotAsBand_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ConditionalFormattingProto_Rule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ConditionalFormattingProto_Rule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ConditionalFormattingProto.Rule.class, EDoc.ConditionalFormattingProto.Rule.Builder.class);
      }

      private int bitField0_;
      public static final int RANGE_FIELD_NUMBER = 1;
      private EDoc.ConditionalFormattingProto.Range range_;
      /**
       * <pre>
       * Value range.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
       * @return Whether the range field is set.
       */
      @java.lang.Override
      public boolean hasRange() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Value range.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
       * @return The range.
       */
      @java.lang.Override
      public EDoc.ConditionalFormattingProto.Range getRange() {
        return range_ == null ? EDoc.ConditionalFormattingProto.Range.getDefaultInstance() : range_;
      }
      /**
       * <pre>
       * Value range.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
       */
      @java.lang.Override
      public EDoc.ConditionalFormattingProto.RangeOrBuilder getRangeOrBuilder() {
        return range_ == null ? EDoc.ConditionalFormattingProto.Range.getDefaultInstance() : range_;
      }

      public static final int COLOR_FIELD_NUMBER = 2;
      private volatile java.lang.Object color_;
      /**
       * <pre>
       * Color associated with range.
       * </pre>
       *
       * <code>optional string color = 2;</code>
       * @return Whether the color field is set.
       */
      @java.lang.Override
      public boolean hasColor() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Color associated with range.
       * </pre>
       *
       * <code>optional string color = 2;</code>
       * @return The color.
       */
      @java.lang.Override
      public java.lang.String getColor() {
        java.lang.Object ref = color_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            color_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Color associated with range.
       * </pre>
       *
       * <code>optional string color = 2;</code>
       * @return The bytes for color.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getColorBytes() {
        java.lang.Object ref = color_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          color_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PLOTASBAND_FIELD_NUMBER = 5;
      private boolean plotAsBand_;
      /**
       * <pre>
       * Whether to plot this metric like a band on the Visualization.
       * TODO(Archit): Come up with a better name for this. On UI we show this
       * option as "Fill Chart".
       * </pre>
       *
       * <code>optional bool plotAsBand = 5;</code>
       * @return Whether the plotAsBand field is set.
       */
      @java.lang.Override
      public boolean hasPlotAsBand() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Whether to plot this metric like a band on the Visualization.
       * TODO(Archit): Come up with a better name for this. On UI we show this
       * option as "Fill Chart".
       * </pre>
       *
       * <code>optional bool plotAsBand = 5;</code>
       * @return The plotAsBand.
       */
      @java.lang.Override
      public boolean getPlotAsBand() {
        return plotAsBand_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(1, getRange());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, color_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeBool(5, plotAsBand_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getRange());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, color_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, plotAsBand_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.ConditionalFormattingProto.Rule)) {
          return super.equals(obj);
        }
        EDoc.ConditionalFormattingProto.Rule other = (EDoc.ConditionalFormattingProto.Rule) obj;

        if (hasRange() != other.hasRange()) return false;
        if (hasRange()) {
          if (!getRange()
              .equals(other.getRange())) return false;
        }
        if (hasColor() != other.hasColor()) return false;
        if (hasColor()) {
          if (!getColor()
              .equals(other.getColor())) return false;
        }
        if (hasPlotAsBand() != other.hasPlotAsBand()) return false;
        if (hasPlotAsBand()) {
          if (getPlotAsBand()
              != other.getPlotAsBand()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasRange()) {
          hash = (37 * hash) + RANGE_FIELD_NUMBER;
          hash = (53 * hash) + getRange().hashCode();
        }
        if (hasColor()) {
          hash = (37 * hash) + COLOR_FIELD_NUMBER;
          hash = (53 * hash) + getColor().hashCode();
        }
        if (hasPlotAsBand()) {
          hash = (37 * hash) + PLOTASBAND_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getPlotAsBand());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.ConditionalFormattingProto.Rule parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ConditionalFormattingProto.Rule parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ConditionalFormattingProto.Rule parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ConditionalFormattingProto.Rule parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ConditionalFormattingProto.Rule parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ConditionalFormattingProto.Rule parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ConditionalFormattingProto.Rule parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ConditionalFormattingProto.Rule parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ConditionalFormattingProto.Rule parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.ConditionalFormattingProto.Rule parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ConditionalFormattingProto.Rule parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ConditionalFormattingProto.Rule parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.ConditionalFormattingProto.Rule prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Rule defining a condition and corresponding visual properties like color
       * for formatting.
       * </pre>
       *
       * Protobuf type {@code ConditionalFormattingProto.Rule}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ConditionalFormattingProto.Rule)
          EDoc.ConditionalFormattingProto.RuleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_ConditionalFormattingProto_Rule_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_ConditionalFormattingProto_Rule_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.ConditionalFormattingProto.Rule.class, EDoc.ConditionalFormattingProto.Rule.Builder.class);
        }

        // Construct using EDoc.ConditionalFormattingProto.Rule.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getRangeFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (rangeBuilder_ == null) {
            range_ = null;
          } else {
            rangeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          color_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          plotAsBand_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_ConditionalFormattingProto_Rule_descriptor;
        }

        @java.lang.Override
        public EDoc.ConditionalFormattingProto.Rule getDefaultInstanceForType() {
          return EDoc.ConditionalFormattingProto.Rule.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.ConditionalFormattingProto.Rule build() {
          EDoc.ConditionalFormattingProto.Rule result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.ConditionalFormattingProto.Rule buildPartial() {
          EDoc.ConditionalFormattingProto.Rule result = new EDoc.ConditionalFormattingProto.Rule(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            if (rangeBuilder_ == null) {
              result.range_ = range_;
            } else {
              result.range_ = rangeBuilder_.build();
            }
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.color_ = color_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.plotAsBand_ = plotAsBand_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.ConditionalFormattingProto.Rule) {
            return mergeFrom((EDoc.ConditionalFormattingProto.Rule)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.ConditionalFormattingProto.Rule other) {
          if (other == EDoc.ConditionalFormattingProto.Rule.getDefaultInstance()) return this;
          if (other.hasRange()) {
            mergeRange(other.getRange());
          }
          if (other.hasColor()) {
            bitField0_ |= 0x00000002;
            color_ = other.color_;
            onChanged();
          }
          if (other.hasPlotAsBand()) {
            setPlotAsBand(other.getPlotAsBand());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.ConditionalFormattingProto.Rule parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.ConditionalFormattingProto.Rule) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private EDoc.ConditionalFormattingProto.Range range_;
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ConditionalFormattingProto.Range, EDoc.ConditionalFormattingProto.Range.Builder, EDoc.ConditionalFormattingProto.RangeOrBuilder> rangeBuilder_;
        /**
         * <pre>
         * Value range.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
         * @return Whether the range field is set.
         */
        public boolean hasRange() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Value range.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
         * @return The range.
         */
        public EDoc.ConditionalFormattingProto.Range getRange() {
          if (rangeBuilder_ == null) {
            return range_ == null ? EDoc.ConditionalFormattingProto.Range.getDefaultInstance() : range_;
          } else {
            return rangeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Value range.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
         */
        public Builder setRange(EDoc.ConditionalFormattingProto.Range value) {
          if (rangeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            range_ = value;
            onChanged();
          } else {
            rangeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * Value range.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
         */
        public Builder setRange(
            EDoc.ConditionalFormattingProto.Range.Builder builderForValue) {
          if (rangeBuilder_ == null) {
            range_ = builderForValue.build();
            onChanged();
          } else {
            rangeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * Value range.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
         */
        public Builder mergeRange(EDoc.ConditionalFormattingProto.Range value) {
          if (rangeBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
                range_ != null &&
                range_ != EDoc.ConditionalFormattingProto.Range.getDefaultInstance()) {
              range_ =
                EDoc.ConditionalFormattingProto.Range.newBuilder(range_).mergeFrom(value).buildPartial();
            } else {
              range_ = value;
            }
            onChanged();
          } else {
            rangeBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * Value range.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
         */
        public Builder clearRange() {
          if (rangeBuilder_ == null) {
            range_ = null;
            onChanged();
          } else {
            rangeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <pre>
         * Value range.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
         */
        public EDoc.ConditionalFormattingProto.Range.Builder getRangeBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getRangeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Value range.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
         */
        public EDoc.ConditionalFormattingProto.RangeOrBuilder getRangeOrBuilder() {
          if (rangeBuilder_ != null) {
            return rangeBuilder_.getMessageOrBuilder();
          } else {
            return range_ == null ?
                EDoc.ConditionalFormattingProto.Range.getDefaultInstance() : range_;
          }
        }
        /**
         * <pre>
         * Value range.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto.Range range = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ConditionalFormattingProto.Range, EDoc.ConditionalFormattingProto.Range.Builder, EDoc.ConditionalFormattingProto.RangeOrBuilder> 
            getRangeFieldBuilder() {
          if (rangeBuilder_ == null) {
            rangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                EDoc.ConditionalFormattingProto.Range, EDoc.ConditionalFormattingProto.Range.Builder, EDoc.ConditionalFormattingProto.RangeOrBuilder>(
                    getRange(),
                    getParentForChildren(),
                    isClean());
            range_ = null;
          }
          return rangeBuilder_;
        }

        private java.lang.Object color_ = "";
        /**
         * <pre>
         * Color associated with range.
         * </pre>
         *
         * <code>optional string color = 2;</code>
         * @return Whether the color field is set.
         */
        public boolean hasColor() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Color associated with range.
         * </pre>
         *
         * <code>optional string color = 2;</code>
         * @return The color.
         */
        public java.lang.String getColor() {
          java.lang.Object ref = color_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              color_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Color associated with range.
         * </pre>
         *
         * <code>optional string color = 2;</code>
         * @return The bytes for color.
         */
        public com.google.protobuf.ByteString
            getColorBytes() {
          java.lang.Object ref = color_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            color_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Color associated with range.
         * </pre>
         *
         * <code>optional string color = 2;</code>
         * @param value The color to set.
         * @return This builder for chaining.
         */
        public Builder setColor(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          color_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Color associated with range.
         * </pre>
         *
         * <code>optional string color = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearColor() {
          bitField0_ = (bitField0_ & ~0x00000002);
          color_ = getDefaultInstance().getColor();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Color associated with range.
         * </pre>
         *
         * <code>optional string color = 2;</code>
         * @param value The bytes for color to set.
         * @return This builder for chaining.
         */
        public Builder setColorBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          color_ = value;
          onChanged();
          return this;
        }

        private boolean plotAsBand_ ;
        /**
         * <pre>
         * Whether to plot this metric like a band on the Visualization.
         * TODO(Archit): Come up with a better name for this. On UI we show this
         * option as "Fill Chart".
         * </pre>
         *
         * <code>optional bool plotAsBand = 5;</code>
         * @return Whether the plotAsBand field is set.
         */
        @java.lang.Override
        public boolean hasPlotAsBand() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Whether to plot this metric like a band on the Visualization.
         * TODO(Archit): Come up with a better name for this. On UI we show this
         * option as "Fill Chart".
         * </pre>
         *
         * <code>optional bool plotAsBand = 5;</code>
         * @return The plotAsBand.
         */
        @java.lang.Override
        public boolean getPlotAsBand() {
          return plotAsBand_;
        }
        /**
         * <pre>
         * Whether to plot this metric like a band on the Visualization.
         * TODO(Archit): Come up with a better name for this. On UI we show this
         * option as "Fill Chart".
         * </pre>
         *
         * <code>optional bool plotAsBand = 5;</code>
         * @param value The plotAsBand to set.
         * @return This builder for chaining.
         */
        public Builder setPlotAsBand(boolean value) {
          bitField0_ |= 0x00000004;
          plotAsBand_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Whether to plot this metric like a band on the Visualization.
         * TODO(Archit): Come up with a better name for this. On UI we show this
         * option as "Fill Chart".
         * </pre>
         *
         * <code>optional bool plotAsBand = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearPlotAsBand() {
          bitField0_ = (bitField0_ & ~0x00000004);
          plotAsBand_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:ConditionalFormattingProto.Rule)
      }

      // @@protoc_insertion_point(class_scope:ConditionalFormattingProto.Rule)
      private static final EDoc.ConditionalFormattingProto.Rule DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.ConditionalFormattingProto.Rule();
      }

      public static EDoc.ConditionalFormattingProto.Rule getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Rule>
          PARSER = new com.google.protobuf.AbstractParser<Rule>() {
        @java.lang.Override
        public Rule parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Rule(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Rule> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Rule> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.ConditionalFormattingProto.Rule getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int RULE_FIELD_NUMBER = 1;
    private java.util.List<EDoc.ConditionalFormattingProto.Rule> rule_;
    /**
     * <pre>
     * We can have multiple rules defined for the same column.
     * </pre>
     *
     * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.ConditionalFormattingProto.Rule> getRuleList() {
      return rule_;
    }
    /**
     * <pre>
     * We can have multiple rules defined for the same column.
     * </pre>
     *
     * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.ConditionalFormattingProto.RuleOrBuilder> 
        getRuleOrBuilderList() {
      return rule_;
    }
    /**
     * <pre>
     * We can have multiple rules defined for the same column.
     * </pre>
     *
     * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
     */
    @java.lang.Override
    public int getRuleCount() {
      return rule_.size();
    }
    /**
     * <pre>
     * We can have multiple rules defined for the same column.
     * </pre>
     *
     * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
     */
    @java.lang.Override
    public EDoc.ConditionalFormattingProto.Rule getRule(int index) {
      return rule_.get(index);
    }
    /**
     * <pre>
     * We can have multiple rules defined for the same column.
     * </pre>
     *
     * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
     */
    @java.lang.Override
    public EDoc.ConditionalFormattingProto.RuleOrBuilder getRuleOrBuilder(
        int index) {
      return rule_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rule_.size(); i++) {
        output.writeMessage(1, rule_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rule_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rule_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.ConditionalFormattingProto)) {
        return super.equals(obj);
      }
      EDoc.ConditionalFormattingProto other = (EDoc.ConditionalFormattingProto) obj;

      if (!getRuleList()
          .equals(other.getRuleList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRuleCount() > 0) {
        hash = (37 * hash) + RULE_FIELD_NUMBER;
        hash = (53 * hash) + getRuleList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.ConditionalFormattingProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ConditionalFormattingProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ConditionalFormattingProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ConditionalFormattingProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ConditionalFormattingProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ConditionalFormattingProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ConditionalFormattingProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.ConditionalFormattingProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.ConditionalFormattingProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.ConditionalFormattingProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.ConditionalFormattingProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.ConditionalFormattingProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.ConditionalFormattingProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Proto used to define conditional formatting for a numeric column in a
     * visualization.
     * Based on MetricDefinitionProto defined in callosum/client/metric.proto.
     * TODO(Archit): Should we re-use MetricDefinitionProto? There are some extra
     * fields in MetricDefinitionProto which are not used in conditional formatting
     * but we can still re-use if we keep the structure same. For re-use, we have to
     * also settle with non-intuitive field names like Row instead of Rule.
     * </pre>
     *
     * Protobuf type {@code ConditionalFormattingProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ConditionalFormattingProto)
        EDoc.ConditionalFormattingProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ConditionalFormattingProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ConditionalFormattingProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ConditionalFormattingProto.class, EDoc.ConditionalFormattingProto.Builder.class);
      }

      // Construct using EDoc.ConditionalFormattingProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRuleFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (ruleBuilder_ == null) {
          rule_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ruleBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_ConditionalFormattingProto_descriptor;
      }

      @java.lang.Override
      public EDoc.ConditionalFormattingProto getDefaultInstanceForType() {
        return EDoc.ConditionalFormattingProto.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.ConditionalFormattingProto build() {
        EDoc.ConditionalFormattingProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.ConditionalFormattingProto buildPartial() {
        EDoc.ConditionalFormattingProto result = new EDoc.ConditionalFormattingProto(this);
        int from_bitField0_ = bitField0_;
        if (ruleBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            rule_ = java.util.Collections.unmodifiableList(rule_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rule_ = rule_;
        } else {
          result.rule_ = ruleBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.ConditionalFormattingProto) {
          return mergeFrom((EDoc.ConditionalFormattingProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.ConditionalFormattingProto other) {
        if (other == EDoc.ConditionalFormattingProto.getDefaultInstance()) return this;
        if (ruleBuilder_ == null) {
          if (!other.rule_.isEmpty()) {
            if (rule_.isEmpty()) {
              rule_ = other.rule_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRuleIsMutable();
              rule_.addAll(other.rule_);
            }
            onChanged();
          }
        } else {
          if (!other.rule_.isEmpty()) {
            if (ruleBuilder_.isEmpty()) {
              ruleBuilder_.dispose();
              ruleBuilder_ = null;
              rule_ = other.rule_;
              bitField0_ = (bitField0_ & ~0x00000001);
              ruleBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRuleFieldBuilder() : null;
            } else {
              ruleBuilder_.addAllMessages(other.rule_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.ConditionalFormattingProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.ConditionalFormattingProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<EDoc.ConditionalFormattingProto.Rule> rule_ =
        java.util.Collections.emptyList();
      private void ensureRuleIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          rule_ = new java.util.ArrayList<EDoc.ConditionalFormattingProto.Rule>(rule_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.ConditionalFormattingProto.Rule, EDoc.ConditionalFormattingProto.Rule.Builder, EDoc.ConditionalFormattingProto.RuleOrBuilder> ruleBuilder_;

      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public java.util.List<EDoc.ConditionalFormattingProto.Rule> getRuleList() {
        if (ruleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rule_);
        } else {
          return ruleBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public int getRuleCount() {
        if (ruleBuilder_ == null) {
          return rule_.size();
        } else {
          return ruleBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public EDoc.ConditionalFormattingProto.Rule getRule(int index) {
        if (ruleBuilder_ == null) {
          return rule_.get(index);
        } else {
          return ruleBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public Builder setRule(
          int index, EDoc.ConditionalFormattingProto.Rule value) {
        if (ruleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRuleIsMutable();
          rule_.set(index, value);
          onChanged();
        } else {
          ruleBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public Builder setRule(
          int index, EDoc.ConditionalFormattingProto.Rule.Builder builderForValue) {
        if (ruleBuilder_ == null) {
          ensureRuleIsMutable();
          rule_.set(index, builderForValue.build());
          onChanged();
        } else {
          ruleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public Builder addRule(EDoc.ConditionalFormattingProto.Rule value) {
        if (ruleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRuleIsMutable();
          rule_.add(value);
          onChanged();
        } else {
          ruleBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public Builder addRule(
          int index, EDoc.ConditionalFormattingProto.Rule value) {
        if (ruleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRuleIsMutable();
          rule_.add(index, value);
          onChanged();
        } else {
          ruleBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public Builder addRule(
          EDoc.ConditionalFormattingProto.Rule.Builder builderForValue) {
        if (ruleBuilder_ == null) {
          ensureRuleIsMutable();
          rule_.add(builderForValue.build());
          onChanged();
        } else {
          ruleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public Builder addRule(
          int index, EDoc.ConditionalFormattingProto.Rule.Builder builderForValue) {
        if (ruleBuilder_ == null) {
          ensureRuleIsMutable();
          rule_.add(index, builderForValue.build());
          onChanged();
        } else {
          ruleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public Builder addAllRule(
          java.lang.Iterable<? extends EDoc.ConditionalFormattingProto.Rule> values) {
        if (ruleBuilder_ == null) {
          ensureRuleIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rule_);
          onChanged();
        } else {
          ruleBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public Builder clearRule() {
        if (ruleBuilder_ == null) {
          rule_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          ruleBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public Builder removeRule(int index) {
        if (ruleBuilder_ == null) {
          ensureRuleIsMutable();
          rule_.remove(index);
          onChanged();
        } else {
          ruleBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public EDoc.ConditionalFormattingProto.Rule.Builder getRuleBuilder(
          int index) {
        return getRuleFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public EDoc.ConditionalFormattingProto.RuleOrBuilder getRuleOrBuilder(
          int index) {
        if (ruleBuilder_ == null) {
          return rule_.get(index);  } else {
          return ruleBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public java.util.List<? extends EDoc.ConditionalFormattingProto.RuleOrBuilder> 
           getRuleOrBuilderList() {
        if (ruleBuilder_ != null) {
          return ruleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rule_);
        }
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public EDoc.ConditionalFormattingProto.Rule.Builder addRuleBuilder() {
        return getRuleFieldBuilder().addBuilder(
            EDoc.ConditionalFormattingProto.Rule.getDefaultInstance());
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public EDoc.ConditionalFormattingProto.Rule.Builder addRuleBuilder(
          int index) {
        return getRuleFieldBuilder().addBuilder(
            index, EDoc.ConditionalFormattingProto.Rule.getDefaultInstance());
      }
      /**
       * <pre>
       * We can have multiple rules defined for the same column.
       * </pre>
       *
       * <code>repeated .ConditionalFormattingProto.Rule rule = 1;</code>
       */
      public java.util.List<EDoc.ConditionalFormattingProto.Rule.Builder> 
           getRuleBuilderList() {
        return getRuleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.ConditionalFormattingProto.Rule, EDoc.ConditionalFormattingProto.Rule.Builder, EDoc.ConditionalFormattingProto.RuleOrBuilder> 
          getRuleFieldBuilder() {
        if (ruleBuilder_ == null) {
          ruleBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.ConditionalFormattingProto.Rule, EDoc.ConditionalFormattingProto.Rule.Builder, EDoc.ConditionalFormattingProto.RuleOrBuilder>(
                  rule_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          rule_ = null;
        }
        return ruleBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ConditionalFormattingProto)
    }

    // @@protoc_insertion_point(class_scope:ConditionalFormattingProto)
    private static final EDoc.ConditionalFormattingProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.ConditionalFormattingProto();
    }

    public static EDoc.ConditionalFormattingProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ConditionalFormattingProto>
        PARSER = new com.google.protobuf.AbstractParser<ConditionalFormattingProto>() {
      @java.lang.Override
      public ConditionalFormattingProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConditionalFormattingProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConditionalFormattingProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConditionalFormattingProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.ConditionalFormattingProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TableVisualizationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TableVisualization)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of table columns with information on top of the answer columns.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
     */
    java.util.List<EDoc.TableVisualization.TableColumn> 
        getTableColumnsList();
    /**
     * <pre>
     * List of table columns with information on top of the answer columns.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
     */
    EDoc.TableVisualization.TableColumn getTableColumns(int index);
    /**
     * <pre>
     * List of table columns with information on top of the answer columns.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
     */
    int getTableColumnsCount();
    /**
     * <pre>
     * List of table columns with information on top of the answer columns.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
     */
    java.util.List<? extends EDoc.TableVisualization.TableColumnOrBuilder> 
        getTableColumnsOrBuilderList();
    /**
     * <pre>
     * List of table columns with information on top of the answer columns.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
     */
    EDoc.TableVisualization.TableColumnOrBuilder getTableColumnsOrBuilder(
        int index);

    /**
     * <pre>
     * &#64;clientState.ordered_column_ids.
     * </pre>
     *
     * <code>repeated string ordered_column_ids = 2;</code>
     * @return A list containing the orderedColumnIds.
     */
    java.util.List<java.lang.String>
        getOrderedColumnIdsList();
    /**
     * <pre>
     * &#64;clientState.ordered_column_ids.
     * </pre>
     *
     * <code>repeated string ordered_column_ids = 2;</code>
     * @return The count of orderedColumnIds.
     */
    int getOrderedColumnIdsCount();
    /**
     * <pre>
     * &#64;clientState.ordered_column_ids.
     * </pre>
     *
     * <code>repeated string ordered_column_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The orderedColumnIds at the given index.
     */
    java.lang.String getOrderedColumnIds(int index);
    /**
     * <pre>
     * &#64;clientState.ordered_column_ids.
     * </pre>
     *
     * <code>repeated string ordered_column_ids = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the orderedColumnIds at the given index.
     */
    com.google.protobuf.ByteString
        getOrderedColumnIdsBytes(int index);

    /**
     * <pre>
     * &#64;clientState.showGridSummary.
     * </pre>
     *
     * <code>optional bool show_grid_summary = 3;</code>
     * @return Whether the showGridSummary field is set.
     */
    boolean hasShowGridSummary();
    /**
     * <pre>
     * &#64;clientState.showGridSummary.
     * </pre>
     *
     * <code>optional bool show_grid_summary = 3;</code>
     * @return The showGridSummary.
     */
    boolean getShowGridSummary();

    /**
     * <pre>
     * &#64;clientState.showTableFooter.
     * </pre>
     *
     * <code>optional bool show_table_footer = 4;</code>
     * @return Whether the showTableFooter field is set.
     */
    boolean hasShowTableFooter();
    /**
     * <pre>
     * &#64;clientState.showTableFooter.
     * </pre>
     *
     * <code>optional bool show_table_footer = 4;</code>
     * @return The showTableFooter.
     */
    boolean getShowTableFooter();

    /**
     * <pre>
     * &#64;clientState.wrapTableHeader.
     * </pre>
     *
     * <code>optional bool wrap_table_header = 5;</code>
     * @return Whether the wrapTableHeader field is set.
     */
    boolean hasWrapTableHeader();
    /**
     * <pre>
     * &#64;clientState.wrapTableHeader.
     * </pre>
     *
     * <code>optional bool wrap_table_header = 5;</code>
     * @return The wrapTableHeader.
     */
    boolean getWrapTableHeader();

    /**
     * <pre>
     * Any left over &#64;clientState can be serialized as json string.
     * NOTE: In V1 we might store the complete client state in this field without
     * using any of the other proto fields corresponding to the client state.
     * </pre>
     *
     * <code>optional string client_state = 6;</code>
     * @return Whether the clientState field is set.
     */
    boolean hasClientState();
    /**
     * <pre>
     * Any left over &#64;clientState can be serialized as json string.
     * NOTE: In V1 we might store the complete client state in this field without
     * using any of the other proto fields corresponding to the client state.
     * </pre>
     *
     * <code>optional string client_state = 6;</code>
     * @return The clientState.
     */
    java.lang.String getClientState();
    /**
     * <pre>
     * Any left over &#64;clientState can be serialized as json string.
     * NOTE: In V1 we might store the complete client state in this field without
     * using any of the other proto fields corresponding to the client state.
     * </pre>
     *
     * <code>optional string client_state = 6;</code>
     * @return The bytes for clientState.
     */
    com.google.protobuf.ByteString
        getClientStateBytes();

    /**
     * <pre>
     * Store new client state of the table object as json string converted from proto.
     * </pre>
     *
     * <code>optional string client_state_v2 = 7;</code>
     * @return Whether the clientStateV2 field is set.
     */
    boolean hasClientStateV2();
    /**
     * <pre>
     * Store new client state of the table object as json string converted from proto.
     * </pre>
     *
     * <code>optional string client_state_v2 = 7;</code>
     * @return The clientStateV2.
     */
    java.lang.String getClientStateV2();
    /**
     * <pre>
     * Store new client state of the table object as json string converted from proto.
     * </pre>
     *
     * <code>optional string client_state_v2 = 7;</code>
     * @return The bytes for clientStateV2.
     */
    com.google.protobuf.ByteString
        getClientStateV2Bytes();
  }
  /**
   * <pre>
   * Table visualization is used to display detailed view of the answer to the
   * user.  As the name suggests, a table with specified number of columns is
   * displayed to the user for a TableViz.
   * </pre>
   *
   * Protobuf type {@code TableVisualization}
   */
  public static final class TableVisualization extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TableVisualization)
      TableVisualizationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TableVisualization.newBuilder() to construct.
    private TableVisualization(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TableVisualization() {
      tableColumns_ = java.util.Collections.emptyList();
      orderedColumnIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      clientState_ = "";
      clientStateV2_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TableVisualization();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TableVisualization(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tableColumns_ = new java.util.ArrayList<EDoc.TableVisualization.TableColumn>();
                mutable_bitField0_ |= 0x00000001;
              }
              tableColumns_.add(
                  input.readMessage(EDoc.TableVisualization.TableColumn.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                orderedColumnIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              orderedColumnIds_.add(bs);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              showGridSummary_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              showTableFooter_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              wrapTableHeader_ = input.readBool();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              clientState_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              clientStateV2_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tableColumns_ = java.util.Collections.unmodifiableList(tableColumns_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          orderedColumnIds_ = orderedColumnIds_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_TableVisualization_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_TableVisualization_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.TableVisualization.class, EDoc.TableVisualization.Builder.class);
    }

    public interface TableColumnOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TableVisualization.TableColumn)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Answer column id on which the table column is based.
       * Key of &#64;clientState.columnProperties map.
       * TODO(Archit): Should we rename this to just id or be more explicit and
       * rename it to answer_column or answer_column_id?
       * </pre>
       *
       * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return Whether the columnId field is set.
       */
      boolean hasColumnId();
      /**
       * <pre>
       * Answer column id on which the table column is based.
       * Key of &#64;clientState.columnProperties map.
       * TODO(Archit): Should we rename this to just id or be more explicit and
       * rename it to answer_column or answer_column_id?
       * </pre>
       *
       * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return The columnId.
       */
      java.lang.String getColumnId();
      /**
       * <pre>
       * Answer column id on which the table column is based.
       * Key of &#64;clientState.columnProperties map.
       * TODO(Archit): Should we rename this to just id or be more explicit and
       * rename it to answer_column or answer_column_id?
       * </pre>
       *
       * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for columnId.
       */
      com.google.protobuf.ByteString
          getColumnIdBytes();

      /**
       * <pre>
       * Conditional formatting rules for displaying column's values in the table.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
       * @return Whether the conditionalFormatting field is set.
       */
      boolean hasConditionalFormatting();
      /**
       * <pre>
       * Conditional formatting rules for displaying column's values in the table.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
       * @return The conditionalFormatting.
       */
      EDoc.ConditionalFormattingProto getConditionalFormatting();
      /**
       * <pre>
       * Conditional formatting rules for displaying column's values in the table.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
       */
      EDoc.ConditionalFormattingProtoOrBuilder getConditionalFormattingOrBuilder();

      /**
       * <pre>
       * &#64;clientState.columnProperties.&lt;columnId&gt;.wrapColumnText.
       * TODO(Jasmeet/Chetan): Should we instead use a string to capture wrap
       * style? As of now there are only two styles {WRAP, CLIP}, hence boolean is
       * sufficient. In future if we introduce a third one like NO_WRAP_NO_CLIP,
       * string field would be easier to extend.
       * </pre>
       *
       * <code>optional bool wrap_column_text = 4;</code>
       * @return Whether the wrapColumnText field is set.
       */
      boolean hasWrapColumnText();
      /**
       * <pre>
       * &#64;clientState.columnProperties.&lt;columnId&gt;.wrapColumnText.
       * TODO(Jasmeet/Chetan): Should we instead use a string to capture wrap
       * style? As of now there are only two styles {WRAP, CLIP}, hence boolean is
       * sufficient. In future if we introduce a third one like NO_WRAP_NO_CLIP,
       * string field would be easier to extend.
       * </pre>
       *
       * <code>optional bool wrap_column_text = 4;</code>
       * @return The wrapColumnText.
       */
      boolean getWrapColumnText();

      /**
       * <pre>
       * Used to populate
       * &#64;AnswerSpecProto.answer_properties.headline_visibility_map.
       * </pre>
       *
       * <code>optional bool show_headline = 6 [default = true];</code>
       * @return Whether the showHeadline field is set.
       */
      boolean hasShowHeadline();
      /**
       * <pre>
       * Used to populate
       * &#64;AnswerSpecProto.answer_properties.headline_visibility_map.
       * </pre>
       *
       * <code>optional bool show_headline = 6 [default = true];</code>
       * @return The showHeadline.
       */
      boolean getShowHeadline();

      /**
       * <pre>
       * Used to populate
       * &#64;AnswerSpecProto.visualization.headline.config.aggr.
       * allowed Values:
       *  1. COUNT
       *  2. COUNT_DISTINCT
       *  3. SUM
       *  4. MIN
       *  5. MAX
       *  6. AVERAGE
       *  7. TABLE_AGGR
       * TODO(Archit): Do we need another value like MIN_MAX or RANGE to model
       * headline which shows both min and max values of the column. In AnswerSpec
       * we are modelling it via list of Aggregation enums but that does not seem
       * very intuitive. Also should we then change the name of the field to
       * headline_type instead of headline_aggregation?
       * TODO(Archit): Verify and Update if:
       *  * Any other values are allowed for headline aggregation.
       *  * There is some other string representation of these aggregations being
       *    used in WorksheetEDocProto.
       * Based on atlas.AggregationType.E defined in atlas/public/metadata.proto.
       * NOTE: Valid values will depend on the properties of answer column.
       * </pre>
       *
       * <code>optional string headline_aggregation = 7 [(.Annotation.allowed_values_key) = "edoc.headline_aggregation_type"];</code>
       * @return Whether the headlineAggregation field is set.
       */
      boolean hasHeadlineAggregation();
      /**
       * <pre>
       * Used to populate
       * &#64;AnswerSpecProto.visualization.headline.config.aggr.
       * allowed Values:
       *  1. COUNT
       *  2. COUNT_DISTINCT
       *  3. SUM
       *  4. MIN
       *  5. MAX
       *  6. AVERAGE
       *  7. TABLE_AGGR
       * TODO(Archit): Do we need another value like MIN_MAX or RANGE to model
       * headline which shows both min and max values of the column. In AnswerSpec
       * we are modelling it via list of Aggregation enums but that does not seem
       * very intuitive. Also should we then change the name of the field to
       * headline_type instead of headline_aggregation?
       * TODO(Archit): Verify and Update if:
       *  * Any other values are allowed for headline aggregation.
       *  * There is some other string representation of these aggregations being
       *    used in WorksheetEDocProto.
       * Based on atlas.AggregationType.E defined in atlas/public/metadata.proto.
       * NOTE: Valid values will depend on the properties of answer column.
       * </pre>
       *
       * <code>optional string headline_aggregation = 7 [(.Annotation.allowed_values_key) = "edoc.headline_aggregation_type"];</code>
       * @return The headlineAggregation.
       */
      java.lang.String getHeadlineAggregation();
      /**
       * <pre>
       * Used to populate
       * &#64;AnswerSpecProto.visualization.headline.config.aggr.
       * allowed Values:
       *  1. COUNT
       *  2. COUNT_DISTINCT
       *  3. SUM
       *  4. MIN
       *  5. MAX
       *  6. AVERAGE
       *  7. TABLE_AGGR
       * TODO(Archit): Do we need another value like MIN_MAX or RANGE to model
       * headline which shows both min and max values of the column. In AnswerSpec
       * we are modelling it via list of Aggregation enums but that does not seem
       * very intuitive. Also should we then change the name of the field to
       * headline_type instead of headline_aggregation?
       * TODO(Archit): Verify and Update if:
       *  * Any other values are allowed for headline aggregation.
       *  * There is some other string representation of these aggregations being
       *    used in WorksheetEDocProto.
       * Based on atlas.AggregationType.E defined in atlas/public/metadata.proto.
       * NOTE: Valid values will depend on the properties of answer column.
       * </pre>
       *
       * <code>optional string headline_aggregation = 7 [(.Annotation.allowed_values_key) = "edoc.headline_aggregation_type"];</code>
       * @return The bytes for headlineAggregation.
       */
      com.google.protobuf.ByteString
          getHeadlineAggregationBytes();

      /**
       * <pre>
       * Deprecated.
       * &#64;clientState.widthState.&lt;columnId&gt;.
       * TODO(Jasmeet/Chetan): Does it make sense to move this inside column
       * properties in json representation of client_state as well.
       * </pre>
       *
       * <code>optional int32 column_width = 5;</code>
       * @return Whether the columnWidth field is set.
       */
      boolean hasColumnWidth();
      /**
       * <pre>
       * Deprecated.
       * &#64;clientState.widthState.&lt;columnId&gt;.
       * TODO(Jasmeet/Chetan): Does it make sense to move this inside column
       * properties in json representation of client_state as well.
       * </pre>
       *
       * <code>optional int32 column_width = 5;</code>
       * @return The columnWidth.
       */
      int getColumnWidth();
    }
    /**
     * <pre>
     * Table column with information on top of the answer column.
     * Trying to capture &#64;clientState.columnProperties map.
     * </pre>
     *
     * Protobuf type {@code TableVisualization.TableColumn}
     */
    public static final class TableColumn extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:TableVisualization.TableColumn)
        TableColumnOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TableColumn.newBuilder() to construct.
      private TableColumn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TableColumn() {
        columnId_ = "";
        showHeadline_ = true;
        headlineAggregation_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TableColumn();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TableColumn(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                columnId_ = bs;
                break;
              }
              case 18: {
                EDoc.ConditionalFormattingProto.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) != 0)) {
                  subBuilder = conditionalFormatting_.toBuilder();
                }
                conditionalFormatting_ = input.readMessage(EDoc.ConditionalFormattingProto.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(conditionalFormatting_);
                  conditionalFormatting_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 32: {
                bitField0_ |= 0x00000004;
                wrapColumnText_ = input.readBool();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000020;
                columnWidth_ = input.readInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000008;
                showHeadline_ = input.readBool();
                break;
              }
              case 58: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                headlineAggregation_ = bs;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_TableVisualization_TableColumn_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_TableVisualization_TableColumn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.TableVisualization.TableColumn.class, EDoc.TableVisualization.TableColumn.Builder.class);
      }

      private int bitField0_;
      public static final int COLUMN_ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object columnId_;
      /**
       * <pre>
       * Answer column id on which the table column is based.
       * Key of &#64;clientState.columnProperties map.
       * TODO(Archit): Should we rename this to just id or be more explicit and
       * rename it to answer_column or answer_column_id?
       * </pre>
       *
       * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return Whether the columnId field is set.
       */
      @java.lang.Override
      public boolean hasColumnId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Answer column id on which the table column is based.
       * Key of &#64;clientState.columnProperties map.
       * TODO(Archit): Should we rename this to just id or be more explicit and
       * rename it to answer_column or answer_column_id?
       * </pre>
       *
       * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return The columnId.
       */
      @java.lang.Override
      public java.lang.String getColumnId() {
        java.lang.Object ref = columnId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            columnId_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Answer column id on which the table column is based.
       * Key of &#64;clientState.columnProperties map.
       * TODO(Archit): Should we rename this to just id or be more explicit and
       * rename it to answer_column or answer_column_id?
       * </pre>
       *
       * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for columnId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getColumnIdBytes() {
        java.lang.Object ref = columnId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          columnId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CONDITIONAL_FORMATTING_FIELD_NUMBER = 2;
      private EDoc.ConditionalFormattingProto conditionalFormatting_;
      /**
       * <pre>
       * Conditional formatting rules for displaying column's values in the table.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
       * @return Whether the conditionalFormatting field is set.
       */
      @java.lang.Override
      public boolean hasConditionalFormatting() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Conditional formatting rules for displaying column's values in the table.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
       * @return The conditionalFormatting.
       */
      @java.lang.Override
      public EDoc.ConditionalFormattingProto getConditionalFormatting() {
        return conditionalFormatting_ == null ? EDoc.ConditionalFormattingProto.getDefaultInstance() : conditionalFormatting_;
      }
      /**
       * <pre>
       * Conditional formatting rules for displaying column's values in the table.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
       */
      @java.lang.Override
      public EDoc.ConditionalFormattingProtoOrBuilder getConditionalFormattingOrBuilder() {
        return conditionalFormatting_ == null ? EDoc.ConditionalFormattingProto.getDefaultInstance() : conditionalFormatting_;
      }

      public static final int WRAP_COLUMN_TEXT_FIELD_NUMBER = 4;
      private boolean wrapColumnText_;
      /**
       * <pre>
       * &#64;clientState.columnProperties.&lt;columnId&gt;.wrapColumnText.
       * TODO(Jasmeet/Chetan): Should we instead use a string to capture wrap
       * style? As of now there are only two styles {WRAP, CLIP}, hence boolean is
       * sufficient. In future if we introduce a third one like NO_WRAP_NO_CLIP,
       * string field would be easier to extend.
       * </pre>
       *
       * <code>optional bool wrap_column_text = 4;</code>
       * @return Whether the wrapColumnText field is set.
       */
      @java.lang.Override
      public boolean hasWrapColumnText() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * &#64;clientState.columnProperties.&lt;columnId&gt;.wrapColumnText.
       * TODO(Jasmeet/Chetan): Should we instead use a string to capture wrap
       * style? As of now there are only two styles {WRAP, CLIP}, hence boolean is
       * sufficient. In future if we introduce a third one like NO_WRAP_NO_CLIP,
       * string field would be easier to extend.
       * </pre>
       *
       * <code>optional bool wrap_column_text = 4;</code>
       * @return The wrapColumnText.
       */
      @java.lang.Override
      public boolean getWrapColumnText() {
        return wrapColumnText_;
      }

      public static final int SHOW_HEADLINE_FIELD_NUMBER = 6;
      private boolean showHeadline_;
      /**
       * <pre>
       * Used to populate
       * &#64;AnswerSpecProto.answer_properties.headline_visibility_map.
       * </pre>
       *
       * <code>optional bool show_headline = 6 [default = true];</code>
       * @return Whether the showHeadline field is set.
       */
      @java.lang.Override
      public boolean hasShowHeadline() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Used to populate
       * &#64;AnswerSpecProto.answer_properties.headline_visibility_map.
       * </pre>
       *
       * <code>optional bool show_headline = 6 [default = true];</code>
       * @return The showHeadline.
       */
      @java.lang.Override
      public boolean getShowHeadline() {
        return showHeadline_;
      }

      public static final int HEADLINE_AGGREGATION_FIELD_NUMBER = 7;
      private volatile java.lang.Object headlineAggregation_;
      /**
       * <pre>
       * Used to populate
       * &#64;AnswerSpecProto.visualization.headline.config.aggr.
       * allowed Values:
       *  1. COUNT
       *  2. COUNT_DISTINCT
       *  3. SUM
       *  4. MIN
       *  5. MAX
       *  6. AVERAGE
       *  7. TABLE_AGGR
       * TODO(Archit): Do we need another value like MIN_MAX or RANGE to model
       * headline which shows both min and max values of the column. In AnswerSpec
       * we are modelling it via list of Aggregation enums but that does not seem
       * very intuitive. Also should we then change the name of the field to
       * headline_type instead of headline_aggregation?
       * TODO(Archit): Verify and Update if:
       *  * Any other values are allowed for headline aggregation.
       *  * There is some other string representation of these aggregations being
       *    used in WorksheetEDocProto.
       * Based on atlas.AggregationType.E defined in atlas/public/metadata.proto.
       * NOTE: Valid values will depend on the properties of answer column.
       * </pre>
       *
       * <code>optional string headline_aggregation = 7 [(.Annotation.allowed_values_key) = "edoc.headline_aggregation_type"];</code>
       * @return Whether the headlineAggregation field is set.
       */
      @java.lang.Override
      public boolean hasHeadlineAggregation() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Used to populate
       * &#64;AnswerSpecProto.visualization.headline.config.aggr.
       * allowed Values:
       *  1. COUNT
       *  2. COUNT_DISTINCT
       *  3. SUM
       *  4. MIN
       *  5. MAX
       *  6. AVERAGE
       *  7. TABLE_AGGR
       * TODO(Archit): Do we need another value like MIN_MAX or RANGE to model
       * headline which shows both min and max values of the column. In AnswerSpec
       * we are modelling it via list of Aggregation enums but that does not seem
       * very intuitive. Also should we then change the name of the field to
       * headline_type instead of headline_aggregation?
       * TODO(Archit): Verify and Update if:
       *  * Any other values are allowed for headline aggregation.
       *  * There is some other string representation of these aggregations being
       *    used in WorksheetEDocProto.
       * Based on atlas.AggregationType.E defined in atlas/public/metadata.proto.
       * NOTE: Valid values will depend on the properties of answer column.
       * </pre>
       *
       * <code>optional string headline_aggregation = 7 [(.Annotation.allowed_values_key) = "edoc.headline_aggregation_type"];</code>
       * @return The headlineAggregation.
       */
      @java.lang.Override
      public java.lang.String getHeadlineAggregation() {
        java.lang.Object ref = headlineAggregation_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            headlineAggregation_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Used to populate
       * &#64;AnswerSpecProto.visualization.headline.config.aggr.
       * allowed Values:
       *  1. COUNT
       *  2. COUNT_DISTINCT
       *  3. SUM
       *  4. MIN
       *  5. MAX
       *  6. AVERAGE
       *  7. TABLE_AGGR
       * TODO(Archit): Do we need another value like MIN_MAX or RANGE to model
       * headline which shows both min and max values of the column. In AnswerSpec
       * we are modelling it via list of Aggregation enums but that does not seem
       * very intuitive. Also should we then change the name of the field to
       * headline_type instead of headline_aggregation?
       * TODO(Archit): Verify and Update if:
       *  * Any other values are allowed for headline aggregation.
       *  * There is some other string representation of these aggregations being
       *    used in WorksheetEDocProto.
       * Based on atlas.AggregationType.E defined in atlas/public/metadata.proto.
       * NOTE: Valid values will depend on the properties of answer column.
       * </pre>
       *
       * <code>optional string headline_aggregation = 7 [(.Annotation.allowed_values_key) = "edoc.headline_aggregation_type"];</code>
       * @return The bytes for headlineAggregation.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getHeadlineAggregationBytes() {
        java.lang.Object ref = headlineAggregation_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headlineAggregation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int COLUMN_WIDTH_FIELD_NUMBER = 5;
      private int columnWidth_;
      /**
       * <pre>
       * Deprecated.
       * &#64;clientState.widthState.&lt;columnId&gt;.
       * TODO(Jasmeet/Chetan): Does it make sense to move this inside column
       * properties in json representation of client_state as well.
       * </pre>
       *
       * <code>optional int32 column_width = 5;</code>
       * @return Whether the columnWidth field is set.
       */
      @java.lang.Override
      public boolean hasColumnWidth() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Deprecated.
       * &#64;clientState.widthState.&lt;columnId&gt;.
       * TODO(Jasmeet/Chetan): Does it make sense to move this inside column
       * properties in json representation of client_state as well.
       * </pre>
       *
       * <code>optional int32 column_width = 5;</code>
       * @return The columnWidth.
       */
      @java.lang.Override
      public int getColumnWidth() {
        return columnWidth_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, columnId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeMessage(2, getConditionalFormatting());
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeBool(4, wrapColumnText_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeInt32(5, columnWidth_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeBool(6, showHeadline_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 7, headlineAggregation_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, columnId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getConditionalFormatting());
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, wrapColumnText_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, columnWidth_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, showHeadline_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, headlineAggregation_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.TableVisualization.TableColumn)) {
          return super.equals(obj);
        }
        EDoc.TableVisualization.TableColumn other = (EDoc.TableVisualization.TableColumn) obj;

        if (hasColumnId() != other.hasColumnId()) return false;
        if (hasColumnId()) {
          if (!getColumnId()
              .equals(other.getColumnId())) return false;
        }
        if (hasConditionalFormatting() != other.hasConditionalFormatting()) return false;
        if (hasConditionalFormatting()) {
          if (!getConditionalFormatting()
              .equals(other.getConditionalFormatting())) return false;
        }
        if (hasWrapColumnText() != other.hasWrapColumnText()) return false;
        if (hasWrapColumnText()) {
          if (getWrapColumnText()
              != other.getWrapColumnText()) return false;
        }
        if (hasShowHeadline() != other.hasShowHeadline()) return false;
        if (hasShowHeadline()) {
          if (getShowHeadline()
              != other.getShowHeadline()) return false;
        }
        if (hasHeadlineAggregation() != other.hasHeadlineAggregation()) return false;
        if (hasHeadlineAggregation()) {
          if (!getHeadlineAggregation()
              .equals(other.getHeadlineAggregation())) return false;
        }
        if (hasColumnWidth() != other.hasColumnWidth()) return false;
        if (hasColumnWidth()) {
          if (getColumnWidth()
              != other.getColumnWidth()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasColumnId()) {
          hash = (37 * hash) + COLUMN_ID_FIELD_NUMBER;
          hash = (53 * hash) + getColumnId().hashCode();
        }
        if (hasConditionalFormatting()) {
          hash = (37 * hash) + CONDITIONAL_FORMATTING_FIELD_NUMBER;
          hash = (53 * hash) + getConditionalFormatting().hashCode();
        }
        if (hasWrapColumnText()) {
          hash = (37 * hash) + WRAP_COLUMN_TEXT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getWrapColumnText());
        }
        if (hasShowHeadline()) {
          hash = (37 * hash) + SHOW_HEADLINE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getShowHeadline());
        }
        if (hasHeadlineAggregation()) {
          hash = (37 * hash) + HEADLINE_AGGREGATION_FIELD_NUMBER;
          hash = (53 * hash) + getHeadlineAggregation().hashCode();
        }
        if (hasColumnWidth()) {
          hash = (37 * hash) + COLUMN_WIDTH_FIELD_NUMBER;
          hash = (53 * hash) + getColumnWidth();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.TableVisualization.TableColumn parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.TableVisualization.TableColumn parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.TableVisualization.TableColumn parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.TableVisualization.TableColumn parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.TableVisualization.TableColumn parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.TableVisualization.TableColumn parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.TableVisualization.TableColumn parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.TableVisualization.TableColumn parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.TableVisualization.TableColumn parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.TableVisualization.TableColumn parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.TableVisualization.TableColumn parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.TableVisualization.TableColumn parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.TableVisualization.TableColumn prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Table column with information on top of the answer column.
       * Trying to capture &#64;clientState.columnProperties map.
       * </pre>
       *
       * Protobuf type {@code TableVisualization.TableColumn}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:TableVisualization.TableColumn)
          EDoc.TableVisualization.TableColumnOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_TableVisualization_TableColumn_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_TableVisualization_TableColumn_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.TableVisualization.TableColumn.class, EDoc.TableVisualization.TableColumn.Builder.class);
        }

        // Construct using EDoc.TableVisualization.TableColumn.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getConditionalFormattingFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          columnId_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          if (conditionalFormattingBuilder_ == null) {
            conditionalFormatting_ = null;
          } else {
            conditionalFormattingBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          wrapColumnText_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          showHeadline_ = true;
          bitField0_ = (bitField0_ & ~0x00000008);
          headlineAggregation_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          columnWidth_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_TableVisualization_TableColumn_descriptor;
        }

        @java.lang.Override
        public EDoc.TableVisualization.TableColumn getDefaultInstanceForType() {
          return EDoc.TableVisualization.TableColumn.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.TableVisualization.TableColumn build() {
          EDoc.TableVisualization.TableColumn result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.TableVisualization.TableColumn buildPartial() {
          EDoc.TableVisualization.TableColumn result = new EDoc.TableVisualization.TableColumn(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.columnId_ = columnId_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            if (conditionalFormattingBuilder_ == null) {
              result.conditionalFormatting_ = conditionalFormatting_;
            } else {
              result.conditionalFormatting_ = conditionalFormattingBuilder_.build();
            }
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.wrapColumnText_ = wrapColumnText_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            to_bitField0_ |= 0x00000008;
          }
          result.showHeadline_ = showHeadline_;
          if (((from_bitField0_ & 0x00000010) != 0)) {
            to_bitField0_ |= 0x00000010;
          }
          result.headlineAggregation_ = headlineAggregation_;
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.columnWidth_ = columnWidth_;
            to_bitField0_ |= 0x00000020;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.TableVisualization.TableColumn) {
            return mergeFrom((EDoc.TableVisualization.TableColumn)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.TableVisualization.TableColumn other) {
          if (other == EDoc.TableVisualization.TableColumn.getDefaultInstance()) return this;
          if (other.hasColumnId()) {
            bitField0_ |= 0x00000001;
            columnId_ = other.columnId_;
            onChanged();
          }
          if (other.hasConditionalFormatting()) {
            mergeConditionalFormatting(other.getConditionalFormatting());
          }
          if (other.hasWrapColumnText()) {
            setWrapColumnText(other.getWrapColumnText());
          }
          if (other.hasShowHeadline()) {
            setShowHeadline(other.getShowHeadline());
          }
          if (other.hasHeadlineAggregation()) {
            bitField0_ |= 0x00000010;
            headlineAggregation_ = other.headlineAggregation_;
            onChanged();
          }
          if (other.hasColumnWidth()) {
            setColumnWidth(other.getColumnWidth());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.TableVisualization.TableColumn parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.TableVisualization.TableColumn) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object columnId_ = "";
        /**
         * <pre>
         * Answer column id on which the table column is based.
         * Key of &#64;clientState.columnProperties map.
         * TODO(Archit): Should we rename this to just id or be more explicit and
         * rename it to answer_column or answer_column_id?
         * </pre>
         *
         * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
         * @return Whether the columnId field is set.
         */
        public boolean hasColumnId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Answer column id on which the table column is based.
         * Key of &#64;clientState.columnProperties map.
         * TODO(Archit): Should we rename this to just id or be more explicit and
         * rename it to answer_column or answer_column_id?
         * </pre>
         *
         * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
         * @return The columnId.
         */
        public java.lang.String getColumnId() {
          java.lang.Object ref = columnId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              columnId_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Answer column id on which the table column is based.
         * Key of &#64;clientState.columnProperties map.
         * TODO(Archit): Should we rename this to just id or be more explicit and
         * rename it to answer_column or answer_column_id?
         * </pre>
         *
         * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
         * @return The bytes for columnId.
         */
        public com.google.protobuf.ByteString
            getColumnIdBytes() {
          java.lang.Object ref = columnId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            columnId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Answer column id on which the table column is based.
         * Key of &#64;clientState.columnProperties map.
         * TODO(Archit): Should we rename this to just id or be more explicit and
         * rename it to answer_column or answer_column_id?
         * </pre>
         *
         * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
         * @param value The columnId to set.
         * @return This builder for chaining.
         */
        public Builder setColumnId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          columnId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Answer column id on which the table column is based.
         * Key of &#64;clientState.columnProperties map.
         * TODO(Archit): Should we rename this to just id or be more explicit and
         * rename it to answer_column or answer_column_id?
         * </pre>
         *
         * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearColumnId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          columnId_ = getDefaultInstance().getColumnId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Answer column id on which the table column is based.
         * Key of &#64;clientState.columnProperties map.
         * TODO(Archit): Should we rename this to just id or be more explicit and
         * rename it to answer_column or answer_column_id?
         * </pre>
         *
         * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
         * @param value The bytes for columnId to set.
         * @return This builder for chaining.
         */
        public Builder setColumnIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          columnId_ = value;
          onChanged();
          return this;
        }

        private EDoc.ConditionalFormattingProto conditionalFormatting_;
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ConditionalFormattingProto, EDoc.ConditionalFormattingProto.Builder, EDoc.ConditionalFormattingProtoOrBuilder> conditionalFormattingBuilder_;
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the table.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         * @return Whether the conditionalFormatting field is set.
         */
        public boolean hasConditionalFormatting() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the table.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         * @return The conditionalFormatting.
         */
        public EDoc.ConditionalFormattingProto getConditionalFormatting() {
          if (conditionalFormattingBuilder_ == null) {
            return conditionalFormatting_ == null ? EDoc.ConditionalFormattingProto.getDefaultInstance() : conditionalFormatting_;
          } else {
            return conditionalFormattingBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the table.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         */
        public Builder setConditionalFormatting(EDoc.ConditionalFormattingProto value) {
          if (conditionalFormattingBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            conditionalFormatting_ = value;
            onChanged();
          } else {
            conditionalFormattingBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the table.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         */
        public Builder setConditionalFormatting(
            EDoc.ConditionalFormattingProto.Builder builderForValue) {
          if (conditionalFormattingBuilder_ == null) {
            conditionalFormatting_ = builderForValue.build();
            onChanged();
          } else {
            conditionalFormattingBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the table.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         */
        public Builder mergeConditionalFormatting(EDoc.ConditionalFormattingProto value) {
          if (conditionalFormattingBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
                conditionalFormatting_ != null &&
                conditionalFormatting_ != EDoc.ConditionalFormattingProto.getDefaultInstance()) {
              conditionalFormatting_ =
                EDoc.ConditionalFormattingProto.newBuilder(conditionalFormatting_).mergeFrom(value).buildPartial();
            } else {
              conditionalFormatting_ = value;
            }
            onChanged();
          } else {
            conditionalFormattingBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the table.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         */
        public Builder clearConditionalFormatting() {
          if (conditionalFormattingBuilder_ == null) {
            conditionalFormatting_ = null;
            onChanged();
          } else {
            conditionalFormattingBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the table.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         */
        public EDoc.ConditionalFormattingProto.Builder getConditionalFormattingBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getConditionalFormattingFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the table.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         */
        public EDoc.ConditionalFormattingProtoOrBuilder getConditionalFormattingOrBuilder() {
          if (conditionalFormattingBuilder_ != null) {
            return conditionalFormattingBuilder_.getMessageOrBuilder();
          } else {
            return conditionalFormatting_ == null ?
                EDoc.ConditionalFormattingProto.getDefaultInstance() : conditionalFormatting_;
          }
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the table.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ConditionalFormattingProto, EDoc.ConditionalFormattingProto.Builder, EDoc.ConditionalFormattingProtoOrBuilder> 
            getConditionalFormattingFieldBuilder() {
          if (conditionalFormattingBuilder_ == null) {
            conditionalFormattingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                EDoc.ConditionalFormattingProto, EDoc.ConditionalFormattingProto.Builder, EDoc.ConditionalFormattingProtoOrBuilder>(
                    getConditionalFormatting(),
                    getParentForChildren(),
                    isClean());
            conditionalFormatting_ = null;
          }
          return conditionalFormattingBuilder_;
        }

        private boolean wrapColumnText_ ;
        /**
         * <pre>
         * &#64;clientState.columnProperties.&lt;columnId&gt;.wrapColumnText.
         * TODO(Jasmeet/Chetan): Should we instead use a string to capture wrap
         * style? As of now there are only two styles {WRAP, CLIP}, hence boolean is
         * sufficient. In future if we introduce a third one like NO_WRAP_NO_CLIP,
         * string field would be easier to extend.
         * </pre>
         *
         * <code>optional bool wrap_column_text = 4;</code>
         * @return Whether the wrapColumnText field is set.
         */
        @java.lang.Override
        public boolean hasWrapColumnText() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * &#64;clientState.columnProperties.&lt;columnId&gt;.wrapColumnText.
         * TODO(Jasmeet/Chetan): Should we instead use a string to capture wrap
         * style? As of now there are only two styles {WRAP, CLIP}, hence boolean is
         * sufficient. In future if we introduce a third one like NO_WRAP_NO_CLIP,
         * string field would be easier to extend.
         * </pre>
         *
         * <code>optional bool wrap_column_text = 4;</code>
         * @return The wrapColumnText.
         */
        @java.lang.Override
        public boolean getWrapColumnText() {
          return wrapColumnText_;
        }
        /**
         * <pre>
         * &#64;clientState.columnProperties.&lt;columnId&gt;.wrapColumnText.
         * TODO(Jasmeet/Chetan): Should we instead use a string to capture wrap
         * style? As of now there are only two styles {WRAP, CLIP}, hence boolean is
         * sufficient. In future if we introduce a third one like NO_WRAP_NO_CLIP,
         * string field would be easier to extend.
         * </pre>
         *
         * <code>optional bool wrap_column_text = 4;</code>
         * @param value The wrapColumnText to set.
         * @return This builder for chaining.
         */
        public Builder setWrapColumnText(boolean value) {
          bitField0_ |= 0x00000004;
          wrapColumnText_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * &#64;clientState.columnProperties.&lt;columnId&gt;.wrapColumnText.
         * TODO(Jasmeet/Chetan): Should we instead use a string to capture wrap
         * style? As of now there are only two styles {WRAP, CLIP}, hence boolean is
         * sufficient. In future if we introduce a third one like NO_WRAP_NO_CLIP,
         * string field would be easier to extend.
         * </pre>
         *
         * <code>optional bool wrap_column_text = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearWrapColumnText() {
          bitField0_ = (bitField0_ & ~0x00000004);
          wrapColumnText_ = false;
          onChanged();
          return this;
        }

        private boolean showHeadline_ = true;
        /**
         * <pre>
         * Used to populate
         * &#64;AnswerSpecProto.answer_properties.headline_visibility_map.
         * </pre>
         *
         * <code>optional bool show_headline = 6 [default = true];</code>
         * @return Whether the showHeadline field is set.
         */
        @java.lang.Override
        public boolean hasShowHeadline() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Used to populate
         * &#64;AnswerSpecProto.answer_properties.headline_visibility_map.
         * </pre>
         *
         * <code>optional bool show_headline = 6 [default = true];</code>
         * @return The showHeadline.
         */
        @java.lang.Override
        public boolean getShowHeadline() {
          return showHeadline_;
        }
        /**
         * <pre>
         * Used to populate
         * &#64;AnswerSpecProto.answer_properties.headline_visibility_map.
         * </pre>
         *
         * <code>optional bool show_headline = 6 [default = true];</code>
         * @param value The showHeadline to set.
         * @return This builder for chaining.
         */
        public Builder setShowHeadline(boolean value) {
          bitField0_ |= 0x00000008;
          showHeadline_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Used to populate
         * &#64;AnswerSpecProto.answer_properties.headline_visibility_map.
         * </pre>
         *
         * <code>optional bool show_headline = 6 [default = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearShowHeadline() {
          bitField0_ = (bitField0_ & ~0x00000008);
          showHeadline_ = true;
          onChanged();
          return this;
        }

        private java.lang.Object headlineAggregation_ = "";
        /**
         * <pre>
         * Used to populate
         * &#64;AnswerSpecProto.visualization.headline.config.aggr.
         * allowed Values:
         *  1. COUNT
         *  2. COUNT_DISTINCT
         *  3. SUM
         *  4. MIN
         *  5. MAX
         *  6. AVERAGE
         *  7. TABLE_AGGR
         * TODO(Archit): Do we need another value like MIN_MAX or RANGE to model
         * headline which shows both min and max values of the column. In AnswerSpec
         * we are modelling it via list of Aggregation enums but that does not seem
         * very intuitive. Also should we then change the name of the field to
         * headline_type instead of headline_aggregation?
         * TODO(Archit): Verify and Update if:
         *  * Any other values are allowed for headline aggregation.
         *  * There is some other string representation of these aggregations being
         *    used in WorksheetEDocProto.
         * Based on atlas.AggregationType.E defined in atlas/public/metadata.proto.
         * NOTE: Valid values will depend on the properties of answer column.
         * </pre>
         *
         * <code>optional string headline_aggregation = 7 [(.Annotation.allowed_values_key) = "edoc.headline_aggregation_type"];</code>
         * @return Whether the headlineAggregation field is set.
         */
        public boolean hasHeadlineAggregation() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Used to populate
         * &#64;AnswerSpecProto.visualization.headline.config.aggr.
         * allowed Values:
         *  1. COUNT
         *  2. COUNT_DISTINCT
         *  3. SUM
         *  4. MIN
         *  5. MAX
         *  6. AVERAGE
         *  7. TABLE_AGGR
         * TODO(Archit): Do we need another value like MIN_MAX or RANGE to model
         * headline which shows both min and max values of the column. In AnswerSpec
         * we are modelling it via list of Aggregation enums but that does not seem
         * very intuitive. Also should we then change the name of the field to
         * headline_type instead of headline_aggregation?
         * TODO(Archit): Verify and Update if:
         *  * Any other values are allowed for headline aggregation.
         *  * There is some other string representation of these aggregations being
         *    used in WorksheetEDocProto.
         * Based on atlas.AggregationType.E defined in atlas/public/metadata.proto.
         * NOTE: Valid values will depend on the properties of answer column.
         * </pre>
         *
         * <code>optional string headline_aggregation = 7 [(.Annotation.allowed_values_key) = "edoc.headline_aggregation_type"];</code>
         * @return The headlineAggregation.
         */
        public java.lang.String getHeadlineAggregation() {
          java.lang.Object ref = headlineAggregation_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              headlineAggregation_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Used to populate
         * &#64;AnswerSpecProto.visualization.headline.config.aggr.
         * allowed Values:
         *  1. COUNT
         *  2. COUNT_DISTINCT
         *  3. SUM
         *  4. MIN
         *  5. MAX
         *  6. AVERAGE
         *  7. TABLE_AGGR
         * TODO(Archit): Do we need another value like MIN_MAX or RANGE to model
         * headline which shows both min and max values of the column. In AnswerSpec
         * we are modelling it via list of Aggregation enums but that does not seem
         * very intuitive. Also should we then change the name of the field to
         * headline_type instead of headline_aggregation?
         * TODO(Archit): Verify and Update if:
         *  * Any other values are allowed for headline aggregation.
         *  * There is some other string representation of these aggregations being
         *    used in WorksheetEDocProto.
         * Based on atlas.AggregationType.E defined in atlas/public/metadata.proto.
         * NOTE: Valid values will depend on the properties of answer column.
         * </pre>
         *
         * <code>optional string headline_aggregation = 7 [(.Annotation.allowed_values_key) = "edoc.headline_aggregation_type"];</code>
         * @return The bytes for headlineAggregation.
         */
        public com.google.protobuf.ByteString
            getHeadlineAggregationBytes() {
          java.lang.Object ref = headlineAggregation_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            headlineAggregation_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Used to populate
         * &#64;AnswerSpecProto.visualization.headline.config.aggr.
         * allowed Values:
         *  1. COUNT
         *  2. COUNT_DISTINCT
         *  3. SUM
         *  4. MIN
         *  5. MAX
         *  6. AVERAGE
         *  7. TABLE_AGGR
         * TODO(Archit): Do we need another value like MIN_MAX or RANGE to model
         * headline which shows both min and max values of the column. In AnswerSpec
         * we are modelling it via list of Aggregation enums but that does not seem
         * very intuitive. Also should we then change the name of the field to
         * headline_type instead of headline_aggregation?
         * TODO(Archit): Verify and Update if:
         *  * Any other values are allowed for headline aggregation.
         *  * There is some other string representation of these aggregations being
         *    used in WorksheetEDocProto.
         * Based on atlas.AggregationType.E defined in atlas/public/metadata.proto.
         * NOTE: Valid values will depend on the properties of answer column.
         * </pre>
         *
         * <code>optional string headline_aggregation = 7 [(.Annotation.allowed_values_key) = "edoc.headline_aggregation_type"];</code>
         * @param value The headlineAggregation to set.
         * @return This builder for chaining.
         */
        public Builder setHeadlineAggregation(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          headlineAggregation_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Used to populate
         * &#64;AnswerSpecProto.visualization.headline.config.aggr.
         * allowed Values:
         *  1. COUNT
         *  2. COUNT_DISTINCT
         *  3. SUM
         *  4. MIN
         *  5. MAX
         *  6. AVERAGE
         *  7. TABLE_AGGR
         * TODO(Archit): Do we need another value like MIN_MAX or RANGE to model
         * headline which shows both min and max values of the column. In AnswerSpec
         * we are modelling it via list of Aggregation enums but that does not seem
         * very intuitive. Also should we then change the name of the field to
         * headline_type instead of headline_aggregation?
         * TODO(Archit): Verify and Update if:
         *  * Any other values are allowed for headline aggregation.
         *  * There is some other string representation of these aggregations being
         *    used in WorksheetEDocProto.
         * Based on atlas.AggregationType.E defined in atlas/public/metadata.proto.
         * NOTE: Valid values will depend on the properties of answer column.
         * </pre>
         *
         * <code>optional string headline_aggregation = 7 [(.Annotation.allowed_values_key) = "edoc.headline_aggregation_type"];</code>
         * @return This builder for chaining.
         */
        public Builder clearHeadlineAggregation() {
          bitField0_ = (bitField0_ & ~0x00000010);
          headlineAggregation_ = getDefaultInstance().getHeadlineAggregation();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Used to populate
         * &#64;AnswerSpecProto.visualization.headline.config.aggr.
         * allowed Values:
         *  1. COUNT
         *  2. COUNT_DISTINCT
         *  3. SUM
         *  4. MIN
         *  5. MAX
         *  6. AVERAGE
         *  7. TABLE_AGGR
         * TODO(Archit): Do we need another value like MIN_MAX or RANGE to model
         * headline which shows both min and max values of the column. In AnswerSpec
         * we are modelling it via list of Aggregation enums but that does not seem
         * very intuitive. Also should we then change the name of the field to
         * headline_type instead of headline_aggregation?
         * TODO(Archit): Verify and Update if:
         *  * Any other values are allowed for headline aggregation.
         *  * There is some other string representation of these aggregations being
         *    used in WorksheetEDocProto.
         * Based on atlas.AggregationType.E defined in atlas/public/metadata.proto.
         * NOTE: Valid values will depend on the properties of answer column.
         * </pre>
         *
         * <code>optional string headline_aggregation = 7 [(.Annotation.allowed_values_key) = "edoc.headline_aggregation_type"];</code>
         * @param value The bytes for headlineAggregation to set.
         * @return This builder for chaining.
         */
        public Builder setHeadlineAggregationBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          headlineAggregation_ = value;
          onChanged();
          return this;
        }

        private int columnWidth_ ;
        /**
         * <pre>
         * Deprecated.
         * &#64;clientState.widthState.&lt;columnId&gt;.
         * TODO(Jasmeet/Chetan): Does it make sense to move this inside column
         * properties in json representation of client_state as well.
         * </pre>
         *
         * <code>optional int32 column_width = 5;</code>
         * @return Whether the columnWidth field is set.
         */
        @java.lang.Override
        public boolean hasColumnWidth() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * Deprecated.
         * &#64;clientState.widthState.&lt;columnId&gt;.
         * TODO(Jasmeet/Chetan): Does it make sense to move this inside column
         * properties in json representation of client_state as well.
         * </pre>
         *
         * <code>optional int32 column_width = 5;</code>
         * @return The columnWidth.
         */
        @java.lang.Override
        public int getColumnWidth() {
          return columnWidth_;
        }
        /**
         * <pre>
         * Deprecated.
         * &#64;clientState.widthState.&lt;columnId&gt;.
         * TODO(Jasmeet/Chetan): Does it make sense to move this inside column
         * properties in json representation of client_state as well.
         * </pre>
         *
         * <code>optional int32 column_width = 5;</code>
         * @param value The columnWidth to set.
         * @return This builder for chaining.
         */
        public Builder setColumnWidth(int value) {
          bitField0_ |= 0x00000020;
          columnWidth_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated.
         * &#64;clientState.widthState.&lt;columnId&gt;.
         * TODO(Jasmeet/Chetan): Does it make sense to move this inside column
         * properties in json representation of client_state as well.
         * </pre>
         *
         * <code>optional int32 column_width = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearColumnWidth() {
          bitField0_ = (bitField0_ & ~0x00000020);
          columnWidth_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:TableVisualization.TableColumn)
      }

      // @@protoc_insertion_point(class_scope:TableVisualization.TableColumn)
      private static final EDoc.TableVisualization.TableColumn DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.TableVisualization.TableColumn();
      }

      public static EDoc.TableVisualization.TableColumn getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<TableColumn>
          PARSER = new com.google.protobuf.AbstractParser<TableColumn>() {
        @java.lang.Override
        public TableColumn parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TableColumn(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TableColumn> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TableColumn> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.TableVisualization.TableColumn getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int TABLE_COLUMNS_FIELD_NUMBER = 1;
    private java.util.List<EDoc.TableVisualization.TableColumn> tableColumns_;
    /**
     * <pre>
     * List of table columns with information on top of the answer columns.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.TableVisualization.TableColumn> getTableColumnsList() {
      return tableColumns_;
    }
    /**
     * <pre>
     * List of table columns with information on top of the answer columns.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.TableVisualization.TableColumnOrBuilder> 
        getTableColumnsOrBuilderList() {
      return tableColumns_;
    }
    /**
     * <pre>
     * List of table columns with information on top of the answer columns.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
     */
    @java.lang.Override
    public int getTableColumnsCount() {
      return tableColumns_.size();
    }
    /**
     * <pre>
     * List of table columns with information on top of the answer columns.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
     */
    @java.lang.Override
    public EDoc.TableVisualization.TableColumn getTableColumns(int index) {
      return tableColumns_.get(index);
    }
    /**
     * <pre>
     * List of table columns with information on top of the answer columns.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
     */
    @java.lang.Override
    public EDoc.TableVisualization.TableColumnOrBuilder getTableColumnsOrBuilder(
        int index) {
      return tableColumns_.get(index);
    }

    public static final int ORDERED_COLUMN_IDS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList orderedColumnIds_;
    /**
     * <pre>
     * &#64;clientState.ordered_column_ids.
     * </pre>
     *
     * <code>repeated string ordered_column_ids = 2;</code>
     * @return A list containing the orderedColumnIds.
     */
    public com.google.protobuf.ProtocolStringList
        getOrderedColumnIdsList() {
      return orderedColumnIds_;
    }
    /**
     * <pre>
     * &#64;clientState.ordered_column_ids.
     * </pre>
     *
     * <code>repeated string ordered_column_ids = 2;</code>
     * @return The count of orderedColumnIds.
     */
    public int getOrderedColumnIdsCount() {
      return orderedColumnIds_.size();
    }
    /**
     * <pre>
     * &#64;clientState.ordered_column_ids.
     * </pre>
     *
     * <code>repeated string ordered_column_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The orderedColumnIds at the given index.
     */
    public java.lang.String getOrderedColumnIds(int index) {
      return orderedColumnIds_.get(index);
    }
    /**
     * <pre>
     * &#64;clientState.ordered_column_ids.
     * </pre>
     *
     * <code>repeated string ordered_column_ids = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the orderedColumnIds at the given index.
     */
    public com.google.protobuf.ByteString
        getOrderedColumnIdsBytes(int index) {
      return orderedColumnIds_.getByteString(index);
    }

    public static final int SHOW_GRID_SUMMARY_FIELD_NUMBER = 3;
    private boolean showGridSummary_;
    /**
     * <pre>
     * &#64;clientState.showGridSummary.
     * </pre>
     *
     * <code>optional bool show_grid_summary = 3;</code>
     * @return Whether the showGridSummary field is set.
     */
    @java.lang.Override
    public boolean hasShowGridSummary() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * &#64;clientState.showGridSummary.
     * </pre>
     *
     * <code>optional bool show_grid_summary = 3;</code>
     * @return The showGridSummary.
     */
    @java.lang.Override
    public boolean getShowGridSummary() {
      return showGridSummary_;
    }

    public static final int SHOW_TABLE_FOOTER_FIELD_NUMBER = 4;
    private boolean showTableFooter_;
    /**
     * <pre>
     * &#64;clientState.showTableFooter.
     * </pre>
     *
     * <code>optional bool show_table_footer = 4;</code>
     * @return Whether the showTableFooter field is set.
     */
    @java.lang.Override
    public boolean hasShowTableFooter() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * &#64;clientState.showTableFooter.
     * </pre>
     *
     * <code>optional bool show_table_footer = 4;</code>
     * @return The showTableFooter.
     */
    @java.lang.Override
    public boolean getShowTableFooter() {
      return showTableFooter_;
    }

    public static final int WRAP_TABLE_HEADER_FIELD_NUMBER = 5;
    private boolean wrapTableHeader_;
    /**
     * <pre>
     * &#64;clientState.wrapTableHeader.
     * </pre>
     *
     * <code>optional bool wrap_table_header = 5;</code>
     * @return Whether the wrapTableHeader field is set.
     */
    @java.lang.Override
    public boolean hasWrapTableHeader() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * &#64;clientState.wrapTableHeader.
     * </pre>
     *
     * <code>optional bool wrap_table_header = 5;</code>
     * @return The wrapTableHeader.
     */
    @java.lang.Override
    public boolean getWrapTableHeader() {
      return wrapTableHeader_;
    }

    public static final int CLIENT_STATE_FIELD_NUMBER = 6;
    private volatile java.lang.Object clientState_;
    /**
     * <pre>
     * Any left over &#64;clientState can be serialized as json string.
     * NOTE: In V1 we might store the complete client state in this field without
     * using any of the other proto fields corresponding to the client state.
     * </pre>
     *
     * <code>optional string client_state = 6;</code>
     * @return Whether the clientState field is set.
     */
    @java.lang.Override
    public boolean hasClientState() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Any left over &#64;clientState can be serialized as json string.
     * NOTE: In V1 we might store the complete client state in this field without
     * using any of the other proto fields corresponding to the client state.
     * </pre>
     *
     * <code>optional string client_state = 6;</code>
     * @return The clientState.
     */
    @java.lang.Override
    public java.lang.String getClientState() {
      java.lang.Object ref = clientState_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientState_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Any left over &#64;clientState can be serialized as json string.
     * NOTE: In V1 we might store the complete client state in this field without
     * using any of the other proto fields corresponding to the client state.
     * </pre>
     *
     * <code>optional string client_state = 6;</code>
     * @return The bytes for clientState.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClientStateBytes() {
      java.lang.Object ref = clientState_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientState_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_STATE_V2_FIELD_NUMBER = 7;
    private volatile java.lang.Object clientStateV2_;
    /**
     * <pre>
     * Store new client state of the table object as json string converted from proto.
     * </pre>
     *
     * <code>optional string client_state_v2 = 7;</code>
     * @return Whether the clientStateV2 field is set.
     */
    @java.lang.Override
    public boolean hasClientStateV2() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Store new client state of the table object as json string converted from proto.
     * </pre>
     *
     * <code>optional string client_state_v2 = 7;</code>
     * @return The clientStateV2.
     */
    @java.lang.Override
    public java.lang.String getClientStateV2() {
      java.lang.Object ref = clientStateV2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientStateV2_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Store new client state of the table object as json string converted from proto.
     * </pre>
     *
     * <code>optional string client_state_v2 = 7;</code>
     * @return The bytes for clientStateV2.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClientStateV2Bytes() {
      java.lang.Object ref = clientStateV2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientStateV2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < tableColumns_.size(); i++) {
        output.writeMessage(1, tableColumns_.get(i));
      }
      for (int i = 0; i < orderedColumnIds_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, orderedColumnIds_.getRaw(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(3, showGridSummary_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(4, showTableFooter_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(5, wrapTableHeader_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, clientState_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, clientStateV2_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tableColumns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tableColumns_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < orderedColumnIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(orderedColumnIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getOrderedColumnIdsList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, showGridSummary_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, showTableFooter_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, wrapTableHeader_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, clientState_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, clientStateV2_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.TableVisualization)) {
        return super.equals(obj);
      }
      EDoc.TableVisualization other = (EDoc.TableVisualization) obj;

      if (!getTableColumnsList()
          .equals(other.getTableColumnsList())) return false;
      if (!getOrderedColumnIdsList()
          .equals(other.getOrderedColumnIdsList())) return false;
      if (hasShowGridSummary() != other.hasShowGridSummary()) return false;
      if (hasShowGridSummary()) {
        if (getShowGridSummary()
            != other.getShowGridSummary()) return false;
      }
      if (hasShowTableFooter() != other.hasShowTableFooter()) return false;
      if (hasShowTableFooter()) {
        if (getShowTableFooter()
            != other.getShowTableFooter()) return false;
      }
      if (hasWrapTableHeader() != other.hasWrapTableHeader()) return false;
      if (hasWrapTableHeader()) {
        if (getWrapTableHeader()
            != other.getWrapTableHeader()) return false;
      }
      if (hasClientState() != other.hasClientState()) return false;
      if (hasClientState()) {
        if (!getClientState()
            .equals(other.getClientState())) return false;
      }
      if (hasClientStateV2() != other.hasClientStateV2()) return false;
      if (hasClientStateV2()) {
        if (!getClientStateV2()
            .equals(other.getClientStateV2())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTableColumnsCount() > 0) {
        hash = (37 * hash) + TABLE_COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getTableColumnsList().hashCode();
      }
      if (getOrderedColumnIdsCount() > 0) {
        hash = (37 * hash) + ORDERED_COLUMN_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getOrderedColumnIdsList().hashCode();
      }
      if (hasShowGridSummary()) {
        hash = (37 * hash) + SHOW_GRID_SUMMARY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getShowGridSummary());
      }
      if (hasShowTableFooter()) {
        hash = (37 * hash) + SHOW_TABLE_FOOTER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getShowTableFooter());
      }
      if (hasWrapTableHeader()) {
        hash = (37 * hash) + WRAP_TABLE_HEADER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getWrapTableHeader());
      }
      if (hasClientState()) {
        hash = (37 * hash) + CLIENT_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getClientState().hashCode();
      }
      if (hasClientStateV2()) {
        hash = (37 * hash) + CLIENT_STATE_V2_FIELD_NUMBER;
        hash = (53 * hash) + getClientStateV2().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.TableVisualization parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.TableVisualization parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.TableVisualization parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.TableVisualization parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.TableVisualization parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.TableVisualization parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.TableVisualization parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.TableVisualization parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.TableVisualization parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.TableVisualization parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.TableVisualization parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.TableVisualization parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.TableVisualization prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Table visualization is used to display detailed view of the answer to the
     * user.  As the name suggests, a table with specified number of columns is
     * displayed to the user for a TableViz.
     * </pre>
     *
     * Protobuf type {@code TableVisualization}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TableVisualization)
        EDoc.TableVisualizationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_TableVisualization_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_TableVisualization_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.TableVisualization.class, EDoc.TableVisualization.Builder.class);
      }

      // Construct using EDoc.TableVisualization.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTableColumnsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (tableColumnsBuilder_ == null) {
          tableColumns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          tableColumnsBuilder_.clear();
        }
        orderedColumnIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        showGridSummary_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        showTableFooter_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        wrapTableHeader_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        clientState_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        clientStateV2_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_TableVisualization_descriptor;
      }

      @java.lang.Override
      public EDoc.TableVisualization getDefaultInstanceForType() {
        return EDoc.TableVisualization.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.TableVisualization build() {
        EDoc.TableVisualization result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.TableVisualization buildPartial() {
        EDoc.TableVisualization result = new EDoc.TableVisualization(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (tableColumnsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            tableColumns_ = java.util.Collections.unmodifiableList(tableColumns_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.tableColumns_ = tableColumns_;
        } else {
          result.tableColumns_ = tableColumnsBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          orderedColumnIds_ = orderedColumnIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.orderedColumnIds_ = orderedColumnIds_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.showGridSummary_ = showGridSummary_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.showTableFooter_ = showTableFooter_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.wrapTableHeader_ = wrapTableHeader_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientState_ = clientState_;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.clientStateV2_ = clientStateV2_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.TableVisualization) {
          return mergeFrom((EDoc.TableVisualization)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.TableVisualization other) {
        if (other == EDoc.TableVisualization.getDefaultInstance()) return this;
        if (tableColumnsBuilder_ == null) {
          if (!other.tableColumns_.isEmpty()) {
            if (tableColumns_.isEmpty()) {
              tableColumns_ = other.tableColumns_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTableColumnsIsMutable();
              tableColumns_.addAll(other.tableColumns_);
            }
            onChanged();
          }
        } else {
          if (!other.tableColumns_.isEmpty()) {
            if (tableColumnsBuilder_.isEmpty()) {
              tableColumnsBuilder_.dispose();
              tableColumnsBuilder_ = null;
              tableColumns_ = other.tableColumns_;
              bitField0_ = (bitField0_ & ~0x00000001);
              tableColumnsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTableColumnsFieldBuilder() : null;
            } else {
              tableColumnsBuilder_.addAllMessages(other.tableColumns_);
            }
          }
        }
        if (!other.orderedColumnIds_.isEmpty()) {
          if (orderedColumnIds_.isEmpty()) {
            orderedColumnIds_ = other.orderedColumnIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureOrderedColumnIdsIsMutable();
            orderedColumnIds_.addAll(other.orderedColumnIds_);
          }
          onChanged();
        }
        if (other.hasShowGridSummary()) {
          setShowGridSummary(other.getShowGridSummary());
        }
        if (other.hasShowTableFooter()) {
          setShowTableFooter(other.getShowTableFooter());
        }
        if (other.hasWrapTableHeader()) {
          setWrapTableHeader(other.getWrapTableHeader());
        }
        if (other.hasClientState()) {
          bitField0_ |= 0x00000020;
          clientState_ = other.clientState_;
          onChanged();
        }
        if (other.hasClientStateV2()) {
          bitField0_ |= 0x00000040;
          clientStateV2_ = other.clientStateV2_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.TableVisualization parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.TableVisualization) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<EDoc.TableVisualization.TableColumn> tableColumns_ =
        java.util.Collections.emptyList();
      private void ensureTableColumnsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tableColumns_ = new java.util.ArrayList<EDoc.TableVisualization.TableColumn>(tableColumns_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.TableVisualization.TableColumn, EDoc.TableVisualization.TableColumn.Builder, EDoc.TableVisualization.TableColumnOrBuilder> tableColumnsBuilder_;

      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public java.util.List<EDoc.TableVisualization.TableColumn> getTableColumnsList() {
        if (tableColumnsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tableColumns_);
        } else {
          return tableColumnsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public int getTableColumnsCount() {
        if (tableColumnsBuilder_ == null) {
          return tableColumns_.size();
        } else {
          return tableColumnsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public EDoc.TableVisualization.TableColumn getTableColumns(int index) {
        if (tableColumnsBuilder_ == null) {
          return tableColumns_.get(index);
        } else {
          return tableColumnsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder setTableColumns(
          int index, EDoc.TableVisualization.TableColumn value) {
        if (tableColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableColumnsIsMutable();
          tableColumns_.set(index, value);
          onChanged();
        } else {
          tableColumnsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder setTableColumns(
          int index, EDoc.TableVisualization.TableColumn.Builder builderForValue) {
        if (tableColumnsBuilder_ == null) {
          ensureTableColumnsIsMutable();
          tableColumns_.set(index, builderForValue.build());
          onChanged();
        } else {
          tableColumnsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder addTableColumns(EDoc.TableVisualization.TableColumn value) {
        if (tableColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableColumnsIsMutable();
          tableColumns_.add(value);
          onChanged();
        } else {
          tableColumnsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder addTableColumns(
          int index, EDoc.TableVisualization.TableColumn value) {
        if (tableColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableColumnsIsMutable();
          tableColumns_.add(index, value);
          onChanged();
        } else {
          tableColumnsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder addTableColumns(
          EDoc.TableVisualization.TableColumn.Builder builderForValue) {
        if (tableColumnsBuilder_ == null) {
          ensureTableColumnsIsMutable();
          tableColumns_.add(builderForValue.build());
          onChanged();
        } else {
          tableColumnsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder addTableColumns(
          int index, EDoc.TableVisualization.TableColumn.Builder builderForValue) {
        if (tableColumnsBuilder_ == null) {
          ensureTableColumnsIsMutable();
          tableColumns_.add(index, builderForValue.build());
          onChanged();
        } else {
          tableColumnsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder addAllTableColumns(
          java.lang.Iterable<? extends EDoc.TableVisualization.TableColumn> values) {
        if (tableColumnsBuilder_ == null) {
          ensureTableColumnsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tableColumns_);
          onChanged();
        } else {
          tableColumnsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder clearTableColumns() {
        if (tableColumnsBuilder_ == null) {
          tableColumns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          tableColumnsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder removeTableColumns(int index) {
        if (tableColumnsBuilder_ == null) {
          ensureTableColumnsIsMutable();
          tableColumns_.remove(index);
          onChanged();
        } else {
          tableColumnsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public EDoc.TableVisualization.TableColumn.Builder getTableColumnsBuilder(
          int index) {
        return getTableColumnsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public EDoc.TableVisualization.TableColumnOrBuilder getTableColumnsOrBuilder(
          int index) {
        if (tableColumnsBuilder_ == null) {
          return tableColumns_.get(index);  } else {
          return tableColumnsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public java.util.List<? extends EDoc.TableVisualization.TableColumnOrBuilder> 
           getTableColumnsOrBuilderList() {
        if (tableColumnsBuilder_ != null) {
          return tableColumnsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tableColumns_);
        }
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public EDoc.TableVisualization.TableColumn.Builder addTableColumnsBuilder() {
        return getTableColumnsFieldBuilder().addBuilder(
            EDoc.TableVisualization.TableColumn.getDefaultInstance());
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public EDoc.TableVisualization.TableColumn.Builder addTableColumnsBuilder(
          int index) {
        return getTableColumnsFieldBuilder().addBuilder(
            index, EDoc.TableVisualization.TableColumn.getDefaultInstance());
      }
      /**
       * <pre>
       * List of table columns with information on top of the answer columns.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .TableVisualization.TableColumn table_columns = 1 [(.Annotation.unique) = "column_id"];</code>
       */
      public java.util.List<EDoc.TableVisualization.TableColumn.Builder> 
           getTableColumnsBuilderList() {
        return getTableColumnsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.TableVisualization.TableColumn, EDoc.TableVisualization.TableColumn.Builder, EDoc.TableVisualization.TableColumnOrBuilder> 
          getTableColumnsFieldBuilder() {
        if (tableColumnsBuilder_ == null) {
          tableColumnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.TableVisualization.TableColumn, EDoc.TableVisualization.TableColumn.Builder, EDoc.TableVisualization.TableColumnOrBuilder>(
                  tableColumns_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          tableColumns_ = null;
        }
        return tableColumnsBuilder_;
      }

      private com.google.protobuf.LazyStringList orderedColumnIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureOrderedColumnIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          orderedColumnIds_ = new com.google.protobuf.LazyStringArrayList(orderedColumnIds_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * &#64;clientState.ordered_column_ids.
       * </pre>
       *
       * <code>repeated string ordered_column_ids = 2;</code>
       * @return A list containing the orderedColumnIds.
       */
      public com.google.protobuf.ProtocolStringList
          getOrderedColumnIdsList() {
        return orderedColumnIds_.getUnmodifiableView();
      }
      /**
       * <pre>
       * &#64;clientState.ordered_column_ids.
       * </pre>
       *
       * <code>repeated string ordered_column_ids = 2;</code>
       * @return The count of orderedColumnIds.
       */
      public int getOrderedColumnIdsCount() {
        return orderedColumnIds_.size();
      }
      /**
       * <pre>
       * &#64;clientState.ordered_column_ids.
       * </pre>
       *
       * <code>repeated string ordered_column_ids = 2;</code>
       * @param index The index of the element to return.
       * @return The orderedColumnIds at the given index.
       */
      public java.lang.String getOrderedColumnIds(int index) {
        return orderedColumnIds_.get(index);
      }
      /**
       * <pre>
       * &#64;clientState.ordered_column_ids.
       * </pre>
       *
       * <code>repeated string ordered_column_ids = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the orderedColumnIds at the given index.
       */
      public com.google.protobuf.ByteString
          getOrderedColumnIdsBytes(int index) {
        return orderedColumnIds_.getByteString(index);
      }
      /**
       * <pre>
       * &#64;clientState.ordered_column_ids.
       * </pre>
       *
       * <code>repeated string ordered_column_ids = 2;</code>
       * @param index The index to set the value at.
       * @param value The orderedColumnIds to set.
       * @return This builder for chaining.
       */
      public Builder setOrderedColumnIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOrderedColumnIdsIsMutable();
        orderedColumnIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;clientState.ordered_column_ids.
       * </pre>
       *
       * <code>repeated string ordered_column_ids = 2;</code>
       * @param value The orderedColumnIds to add.
       * @return This builder for chaining.
       */
      public Builder addOrderedColumnIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOrderedColumnIdsIsMutable();
        orderedColumnIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;clientState.ordered_column_ids.
       * </pre>
       *
       * <code>repeated string ordered_column_ids = 2;</code>
       * @param values The orderedColumnIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllOrderedColumnIds(
          java.lang.Iterable<java.lang.String> values) {
        ensureOrderedColumnIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, orderedColumnIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;clientState.ordered_column_ids.
       * </pre>
       *
       * <code>repeated string ordered_column_ids = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOrderedColumnIds() {
        orderedColumnIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;clientState.ordered_column_ids.
       * </pre>
       *
       * <code>repeated string ordered_column_ids = 2;</code>
       * @param value The bytes of the orderedColumnIds to add.
       * @return This builder for chaining.
       */
      public Builder addOrderedColumnIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOrderedColumnIdsIsMutable();
        orderedColumnIds_.add(value);
        onChanged();
        return this;
      }

      private boolean showGridSummary_ ;
      /**
       * <pre>
       * &#64;clientState.showGridSummary.
       * </pre>
       *
       * <code>optional bool show_grid_summary = 3;</code>
       * @return Whether the showGridSummary field is set.
       */
      @java.lang.Override
      public boolean hasShowGridSummary() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * &#64;clientState.showGridSummary.
       * </pre>
       *
       * <code>optional bool show_grid_summary = 3;</code>
       * @return The showGridSummary.
       */
      @java.lang.Override
      public boolean getShowGridSummary() {
        return showGridSummary_;
      }
      /**
       * <pre>
       * &#64;clientState.showGridSummary.
       * </pre>
       *
       * <code>optional bool show_grid_summary = 3;</code>
       * @param value The showGridSummary to set.
       * @return This builder for chaining.
       */
      public Builder setShowGridSummary(boolean value) {
        bitField0_ |= 0x00000004;
        showGridSummary_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;clientState.showGridSummary.
       * </pre>
       *
       * <code>optional bool show_grid_summary = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearShowGridSummary() {
        bitField0_ = (bitField0_ & ~0x00000004);
        showGridSummary_ = false;
        onChanged();
        return this;
      }

      private boolean showTableFooter_ ;
      /**
       * <pre>
       * &#64;clientState.showTableFooter.
       * </pre>
       *
       * <code>optional bool show_table_footer = 4;</code>
       * @return Whether the showTableFooter field is set.
       */
      @java.lang.Override
      public boolean hasShowTableFooter() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * &#64;clientState.showTableFooter.
       * </pre>
       *
       * <code>optional bool show_table_footer = 4;</code>
       * @return The showTableFooter.
       */
      @java.lang.Override
      public boolean getShowTableFooter() {
        return showTableFooter_;
      }
      /**
       * <pre>
       * &#64;clientState.showTableFooter.
       * </pre>
       *
       * <code>optional bool show_table_footer = 4;</code>
       * @param value The showTableFooter to set.
       * @return This builder for chaining.
       */
      public Builder setShowTableFooter(boolean value) {
        bitField0_ |= 0x00000008;
        showTableFooter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;clientState.showTableFooter.
       * </pre>
       *
       * <code>optional bool show_table_footer = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearShowTableFooter() {
        bitField0_ = (bitField0_ & ~0x00000008);
        showTableFooter_ = false;
        onChanged();
        return this;
      }

      private boolean wrapTableHeader_ ;
      /**
       * <pre>
       * &#64;clientState.wrapTableHeader.
       * </pre>
       *
       * <code>optional bool wrap_table_header = 5;</code>
       * @return Whether the wrapTableHeader field is set.
       */
      @java.lang.Override
      public boolean hasWrapTableHeader() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * &#64;clientState.wrapTableHeader.
       * </pre>
       *
       * <code>optional bool wrap_table_header = 5;</code>
       * @return The wrapTableHeader.
       */
      @java.lang.Override
      public boolean getWrapTableHeader() {
        return wrapTableHeader_;
      }
      /**
       * <pre>
       * &#64;clientState.wrapTableHeader.
       * </pre>
       *
       * <code>optional bool wrap_table_header = 5;</code>
       * @param value The wrapTableHeader to set.
       * @return This builder for chaining.
       */
      public Builder setWrapTableHeader(boolean value) {
        bitField0_ |= 0x00000010;
        wrapTableHeader_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;clientState.wrapTableHeader.
       * </pre>
       *
       * <code>optional bool wrap_table_header = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearWrapTableHeader() {
        bitField0_ = (bitField0_ & ~0x00000010);
        wrapTableHeader_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object clientState_ = "";
      /**
       * <pre>
       * Any left over &#64;clientState can be serialized as json string.
       * NOTE: In V1 we might store the complete client state in this field without
       * using any of the other proto fields corresponding to the client state.
       * </pre>
       *
       * <code>optional string client_state = 6;</code>
       * @return Whether the clientState field is set.
       */
      public boolean hasClientState() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Any left over &#64;clientState can be serialized as json string.
       * NOTE: In V1 we might store the complete client state in this field without
       * using any of the other proto fields corresponding to the client state.
       * </pre>
       *
       * <code>optional string client_state = 6;</code>
       * @return The clientState.
       */
      public java.lang.String getClientState() {
        java.lang.Object ref = clientState_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientState_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Any left over &#64;clientState can be serialized as json string.
       * NOTE: In V1 we might store the complete client state in this field without
       * using any of the other proto fields corresponding to the client state.
       * </pre>
       *
       * <code>optional string client_state = 6;</code>
       * @return The bytes for clientState.
       */
      public com.google.protobuf.ByteString
          getClientStateBytes() {
        java.lang.Object ref = clientState_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientState_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Any left over &#64;clientState can be serialized as json string.
       * NOTE: In V1 we might store the complete client state in this field without
       * using any of the other proto fields corresponding to the client state.
       * </pre>
       *
       * <code>optional string client_state = 6;</code>
       * @param value The clientState to set.
       * @return This builder for chaining.
       */
      public Builder setClientState(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        clientState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any left over &#64;clientState can be serialized as json string.
       * NOTE: In V1 we might store the complete client state in this field without
       * using any of the other proto fields corresponding to the client state.
       * </pre>
       *
       * <code>optional string client_state = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearClientState() {
        bitField0_ = (bitField0_ & ~0x00000020);
        clientState_ = getDefaultInstance().getClientState();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any left over &#64;clientState can be serialized as json string.
       * NOTE: In V1 we might store the complete client state in this field without
       * using any of the other proto fields corresponding to the client state.
       * </pre>
       *
       * <code>optional string client_state = 6;</code>
       * @param value The bytes for clientState to set.
       * @return This builder for chaining.
       */
      public Builder setClientStateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        clientState_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object clientStateV2_ = "";
      /**
       * <pre>
       * Store new client state of the table object as json string converted from proto.
       * </pre>
       *
       * <code>optional string client_state_v2 = 7;</code>
       * @return Whether the clientStateV2 field is set.
       */
      public boolean hasClientStateV2() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Store new client state of the table object as json string converted from proto.
       * </pre>
       *
       * <code>optional string client_state_v2 = 7;</code>
       * @return The clientStateV2.
       */
      public java.lang.String getClientStateV2() {
        java.lang.Object ref = clientStateV2_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientStateV2_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Store new client state of the table object as json string converted from proto.
       * </pre>
       *
       * <code>optional string client_state_v2 = 7;</code>
       * @return The bytes for clientStateV2.
       */
      public com.google.protobuf.ByteString
          getClientStateV2Bytes() {
        java.lang.Object ref = clientStateV2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientStateV2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Store new client state of the table object as json string converted from proto.
       * </pre>
       *
       * <code>optional string client_state_v2 = 7;</code>
       * @param value The clientStateV2 to set.
       * @return This builder for chaining.
       */
      public Builder setClientStateV2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        clientStateV2_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Store new client state of the table object as json string converted from proto.
       * </pre>
       *
       * <code>optional string client_state_v2 = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearClientStateV2() {
        bitField0_ = (bitField0_ & ~0x00000040);
        clientStateV2_ = getDefaultInstance().getClientStateV2();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Store new client state of the table object as json string converted from proto.
       * </pre>
       *
       * <code>optional string client_state_v2 = 7;</code>
       * @param value The bytes for clientStateV2 to set.
       * @return This builder for chaining.
       */
      public Builder setClientStateV2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        clientStateV2_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TableVisualization)
    }

    // @@protoc_insertion_point(class_scope:TableVisualization)
    private static final EDoc.TableVisualization DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.TableVisualization();
    }

    public static EDoc.TableVisualization getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TableVisualization>
        PARSER = new com.google.protobuf.AbstractParser<TableVisualization>() {
      @java.lang.Override
      public TableVisualization parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableVisualization(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TableVisualization> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TableVisualization> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.TableVisualization getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChartVisualizationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ChartVisualization)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type of the chart.
     * Allowed Values:
     *    1. COLUMN
     *    2. BAR
     *    3. LINE
     *    4. PIE
     *    5. SCATTER
     *    6. BUBBLE
     *    7. STACKED_COLUMN
     *    8. AREA
     *    9. PARETO
     *    10. GEO_AREA
     *    11. GEO_BUBBLE
     *    12. GEO_HEATMAP
     *    13. GEO_EARTH_AREA
     *    14. GEO_EARTH_BUBBLE
     *    15. GEO_EARTH_BAR
     *    16. GEO_EARTH_HEATMAP
     *    17. GEO_EARTH_GRAPH
     *    18. WATERFALL
     *    19. TREEMAP
     *    20. HEATMAP
     *    21. STACKED_AREA
     *    22. LINE_COLUMN
     *    23. FUNNEL
     *    24. PIVOT_TABLE
     *    25. LINE_STACKED_COLUMN
     *    26. SANKEY
     *    27. GRID_TABLE
     *    28. SPIDER_WEB
     *    29. WHISKER_SCATTER
     *    30. STACKED_BAR
     *    31. CANDLESTICK
     * Based on callosum.VisualizationProto.ChartVisualizationContentProto.ChartTypeEnumProto
     * defined in callosum/client/visualization.proto.
     * </pre>
     *
     * <code>optional string type = 1 [(.Annotation.compulsory) = true, (.Annotation.allowed_values_key) = "edoc.chart_type"];</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <pre>
     * Type of the chart.
     * Allowed Values:
     *    1. COLUMN
     *    2. BAR
     *    3. LINE
     *    4. PIE
     *    5. SCATTER
     *    6. BUBBLE
     *    7. STACKED_COLUMN
     *    8. AREA
     *    9. PARETO
     *    10. GEO_AREA
     *    11. GEO_BUBBLE
     *    12. GEO_HEATMAP
     *    13. GEO_EARTH_AREA
     *    14. GEO_EARTH_BUBBLE
     *    15. GEO_EARTH_BAR
     *    16. GEO_EARTH_HEATMAP
     *    17. GEO_EARTH_GRAPH
     *    18. WATERFALL
     *    19. TREEMAP
     *    20. HEATMAP
     *    21. STACKED_AREA
     *    22. LINE_COLUMN
     *    23. FUNNEL
     *    24. PIVOT_TABLE
     *    25. LINE_STACKED_COLUMN
     *    26. SANKEY
     *    27. GRID_TABLE
     *    28. SPIDER_WEB
     *    29. WHISKER_SCATTER
     *    30. STACKED_BAR
     *    31. CANDLESTICK
     * Based on callosum.VisualizationProto.ChartVisualizationContentProto.ChartTypeEnumProto
     * defined in callosum/client/visualization.proto.
     * </pre>
     *
     * <code>optional string type = 1 [(.Annotation.compulsory) = true, (.Annotation.allowed_values_key) = "edoc.chart_type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * Type of the chart.
     * Allowed Values:
     *    1. COLUMN
     *    2. BAR
     *    3. LINE
     *    4. PIE
     *    5. SCATTER
     *    6. BUBBLE
     *    7. STACKED_COLUMN
     *    8. AREA
     *    9. PARETO
     *    10. GEO_AREA
     *    11. GEO_BUBBLE
     *    12. GEO_HEATMAP
     *    13. GEO_EARTH_AREA
     *    14. GEO_EARTH_BUBBLE
     *    15. GEO_EARTH_BAR
     *    16. GEO_EARTH_HEATMAP
     *    17. GEO_EARTH_GRAPH
     *    18. WATERFALL
     *    19. TREEMAP
     *    20. HEATMAP
     *    21. STACKED_AREA
     *    22. LINE_COLUMN
     *    23. FUNNEL
     *    24. PIVOT_TABLE
     *    25. LINE_STACKED_COLUMN
     *    26. SANKEY
     *    27. GRID_TABLE
     *    28. SPIDER_WEB
     *    29. WHISKER_SCATTER
     *    30. STACKED_BAR
     *    31. CANDLESTICK
     * Based on callosum.VisualizationProto.ChartVisualizationContentProto.ChartTypeEnumProto
     * defined in callosum/client/visualization.proto.
     * </pre>
     *
     * <code>optional string type = 1 [(.Annotation.compulsory) = true, (.Annotation.allowed_values_key) = "edoc.chart_type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * List of chart column with information on top of the answer column.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
     */
    java.util.List<EDoc.ChartVisualization.ChartColumn> 
        getChartColumnsList();
    /**
     * <pre>
     * List of chart column with information on top of the answer column.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
     */
    EDoc.ChartVisualization.ChartColumn getChartColumns(int index);
    /**
     * <pre>
     * List of chart column with information on top of the answer column.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
     */
    int getChartColumnsCount();
    /**
     * <pre>
     * List of chart column with information on top of the answer column.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
     */
    java.util.List<? extends EDoc.ChartVisualization.ChartColumnOrBuilder> 
        getChartColumnsOrBuilderList();
    /**
     * <pre>
     * List of chart column with information on top of the answer column.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
     */
    EDoc.ChartVisualization.ChartColumnOrBuilder getChartColumnsOrBuilder(
        int index);

    /**
     * <pre>
     * Axis configuration of the chart. Repeated because some charts need
     * more than one query to be displayed. Extra configuration represent
     * other queries that might be needed to display such charts. For example,
     * to display a stacked column chart for 'revenue by region by nation'
     * with an overlay of line chart for 'revenue by region' requires multiple
     * queries with different grouping columns.
     * </pre>
     *
     * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
     */
    java.util.List<EDoc.ChartVisualization.AxisConfig> 
        getAxisConfigsList();
    /**
     * <pre>
     * Axis configuration of the chart. Repeated because some charts need
     * more than one query to be displayed. Extra configuration represent
     * other queries that might be needed to display such charts. For example,
     * to display a stacked column chart for 'revenue by region by nation'
     * with an overlay of line chart for 'revenue by region' requires multiple
     * queries with different grouping columns.
     * </pre>
     *
     * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
     */
    EDoc.ChartVisualization.AxisConfig getAxisConfigs(int index);
    /**
     * <pre>
     * Axis configuration of the chart. Repeated because some charts need
     * more than one query to be displayed. Extra configuration represent
     * other queries that might be needed to display such charts. For example,
     * to display a stacked column chart for 'revenue by region by nation'
     * with an overlay of line chart for 'revenue by region' requires multiple
     * queries with different grouping columns.
     * </pre>
     *
     * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
     */
    int getAxisConfigsCount();
    /**
     * <pre>
     * Axis configuration of the chart. Repeated because some charts need
     * more than one query to be displayed. Extra configuration represent
     * other queries that might be needed to display such charts. For example,
     * to display a stacked column chart for 'revenue by region by nation'
     * with an overlay of line chart for 'revenue by region' requires multiple
     * queries with different grouping columns.
     * </pre>
     *
     * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
     */
    java.util.List<? extends EDoc.ChartVisualization.AxisConfigOrBuilder> 
        getAxisConfigsOrBuilderList();
    /**
     * <pre>
     * Axis configuration of the chart. Repeated because some charts need
     * more than one query to be displayed. Extra configuration represent
     * other queries that might be needed to display such charts. For example,
     * to display a stacked column chart for 'revenue by region by nation'
     * with an overlay of line chart for 'revenue by region' requires multiple
     * queries with different grouping columns.
     * </pre>
     *
     * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
     */
    EDoc.ChartVisualization.AxisConfigOrBuilder getAxisConfigsOrBuilder(
        int index);

    /**
     * <pre>
     * Any left over &#64;clientState can be serialized as json string.
     * NOTE: In V1 we might store the complete client state in this field without
     * using any of the other proto fields corresponding to the client state.
     * </pre>
     *
     * <code>optional string client_state = 5;</code>
     * @return Whether the clientState field is set.
     */
    boolean hasClientState();
    /**
     * <pre>
     * Any left over &#64;clientState can be serialized as json string.
     * NOTE: In V1 we might store the complete client state in this field without
     * using any of the other proto fields corresponding to the client state.
     * </pre>
     *
     * <code>optional string client_state = 5;</code>
     * @return The clientState.
     */
    java.lang.String getClientState();
    /**
     * <pre>
     * Any left over &#64;clientState can be serialized as json string.
     * NOTE: In V1 we might store the complete client state in this field without
     * using any of the other proto fields corresponding to the client state.
     * </pre>
     *
     * <code>optional string client_state = 5;</code>
     * @return The bytes for clientState.
     */
    com.google.protobuf.ByteString
        getClientStateBytes();

    /**
     * <pre>
     * Store new client state of the chart object as json string converted from proto.
     * </pre>
     *
     * <code>optional string client_state_v2 = 6;</code>
     * @return Whether the clientStateV2 field is set.
     */
    boolean hasClientStateV2();
    /**
     * <pre>
     * Store new client state of the chart object as json string converted from proto.
     * </pre>
     *
     * <code>optional string client_state_v2 = 6;</code>
     * @return The clientStateV2.
     */
    java.lang.String getClientStateV2();
    /**
     * <pre>
     * Store new client state of the chart object as json string converted from proto.
     * </pre>
     *
     * <code>optional string client_state_v2 = 6;</code>
     * @return The bytes for clientStateV2.
     */
    com.google.protobuf.ByteString
        getClientStateV2Bytes();

    /**
     * <pre>
     * We are no longer exporting locked property of the chart because for saved
     * answers chart it automatically locked, hence during import we can simply
     * set locked to true in the AnswerSpec.
     * </pre>
     *
     * <code>optional bool locked = 4 [default = true, deprecated = true];</code>
     * @return Whether the locked field is set.
     */
    @java.lang.Deprecated boolean hasLocked();
    /**
     * <pre>
     * We are no longer exporting locked property of the chart because for saved
     * answers chart it automatically locked, hence during import we can simply
     * set locked to true in the AnswerSpec.
     * </pre>
     *
     * <code>optional bool locked = 4 [default = true, deprecated = true];</code>
     * @return The locked.
     */
    @java.lang.Deprecated boolean getLocked();
  }
  /**
   * <pre>
   * Chart visualizations are a more graphical representations of the TableViz.
   * Various chart types from simple line chart to hierarchical geo charts are
   * supported.
   * </pre>
   *
   * Protobuf type {@code ChartVisualization}
   */
  public static final class ChartVisualization extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ChartVisualization)
      ChartVisualizationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartVisualization.newBuilder() to construct.
    private ChartVisualization(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartVisualization() {
      type_ = "";
      chartColumns_ = java.util.Collections.emptyList();
      axisConfigs_ = java.util.Collections.emptyList();
      clientState_ = "";
      clientStateV2_ = "";
      locked_ = true;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChartVisualization();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartVisualization(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              type_ = bs;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                chartColumns_ = new java.util.ArrayList<EDoc.ChartVisualization.ChartColumn>();
                mutable_bitField0_ |= 0x00000002;
              }
              chartColumns_.add(
                  input.readMessage(EDoc.ChartVisualization.ChartColumn.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                axisConfigs_ = new java.util.ArrayList<EDoc.ChartVisualization.AxisConfig>();
                mutable_bitField0_ |= 0x00000004;
              }
              axisConfigs_.add(
                  input.readMessage(EDoc.ChartVisualization.AxisConfig.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              locked_ = input.readBool();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              clientState_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              clientStateV2_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          chartColumns_ = java.util.Collections.unmodifiableList(chartColumns_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          axisConfigs_ = java.util.Collections.unmodifiableList(axisConfigs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_ChartVisualization_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_ChartVisualization_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.ChartVisualization.class, EDoc.ChartVisualization.Builder.class);
    }

    public interface ChartColumnOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ChartVisualization.ChartColumn)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Answer column id on which the chart column is based.
       * TODO(Archit): Should we rename this to just id or be more explicit and
       * rename it to answer_column or answer_column_id?
       * </pre>
       *
       * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return Whether the columnId field is set.
       */
      boolean hasColumnId();
      /**
       * <pre>
       * Answer column id on which the chart column is based.
       * TODO(Archit): Should we rename this to just id or be more explicit and
       * rename it to answer_column or answer_column_id?
       * </pre>
       *
       * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return The columnId.
       */
      java.lang.String getColumnId();
      /**
       * <pre>
       * Answer column id on which the chart column is based.
       * TODO(Archit): Should we rename this to just id or be more explicit and
       * rename it to answer_column or answer_column_id?
       * </pre>
       *
       * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for columnId.
       */
      com.google.protobuf.ByteString
          getColumnIdBytes();

      /**
       * <pre>
       * Conditional formatting rules for displaying column's values in the chart.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
       * @return Whether the conditionalFormatting field is set.
       */
      boolean hasConditionalFormatting();
      /**
       * <pre>
       * Conditional formatting rules for displaying column's values in the chart.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
       * @return The conditionalFormatting.
       */
      EDoc.ConditionalFormattingProto getConditionalFormatting();
      /**
       * <pre>
       * Conditional formatting rules for displaying column's values in the chart.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
       */
      EDoc.ConditionalFormattingProtoOrBuilder getConditionalFormattingOrBuilder();

      /**
       * <pre>
       * &#64;clientState.columnProperties.&lt;columnId&gt;.dataLabels.
       * TODO(Jasmeet/Chetan): Is there a default value for this?
       * </pre>
       *
       * <code>optional bool show_data_labels = 3;</code>
       * @return Whether the showDataLabels field is set.
       */
      boolean hasShowDataLabels();
      /**
       * <pre>
       * &#64;clientState.columnProperties.&lt;columnId&gt;.dataLabels.
       * TODO(Jasmeet/Chetan): Is there a default value for this?
       * </pre>
       *
       * <code>optional bool show_data_labels = 3;</code>
       * @return The showDataLabels.
       */
      boolean getShowDataLabels();
    }
    /**
     * <pre>
     * Chart column with information on top of the answer column.
     * Trying to capture &#64;clientState.columnProperties map.
     * </pre>
     *
     * Protobuf type {@code ChartVisualization.ChartColumn}
     */
    public static final class ChartColumn extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:ChartVisualization.ChartColumn)
        ChartColumnOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ChartColumn.newBuilder() to construct.
      private ChartColumn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ChartColumn() {
        columnId_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ChartColumn();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ChartColumn(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                columnId_ = bs;
                break;
              }
              case 18: {
                EDoc.ConditionalFormattingProto.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) != 0)) {
                  subBuilder = conditionalFormatting_.toBuilder();
                }
                conditionalFormatting_ = input.readMessage(EDoc.ConditionalFormattingProto.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(conditionalFormatting_);
                  conditionalFormatting_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                showDataLabels_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ChartVisualization_ChartColumn_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ChartVisualization_ChartColumn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ChartVisualization.ChartColumn.class, EDoc.ChartVisualization.ChartColumn.Builder.class);
      }

      private int bitField0_;
      public static final int COLUMN_ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object columnId_;
      /**
       * <pre>
       * Answer column id on which the chart column is based.
       * TODO(Archit): Should we rename this to just id or be more explicit and
       * rename it to answer_column or answer_column_id?
       * </pre>
       *
       * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return Whether the columnId field is set.
       */
      @java.lang.Override
      public boolean hasColumnId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Answer column id on which the chart column is based.
       * TODO(Archit): Should we rename this to just id or be more explicit and
       * rename it to answer_column or answer_column_id?
       * </pre>
       *
       * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return The columnId.
       */
      @java.lang.Override
      public java.lang.String getColumnId() {
        java.lang.Object ref = columnId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            columnId_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Answer column id on which the chart column is based.
       * TODO(Archit): Should we rename this to just id or be more explicit and
       * rename it to answer_column or answer_column_id?
       * </pre>
       *
       * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for columnId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getColumnIdBytes() {
        java.lang.Object ref = columnId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          columnId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CONDITIONAL_FORMATTING_FIELD_NUMBER = 2;
      private EDoc.ConditionalFormattingProto conditionalFormatting_;
      /**
       * <pre>
       * Conditional formatting rules for displaying column's values in the chart.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
       * @return Whether the conditionalFormatting field is set.
       */
      @java.lang.Override
      public boolean hasConditionalFormatting() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Conditional formatting rules for displaying column's values in the chart.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
       * @return The conditionalFormatting.
       */
      @java.lang.Override
      public EDoc.ConditionalFormattingProto getConditionalFormatting() {
        return conditionalFormatting_ == null ? EDoc.ConditionalFormattingProto.getDefaultInstance() : conditionalFormatting_;
      }
      /**
       * <pre>
       * Conditional formatting rules for displaying column's values in the chart.
       * </pre>
       *
       * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
       */
      @java.lang.Override
      public EDoc.ConditionalFormattingProtoOrBuilder getConditionalFormattingOrBuilder() {
        return conditionalFormatting_ == null ? EDoc.ConditionalFormattingProto.getDefaultInstance() : conditionalFormatting_;
      }

      public static final int SHOW_DATA_LABELS_FIELD_NUMBER = 3;
      private boolean showDataLabels_;
      /**
       * <pre>
       * &#64;clientState.columnProperties.&lt;columnId&gt;.dataLabels.
       * TODO(Jasmeet/Chetan): Is there a default value for this?
       * </pre>
       *
       * <code>optional bool show_data_labels = 3;</code>
       * @return Whether the showDataLabels field is set.
       */
      @java.lang.Override
      public boolean hasShowDataLabels() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * &#64;clientState.columnProperties.&lt;columnId&gt;.dataLabels.
       * TODO(Jasmeet/Chetan): Is there a default value for this?
       * </pre>
       *
       * <code>optional bool show_data_labels = 3;</code>
       * @return The showDataLabels.
       */
      @java.lang.Override
      public boolean getShowDataLabels() {
        return showDataLabels_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, columnId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeMessage(2, getConditionalFormatting());
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeBool(3, showDataLabels_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, columnId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getConditionalFormatting());
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, showDataLabels_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.ChartVisualization.ChartColumn)) {
          return super.equals(obj);
        }
        EDoc.ChartVisualization.ChartColumn other = (EDoc.ChartVisualization.ChartColumn) obj;

        if (hasColumnId() != other.hasColumnId()) return false;
        if (hasColumnId()) {
          if (!getColumnId()
              .equals(other.getColumnId())) return false;
        }
        if (hasConditionalFormatting() != other.hasConditionalFormatting()) return false;
        if (hasConditionalFormatting()) {
          if (!getConditionalFormatting()
              .equals(other.getConditionalFormatting())) return false;
        }
        if (hasShowDataLabels() != other.hasShowDataLabels()) return false;
        if (hasShowDataLabels()) {
          if (getShowDataLabels()
              != other.getShowDataLabels()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasColumnId()) {
          hash = (37 * hash) + COLUMN_ID_FIELD_NUMBER;
          hash = (53 * hash) + getColumnId().hashCode();
        }
        if (hasConditionalFormatting()) {
          hash = (37 * hash) + CONDITIONAL_FORMATTING_FIELD_NUMBER;
          hash = (53 * hash) + getConditionalFormatting().hashCode();
        }
        if (hasShowDataLabels()) {
          hash = (37 * hash) + SHOW_DATA_LABELS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getShowDataLabels());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.ChartVisualization.ChartColumn parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ChartVisualization.ChartColumn parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ChartVisualization.ChartColumn parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ChartVisualization.ChartColumn parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ChartVisualization.ChartColumn parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ChartVisualization.ChartColumn parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ChartVisualization.ChartColumn parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ChartVisualization.ChartColumn parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ChartVisualization.ChartColumn parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.ChartVisualization.ChartColumn parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ChartVisualization.ChartColumn parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ChartVisualization.ChartColumn parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.ChartVisualization.ChartColumn prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Chart column with information on top of the answer column.
       * Trying to capture &#64;clientState.columnProperties map.
       * </pre>
       *
       * Protobuf type {@code ChartVisualization.ChartColumn}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ChartVisualization.ChartColumn)
          EDoc.ChartVisualization.ChartColumnOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_ChartVisualization_ChartColumn_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_ChartVisualization_ChartColumn_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.ChartVisualization.ChartColumn.class, EDoc.ChartVisualization.ChartColumn.Builder.class);
        }

        // Construct using EDoc.ChartVisualization.ChartColumn.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getConditionalFormattingFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          columnId_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          if (conditionalFormattingBuilder_ == null) {
            conditionalFormatting_ = null;
          } else {
            conditionalFormattingBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          showDataLabels_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_ChartVisualization_ChartColumn_descriptor;
        }

        @java.lang.Override
        public EDoc.ChartVisualization.ChartColumn getDefaultInstanceForType() {
          return EDoc.ChartVisualization.ChartColumn.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.ChartVisualization.ChartColumn build() {
          EDoc.ChartVisualization.ChartColumn result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.ChartVisualization.ChartColumn buildPartial() {
          EDoc.ChartVisualization.ChartColumn result = new EDoc.ChartVisualization.ChartColumn(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.columnId_ = columnId_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            if (conditionalFormattingBuilder_ == null) {
              result.conditionalFormatting_ = conditionalFormatting_;
            } else {
              result.conditionalFormatting_ = conditionalFormattingBuilder_.build();
            }
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.showDataLabels_ = showDataLabels_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.ChartVisualization.ChartColumn) {
            return mergeFrom((EDoc.ChartVisualization.ChartColumn)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.ChartVisualization.ChartColumn other) {
          if (other == EDoc.ChartVisualization.ChartColumn.getDefaultInstance()) return this;
          if (other.hasColumnId()) {
            bitField0_ |= 0x00000001;
            columnId_ = other.columnId_;
            onChanged();
          }
          if (other.hasConditionalFormatting()) {
            mergeConditionalFormatting(other.getConditionalFormatting());
          }
          if (other.hasShowDataLabels()) {
            setShowDataLabels(other.getShowDataLabels());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.ChartVisualization.ChartColumn parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.ChartVisualization.ChartColumn) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object columnId_ = "";
        /**
         * <pre>
         * Answer column id on which the chart column is based.
         * TODO(Archit): Should we rename this to just id or be more explicit and
         * rename it to answer_column or answer_column_id?
         * </pre>
         *
         * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
         * @return Whether the columnId field is set.
         */
        public boolean hasColumnId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Answer column id on which the chart column is based.
         * TODO(Archit): Should we rename this to just id or be more explicit and
         * rename it to answer_column or answer_column_id?
         * </pre>
         *
         * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
         * @return The columnId.
         */
        public java.lang.String getColumnId() {
          java.lang.Object ref = columnId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              columnId_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Answer column id on which the chart column is based.
         * TODO(Archit): Should we rename this to just id or be more explicit and
         * rename it to answer_column or answer_column_id?
         * </pre>
         *
         * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
         * @return The bytes for columnId.
         */
        public com.google.protobuf.ByteString
            getColumnIdBytes() {
          java.lang.Object ref = columnId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            columnId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Answer column id on which the chart column is based.
         * TODO(Archit): Should we rename this to just id or be more explicit and
         * rename it to answer_column or answer_column_id?
         * </pre>
         *
         * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
         * @param value The columnId to set.
         * @return This builder for chaining.
         */
        public Builder setColumnId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          columnId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Answer column id on which the chart column is based.
         * TODO(Archit): Should we rename this to just id or be more explicit and
         * rename it to answer_column or answer_column_id?
         * </pre>
         *
         * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearColumnId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          columnId_ = getDefaultInstance().getColumnId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Answer column id on which the chart column is based.
         * TODO(Archit): Should we rename this to just id or be more explicit and
         * rename it to answer_column or answer_column_id?
         * </pre>
         *
         * <code>optional string column_id = 1 [(.Annotation.compulsory) = true];</code>
         * @param value The bytes for columnId to set.
         * @return This builder for chaining.
         */
        public Builder setColumnIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          columnId_ = value;
          onChanged();
          return this;
        }

        private EDoc.ConditionalFormattingProto conditionalFormatting_;
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ConditionalFormattingProto, EDoc.ConditionalFormattingProto.Builder, EDoc.ConditionalFormattingProtoOrBuilder> conditionalFormattingBuilder_;
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the chart.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         * @return Whether the conditionalFormatting field is set.
         */
        public boolean hasConditionalFormatting() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the chart.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         * @return The conditionalFormatting.
         */
        public EDoc.ConditionalFormattingProto getConditionalFormatting() {
          if (conditionalFormattingBuilder_ == null) {
            return conditionalFormatting_ == null ? EDoc.ConditionalFormattingProto.getDefaultInstance() : conditionalFormatting_;
          } else {
            return conditionalFormattingBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the chart.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         */
        public Builder setConditionalFormatting(EDoc.ConditionalFormattingProto value) {
          if (conditionalFormattingBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            conditionalFormatting_ = value;
            onChanged();
          } else {
            conditionalFormattingBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the chart.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         */
        public Builder setConditionalFormatting(
            EDoc.ConditionalFormattingProto.Builder builderForValue) {
          if (conditionalFormattingBuilder_ == null) {
            conditionalFormatting_ = builderForValue.build();
            onChanged();
          } else {
            conditionalFormattingBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the chart.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         */
        public Builder mergeConditionalFormatting(EDoc.ConditionalFormattingProto value) {
          if (conditionalFormattingBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
                conditionalFormatting_ != null &&
                conditionalFormatting_ != EDoc.ConditionalFormattingProto.getDefaultInstance()) {
              conditionalFormatting_ =
                EDoc.ConditionalFormattingProto.newBuilder(conditionalFormatting_).mergeFrom(value).buildPartial();
            } else {
              conditionalFormatting_ = value;
            }
            onChanged();
          } else {
            conditionalFormattingBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the chart.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         */
        public Builder clearConditionalFormatting() {
          if (conditionalFormattingBuilder_ == null) {
            conditionalFormatting_ = null;
            onChanged();
          } else {
            conditionalFormattingBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the chart.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         */
        public EDoc.ConditionalFormattingProto.Builder getConditionalFormattingBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getConditionalFormattingFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the chart.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         */
        public EDoc.ConditionalFormattingProtoOrBuilder getConditionalFormattingOrBuilder() {
          if (conditionalFormattingBuilder_ != null) {
            return conditionalFormattingBuilder_.getMessageOrBuilder();
          } else {
            return conditionalFormatting_ == null ?
                EDoc.ConditionalFormattingProto.getDefaultInstance() : conditionalFormatting_;
          }
        }
        /**
         * <pre>
         * Conditional formatting rules for displaying column's values in the chart.
         * </pre>
         *
         * <code>optional .ConditionalFormattingProto conditional_formatting = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ConditionalFormattingProto, EDoc.ConditionalFormattingProto.Builder, EDoc.ConditionalFormattingProtoOrBuilder> 
            getConditionalFormattingFieldBuilder() {
          if (conditionalFormattingBuilder_ == null) {
            conditionalFormattingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                EDoc.ConditionalFormattingProto, EDoc.ConditionalFormattingProto.Builder, EDoc.ConditionalFormattingProtoOrBuilder>(
                    getConditionalFormatting(),
                    getParentForChildren(),
                    isClean());
            conditionalFormatting_ = null;
          }
          return conditionalFormattingBuilder_;
        }

        private boolean showDataLabels_ ;
        /**
         * <pre>
         * &#64;clientState.columnProperties.&lt;columnId&gt;.dataLabels.
         * TODO(Jasmeet/Chetan): Is there a default value for this?
         * </pre>
         *
         * <code>optional bool show_data_labels = 3;</code>
         * @return Whether the showDataLabels field is set.
         */
        @java.lang.Override
        public boolean hasShowDataLabels() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * &#64;clientState.columnProperties.&lt;columnId&gt;.dataLabels.
         * TODO(Jasmeet/Chetan): Is there a default value for this?
         * </pre>
         *
         * <code>optional bool show_data_labels = 3;</code>
         * @return The showDataLabels.
         */
        @java.lang.Override
        public boolean getShowDataLabels() {
          return showDataLabels_;
        }
        /**
         * <pre>
         * &#64;clientState.columnProperties.&lt;columnId&gt;.dataLabels.
         * TODO(Jasmeet/Chetan): Is there a default value for this?
         * </pre>
         *
         * <code>optional bool show_data_labels = 3;</code>
         * @param value The showDataLabels to set.
         * @return This builder for chaining.
         */
        public Builder setShowDataLabels(boolean value) {
          bitField0_ |= 0x00000004;
          showDataLabels_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * &#64;clientState.columnProperties.&lt;columnId&gt;.dataLabels.
         * TODO(Jasmeet/Chetan): Is there a default value for this?
         * </pre>
         *
         * <code>optional bool show_data_labels = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearShowDataLabels() {
          bitField0_ = (bitField0_ & ~0x00000004);
          showDataLabels_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:ChartVisualization.ChartColumn)
      }

      // @@protoc_insertion_point(class_scope:ChartVisualization.ChartColumn)
      private static final EDoc.ChartVisualization.ChartColumn DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.ChartVisualization.ChartColumn();
      }

      public static EDoc.ChartVisualization.ChartColumn getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartColumn>
          PARSER = new com.google.protobuf.AbstractParser<ChartColumn>() {
        @java.lang.Override
        public ChartColumn parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartColumn(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ChartColumn> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ChartColumn> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.ChartVisualization.ChartColumn getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AxisConfigOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ChartVisualization.AxisConfig)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * X-axis/series columns of the chart.
       * </pre>
       *
       * <code>repeated string x = 1;</code>
       * @return A list containing the x.
       */
      java.util.List<java.lang.String>
          getXList();
      /**
       * <pre>
       * X-axis/series columns of the chart.
       * </pre>
       *
       * <code>repeated string x = 1;</code>
       * @return The count of x.
       */
      int getXCount();
      /**
       * <pre>
       * X-axis/series columns of the chart.
       * </pre>
       *
       * <code>repeated string x = 1;</code>
       * @param index The index of the element to return.
       * @return The x at the given index.
       */
      java.lang.String getX(int index);
      /**
       * <pre>
       * X-axis/series columns of the chart.
       * </pre>
       *
       * <code>repeated string x = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the x at the given index.
       */
      com.google.protobuf.ByteString
          getXBytes(int index);

      /**
       * <pre>
       * Y-axis/values columns of the chart.
       * </pre>
       *
       * <code>repeated string y = 2;</code>
       * @return A list containing the y.
       */
      java.util.List<java.lang.String>
          getYList();
      /**
       * <pre>
       * Y-axis/values columns of the chart.
       * </pre>
       *
       * <code>repeated string y = 2;</code>
       * @return The count of y.
       */
      int getYCount();
      /**
       * <pre>
       * Y-axis/values columns of the chart.
       * </pre>
       *
       * <code>repeated string y = 2;</code>
       * @param index The index of the element to return.
       * @return The y at the given index.
       */
      java.lang.String getY(int index);
      /**
       * <pre>
       * Y-axis/values columns of the chart.
       * </pre>
       *
       * <code>repeated string y = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the y at the given index.
       */
      com.google.protobuf.ByteString
          getYBytes(int index);

      /**
       * <pre>
       * Z-axis/legend/category columns of the chart.
       * </pre>
       *
       * <code>repeated string color = 3;</code>
       * @return A list containing the color.
       */
      java.util.List<java.lang.String>
          getColorList();
      /**
       * <pre>
       * Z-axis/legend/category columns of the chart.
       * </pre>
       *
       * <code>repeated string color = 3;</code>
       * @return The count of color.
       */
      int getColorCount();
      /**
       * <pre>
       * Z-axis/legend/category columns of the chart.
       * </pre>
       *
       * <code>repeated string color = 3;</code>
       * @param index The index of the element to return.
       * @return The color at the given index.
       */
      java.lang.String getColor(int index);
      /**
       * <pre>
       * Z-axis/legend/category columns of the chart.
       * </pre>
       *
       * <code>repeated string color = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the color at the given index.
       */
      com.google.protobuf.ByteString
          getColorBytes(int index);

      /**
       * <pre>
       * R-axis/Radial column of the chart.
       * </pre>
       *
       * <code>optional string size = 4;</code>
       * @return Whether the size field is set.
       */
      boolean hasSize();
      /**
       * <pre>
       * R-axis/Radial column of the chart.
       * </pre>
       *
       * <code>optional string size = 4;</code>
       * @return The size.
       */
      java.lang.String getSize();
      /**
       * <pre>
       * R-axis/Radial column of the chart.
       * </pre>
       *
       * <code>optional string size = 4;</code>
       * @return The bytes for size.
       */
      com.google.protobuf.ByteString
          getSizeBytes();

      /**
       * <pre>
       * Non-color legend columns of the chart.
       * </pre>
       *
       * <code>repeated string category = 6;</code>
       * @return A list containing the category.
       */
      java.util.List<java.lang.String>
          getCategoryList();
      /**
       * <pre>
       * Non-color legend columns of the chart.
       * </pre>
       *
       * <code>repeated string category = 6;</code>
       * @return The count of category.
       */
      int getCategoryCount();
      /**
       * <pre>
       * Non-color legend columns of the chart.
       * </pre>
       *
       * <code>repeated string category = 6;</code>
       * @param index The index of the element to return.
       * @return The category at the given index.
       */
      java.lang.String getCategory(int index);
      /**
       * <pre>
       * Non-color legend columns of the chart.
       * </pre>
       *
       * <code>repeated string category = 6;</code>
       * @param index The index of the value to return.
       * @return The bytes of the category at the given index.
       */
      com.google.protobuf.ByteString
          getCategoryBytes(int index);

      /**
       * <pre>
       * User sorted columns of the chart.
       * </pre>
       *
       * <code>repeated string sort = 7;</code>
       * @return A list containing the sort.
       */
      java.util.List<java.lang.String>
          getSortList();
      /**
       * <pre>
       * User sorted columns of the chart.
       * </pre>
       *
       * <code>repeated string sort = 7;</code>
       * @return The count of sort.
       */
      int getSortCount();
      /**
       * <pre>
       * User sorted columns of the chart.
       * </pre>
       *
       * <code>repeated string sort = 7;</code>
       * @param index The index of the element to return.
       * @return The sort at the given index.
       */
      java.lang.String getSort(int index);
      /**
       * <pre>
       * User sorted columns of the chart.
       * </pre>
       *
       * <code>repeated string sort = 7;</code>
       * @param index The index of the value to return.
       * @return The bytes of the sort at the given index.
       */
      com.google.protobuf.ByteString
          getSortBytes(int index);

      /**
       * <pre>
       * Deprecated.
       * Hidden columns of the chart.
       * </pre>
       *
       * <code>repeated string hidden = 5;</code>
       * @return A list containing the hidden.
       */
      java.util.List<java.lang.String>
          getHiddenList();
      /**
       * <pre>
       * Deprecated.
       * Hidden columns of the chart.
       * </pre>
       *
       * <code>repeated string hidden = 5;</code>
       * @return The count of hidden.
       */
      int getHiddenCount();
      /**
       * <pre>
       * Deprecated.
       * Hidden columns of the chart.
       * </pre>
       *
       * <code>repeated string hidden = 5;</code>
       * @param index The index of the element to return.
       * @return The hidden at the given index.
       */
      java.lang.String getHidden(int index);
      /**
       * <pre>
       * Deprecated.
       * Hidden columns of the chart.
       * </pre>
       *
       * <code>repeated string hidden = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the hidden at the given index.
       */
      com.google.protobuf.ByteString
          getHiddenBytes(int index);
    }
    /**
     * <pre>
     * Axis config represents what columns lie on what axis on the chart.
     * - Charts, in general plot y axis column values over x axis column values.
     * - Additionally, y axis values can be categorized over color columns while plotting (legend).
     * - If we don't want the legend to be colored coded, for ex in SCATTER chart,
     * then y axis values are categorized over category columns while plotting.
     * - Some charts like the bubble chart, also have a notion of a radial column, where value of
     * the measure represent the size of the bubble.
     * - User sorted measure columns are plotted on the sort columns.
     * TODO(Archit): Should we re-use existing AxisConfig proto?
     * </pre>
     *
     * Protobuf type {@code ChartVisualization.AxisConfig}
     */
    public static final class AxisConfig extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:ChartVisualization.AxisConfig)
        AxisConfigOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AxisConfig.newBuilder() to construct.
      private AxisConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AxisConfig() {
        x_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        y_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        color_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        size_ = "";
        category_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        sort_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        hidden_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AxisConfig();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AxisConfig(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  x_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000001;
                }
                x_.add(bs);
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  y_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000002;
                }
                y_.add(bs);
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                  color_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000004;
                }
                color_.add(bs);
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                size_ = bs;
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                  hidden_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000040;
                }
                hidden_.add(bs);
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                  category_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000010;
                }
                category_.add(bs);
                break;
              }
              case 58: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                  sort_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000020;
                }
                sort_.add(bs);
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            x_ = x_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            y_ = y_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000004) != 0)) {
            color_ = color_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000040) != 0)) {
            hidden_ = hidden_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000010) != 0)) {
            category_ = category_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000020) != 0)) {
            sort_ = sort_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ChartVisualization_AxisConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ChartVisualization_AxisConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ChartVisualization.AxisConfig.class, EDoc.ChartVisualization.AxisConfig.Builder.class);
      }

      private int bitField0_;
      public static final int X_FIELD_NUMBER = 1;
      private com.google.protobuf.LazyStringList x_;
      /**
       * <pre>
       * X-axis/series columns of the chart.
       * </pre>
       *
       * <code>repeated string x = 1;</code>
       * @return A list containing the x.
       */
      public com.google.protobuf.ProtocolStringList
          getXList() {
        return x_;
      }
      /**
       * <pre>
       * X-axis/series columns of the chart.
       * </pre>
       *
       * <code>repeated string x = 1;</code>
       * @return The count of x.
       */
      public int getXCount() {
        return x_.size();
      }
      /**
       * <pre>
       * X-axis/series columns of the chart.
       * </pre>
       *
       * <code>repeated string x = 1;</code>
       * @param index The index of the element to return.
       * @return The x at the given index.
       */
      public java.lang.String getX(int index) {
        return x_.get(index);
      }
      /**
       * <pre>
       * X-axis/series columns of the chart.
       * </pre>
       *
       * <code>repeated string x = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the x at the given index.
       */
      public com.google.protobuf.ByteString
          getXBytes(int index) {
        return x_.getByteString(index);
      }

      public static final int Y_FIELD_NUMBER = 2;
      private com.google.protobuf.LazyStringList y_;
      /**
       * <pre>
       * Y-axis/values columns of the chart.
       * </pre>
       *
       * <code>repeated string y = 2;</code>
       * @return A list containing the y.
       */
      public com.google.protobuf.ProtocolStringList
          getYList() {
        return y_;
      }
      /**
       * <pre>
       * Y-axis/values columns of the chart.
       * </pre>
       *
       * <code>repeated string y = 2;</code>
       * @return The count of y.
       */
      public int getYCount() {
        return y_.size();
      }
      /**
       * <pre>
       * Y-axis/values columns of the chart.
       * </pre>
       *
       * <code>repeated string y = 2;</code>
       * @param index The index of the element to return.
       * @return The y at the given index.
       */
      public java.lang.String getY(int index) {
        return y_.get(index);
      }
      /**
       * <pre>
       * Y-axis/values columns of the chart.
       * </pre>
       *
       * <code>repeated string y = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the y at the given index.
       */
      public com.google.protobuf.ByteString
          getYBytes(int index) {
        return y_.getByteString(index);
      }

      public static final int COLOR_FIELD_NUMBER = 3;
      private com.google.protobuf.LazyStringList color_;
      /**
       * <pre>
       * Z-axis/legend/category columns of the chart.
       * </pre>
       *
       * <code>repeated string color = 3;</code>
       * @return A list containing the color.
       */
      public com.google.protobuf.ProtocolStringList
          getColorList() {
        return color_;
      }
      /**
       * <pre>
       * Z-axis/legend/category columns of the chart.
       * </pre>
       *
       * <code>repeated string color = 3;</code>
       * @return The count of color.
       */
      public int getColorCount() {
        return color_.size();
      }
      /**
       * <pre>
       * Z-axis/legend/category columns of the chart.
       * </pre>
       *
       * <code>repeated string color = 3;</code>
       * @param index The index of the element to return.
       * @return The color at the given index.
       */
      public java.lang.String getColor(int index) {
        return color_.get(index);
      }
      /**
       * <pre>
       * Z-axis/legend/category columns of the chart.
       * </pre>
       *
       * <code>repeated string color = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the color at the given index.
       */
      public com.google.protobuf.ByteString
          getColorBytes(int index) {
        return color_.getByteString(index);
      }

      public static final int SIZE_FIELD_NUMBER = 4;
      private volatile java.lang.Object size_;
      /**
       * <pre>
       * R-axis/Radial column of the chart.
       * </pre>
       *
       * <code>optional string size = 4;</code>
       * @return Whether the size field is set.
       */
      @java.lang.Override
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * R-axis/Radial column of the chart.
       * </pre>
       *
       * <code>optional string size = 4;</code>
       * @return The size.
       */
      @java.lang.Override
      public java.lang.String getSize() {
        java.lang.Object ref = size_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            size_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * R-axis/Radial column of the chart.
       * </pre>
       *
       * <code>optional string size = 4;</code>
       * @return The bytes for size.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSizeBytes() {
        java.lang.Object ref = size_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          size_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CATEGORY_FIELD_NUMBER = 6;
      private com.google.protobuf.LazyStringList category_;
      /**
       * <pre>
       * Non-color legend columns of the chart.
       * </pre>
       *
       * <code>repeated string category = 6;</code>
       * @return A list containing the category.
       */
      public com.google.protobuf.ProtocolStringList
          getCategoryList() {
        return category_;
      }
      /**
       * <pre>
       * Non-color legend columns of the chart.
       * </pre>
       *
       * <code>repeated string category = 6;</code>
       * @return The count of category.
       */
      public int getCategoryCount() {
        return category_.size();
      }
      /**
       * <pre>
       * Non-color legend columns of the chart.
       * </pre>
       *
       * <code>repeated string category = 6;</code>
       * @param index The index of the element to return.
       * @return The category at the given index.
       */
      public java.lang.String getCategory(int index) {
        return category_.get(index);
      }
      /**
       * <pre>
       * Non-color legend columns of the chart.
       * </pre>
       *
       * <code>repeated string category = 6;</code>
       * @param index The index of the value to return.
       * @return The bytes of the category at the given index.
       */
      public com.google.protobuf.ByteString
          getCategoryBytes(int index) {
        return category_.getByteString(index);
      }

      public static final int SORT_FIELD_NUMBER = 7;
      private com.google.protobuf.LazyStringList sort_;
      /**
       * <pre>
       * User sorted columns of the chart.
       * </pre>
       *
       * <code>repeated string sort = 7;</code>
       * @return A list containing the sort.
       */
      public com.google.protobuf.ProtocolStringList
          getSortList() {
        return sort_;
      }
      /**
       * <pre>
       * User sorted columns of the chart.
       * </pre>
       *
       * <code>repeated string sort = 7;</code>
       * @return The count of sort.
       */
      public int getSortCount() {
        return sort_.size();
      }
      /**
       * <pre>
       * User sorted columns of the chart.
       * </pre>
       *
       * <code>repeated string sort = 7;</code>
       * @param index The index of the element to return.
       * @return The sort at the given index.
       */
      public java.lang.String getSort(int index) {
        return sort_.get(index);
      }
      /**
       * <pre>
       * User sorted columns of the chart.
       * </pre>
       *
       * <code>repeated string sort = 7;</code>
       * @param index The index of the value to return.
       * @return The bytes of the sort at the given index.
       */
      public com.google.protobuf.ByteString
          getSortBytes(int index) {
        return sort_.getByteString(index);
      }

      public static final int HIDDEN_FIELD_NUMBER = 5;
      private com.google.protobuf.LazyStringList hidden_;
      /**
       * <pre>
       * Deprecated.
       * Hidden columns of the chart.
       * </pre>
       *
       * <code>repeated string hidden = 5;</code>
       * @return A list containing the hidden.
       */
      public com.google.protobuf.ProtocolStringList
          getHiddenList() {
        return hidden_;
      }
      /**
       * <pre>
       * Deprecated.
       * Hidden columns of the chart.
       * </pre>
       *
       * <code>repeated string hidden = 5;</code>
       * @return The count of hidden.
       */
      public int getHiddenCount() {
        return hidden_.size();
      }
      /**
       * <pre>
       * Deprecated.
       * Hidden columns of the chart.
       * </pre>
       *
       * <code>repeated string hidden = 5;</code>
       * @param index The index of the element to return.
       * @return The hidden at the given index.
       */
      public java.lang.String getHidden(int index) {
        return hidden_.get(index);
      }
      /**
       * <pre>
       * Deprecated.
       * Hidden columns of the chart.
       * </pre>
       *
       * <code>repeated string hidden = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the hidden at the given index.
       */
      public com.google.protobuf.ByteString
          getHiddenBytes(int index) {
        return hidden_.getByteString(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < x_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, x_.getRaw(i));
        }
        for (int i = 0; i < y_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, y_.getRaw(i));
        }
        for (int i = 0; i < color_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, color_.getRaw(i));
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, size_);
        }
        for (int i = 0; i < hidden_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, hidden_.getRaw(i));
        }
        for (int i = 0; i < category_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 6, category_.getRaw(i));
        }
        for (int i = 0; i < sort_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 7, sort_.getRaw(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < x_.size(); i++) {
            dataSize += computeStringSizeNoTag(x_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getXList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < y_.size(); i++) {
            dataSize += computeStringSizeNoTag(y_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getYList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < color_.size(); i++) {
            dataSize += computeStringSizeNoTag(color_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getColorList().size();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, size_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < hidden_.size(); i++) {
            dataSize += computeStringSizeNoTag(hidden_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getHiddenList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < category_.size(); i++) {
            dataSize += computeStringSizeNoTag(category_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getCategoryList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < sort_.size(); i++) {
            dataSize += computeStringSizeNoTag(sort_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getSortList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.ChartVisualization.AxisConfig)) {
          return super.equals(obj);
        }
        EDoc.ChartVisualization.AxisConfig other = (EDoc.ChartVisualization.AxisConfig) obj;

        if (!getXList()
            .equals(other.getXList())) return false;
        if (!getYList()
            .equals(other.getYList())) return false;
        if (!getColorList()
            .equals(other.getColorList())) return false;
        if (hasSize() != other.hasSize()) return false;
        if (hasSize()) {
          if (!getSize()
              .equals(other.getSize())) return false;
        }
        if (!getCategoryList()
            .equals(other.getCategoryList())) return false;
        if (!getSortList()
            .equals(other.getSortList())) return false;
        if (!getHiddenList()
            .equals(other.getHiddenList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getXCount() > 0) {
          hash = (37 * hash) + X_FIELD_NUMBER;
          hash = (53 * hash) + getXList().hashCode();
        }
        if (getYCount() > 0) {
          hash = (37 * hash) + Y_FIELD_NUMBER;
          hash = (53 * hash) + getYList().hashCode();
        }
        if (getColorCount() > 0) {
          hash = (37 * hash) + COLOR_FIELD_NUMBER;
          hash = (53 * hash) + getColorList().hashCode();
        }
        if (hasSize()) {
          hash = (37 * hash) + SIZE_FIELD_NUMBER;
          hash = (53 * hash) + getSize().hashCode();
        }
        if (getCategoryCount() > 0) {
          hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
          hash = (53 * hash) + getCategoryList().hashCode();
        }
        if (getSortCount() > 0) {
          hash = (37 * hash) + SORT_FIELD_NUMBER;
          hash = (53 * hash) + getSortList().hashCode();
        }
        if (getHiddenCount() > 0) {
          hash = (37 * hash) + HIDDEN_FIELD_NUMBER;
          hash = (53 * hash) + getHiddenList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.ChartVisualization.AxisConfig parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ChartVisualization.AxisConfig parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ChartVisualization.AxisConfig parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ChartVisualization.AxisConfig parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ChartVisualization.AxisConfig parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.ChartVisualization.AxisConfig parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.ChartVisualization.AxisConfig parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ChartVisualization.AxisConfig parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ChartVisualization.AxisConfig parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.ChartVisualization.AxisConfig parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.ChartVisualization.AxisConfig parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.ChartVisualization.AxisConfig parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.ChartVisualization.AxisConfig prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Axis config represents what columns lie on what axis on the chart.
       * - Charts, in general plot y axis column values over x axis column values.
       * - Additionally, y axis values can be categorized over color columns while plotting (legend).
       * - If we don't want the legend to be colored coded, for ex in SCATTER chart,
       * then y axis values are categorized over category columns while plotting.
       * - Some charts like the bubble chart, also have a notion of a radial column, where value of
       * the measure represent the size of the bubble.
       * - User sorted measure columns are plotted on the sort columns.
       * TODO(Archit): Should we re-use existing AxisConfig proto?
       * </pre>
       *
       * Protobuf type {@code ChartVisualization.AxisConfig}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ChartVisualization.AxisConfig)
          EDoc.ChartVisualization.AxisConfigOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_ChartVisualization_AxisConfig_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_ChartVisualization_AxisConfig_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.ChartVisualization.AxisConfig.class, EDoc.ChartVisualization.AxisConfig.Builder.class);
        }

        // Construct using EDoc.ChartVisualization.AxisConfig.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          x_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          y_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          color_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          size_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          category_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000010);
          sort_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000020);
          hidden_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_ChartVisualization_AxisConfig_descriptor;
        }

        @java.lang.Override
        public EDoc.ChartVisualization.AxisConfig getDefaultInstanceForType() {
          return EDoc.ChartVisualization.AxisConfig.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.ChartVisualization.AxisConfig build() {
          EDoc.ChartVisualization.AxisConfig result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.ChartVisualization.AxisConfig buildPartial() {
          EDoc.ChartVisualization.AxisConfig result = new EDoc.ChartVisualization.AxisConfig(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            x_ = x_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.x_ = x_;
          if (((bitField0_ & 0x00000002) != 0)) {
            y_ = y_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.y_ = y_;
          if (((bitField0_ & 0x00000004) != 0)) {
            color_ = color_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.color_ = color_;
          if (((from_bitField0_ & 0x00000008) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.size_ = size_;
          if (((bitField0_ & 0x00000010) != 0)) {
            category_ = category_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.category_ = category_;
          if (((bitField0_ & 0x00000020) != 0)) {
            sort_ = sort_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.sort_ = sort_;
          if (((bitField0_ & 0x00000040) != 0)) {
            hidden_ = hidden_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.hidden_ = hidden_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.ChartVisualization.AxisConfig) {
            return mergeFrom((EDoc.ChartVisualization.AxisConfig)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.ChartVisualization.AxisConfig other) {
          if (other == EDoc.ChartVisualization.AxisConfig.getDefaultInstance()) return this;
          if (!other.x_.isEmpty()) {
            if (x_.isEmpty()) {
              x_ = other.x_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureXIsMutable();
              x_.addAll(other.x_);
            }
            onChanged();
          }
          if (!other.y_.isEmpty()) {
            if (y_.isEmpty()) {
              y_ = other.y_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureYIsMutable();
              y_.addAll(other.y_);
            }
            onChanged();
          }
          if (!other.color_.isEmpty()) {
            if (color_.isEmpty()) {
              color_ = other.color_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureColorIsMutable();
              color_.addAll(other.color_);
            }
            onChanged();
          }
          if (other.hasSize()) {
            bitField0_ |= 0x00000008;
            size_ = other.size_;
            onChanged();
          }
          if (!other.category_.isEmpty()) {
            if (category_.isEmpty()) {
              category_ = other.category_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCategoryIsMutable();
              category_.addAll(other.category_);
            }
            onChanged();
          }
          if (!other.sort_.isEmpty()) {
            if (sort_.isEmpty()) {
              sort_ = other.sort_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureSortIsMutable();
              sort_.addAll(other.sort_);
            }
            onChanged();
          }
          if (!other.hidden_.isEmpty()) {
            if (hidden_.isEmpty()) {
              hidden_ = other.hidden_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureHiddenIsMutable();
              hidden_.addAll(other.hidden_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.ChartVisualization.AxisConfig parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.ChartVisualization.AxisConfig) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.LazyStringList x_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureXIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            x_ = new com.google.protobuf.LazyStringArrayList(x_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <pre>
         * X-axis/series columns of the chart.
         * </pre>
         *
         * <code>repeated string x = 1;</code>
         * @return A list containing the x.
         */
        public com.google.protobuf.ProtocolStringList
            getXList() {
          return x_.getUnmodifiableView();
        }
        /**
         * <pre>
         * X-axis/series columns of the chart.
         * </pre>
         *
         * <code>repeated string x = 1;</code>
         * @return The count of x.
         */
        public int getXCount() {
          return x_.size();
        }
        /**
         * <pre>
         * X-axis/series columns of the chart.
         * </pre>
         *
         * <code>repeated string x = 1;</code>
         * @param index The index of the element to return.
         * @return The x at the given index.
         */
        public java.lang.String getX(int index) {
          return x_.get(index);
        }
        /**
         * <pre>
         * X-axis/series columns of the chart.
         * </pre>
         *
         * <code>repeated string x = 1;</code>
         * @param index The index of the value to return.
         * @return The bytes of the x at the given index.
         */
        public com.google.protobuf.ByteString
            getXBytes(int index) {
          return x_.getByteString(index);
        }
        /**
         * <pre>
         * X-axis/series columns of the chart.
         * </pre>
         *
         * <code>repeated string x = 1;</code>
         * @param index The index to set the value at.
         * @param value The x to set.
         * @return This builder for chaining.
         */
        public Builder setX(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureXIsMutable();
          x_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * X-axis/series columns of the chart.
         * </pre>
         *
         * <code>repeated string x = 1;</code>
         * @param value The x to add.
         * @return This builder for chaining.
         */
        public Builder addX(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureXIsMutable();
          x_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * X-axis/series columns of the chart.
         * </pre>
         *
         * <code>repeated string x = 1;</code>
         * @param values The x to add.
         * @return This builder for chaining.
         */
        public Builder addAllX(
            java.lang.Iterable<java.lang.String> values) {
          ensureXIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, x_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * X-axis/series columns of the chart.
         * </pre>
         *
         * <code>repeated string x = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearX() {
          x_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * X-axis/series columns of the chart.
         * </pre>
         *
         * <code>repeated string x = 1;</code>
         * @param value The bytes of the x to add.
         * @return This builder for chaining.
         */
        public Builder addXBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureXIsMutable();
          x_.add(value);
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList y_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureYIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            y_ = new com.google.protobuf.LazyStringArrayList(y_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <pre>
         * Y-axis/values columns of the chart.
         * </pre>
         *
         * <code>repeated string y = 2;</code>
         * @return A list containing the y.
         */
        public com.google.protobuf.ProtocolStringList
            getYList() {
          return y_.getUnmodifiableView();
        }
        /**
         * <pre>
         * Y-axis/values columns of the chart.
         * </pre>
         *
         * <code>repeated string y = 2;</code>
         * @return The count of y.
         */
        public int getYCount() {
          return y_.size();
        }
        /**
         * <pre>
         * Y-axis/values columns of the chart.
         * </pre>
         *
         * <code>repeated string y = 2;</code>
         * @param index The index of the element to return.
         * @return The y at the given index.
         */
        public java.lang.String getY(int index) {
          return y_.get(index);
        }
        /**
         * <pre>
         * Y-axis/values columns of the chart.
         * </pre>
         *
         * <code>repeated string y = 2;</code>
         * @param index The index of the value to return.
         * @return The bytes of the y at the given index.
         */
        public com.google.protobuf.ByteString
            getYBytes(int index) {
          return y_.getByteString(index);
        }
        /**
         * <pre>
         * Y-axis/values columns of the chart.
         * </pre>
         *
         * <code>repeated string y = 2;</code>
         * @param index The index to set the value at.
         * @param value The y to set.
         * @return This builder for chaining.
         */
        public Builder setY(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureYIsMutable();
          y_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Y-axis/values columns of the chart.
         * </pre>
         *
         * <code>repeated string y = 2;</code>
         * @param value The y to add.
         * @return This builder for chaining.
         */
        public Builder addY(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureYIsMutable();
          y_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Y-axis/values columns of the chart.
         * </pre>
         *
         * <code>repeated string y = 2;</code>
         * @param values The y to add.
         * @return This builder for chaining.
         */
        public Builder addAllY(
            java.lang.Iterable<java.lang.String> values) {
          ensureYIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, y_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Y-axis/values columns of the chart.
         * </pre>
         *
         * <code>repeated string y = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearY() {
          y_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Y-axis/values columns of the chart.
         * </pre>
         *
         * <code>repeated string y = 2;</code>
         * @param value The bytes of the y to add.
         * @return This builder for chaining.
         */
        public Builder addYBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureYIsMutable();
          y_.add(value);
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList color_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureColorIsMutable() {
          if (!((bitField0_ & 0x00000004) != 0)) {
            color_ = new com.google.protobuf.LazyStringArrayList(color_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <pre>
         * Z-axis/legend/category columns of the chart.
         * </pre>
         *
         * <code>repeated string color = 3;</code>
         * @return A list containing the color.
         */
        public com.google.protobuf.ProtocolStringList
            getColorList() {
          return color_.getUnmodifiableView();
        }
        /**
         * <pre>
         * Z-axis/legend/category columns of the chart.
         * </pre>
         *
         * <code>repeated string color = 3;</code>
         * @return The count of color.
         */
        public int getColorCount() {
          return color_.size();
        }
        /**
         * <pre>
         * Z-axis/legend/category columns of the chart.
         * </pre>
         *
         * <code>repeated string color = 3;</code>
         * @param index The index of the element to return.
         * @return The color at the given index.
         */
        public java.lang.String getColor(int index) {
          return color_.get(index);
        }
        /**
         * <pre>
         * Z-axis/legend/category columns of the chart.
         * </pre>
         *
         * <code>repeated string color = 3;</code>
         * @param index The index of the value to return.
         * @return The bytes of the color at the given index.
         */
        public com.google.protobuf.ByteString
            getColorBytes(int index) {
          return color_.getByteString(index);
        }
        /**
         * <pre>
         * Z-axis/legend/category columns of the chart.
         * </pre>
         *
         * <code>repeated string color = 3;</code>
         * @param index The index to set the value at.
         * @param value The color to set.
         * @return This builder for chaining.
         */
        public Builder setColor(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureColorIsMutable();
          color_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Z-axis/legend/category columns of the chart.
         * </pre>
         *
         * <code>repeated string color = 3;</code>
         * @param value The color to add.
         * @return This builder for chaining.
         */
        public Builder addColor(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureColorIsMutable();
          color_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Z-axis/legend/category columns of the chart.
         * </pre>
         *
         * <code>repeated string color = 3;</code>
         * @param values The color to add.
         * @return This builder for chaining.
         */
        public Builder addAllColor(
            java.lang.Iterable<java.lang.String> values) {
          ensureColorIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, color_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Z-axis/legend/category columns of the chart.
         * </pre>
         *
         * <code>repeated string color = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearColor() {
          color_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Z-axis/legend/category columns of the chart.
         * </pre>
         *
         * <code>repeated string color = 3;</code>
         * @param value The bytes of the color to add.
         * @return This builder for chaining.
         */
        public Builder addColorBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureColorIsMutable();
          color_.add(value);
          onChanged();
          return this;
        }

        private java.lang.Object size_ = "";
        /**
         * <pre>
         * R-axis/Radial column of the chart.
         * </pre>
         *
         * <code>optional string size = 4;</code>
         * @return Whether the size field is set.
         */
        public boolean hasSize() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * R-axis/Radial column of the chart.
         * </pre>
         *
         * <code>optional string size = 4;</code>
         * @return The size.
         */
        public java.lang.String getSize() {
          java.lang.Object ref = size_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              size_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * R-axis/Radial column of the chart.
         * </pre>
         *
         * <code>optional string size = 4;</code>
         * @return The bytes for size.
         */
        public com.google.protobuf.ByteString
            getSizeBytes() {
          java.lang.Object ref = size_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            size_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * R-axis/Radial column of the chart.
         * </pre>
         *
         * <code>optional string size = 4;</code>
         * @param value The size to set.
         * @return This builder for chaining.
         */
        public Builder setSize(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          size_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * R-axis/Radial column of the chart.
         * </pre>
         *
         * <code>optional string size = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearSize() {
          bitField0_ = (bitField0_ & ~0x00000008);
          size_ = getDefaultInstance().getSize();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * R-axis/Radial column of the chart.
         * </pre>
         *
         * <code>optional string size = 4;</code>
         * @param value The bytes for size to set.
         * @return This builder for chaining.
         */
        public Builder setSizeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          size_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList category_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureCategoryIsMutable() {
          if (!((bitField0_ & 0x00000010) != 0)) {
            category_ = new com.google.protobuf.LazyStringArrayList(category_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <pre>
         * Non-color legend columns of the chart.
         * </pre>
         *
         * <code>repeated string category = 6;</code>
         * @return A list containing the category.
         */
        public com.google.protobuf.ProtocolStringList
            getCategoryList() {
          return category_.getUnmodifiableView();
        }
        /**
         * <pre>
         * Non-color legend columns of the chart.
         * </pre>
         *
         * <code>repeated string category = 6;</code>
         * @return The count of category.
         */
        public int getCategoryCount() {
          return category_.size();
        }
        /**
         * <pre>
         * Non-color legend columns of the chart.
         * </pre>
         *
         * <code>repeated string category = 6;</code>
         * @param index The index of the element to return.
         * @return The category at the given index.
         */
        public java.lang.String getCategory(int index) {
          return category_.get(index);
        }
        /**
         * <pre>
         * Non-color legend columns of the chart.
         * </pre>
         *
         * <code>repeated string category = 6;</code>
         * @param index The index of the value to return.
         * @return The bytes of the category at the given index.
         */
        public com.google.protobuf.ByteString
            getCategoryBytes(int index) {
          return category_.getByteString(index);
        }
        /**
         * <pre>
         * Non-color legend columns of the chart.
         * </pre>
         *
         * <code>repeated string category = 6;</code>
         * @param index The index to set the value at.
         * @param value The category to set.
         * @return This builder for chaining.
         */
        public Builder setCategory(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoryIsMutable();
          category_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Non-color legend columns of the chart.
         * </pre>
         *
         * <code>repeated string category = 6;</code>
         * @param value The category to add.
         * @return This builder for chaining.
         */
        public Builder addCategory(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoryIsMutable();
          category_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Non-color legend columns of the chart.
         * </pre>
         *
         * <code>repeated string category = 6;</code>
         * @param values The category to add.
         * @return This builder for chaining.
         */
        public Builder addAllCategory(
            java.lang.Iterable<java.lang.String> values) {
          ensureCategoryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, category_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Non-color legend columns of the chart.
         * </pre>
         *
         * <code>repeated string category = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearCategory() {
          category_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Non-color legend columns of the chart.
         * </pre>
         *
         * <code>repeated string category = 6;</code>
         * @param value The bytes of the category to add.
         * @return This builder for chaining.
         */
        public Builder addCategoryBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoryIsMutable();
          category_.add(value);
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList sort_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureSortIsMutable() {
          if (!((bitField0_ & 0x00000020) != 0)) {
            sort_ = new com.google.protobuf.LazyStringArrayList(sort_);
            bitField0_ |= 0x00000020;
           }
        }
        /**
         * <pre>
         * User sorted columns of the chart.
         * </pre>
         *
         * <code>repeated string sort = 7;</code>
         * @return A list containing the sort.
         */
        public com.google.protobuf.ProtocolStringList
            getSortList() {
          return sort_.getUnmodifiableView();
        }
        /**
         * <pre>
         * User sorted columns of the chart.
         * </pre>
         *
         * <code>repeated string sort = 7;</code>
         * @return The count of sort.
         */
        public int getSortCount() {
          return sort_.size();
        }
        /**
         * <pre>
         * User sorted columns of the chart.
         * </pre>
         *
         * <code>repeated string sort = 7;</code>
         * @param index The index of the element to return.
         * @return The sort at the given index.
         */
        public java.lang.String getSort(int index) {
          return sort_.get(index);
        }
        /**
         * <pre>
         * User sorted columns of the chart.
         * </pre>
         *
         * <code>repeated string sort = 7;</code>
         * @param index The index of the value to return.
         * @return The bytes of the sort at the given index.
         */
        public com.google.protobuf.ByteString
            getSortBytes(int index) {
          return sort_.getByteString(index);
        }
        /**
         * <pre>
         * User sorted columns of the chart.
         * </pre>
         *
         * <code>repeated string sort = 7;</code>
         * @param index The index to set the value at.
         * @param value The sort to set.
         * @return This builder for chaining.
         */
        public Builder setSort(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureSortIsMutable();
          sort_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * User sorted columns of the chart.
         * </pre>
         *
         * <code>repeated string sort = 7;</code>
         * @param value The sort to add.
         * @return This builder for chaining.
         */
        public Builder addSort(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureSortIsMutable();
          sort_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * User sorted columns of the chart.
         * </pre>
         *
         * <code>repeated string sort = 7;</code>
         * @param values The sort to add.
         * @return This builder for chaining.
         */
        public Builder addAllSort(
            java.lang.Iterable<java.lang.String> values) {
          ensureSortIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sort_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * User sorted columns of the chart.
         * </pre>
         *
         * <code>repeated string sort = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearSort() {
          sort_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * User sorted columns of the chart.
         * </pre>
         *
         * <code>repeated string sort = 7;</code>
         * @param value The bytes of the sort to add.
         * @return This builder for chaining.
         */
        public Builder addSortBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureSortIsMutable();
          sort_.add(value);
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList hidden_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureHiddenIsMutable() {
          if (!((bitField0_ & 0x00000040) != 0)) {
            hidden_ = new com.google.protobuf.LazyStringArrayList(hidden_);
            bitField0_ |= 0x00000040;
           }
        }
        /**
         * <pre>
         * Deprecated.
         * Hidden columns of the chart.
         * </pre>
         *
         * <code>repeated string hidden = 5;</code>
         * @return A list containing the hidden.
         */
        public com.google.protobuf.ProtocolStringList
            getHiddenList() {
          return hidden_.getUnmodifiableView();
        }
        /**
         * <pre>
         * Deprecated.
         * Hidden columns of the chart.
         * </pre>
         *
         * <code>repeated string hidden = 5;</code>
         * @return The count of hidden.
         */
        public int getHiddenCount() {
          return hidden_.size();
        }
        /**
         * <pre>
         * Deprecated.
         * Hidden columns of the chart.
         * </pre>
         *
         * <code>repeated string hidden = 5;</code>
         * @param index The index of the element to return.
         * @return The hidden at the given index.
         */
        public java.lang.String getHidden(int index) {
          return hidden_.get(index);
        }
        /**
         * <pre>
         * Deprecated.
         * Hidden columns of the chart.
         * </pre>
         *
         * <code>repeated string hidden = 5;</code>
         * @param index The index of the value to return.
         * @return The bytes of the hidden at the given index.
         */
        public com.google.protobuf.ByteString
            getHiddenBytes(int index) {
          return hidden_.getByteString(index);
        }
        /**
         * <pre>
         * Deprecated.
         * Hidden columns of the chart.
         * </pre>
         *
         * <code>repeated string hidden = 5;</code>
         * @param index The index to set the value at.
         * @param value The hidden to set.
         * @return This builder for chaining.
         */
        public Builder setHidden(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureHiddenIsMutable();
          hidden_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated.
         * Hidden columns of the chart.
         * </pre>
         *
         * <code>repeated string hidden = 5;</code>
         * @param value The hidden to add.
         * @return This builder for chaining.
         */
        public Builder addHidden(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureHiddenIsMutable();
          hidden_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated.
         * Hidden columns of the chart.
         * </pre>
         *
         * <code>repeated string hidden = 5;</code>
         * @param values The hidden to add.
         * @return This builder for chaining.
         */
        public Builder addAllHidden(
            java.lang.Iterable<java.lang.String> values) {
          ensureHiddenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hidden_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated.
         * Hidden columns of the chart.
         * </pre>
         *
         * <code>repeated string hidden = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearHidden() {
          hidden_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated.
         * Hidden columns of the chart.
         * </pre>
         *
         * <code>repeated string hidden = 5;</code>
         * @param value The bytes of the hidden to add.
         * @return This builder for chaining.
         */
        public Builder addHiddenBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureHiddenIsMutable();
          hidden_.add(value);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:ChartVisualization.AxisConfig)
      }

      // @@protoc_insertion_point(class_scope:ChartVisualization.AxisConfig)
      private static final EDoc.ChartVisualization.AxisConfig DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.ChartVisualization.AxisConfig();
      }

      public static EDoc.ChartVisualization.AxisConfig getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<AxisConfig>
          PARSER = new com.google.protobuf.AbstractParser<AxisConfig>() {
        @java.lang.Override
        public AxisConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AxisConfig(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AxisConfig> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AxisConfig> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.ChartVisualization.AxisConfig getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * Type of the chart.
     * Allowed Values:
     *    1. COLUMN
     *    2. BAR
     *    3. LINE
     *    4. PIE
     *    5. SCATTER
     *    6. BUBBLE
     *    7. STACKED_COLUMN
     *    8. AREA
     *    9. PARETO
     *    10. GEO_AREA
     *    11. GEO_BUBBLE
     *    12. GEO_HEATMAP
     *    13. GEO_EARTH_AREA
     *    14. GEO_EARTH_BUBBLE
     *    15. GEO_EARTH_BAR
     *    16. GEO_EARTH_HEATMAP
     *    17. GEO_EARTH_GRAPH
     *    18. WATERFALL
     *    19. TREEMAP
     *    20. HEATMAP
     *    21. STACKED_AREA
     *    22. LINE_COLUMN
     *    23. FUNNEL
     *    24. PIVOT_TABLE
     *    25. LINE_STACKED_COLUMN
     *    26. SANKEY
     *    27. GRID_TABLE
     *    28. SPIDER_WEB
     *    29. WHISKER_SCATTER
     *    30. STACKED_BAR
     *    31. CANDLESTICK
     * Based on callosum.VisualizationProto.ChartVisualizationContentProto.ChartTypeEnumProto
     * defined in callosum/client/visualization.proto.
     * </pre>
     *
     * <code>optional string type = 1 [(.Annotation.compulsory) = true, (.Annotation.allowed_values_key) = "edoc.chart_type"];</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Type of the chart.
     * Allowed Values:
     *    1. COLUMN
     *    2. BAR
     *    3. LINE
     *    4. PIE
     *    5. SCATTER
     *    6. BUBBLE
     *    7. STACKED_COLUMN
     *    8. AREA
     *    9. PARETO
     *    10. GEO_AREA
     *    11. GEO_BUBBLE
     *    12. GEO_HEATMAP
     *    13. GEO_EARTH_AREA
     *    14. GEO_EARTH_BUBBLE
     *    15. GEO_EARTH_BAR
     *    16. GEO_EARTH_HEATMAP
     *    17. GEO_EARTH_GRAPH
     *    18. WATERFALL
     *    19. TREEMAP
     *    20. HEATMAP
     *    21. STACKED_AREA
     *    22. LINE_COLUMN
     *    23. FUNNEL
     *    24. PIVOT_TABLE
     *    25. LINE_STACKED_COLUMN
     *    26. SANKEY
     *    27. GRID_TABLE
     *    28. SPIDER_WEB
     *    29. WHISKER_SCATTER
     *    30. STACKED_BAR
     *    31. CANDLESTICK
     * Based on callosum.VisualizationProto.ChartVisualizationContentProto.ChartTypeEnumProto
     * defined in callosum/client/visualization.proto.
     * </pre>
     *
     * <code>optional string type = 1 [(.Annotation.compulsory) = true, (.Annotation.allowed_values_key) = "edoc.chart_type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Type of the chart.
     * Allowed Values:
     *    1. COLUMN
     *    2. BAR
     *    3. LINE
     *    4. PIE
     *    5. SCATTER
     *    6. BUBBLE
     *    7. STACKED_COLUMN
     *    8. AREA
     *    9. PARETO
     *    10. GEO_AREA
     *    11. GEO_BUBBLE
     *    12. GEO_HEATMAP
     *    13. GEO_EARTH_AREA
     *    14. GEO_EARTH_BUBBLE
     *    15. GEO_EARTH_BAR
     *    16. GEO_EARTH_HEATMAP
     *    17. GEO_EARTH_GRAPH
     *    18. WATERFALL
     *    19. TREEMAP
     *    20. HEATMAP
     *    21. STACKED_AREA
     *    22. LINE_COLUMN
     *    23. FUNNEL
     *    24. PIVOT_TABLE
     *    25. LINE_STACKED_COLUMN
     *    26. SANKEY
     *    27. GRID_TABLE
     *    28. SPIDER_WEB
     *    29. WHISKER_SCATTER
     *    30. STACKED_BAR
     *    31. CANDLESTICK
     * Based on callosum.VisualizationProto.ChartVisualizationContentProto.ChartTypeEnumProto
     * defined in callosum/client/visualization.proto.
     * </pre>
     *
     * <code>optional string type = 1 [(.Annotation.compulsory) = true, (.Annotation.allowed_values_key) = "edoc.chart_type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHART_COLUMNS_FIELD_NUMBER = 2;
    private java.util.List<EDoc.ChartVisualization.ChartColumn> chartColumns_;
    /**
     * <pre>
     * List of chart column with information on top of the answer column.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.ChartVisualization.ChartColumn> getChartColumnsList() {
      return chartColumns_;
    }
    /**
     * <pre>
     * List of chart column with information on top of the answer column.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.ChartVisualization.ChartColumnOrBuilder> 
        getChartColumnsOrBuilderList() {
      return chartColumns_;
    }
    /**
     * <pre>
     * List of chart column with information on top of the answer column.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
     */
    @java.lang.Override
    public int getChartColumnsCount() {
      return chartColumns_.size();
    }
    /**
     * <pre>
     * List of chart column with information on top of the answer column.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
     */
    @java.lang.Override
    public EDoc.ChartVisualization.ChartColumn getChartColumns(int index) {
      return chartColumns_.get(index);
    }
    /**
     * <pre>
     * List of chart column with information on top of the answer column.
     * &#64;clientState.columnProperties.
     * </pre>
     *
     * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
     */
    @java.lang.Override
    public EDoc.ChartVisualization.ChartColumnOrBuilder getChartColumnsOrBuilder(
        int index) {
      return chartColumns_.get(index);
    }

    public static final int AXIS_CONFIGS_FIELD_NUMBER = 3;
    private java.util.List<EDoc.ChartVisualization.AxisConfig> axisConfigs_;
    /**
     * <pre>
     * Axis configuration of the chart. Repeated because some charts need
     * more than one query to be displayed. Extra configuration represent
     * other queries that might be needed to display such charts. For example,
     * to display a stacked column chart for 'revenue by region by nation'
     * with an overlay of line chart for 'revenue by region' requires multiple
     * queries with different grouping columns.
     * </pre>
     *
     * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.ChartVisualization.AxisConfig> getAxisConfigsList() {
      return axisConfigs_;
    }
    /**
     * <pre>
     * Axis configuration of the chart. Repeated because some charts need
     * more than one query to be displayed. Extra configuration represent
     * other queries that might be needed to display such charts. For example,
     * to display a stacked column chart for 'revenue by region by nation'
     * with an overlay of line chart for 'revenue by region' requires multiple
     * queries with different grouping columns.
     * </pre>
     *
     * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.ChartVisualization.AxisConfigOrBuilder> 
        getAxisConfigsOrBuilderList() {
      return axisConfigs_;
    }
    /**
     * <pre>
     * Axis configuration of the chart. Repeated because some charts need
     * more than one query to be displayed. Extra configuration represent
     * other queries that might be needed to display such charts. For example,
     * to display a stacked column chart for 'revenue by region by nation'
     * with an overlay of line chart for 'revenue by region' requires multiple
     * queries with different grouping columns.
     * </pre>
     *
     * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
     */
    @java.lang.Override
    public int getAxisConfigsCount() {
      return axisConfigs_.size();
    }
    /**
     * <pre>
     * Axis configuration of the chart. Repeated because some charts need
     * more than one query to be displayed. Extra configuration represent
     * other queries that might be needed to display such charts. For example,
     * to display a stacked column chart for 'revenue by region by nation'
     * with an overlay of line chart for 'revenue by region' requires multiple
     * queries with different grouping columns.
     * </pre>
     *
     * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
     */
    @java.lang.Override
    public EDoc.ChartVisualization.AxisConfig getAxisConfigs(int index) {
      return axisConfigs_.get(index);
    }
    /**
     * <pre>
     * Axis configuration of the chart. Repeated because some charts need
     * more than one query to be displayed. Extra configuration represent
     * other queries that might be needed to display such charts. For example,
     * to display a stacked column chart for 'revenue by region by nation'
     * with an overlay of line chart for 'revenue by region' requires multiple
     * queries with different grouping columns.
     * </pre>
     *
     * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
     */
    @java.lang.Override
    public EDoc.ChartVisualization.AxisConfigOrBuilder getAxisConfigsOrBuilder(
        int index) {
      return axisConfigs_.get(index);
    }

    public static final int CLIENT_STATE_FIELD_NUMBER = 5;
    private volatile java.lang.Object clientState_;
    /**
     * <pre>
     * Any left over &#64;clientState can be serialized as json string.
     * NOTE: In V1 we might store the complete client state in this field without
     * using any of the other proto fields corresponding to the client state.
     * </pre>
     *
     * <code>optional string client_state = 5;</code>
     * @return Whether the clientState field is set.
     */
    @java.lang.Override
    public boolean hasClientState() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Any left over &#64;clientState can be serialized as json string.
     * NOTE: In V1 we might store the complete client state in this field without
     * using any of the other proto fields corresponding to the client state.
     * </pre>
     *
     * <code>optional string client_state = 5;</code>
     * @return The clientState.
     */
    @java.lang.Override
    public java.lang.String getClientState() {
      java.lang.Object ref = clientState_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientState_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Any left over &#64;clientState can be serialized as json string.
     * NOTE: In V1 we might store the complete client state in this field without
     * using any of the other proto fields corresponding to the client state.
     * </pre>
     *
     * <code>optional string client_state = 5;</code>
     * @return The bytes for clientState.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClientStateBytes() {
      java.lang.Object ref = clientState_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientState_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_STATE_V2_FIELD_NUMBER = 6;
    private volatile java.lang.Object clientStateV2_;
    /**
     * <pre>
     * Store new client state of the chart object as json string converted from proto.
     * </pre>
     *
     * <code>optional string client_state_v2 = 6;</code>
     * @return Whether the clientStateV2 field is set.
     */
    @java.lang.Override
    public boolean hasClientStateV2() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Store new client state of the chart object as json string converted from proto.
     * </pre>
     *
     * <code>optional string client_state_v2 = 6;</code>
     * @return The clientStateV2.
     */
    @java.lang.Override
    public java.lang.String getClientStateV2() {
      java.lang.Object ref = clientStateV2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientStateV2_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Store new client state of the chart object as json string converted from proto.
     * </pre>
     *
     * <code>optional string client_state_v2 = 6;</code>
     * @return The bytes for clientStateV2.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClientStateV2Bytes() {
      java.lang.Object ref = clientStateV2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientStateV2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOCKED_FIELD_NUMBER = 4;
    private boolean locked_;
    /**
     * <pre>
     * We are no longer exporting locked property of the chart because for saved
     * answers chart it automatically locked, hence during import we can simply
     * set locked to true in the AnswerSpec.
     * </pre>
     *
     * <code>optional bool locked = 4 [default = true, deprecated = true];</code>
     * @return Whether the locked field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasLocked() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * We are no longer exporting locked property of the chart because for saved
     * answers chart it automatically locked, hence during import we can simply
     * set locked to true in the AnswerSpec.
     * </pre>
     *
     * <code>optional bool locked = 4 [default = true, deprecated = true];</code>
     * @return The locked.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean getLocked() {
      return locked_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      for (int i = 0; i < chartColumns_.size(); i++) {
        output.writeMessage(2, chartColumns_.get(i));
      }
      for (int i = 0; i < axisConfigs_.size(); i++) {
        output.writeMessage(3, axisConfigs_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBool(4, locked_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, clientState_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, clientStateV2_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      for (int i = 0; i < chartColumns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, chartColumns_.get(i));
      }
      for (int i = 0; i < axisConfigs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, axisConfigs_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, locked_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, clientState_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, clientStateV2_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.ChartVisualization)) {
        return super.equals(obj);
      }
      EDoc.ChartVisualization other = (EDoc.ChartVisualization) obj;

      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (!getType()
            .equals(other.getType())) return false;
      }
      if (!getChartColumnsList()
          .equals(other.getChartColumnsList())) return false;
      if (!getAxisConfigsList()
          .equals(other.getAxisConfigsList())) return false;
      if (hasClientState() != other.hasClientState()) return false;
      if (hasClientState()) {
        if (!getClientState()
            .equals(other.getClientState())) return false;
      }
      if (hasClientStateV2() != other.hasClientStateV2()) return false;
      if (hasClientStateV2()) {
        if (!getClientStateV2()
            .equals(other.getClientStateV2())) return false;
      }
      if (hasLocked() != other.hasLocked()) return false;
      if (hasLocked()) {
        if (getLocked()
            != other.getLocked()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      if (getChartColumnsCount() > 0) {
        hash = (37 * hash) + CHART_COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getChartColumnsList().hashCode();
      }
      if (getAxisConfigsCount() > 0) {
        hash = (37 * hash) + AXIS_CONFIGS_FIELD_NUMBER;
        hash = (53 * hash) + getAxisConfigsList().hashCode();
      }
      if (hasClientState()) {
        hash = (37 * hash) + CLIENT_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getClientState().hashCode();
      }
      if (hasClientStateV2()) {
        hash = (37 * hash) + CLIENT_STATE_V2_FIELD_NUMBER;
        hash = (53 * hash) + getClientStateV2().hashCode();
      }
      if (hasLocked()) {
        hash = (37 * hash) + LOCKED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLocked());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.ChartVisualization parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ChartVisualization parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ChartVisualization parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ChartVisualization parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ChartVisualization parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ChartVisualization parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ChartVisualization parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.ChartVisualization parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.ChartVisualization parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.ChartVisualization parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.ChartVisualization parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.ChartVisualization parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.ChartVisualization prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Chart visualizations are a more graphical representations of the TableViz.
     * Various chart types from simple line chart to hierarchical geo charts are
     * supported.
     * </pre>
     *
     * Protobuf type {@code ChartVisualization}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ChartVisualization)
        EDoc.ChartVisualizationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ChartVisualization_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ChartVisualization_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ChartVisualization.class, EDoc.ChartVisualization.Builder.class);
      }

      // Construct using EDoc.ChartVisualization.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChartColumnsFieldBuilder();
          getAxisConfigsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (chartColumnsBuilder_ == null) {
          chartColumns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          chartColumnsBuilder_.clear();
        }
        if (axisConfigsBuilder_ == null) {
          axisConfigs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          axisConfigsBuilder_.clear();
        }
        clientState_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        clientStateV2_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        locked_ = true;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_ChartVisualization_descriptor;
      }

      @java.lang.Override
      public EDoc.ChartVisualization getDefaultInstanceForType() {
        return EDoc.ChartVisualization.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.ChartVisualization build() {
        EDoc.ChartVisualization result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.ChartVisualization buildPartial() {
        EDoc.ChartVisualization result = new EDoc.ChartVisualization(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (chartColumnsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            chartColumns_ = java.util.Collections.unmodifiableList(chartColumns_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.chartColumns_ = chartColumns_;
        } else {
          result.chartColumns_ = chartColumnsBuilder_.build();
        }
        if (axisConfigsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            axisConfigs_ = java.util.Collections.unmodifiableList(axisConfigs_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.axisConfigs_ = axisConfigs_;
        } else {
          result.axisConfigs_ = axisConfigsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientState_ = clientState_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientStateV2_ = clientStateV2_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.locked_ = locked_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.ChartVisualization) {
          return mergeFrom((EDoc.ChartVisualization)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.ChartVisualization other) {
        if (other == EDoc.ChartVisualization.getDefaultInstance()) return this;
        if (other.hasType()) {
          bitField0_ |= 0x00000001;
          type_ = other.type_;
          onChanged();
        }
        if (chartColumnsBuilder_ == null) {
          if (!other.chartColumns_.isEmpty()) {
            if (chartColumns_.isEmpty()) {
              chartColumns_ = other.chartColumns_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureChartColumnsIsMutable();
              chartColumns_.addAll(other.chartColumns_);
            }
            onChanged();
          }
        } else {
          if (!other.chartColumns_.isEmpty()) {
            if (chartColumnsBuilder_.isEmpty()) {
              chartColumnsBuilder_.dispose();
              chartColumnsBuilder_ = null;
              chartColumns_ = other.chartColumns_;
              bitField0_ = (bitField0_ & ~0x00000002);
              chartColumnsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChartColumnsFieldBuilder() : null;
            } else {
              chartColumnsBuilder_.addAllMessages(other.chartColumns_);
            }
          }
        }
        if (axisConfigsBuilder_ == null) {
          if (!other.axisConfigs_.isEmpty()) {
            if (axisConfigs_.isEmpty()) {
              axisConfigs_ = other.axisConfigs_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureAxisConfigsIsMutable();
              axisConfigs_.addAll(other.axisConfigs_);
            }
            onChanged();
          }
        } else {
          if (!other.axisConfigs_.isEmpty()) {
            if (axisConfigsBuilder_.isEmpty()) {
              axisConfigsBuilder_.dispose();
              axisConfigsBuilder_ = null;
              axisConfigs_ = other.axisConfigs_;
              bitField0_ = (bitField0_ & ~0x00000004);
              axisConfigsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAxisConfigsFieldBuilder() : null;
            } else {
              axisConfigsBuilder_.addAllMessages(other.axisConfigs_);
            }
          }
        }
        if (other.hasClientState()) {
          bitField0_ |= 0x00000008;
          clientState_ = other.clientState_;
          onChanged();
        }
        if (other.hasClientStateV2()) {
          bitField0_ |= 0x00000010;
          clientStateV2_ = other.clientStateV2_;
          onChanged();
        }
        if (other.hasLocked()) {
          setLocked(other.getLocked());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.ChartVisualization parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.ChartVisualization) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * Type of the chart.
       * Allowed Values:
       *    1. COLUMN
       *    2. BAR
       *    3. LINE
       *    4. PIE
       *    5. SCATTER
       *    6. BUBBLE
       *    7. STACKED_COLUMN
       *    8. AREA
       *    9. PARETO
       *    10. GEO_AREA
       *    11. GEO_BUBBLE
       *    12. GEO_HEATMAP
       *    13. GEO_EARTH_AREA
       *    14. GEO_EARTH_BUBBLE
       *    15. GEO_EARTH_BAR
       *    16. GEO_EARTH_HEATMAP
       *    17. GEO_EARTH_GRAPH
       *    18. WATERFALL
       *    19. TREEMAP
       *    20. HEATMAP
       *    21. STACKED_AREA
       *    22. LINE_COLUMN
       *    23. FUNNEL
       *    24. PIVOT_TABLE
       *    25. LINE_STACKED_COLUMN
       *    26. SANKEY
       *    27. GRID_TABLE
       *    28. SPIDER_WEB
       *    29. WHISKER_SCATTER
       *    30. STACKED_BAR
       *    31. CANDLESTICK
       * Based on callosum.VisualizationProto.ChartVisualizationContentProto.ChartTypeEnumProto
       * defined in callosum/client/visualization.proto.
       * </pre>
       *
       * <code>optional string type = 1 [(.Annotation.compulsory) = true, (.Annotation.allowed_values_key) = "edoc.chart_type"];</code>
       * @return Whether the type field is set.
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Type of the chart.
       * Allowed Values:
       *    1. COLUMN
       *    2. BAR
       *    3. LINE
       *    4. PIE
       *    5. SCATTER
       *    6. BUBBLE
       *    7. STACKED_COLUMN
       *    8. AREA
       *    9. PARETO
       *    10. GEO_AREA
       *    11. GEO_BUBBLE
       *    12. GEO_HEATMAP
       *    13. GEO_EARTH_AREA
       *    14. GEO_EARTH_BUBBLE
       *    15. GEO_EARTH_BAR
       *    16. GEO_EARTH_HEATMAP
       *    17. GEO_EARTH_GRAPH
       *    18. WATERFALL
       *    19. TREEMAP
       *    20. HEATMAP
       *    21. STACKED_AREA
       *    22. LINE_COLUMN
       *    23. FUNNEL
       *    24. PIVOT_TABLE
       *    25. LINE_STACKED_COLUMN
       *    26. SANKEY
       *    27. GRID_TABLE
       *    28. SPIDER_WEB
       *    29. WHISKER_SCATTER
       *    30. STACKED_BAR
       *    31. CANDLESTICK
       * Based on callosum.VisualizationProto.ChartVisualizationContentProto.ChartTypeEnumProto
       * defined in callosum/client/visualization.proto.
       * </pre>
       *
       * <code>optional string type = 1 [(.Annotation.compulsory) = true, (.Annotation.allowed_values_key) = "edoc.chart_type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            type_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Type of the chart.
       * Allowed Values:
       *    1. COLUMN
       *    2. BAR
       *    3. LINE
       *    4. PIE
       *    5. SCATTER
       *    6. BUBBLE
       *    7. STACKED_COLUMN
       *    8. AREA
       *    9. PARETO
       *    10. GEO_AREA
       *    11. GEO_BUBBLE
       *    12. GEO_HEATMAP
       *    13. GEO_EARTH_AREA
       *    14. GEO_EARTH_BUBBLE
       *    15. GEO_EARTH_BAR
       *    16. GEO_EARTH_HEATMAP
       *    17. GEO_EARTH_GRAPH
       *    18. WATERFALL
       *    19. TREEMAP
       *    20. HEATMAP
       *    21. STACKED_AREA
       *    22. LINE_COLUMN
       *    23. FUNNEL
       *    24. PIVOT_TABLE
       *    25. LINE_STACKED_COLUMN
       *    26. SANKEY
       *    27. GRID_TABLE
       *    28. SPIDER_WEB
       *    29. WHISKER_SCATTER
       *    30. STACKED_BAR
       *    31. CANDLESTICK
       * Based on callosum.VisualizationProto.ChartVisualizationContentProto.ChartTypeEnumProto
       * defined in callosum/client/visualization.proto.
       * </pre>
       *
       * <code>optional string type = 1 [(.Annotation.compulsory) = true, (.Annotation.allowed_values_key) = "edoc.chart_type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Type of the chart.
       * Allowed Values:
       *    1. COLUMN
       *    2. BAR
       *    3. LINE
       *    4. PIE
       *    5. SCATTER
       *    6. BUBBLE
       *    7. STACKED_COLUMN
       *    8. AREA
       *    9. PARETO
       *    10. GEO_AREA
       *    11. GEO_BUBBLE
       *    12. GEO_HEATMAP
       *    13. GEO_EARTH_AREA
       *    14. GEO_EARTH_BUBBLE
       *    15. GEO_EARTH_BAR
       *    16. GEO_EARTH_HEATMAP
       *    17. GEO_EARTH_GRAPH
       *    18. WATERFALL
       *    19. TREEMAP
       *    20. HEATMAP
       *    21. STACKED_AREA
       *    22. LINE_COLUMN
       *    23. FUNNEL
       *    24. PIVOT_TABLE
       *    25. LINE_STACKED_COLUMN
       *    26. SANKEY
       *    27. GRID_TABLE
       *    28. SPIDER_WEB
       *    29. WHISKER_SCATTER
       *    30. STACKED_BAR
       *    31. CANDLESTICK
       * Based on callosum.VisualizationProto.ChartVisualizationContentProto.ChartTypeEnumProto
       * defined in callosum/client/visualization.proto.
       * </pre>
       *
       * <code>optional string type = 1 [(.Annotation.compulsory) = true, (.Annotation.allowed_values_key) = "edoc.chart_type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of the chart.
       * Allowed Values:
       *    1. COLUMN
       *    2. BAR
       *    3. LINE
       *    4. PIE
       *    5. SCATTER
       *    6. BUBBLE
       *    7. STACKED_COLUMN
       *    8. AREA
       *    9. PARETO
       *    10. GEO_AREA
       *    11. GEO_BUBBLE
       *    12. GEO_HEATMAP
       *    13. GEO_EARTH_AREA
       *    14. GEO_EARTH_BUBBLE
       *    15. GEO_EARTH_BAR
       *    16. GEO_EARTH_HEATMAP
       *    17. GEO_EARTH_GRAPH
       *    18. WATERFALL
       *    19. TREEMAP
       *    20. HEATMAP
       *    21. STACKED_AREA
       *    22. LINE_COLUMN
       *    23. FUNNEL
       *    24. PIVOT_TABLE
       *    25. LINE_STACKED_COLUMN
       *    26. SANKEY
       *    27. GRID_TABLE
       *    28. SPIDER_WEB
       *    29. WHISKER_SCATTER
       *    30. STACKED_BAR
       *    31. CANDLESTICK
       * Based on callosum.VisualizationProto.ChartVisualizationContentProto.ChartTypeEnumProto
       * defined in callosum/client/visualization.proto.
       * </pre>
       *
       * <code>optional string type = 1 [(.Annotation.compulsory) = true, (.Annotation.allowed_values_key) = "edoc.chart_type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of the chart.
       * Allowed Values:
       *    1. COLUMN
       *    2. BAR
       *    3. LINE
       *    4. PIE
       *    5. SCATTER
       *    6. BUBBLE
       *    7. STACKED_COLUMN
       *    8. AREA
       *    9. PARETO
       *    10. GEO_AREA
       *    11. GEO_BUBBLE
       *    12. GEO_HEATMAP
       *    13. GEO_EARTH_AREA
       *    14. GEO_EARTH_BUBBLE
       *    15. GEO_EARTH_BAR
       *    16. GEO_EARTH_HEATMAP
       *    17. GEO_EARTH_GRAPH
       *    18. WATERFALL
       *    19. TREEMAP
       *    20. HEATMAP
       *    21. STACKED_AREA
       *    22. LINE_COLUMN
       *    23. FUNNEL
       *    24. PIVOT_TABLE
       *    25. LINE_STACKED_COLUMN
       *    26. SANKEY
       *    27. GRID_TABLE
       *    28. SPIDER_WEB
       *    29. WHISKER_SCATTER
       *    30. STACKED_BAR
       *    31. CANDLESTICK
       * Based on callosum.VisualizationProto.ChartVisualizationContentProto.ChartTypeEnumProto
       * defined in callosum/client/visualization.proto.
       * </pre>
       *
       * <code>optional string type = 1 [(.Annotation.compulsory) = true, (.Annotation.allowed_values_key) = "edoc.chart_type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }

      private java.util.List<EDoc.ChartVisualization.ChartColumn> chartColumns_ =
        java.util.Collections.emptyList();
      private void ensureChartColumnsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          chartColumns_ = new java.util.ArrayList<EDoc.ChartVisualization.ChartColumn>(chartColumns_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.ChartVisualization.ChartColumn, EDoc.ChartVisualization.ChartColumn.Builder, EDoc.ChartVisualization.ChartColumnOrBuilder> chartColumnsBuilder_;

      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public java.util.List<EDoc.ChartVisualization.ChartColumn> getChartColumnsList() {
        if (chartColumnsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(chartColumns_);
        } else {
          return chartColumnsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public int getChartColumnsCount() {
        if (chartColumnsBuilder_ == null) {
          return chartColumns_.size();
        } else {
          return chartColumnsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public EDoc.ChartVisualization.ChartColumn getChartColumns(int index) {
        if (chartColumnsBuilder_ == null) {
          return chartColumns_.get(index);
        } else {
          return chartColumnsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder setChartColumns(
          int index, EDoc.ChartVisualization.ChartColumn value) {
        if (chartColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChartColumnsIsMutable();
          chartColumns_.set(index, value);
          onChanged();
        } else {
          chartColumnsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder setChartColumns(
          int index, EDoc.ChartVisualization.ChartColumn.Builder builderForValue) {
        if (chartColumnsBuilder_ == null) {
          ensureChartColumnsIsMutable();
          chartColumns_.set(index, builderForValue.build());
          onChanged();
        } else {
          chartColumnsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder addChartColumns(EDoc.ChartVisualization.ChartColumn value) {
        if (chartColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChartColumnsIsMutable();
          chartColumns_.add(value);
          onChanged();
        } else {
          chartColumnsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder addChartColumns(
          int index, EDoc.ChartVisualization.ChartColumn value) {
        if (chartColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChartColumnsIsMutable();
          chartColumns_.add(index, value);
          onChanged();
        } else {
          chartColumnsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder addChartColumns(
          EDoc.ChartVisualization.ChartColumn.Builder builderForValue) {
        if (chartColumnsBuilder_ == null) {
          ensureChartColumnsIsMutable();
          chartColumns_.add(builderForValue.build());
          onChanged();
        } else {
          chartColumnsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder addChartColumns(
          int index, EDoc.ChartVisualization.ChartColumn.Builder builderForValue) {
        if (chartColumnsBuilder_ == null) {
          ensureChartColumnsIsMutable();
          chartColumns_.add(index, builderForValue.build());
          onChanged();
        } else {
          chartColumnsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder addAllChartColumns(
          java.lang.Iterable<? extends EDoc.ChartVisualization.ChartColumn> values) {
        if (chartColumnsBuilder_ == null) {
          ensureChartColumnsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, chartColumns_);
          onChanged();
        } else {
          chartColumnsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder clearChartColumns() {
        if (chartColumnsBuilder_ == null) {
          chartColumns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          chartColumnsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public Builder removeChartColumns(int index) {
        if (chartColumnsBuilder_ == null) {
          ensureChartColumnsIsMutable();
          chartColumns_.remove(index);
          onChanged();
        } else {
          chartColumnsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public EDoc.ChartVisualization.ChartColumn.Builder getChartColumnsBuilder(
          int index) {
        return getChartColumnsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public EDoc.ChartVisualization.ChartColumnOrBuilder getChartColumnsOrBuilder(
          int index) {
        if (chartColumnsBuilder_ == null) {
          return chartColumns_.get(index);  } else {
          return chartColumnsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public java.util.List<? extends EDoc.ChartVisualization.ChartColumnOrBuilder> 
           getChartColumnsOrBuilderList() {
        if (chartColumnsBuilder_ != null) {
          return chartColumnsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(chartColumns_);
        }
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public EDoc.ChartVisualization.ChartColumn.Builder addChartColumnsBuilder() {
        return getChartColumnsFieldBuilder().addBuilder(
            EDoc.ChartVisualization.ChartColumn.getDefaultInstance());
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public EDoc.ChartVisualization.ChartColumn.Builder addChartColumnsBuilder(
          int index) {
        return getChartColumnsFieldBuilder().addBuilder(
            index, EDoc.ChartVisualization.ChartColumn.getDefaultInstance());
      }
      /**
       * <pre>
       * List of chart column with information on top of the answer column.
       * &#64;clientState.columnProperties.
       * </pre>
       *
       * <code>repeated .ChartVisualization.ChartColumn chart_columns = 2 [(.Annotation.unique) = "column_id"];</code>
       */
      public java.util.List<EDoc.ChartVisualization.ChartColumn.Builder> 
           getChartColumnsBuilderList() {
        return getChartColumnsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.ChartVisualization.ChartColumn, EDoc.ChartVisualization.ChartColumn.Builder, EDoc.ChartVisualization.ChartColumnOrBuilder> 
          getChartColumnsFieldBuilder() {
        if (chartColumnsBuilder_ == null) {
          chartColumnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.ChartVisualization.ChartColumn, EDoc.ChartVisualization.ChartColumn.Builder, EDoc.ChartVisualization.ChartColumnOrBuilder>(
                  chartColumns_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          chartColumns_ = null;
        }
        return chartColumnsBuilder_;
      }

      private java.util.List<EDoc.ChartVisualization.AxisConfig> axisConfigs_ =
        java.util.Collections.emptyList();
      private void ensureAxisConfigsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          axisConfigs_ = new java.util.ArrayList<EDoc.ChartVisualization.AxisConfig>(axisConfigs_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.ChartVisualization.AxisConfig, EDoc.ChartVisualization.AxisConfig.Builder, EDoc.ChartVisualization.AxisConfigOrBuilder> axisConfigsBuilder_;

      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public java.util.List<EDoc.ChartVisualization.AxisConfig> getAxisConfigsList() {
        if (axisConfigsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(axisConfigs_);
        } else {
          return axisConfigsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public int getAxisConfigsCount() {
        if (axisConfigsBuilder_ == null) {
          return axisConfigs_.size();
        } else {
          return axisConfigsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public EDoc.ChartVisualization.AxisConfig getAxisConfigs(int index) {
        if (axisConfigsBuilder_ == null) {
          return axisConfigs_.get(index);
        } else {
          return axisConfigsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public Builder setAxisConfigs(
          int index, EDoc.ChartVisualization.AxisConfig value) {
        if (axisConfigsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAxisConfigsIsMutable();
          axisConfigs_.set(index, value);
          onChanged();
        } else {
          axisConfigsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public Builder setAxisConfigs(
          int index, EDoc.ChartVisualization.AxisConfig.Builder builderForValue) {
        if (axisConfigsBuilder_ == null) {
          ensureAxisConfigsIsMutable();
          axisConfigs_.set(index, builderForValue.build());
          onChanged();
        } else {
          axisConfigsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public Builder addAxisConfigs(EDoc.ChartVisualization.AxisConfig value) {
        if (axisConfigsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAxisConfigsIsMutable();
          axisConfigs_.add(value);
          onChanged();
        } else {
          axisConfigsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public Builder addAxisConfigs(
          int index, EDoc.ChartVisualization.AxisConfig value) {
        if (axisConfigsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAxisConfigsIsMutable();
          axisConfigs_.add(index, value);
          onChanged();
        } else {
          axisConfigsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public Builder addAxisConfigs(
          EDoc.ChartVisualization.AxisConfig.Builder builderForValue) {
        if (axisConfigsBuilder_ == null) {
          ensureAxisConfigsIsMutable();
          axisConfigs_.add(builderForValue.build());
          onChanged();
        } else {
          axisConfigsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public Builder addAxisConfigs(
          int index, EDoc.ChartVisualization.AxisConfig.Builder builderForValue) {
        if (axisConfigsBuilder_ == null) {
          ensureAxisConfigsIsMutable();
          axisConfigs_.add(index, builderForValue.build());
          onChanged();
        } else {
          axisConfigsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public Builder addAllAxisConfigs(
          java.lang.Iterable<? extends EDoc.ChartVisualization.AxisConfig> values) {
        if (axisConfigsBuilder_ == null) {
          ensureAxisConfigsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, axisConfigs_);
          onChanged();
        } else {
          axisConfigsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public Builder clearAxisConfigs() {
        if (axisConfigsBuilder_ == null) {
          axisConfigs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          axisConfigsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public Builder removeAxisConfigs(int index) {
        if (axisConfigsBuilder_ == null) {
          ensureAxisConfigsIsMutable();
          axisConfigs_.remove(index);
          onChanged();
        } else {
          axisConfigsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public EDoc.ChartVisualization.AxisConfig.Builder getAxisConfigsBuilder(
          int index) {
        return getAxisConfigsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public EDoc.ChartVisualization.AxisConfigOrBuilder getAxisConfigsOrBuilder(
          int index) {
        if (axisConfigsBuilder_ == null) {
          return axisConfigs_.get(index);  } else {
          return axisConfigsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public java.util.List<? extends EDoc.ChartVisualization.AxisConfigOrBuilder> 
           getAxisConfigsOrBuilderList() {
        if (axisConfigsBuilder_ != null) {
          return axisConfigsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(axisConfigs_);
        }
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public EDoc.ChartVisualization.AxisConfig.Builder addAxisConfigsBuilder() {
        return getAxisConfigsFieldBuilder().addBuilder(
            EDoc.ChartVisualization.AxisConfig.getDefaultInstance());
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public EDoc.ChartVisualization.AxisConfig.Builder addAxisConfigsBuilder(
          int index) {
        return getAxisConfigsFieldBuilder().addBuilder(
            index, EDoc.ChartVisualization.AxisConfig.getDefaultInstance());
      }
      /**
       * <pre>
       * Axis configuration of the chart. Repeated because some charts need
       * more than one query to be displayed. Extra configuration represent
       * other queries that might be needed to display such charts. For example,
       * to display a stacked column chart for 'revenue by region by nation'
       * with an overlay of line chart for 'revenue by region' requires multiple
       * queries with different grouping columns.
       * </pre>
       *
       * <code>repeated .ChartVisualization.AxisConfig axis_configs = 3;</code>
       */
      public java.util.List<EDoc.ChartVisualization.AxisConfig.Builder> 
           getAxisConfigsBuilderList() {
        return getAxisConfigsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.ChartVisualization.AxisConfig, EDoc.ChartVisualization.AxisConfig.Builder, EDoc.ChartVisualization.AxisConfigOrBuilder> 
          getAxisConfigsFieldBuilder() {
        if (axisConfigsBuilder_ == null) {
          axisConfigsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.ChartVisualization.AxisConfig, EDoc.ChartVisualization.AxisConfig.Builder, EDoc.ChartVisualization.AxisConfigOrBuilder>(
                  axisConfigs_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          axisConfigs_ = null;
        }
        return axisConfigsBuilder_;
      }

      private java.lang.Object clientState_ = "";
      /**
       * <pre>
       * Any left over &#64;clientState can be serialized as json string.
       * NOTE: In V1 we might store the complete client state in this field without
       * using any of the other proto fields corresponding to the client state.
       * </pre>
       *
       * <code>optional string client_state = 5;</code>
       * @return Whether the clientState field is set.
       */
      public boolean hasClientState() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Any left over &#64;clientState can be serialized as json string.
       * NOTE: In V1 we might store the complete client state in this field without
       * using any of the other proto fields corresponding to the client state.
       * </pre>
       *
       * <code>optional string client_state = 5;</code>
       * @return The clientState.
       */
      public java.lang.String getClientState() {
        java.lang.Object ref = clientState_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientState_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Any left over &#64;clientState can be serialized as json string.
       * NOTE: In V1 we might store the complete client state in this field without
       * using any of the other proto fields corresponding to the client state.
       * </pre>
       *
       * <code>optional string client_state = 5;</code>
       * @return The bytes for clientState.
       */
      public com.google.protobuf.ByteString
          getClientStateBytes() {
        java.lang.Object ref = clientState_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientState_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Any left over &#64;clientState can be serialized as json string.
       * NOTE: In V1 we might store the complete client state in this field without
       * using any of the other proto fields corresponding to the client state.
       * </pre>
       *
       * <code>optional string client_state = 5;</code>
       * @param value The clientState to set.
       * @return This builder for chaining.
       */
      public Builder setClientState(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        clientState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any left over &#64;clientState can be serialized as json string.
       * NOTE: In V1 we might store the complete client state in this field without
       * using any of the other proto fields corresponding to the client state.
       * </pre>
       *
       * <code>optional string client_state = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearClientState() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientState_ = getDefaultInstance().getClientState();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any left over &#64;clientState can be serialized as json string.
       * NOTE: In V1 we might store the complete client state in this field without
       * using any of the other proto fields corresponding to the client state.
       * </pre>
       *
       * <code>optional string client_state = 5;</code>
       * @param value The bytes for clientState to set.
       * @return This builder for chaining.
       */
      public Builder setClientStateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        clientState_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object clientStateV2_ = "";
      /**
       * <pre>
       * Store new client state of the chart object as json string converted from proto.
       * </pre>
       *
       * <code>optional string client_state_v2 = 6;</code>
       * @return Whether the clientStateV2 field is set.
       */
      public boolean hasClientStateV2() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Store new client state of the chart object as json string converted from proto.
       * </pre>
       *
       * <code>optional string client_state_v2 = 6;</code>
       * @return The clientStateV2.
       */
      public java.lang.String getClientStateV2() {
        java.lang.Object ref = clientStateV2_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientStateV2_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Store new client state of the chart object as json string converted from proto.
       * </pre>
       *
       * <code>optional string client_state_v2 = 6;</code>
       * @return The bytes for clientStateV2.
       */
      public com.google.protobuf.ByteString
          getClientStateV2Bytes() {
        java.lang.Object ref = clientStateV2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientStateV2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Store new client state of the chart object as json string converted from proto.
       * </pre>
       *
       * <code>optional string client_state_v2 = 6;</code>
       * @param value The clientStateV2 to set.
       * @return This builder for chaining.
       */
      public Builder setClientStateV2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        clientStateV2_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Store new client state of the chart object as json string converted from proto.
       * </pre>
       *
       * <code>optional string client_state_v2 = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearClientStateV2() {
        bitField0_ = (bitField0_ & ~0x00000010);
        clientStateV2_ = getDefaultInstance().getClientStateV2();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Store new client state of the chart object as json string converted from proto.
       * </pre>
       *
       * <code>optional string client_state_v2 = 6;</code>
       * @param value The bytes for clientStateV2 to set.
       * @return This builder for chaining.
       */
      public Builder setClientStateV2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        clientStateV2_ = value;
        onChanged();
        return this;
      }

      private boolean locked_ = true;
      /**
       * <pre>
       * We are no longer exporting locked property of the chart because for saved
       * answers chart it automatically locked, hence during import we can simply
       * set locked to true in the AnswerSpec.
       * </pre>
       *
       * <code>optional bool locked = 4 [default = true, deprecated = true];</code>
       * @return Whether the locked field is set.
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean hasLocked() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * We are no longer exporting locked property of the chart because for saved
       * answers chart it automatically locked, hence during import we can simply
       * set locked to true in the AnswerSpec.
       * </pre>
       *
       * <code>optional bool locked = 4 [default = true, deprecated = true];</code>
       * @return The locked.
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean getLocked() {
        return locked_;
      }
      /**
       * <pre>
       * We are no longer exporting locked property of the chart because for saved
       * answers chart it automatically locked, hence during import we can simply
       * set locked to true in the AnswerSpec.
       * </pre>
       *
       * <code>optional bool locked = 4 [default = true, deprecated = true];</code>
       * @param value The locked to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setLocked(boolean value) {
        bitField0_ |= 0x00000020;
        locked_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * We are no longer exporting locked property of the chart because for saved
       * answers chart it automatically locked, hence during import we can simply
       * set locked to true in the AnswerSpec.
       * </pre>
       *
       * <code>optional bool locked = 4 [default = true, deprecated = true];</code>
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearLocked() {
        bitField0_ = (bitField0_ & ~0x00000020);
        locked_ = true;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ChartVisualization)
    }

    // @@protoc_insertion_point(class_scope:ChartVisualization)
    private static final EDoc.ChartVisualization DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.ChartVisualization();
    }

    public static EDoc.ChartVisualization getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartVisualization>
        PARSER = new com.google.protobuf.AbstractParser<ChartVisualization>() {
      @java.lang.Override
      public ChartVisualization parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChartVisualization(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartVisualization> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartVisualization> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.ChartVisualization getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AnswerEDocProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AnswerEDocProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Display name of the answer.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * Display name of the answer.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Display name of the answer.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Description of the answer.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return Whether the description field is set.
     */
    boolean hasDescription();
    /**
     * <pre>
     * Description of the answer.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Description of the answer.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * All the tables referred in the answer.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    java.util.List<EDoc.Identity> 
        getTablesList();
    /**
     * <pre>
     * All the tables referred in the answer.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    EDoc.Identity getTables(int index);
    /**
     * <pre>
     * All the tables referred in the answer.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    int getTablesCount();
    /**
     * <pre>
     * All the tables referred in the answer.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    java.util.List<? extends EDoc.IdentityOrBuilder> 
        getTablesOrBuilderList();
    /**
     * <pre>
     * All the tables referred in the answer.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    EDoc.IdentityOrBuilder getTablesOrBuilder(
        int index);

    /**
     * <pre>
     * Joins that are used in the answer.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<EDoc.Join> 
        getJoinsList();
    /**
     * <pre>
     * Joins that are used in the answer.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.Join getJoins(int index);
    /**
     * <pre>
     * Joins that are used in the answer.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    int getJoinsCount();
    /**
     * <pre>
     * Joins that are used in the answer.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<? extends EDoc.JoinOrBuilder> 
        getJoinsOrBuilderList();
    /**
     * <pre>
     * Joins that are used in the answer.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.JoinOrBuilder getJoinsOrBuilder(
        int index);

    /**
     * <pre>
     * Various manifestations of the tables in the answer.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<EDoc.TablePath> 
        getTablePathsList();
    /**
     * <pre>
     * Various manifestations of the tables in the answer.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.TablePath getTablePaths(int index);
    /**
     * <pre>
     * Various manifestations of the tables in the answer.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    int getTablePathsCount();
    /**
     * <pre>
     * Various manifestations of the tables in the answer.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<? extends EDoc.TablePathOrBuilder> 
        getTablePathsOrBuilderList();
    /**
     * <pre>
     * Various manifestations of the tables in the answer.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.TablePathOrBuilder getTablePathsOrBuilder(
        int index);

    /**
     * <pre>
     * Formulas defined in the answer.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<EDoc.Formula> 
        getFormulasList();
    /**
     * <pre>
     * Formulas defined in the answer.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.Formula getFormulas(int index);
    /**
     * <pre>
     * Formulas defined in the answer.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    int getFormulasCount();
    /**
     * <pre>
     * Formulas defined in the answer.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    java.util.List<? extends EDoc.FormulaOrBuilder> 
        getFormulasOrBuilderList();
    /**
     * <pre>
     * Formulas defined in the answer.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    EDoc.FormulaOrBuilder getFormulasOrBuilder(
        int index);

    /**
     * <pre>
     * String representing fully disambiguated Search Query.
     * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
     * </pre>
     *
     * <code>optional string search_query = 7;</code>
     * @return Whether the searchQuery field is set.
     */
    boolean hasSearchQuery();
    /**
     * <pre>
     * String representing fully disambiguated Search Query.
     * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
     * </pre>
     *
     * <code>optional string search_query = 7;</code>
     * @return The searchQuery.
     */
    java.lang.String getSearchQuery();
    /**
     * <pre>
     * String representing fully disambiguated Search Query.
     * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
     * </pre>
     *
     * <code>optional string search_query = 7;</code>
     * @return The bytes for searchQuery.
     */
    com.google.protobuf.ByteString
        getSearchQueryBytes();

    /**
     * <pre>
     * List of columns generated by the search query.
     * </pre>
     *
     * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
     */
    java.util.List<EDoc.AnswerEDocProto.AnswerColumn> 
        getAnswerColumnsList();
    /**
     * <pre>
     * List of columns generated by the search query.
     * </pre>
     *
     * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
     */
    EDoc.AnswerEDocProto.AnswerColumn getAnswerColumns(int index);
    /**
     * <pre>
     * List of columns generated by the search query.
     * </pre>
     *
     * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
     */
    int getAnswerColumnsCount();
    /**
     * <pre>
     * List of columns generated by the search query.
     * </pre>
     *
     * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
     */
    java.util.List<? extends EDoc.AnswerEDocProto.AnswerColumnOrBuilder> 
        getAnswerColumnsOrBuilderList();
    /**
     * <pre>
     * List of columns generated by the search query.
     * </pre>
     *
     * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
     */
    EDoc.AnswerEDocProto.AnswerColumnOrBuilder getAnswerColumnsOrBuilder(
        int index);

    /**
     * <pre>
     * Visualizations present in the answer.
     * </pre>
     *
     * <code>optional .TableVisualization table = 9;</code>
     * @return Whether the table field is set.
     */
    boolean hasTable();
    /**
     * <pre>
     * Visualizations present in the answer.
     * </pre>
     *
     * <code>optional .TableVisualization table = 9;</code>
     * @return The table.
     */
    EDoc.TableVisualization getTable();
    /**
     * <pre>
     * Visualizations present in the answer.
     * </pre>
     *
     * <code>optional .TableVisualization table = 9;</code>
     */
    EDoc.TableVisualizationOrBuilder getTableOrBuilder();

    /**
     * <code>optional .ChartVisualization chart = 10;</code>
     * @return Whether the chart field is set.
     */
    boolean hasChart();
    /**
     * <code>optional .ChartVisualization chart = 10;</code>
     * @return The chart.
     */
    EDoc.ChartVisualization getChart();
    /**
     * <code>optional .ChartVisualization chart = 10;</code>
     */
    EDoc.ChartVisualizationOrBuilder getChartOrBuilder();

    /**
     * <pre>
     * This decides whether to display TABLE or CHART when the answer is opened.
     * Based on AnswerDisplayMode enum defined in Blink.
     * Allowed Values: TABLE_MODE | CHART_MODE .
     * Keeping this string instead of bool for future extensibility. Blink uses a
     * third value (R_ANALYSIS) for R Visualizations.
     * * TML does not support R viz as of now. R viz will get exported as table.
     * * If not set, TABLE_MODE is used as the default value during import.
     * </pre>
     *
     * <code>optional string display_mode = 11 [(.Annotation.allowed_values_key) = "edoc.display_mode"];</code>
     * @return Whether the displayMode field is set.
     */
    boolean hasDisplayMode();
    /**
     * <pre>
     * This decides whether to display TABLE or CHART when the answer is opened.
     * Based on AnswerDisplayMode enum defined in Blink.
     * Allowed Values: TABLE_MODE | CHART_MODE .
     * Keeping this string instead of bool for future extensibility. Blink uses a
     * third value (R_ANALYSIS) for R Visualizations.
     * * TML does not support R viz as of now. R viz will get exported as table.
     * * If not set, TABLE_MODE is used as the default value during import.
     * </pre>
     *
     * <code>optional string display_mode = 11 [(.Annotation.allowed_values_key) = "edoc.display_mode"];</code>
     * @return The displayMode.
     */
    java.lang.String getDisplayMode();
    /**
     * <pre>
     * This decides whether to display TABLE or CHART when the answer is opened.
     * Based on AnswerDisplayMode enum defined in Blink.
     * Allowed Values: TABLE_MODE | CHART_MODE .
     * Keeping this string instead of bool for future extensibility. Blink uses a
     * third value (R_ANALYSIS) for R Visualizations.
     * * TML does not support R viz as of now. R viz will get exported as table.
     * * If not set, TABLE_MODE is used as the default value during import.
     * </pre>
     *
     * <code>optional string display_mode = 11 [(.Annotation.allowed_values_key) = "edoc.display_mode"];</code>
     * @return The bytes for displayMode.
     */
    com.google.protobuf.ByteString
        getDisplayModeBytes();

    /**
     * <pre>
     * This field is for supporting answer column client state for old versions
     * where client state proto was not used
     * </pre>
     *
     * <code>optional string client_state = 12 [deprecated = true];</code>
     * @return Whether the clientState field is set.
     */
    @java.lang.Deprecated boolean hasClientState();
    /**
     * <pre>
     * This field is for supporting answer column client state for old versions
     * where client state proto was not used
     * </pre>
     *
     * <code>optional string client_state = 12 [deprecated = true];</code>
     * @return The clientState.
     */
    @java.lang.Deprecated java.lang.String getClientState();
    /**
     * <pre>
     * This field is for supporting answer column client state for old versions
     * where client state proto was not used
     * </pre>
     *
     * <code>optional string client_state = 12 [deprecated = true];</code>
     * @return The bytes for clientState.
     */
    @java.lang.Deprecated com.google.protobuf.ByteString
        getClientStateBytes();
  }
  /**
   * <pre>
   * Proto definition for answer doc.
   * A simple answer will look something like this in YAML.
   * name: Simple Answer
   * description: Description of a Simple Answer
   * tables:
   * - name: LinedOrderWS
   * search_query: [Revenue] [Commit Date].yearly [Region] = 'asia'
   * chart:
   *   type: COLUMN
   *   axis_configs:
   *   - x:
   *     - Yearly Commit Date
   *     y:
   *     - Revenue
   * Same answer using an AnswerColumn to create an alias for year column which is
   * then used in chart config.
   * name: Simple Answer
   * description: Description of a Simple Answer
   * tables:
   * - name: LinedOrderWS
   * search_query: [Revenue] [Commit Date].yearly [Region] = 'asia'
   * answer_columns:
   * - id: Year                                   // Alias created for Year.
   *   name: Yearly Commit Date
   *   custom_name: Year of Commit Date
   * chart:
   *   type: COLUMN
   *   axis_configs:
   *   - x:
   *     - Year                                   // Alias used in chart.
   *     y:
   *     - Revenue
   * </pre>
   *
   * Protobuf type {@code AnswerEDocProto}
   */
  public static final class AnswerEDocProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:AnswerEDocProto)
      AnswerEDocProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AnswerEDocProto.newBuilder() to construct.
    private AnswerEDocProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AnswerEDocProto() {
      name_ = "";
      description_ = "";
      tables_ = java.util.Collections.emptyList();
      joins_ = java.util.Collections.emptyList();
      tablePaths_ = java.util.Collections.emptyList();
      formulas_ = java.util.Collections.emptyList();
      searchQuery_ = "";
      answerColumns_ = java.util.Collections.emptyList();
      displayMode_ = "";
      clientState_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AnswerEDocProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AnswerEDocProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              description_ = bs;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                tables_ = new java.util.ArrayList<EDoc.Identity>();
                mutable_bitField0_ |= 0x00000004;
              }
              tables_.add(
                  input.readMessage(EDoc.Identity.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                joins_ = new java.util.ArrayList<EDoc.Join>();
                mutable_bitField0_ |= 0x00000008;
              }
              joins_.add(
                  input.readMessage(EDoc.Join.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                tablePaths_ = new java.util.ArrayList<EDoc.TablePath>();
                mutable_bitField0_ |= 0x00000010;
              }
              tablePaths_.add(
                  input.readMessage(EDoc.TablePath.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                formulas_ = new java.util.ArrayList<EDoc.Formula>();
                mutable_bitField0_ |= 0x00000020;
              }
              formulas_.add(
                  input.readMessage(EDoc.Formula.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              searchQuery_ = bs;
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                answerColumns_ = new java.util.ArrayList<EDoc.AnswerEDocProto.AnswerColumn>();
                mutable_bitField0_ |= 0x00000080;
              }
              answerColumns_.add(
                  input.readMessage(EDoc.AnswerEDocProto.AnswerColumn.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              EDoc.TableVisualization.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) != 0)) {
                subBuilder = table_.toBuilder();
              }
              table_ = input.readMessage(EDoc.TableVisualization.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(table_);
                table_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 82: {
              EDoc.ChartVisualization.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) != 0)) {
                subBuilder = chart_.toBuilder();
              }
              chart_ = input.readMessage(EDoc.ChartVisualization.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chart_);
                chart_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              displayMode_ = bs;
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              clientState_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          tables_ = java.util.Collections.unmodifiableList(tables_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          joins_ = java.util.Collections.unmodifiableList(joins_);
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          tablePaths_ = java.util.Collections.unmodifiableList(tablePaths_);
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          formulas_ = java.util.Collections.unmodifiableList(formulas_);
        }
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          answerColumns_ = java.util.Collections.unmodifiableList(answerColumns_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_AnswerEDocProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_AnswerEDocProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.AnswerEDocProto.class, EDoc.AnswerEDocProto.Builder.class);
    }

    public interface AnswerColumnOrBuilder extends
        // @@protoc_insertion_point(interface_extends:AnswerEDocProto.AnswerColumn)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * [OPTIONAL].
       * Alias for the column for easy referencing in the edoc.
       * If not specified &#64;name is used as the &#64;id.
       * TODO(Archit): If &#64;id is not specified but &#64;custom_name is specified,
       * should we use &#64;custom_name as the &#64;id? Also should we merge &#64;id and
       * &#64;custom_name into 1 field or keep them separate as they serve different
       * purpose.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return Whether the id field is set.
       */
      boolean hasId();
      /**
       * <pre>
       * [OPTIONAL].
       * Alias for the column for easy referencing in the edoc.
       * If not specified &#64;name is used as the &#64;id.
       * TODO(Archit): If &#64;id is not specified but &#64;custom_name is specified,
       * should we use &#64;custom_name as the &#64;id? Also should we merge &#64;id and
       * &#64;custom_name into 1 field or keep them separate as they serve different
       * purpose.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return The id.
       */
      java.lang.String getId();
      /**
       * <pre>
       * [OPTIONAL].
       * Alias for the column for easy referencing in the edoc.
       * If not specified &#64;name is used as the &#64;id.
       * TODO(Archit): If &#64;id is not specified but &#64;custom_name is specified,
       * should we use &#64;custom_name as the &#64;id? Also should we merge &#64;id and
       * &#64;custom_name into 1 field or keep them separate as they serve different
       * purpose.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return The bytes for id.
       */
      com.google.protobuf.ByteString
          getIdBytes();

      /**
       * <pre>
       * TODO(Archit): Should we rename "name" -&gt; query_column and "custom_name"
       * -&gt; "name". We can also just rename "custom_name" to "display_name".
       * [REQUIRED].
       * Auto generated name of the answer column from the search query.
       * Eg. Sum Revenue, Average Tax, ShipMode, Count Color, OrderDate Monthly.
       * This is how we will map the output columns of the search query to
       * AnswerEDoc's Answer Columns.
       * </pre>
       *
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       * TODO(Archit): Should we rename "name" -&gt; query_column and "custom_name"
       * -&gt; "name". We can also just rename "custom_name" to "display_name".
       * [REQUIRED].
       * Auto generated name of the answer column from the search query.
       * Eg. Sum Revenue, Average Tax, ShipMode, Count Color, OrderDate Monthly.
       * This is how we will map the output columns of the search query to
       * AnswerEDoc's Answer Columns.
       * </pre>
       *
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * TODO(Archit): Should we rename "name" -&gt; query_column and "custom_name"
       * -&gt; "name". We can also just rename "custom_name" to "display_name".
       * [REQUIRED].
       * Auto generated name of the answer column from the search query.
       * Eg. Sum Revenue, Average Tax, ShipMode, Count Color, OrderDate Monthly.
       * This is how we will map the output columns of the search query to
       * AnswerEDoc's Answer Columns.
       * </pre>
       *
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * [OPTIONAL].
       * Overriden display name specified by the user. If specified this will
       * replace auto generated &#64;name while rendering table or chart.
       * </pre>
       *
       * <code>optional string custom_name = 3;</code>
       * @return Whether the customName field is set.
       */
      boolean hasCustomName();
      /**
       * <pre>
       * [OPTIONAL].
       * Overriden display name specified by the user. If specified this will
       * replace auto generated &#64;name while rendering table or chart.
       * </pre>
       *
       * <code>optional string custom_name = 3;</code>
       * @return The customName.
       */
      java.lang.String getCustomName();
      /**
       * <pre>
       * [OPTIONAL].
       * Overriden display name specified by the user. If specified this will
       * replace auto generated &#64;name while rendering table or chart.
       * </pre>
       *
       * <code>optional string custom_name = 3;</code>
       * @return The bytes for customName.
       */
      com.google.protobuf.ByteString
          getCustomNameBytes();
    }
    /**
     * <pre>
     * AnswerColumn serves following purposes:
     * 1. Create a convinient alias (&#64;id) for output columns of search query.
     *    This enables easy referencing of the output columns in Table or Chart
     *    definitions.
     * 2. Attach some OPTIONAL user defined properties/overrides
     *    (eg. &#64;custom_name, &#64;format) to the output columns of search query.
     *    These properties are used across visualizations (Table and Chart),
     *    hence they are part of AnswerColumn instead of individal visualization
     *    columns (TableColumn/ChartColumn) .
     * 3. In future we can also support defining the output column here itself
     *    instead of using using search. This can be a new way of creating answers
     *    without using the search query.
     * Some notable points:
     * 1. If none of the properties/overrides are defined by the user for an
     *    OutputColumn then it is not necessary to define AnswerColumn for it.
     * 2. We can still define the AnswerColumn without properties/overrides just
     *    to create a convinient alias.
     * 3. If AnswerColumn is not defined, OutputColumn's auto-generated name
     *    (&#64;name) will be used for referencing it.
     * TODO(Archit): Should we break this into two protos? One for just defining
     * the alias and another one for properties/overrides.
     * </pre>
     *
     * Protobuf type {@code AnswerEDocProto.AnswerColumn}
     */
    public static final class AnswerColumn extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:AnswerEDocProto.AnswerColumn)
        AnswerColumnOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AnswerColumn.newBuilder() to construct.
      private AnswerColumn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AnswerColumn() {
        id_ = "";
        name_ = "";
        customName_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AnswerColumn();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AnswerColumn(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                id_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                name_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                customName_ = bs;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_AnswerEDocProto_AnswerColumn_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_AnswerEDocProto_AnswerColumn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.AnswerEDocProto.AnswerColumn.class, EDoc.AnswerEDocProto.AnswerColumn.Builder.class);
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object id_;
      /**
       * <pre>
       * [OPTIONAL].
       * Alias for the column for easy referencing in the edoc.
       * If not specified &#64;name is used as the &#64;id.
       * TODO(Archit): If &#64;id is not specified but &#64;custom_name is specified,
       * should we use &#64;custom_name as the &#64;id? Also should we merge &#64;id and
       * &#64;custom_name into 1 field or keep them separate as they serve different
       * purpose.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * [OPTIONAL].
       * Alias for the column for easy referencing in the edoc.
       * If not specified &#64;name is used as the &#64;id.
       * TODO(Archit): If &#64;id is not specified but &#64;custom_name is specified,
       * should we use &#64;custom_name as the &#64;id? Also should we merge &#64;id and
       * &#64;custom_name into 1 field or keep them separate as they serve different
       * purpose.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * [OPTIONAL].
       * Alias for the column for easy referencing in the edoc.
       * If not specified &#64;name is used as the &#64;id.
       * TODO(Archit): If &#64;id is not specified but &#64;custom_name is specified,
       * should we use &#64;custom_name as the &#64;id? Also should we merge &#64;id and
       * &#64;custom_name into 1 field or keep them separate as they serve different
       * purpose.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return The bytes for id.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int NAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * TODO(Archit): Should we rename "name" -&gt; query_column and "custom_name"
       * -&gt; "name". We can also just rename "custom_name" to "display_name".
       * [REQUIRED].
       * Auto generated name of the answer column from the search query.
       * Eg. Sum Revenue, Average Tax, ShipMode, Count Color, OrderDate Monthly.
       * This is how we will map the output columns of the search query to
       * AnswerEDoc's Answer Columns.
       * </pre>
       *
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * TODO(Archit): Should we rename "name" -&gt; query_column and "custom_name"
       * -&gt; "name". We can also just rename "custom_name" to "display_name".
       * [REQUIRED].
       * Auto generated name of the answer column from the search query.
       * Eg. Sum Revenue, Average Tax, ShipMode, Count Color, OrderDate Monthly.
       * This is how we will map the output columns of the search query to
       * AnswerEDoc's Answer Columns.
       * </pre>
       *
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * TODO(Archit): Should we rename "name" -&gt; query_column and "custom_name"
       * -&gt; "name". We can also just rename "custom_name" to "display_name".
       * [REQUIRED].
       * Auto generated name of the answer column from the search query.
       * Eg. Sum Revenue, Average Tax, ShipMode, Count Color, OrderDate Monthly.
       * This is how we will map the output columns of the search query to
       * AnswerEDoc's Answer Columns.
       * </pre>
       *
       * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CUSTOM_NAME_FIELD_NUMBER = 3;
      private volatile java.lang.Object customName_;
      /**
       * <pre>
       * [OPTIONAL].
       * Overriden display name specified by the user. If specified this will
       * replace auto generated &#64;name while rendering table or chart.
       * </pre>
       *
       * <code>optional string custom_name = 3;</code>
       * @return Whether the customName field is set.
       */
      @java.lang.Override
      public boolean hasCustomName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * [OPTIONAL].
       * Overriden display name specified by the user. If specified this will
       * replace auto generated &#64;name while rendering table or chart.
       * </pre>
       *
       * <code>optional string custom_name = 3;</code>
       * @return The customName.
       */
      @java.lang.Override
      public java.lang.String getCustomName() {
        java.lang.Object ref = customName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            customName_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * [OPTIONAL].
       * Overriden display name specified by the user. If specified this will
       * replace auto generated &#64;name while rendering table or chart.
       * </pre>
       *
       * <code>optional string custom_name = 3;</code>
       * @return The bytes for customName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getCustomNameBytes() {
        java.lang.Object ref = customName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          customName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, customName_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, customName_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.AnswerEDocProto.AnswerColumn)) {
          return super.equals(obj);
        }
        EDoc.AnswerEDocProto.AnswerColumn other = (EDoc.AnswerEDocProto.AnswerColumn) obj;

        if (hasId() != other.hasId()) return false;
        if (hasId()) {
          if (!getId()
              .equals(other.getId())) return false;
        }
        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasCustomName() != other.hasCustomName()) return false;
        if (hasCustomName()) {
          if (!getCustomName()
              .equals(other.getCustomName())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasId()) {
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId().hashCode();
        }
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasCustomName()) {
          hash = (37 * hash) + CUSTOM_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getCustomName().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.AnswerEDocProto.AnswerColumn parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.AnswerEDocProto.AnswerColumn parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.AnswerEDocProto.AnswerColumn parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.AnswerEDocProto.AnswerColumn parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.AnswerEDocProto.AnswerColumn parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.AnswerEDocProto.AnswerColumn parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.AnswerEDocProto.AnswerColumn parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.AnswerEDocProto.AnswerColumn parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.AnswerEDocProto.AnswerColumn parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.AnswerEDocProto.AnswerColumn parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.AnswerEDocProto.AnswerColumn parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.AnswerEDocProto.AnswerColumn parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.AnswerEDocProto.AnswerColumn prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * AnswerColumn serves following purposes:
       * 1. Create a convinient alias (&#64;id) for output columns of search query.
       *    This enables easy referencing of the output columns in Table or Chart
       *    definitions.
       * 2. Attach some OPTIONAL user defined properties/overrides
       *    (eg. &#64;custom_name, &#64;format) to the output columns of search query.
       *    These properties are used across visualizations (Table and Chart),
       *    hence they are part of AnswerColumn instead of individal visualization
       *    columns (TableColumn/ChartColumn) .
       * 3. In future we can also support defining the output column here itself
       *    instead of using using search. This can be a new way of creating answers
       *    without using the search query.
       * Some notable points:
       * 1. If none of the properties/overrides are defined by the user for an
       *    OutputColumn then it is not necessary to define AnswerColumn for it.
       * 2. We can still define the AnswerColumn without properties/overrides just
       *    to create a convinient alias.
       * 3. If AnswerColumn is not defined, OutputColumn's auto-generated name
       *    (&#64;name) will be used for referencing it.
       * TODO(Archit): Should we break this into two protos? One for just defining
       * the alias and another one for properties/overrides.
       * </pre>
       *
       * Protobuf type {@code AnswerEDocProto.AnswerColumn}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:AnswerEDocProto.AnswerColumn)
          EDoc.AnswerEDocProto.AnswerColumnOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_AnswerEDocProto_AnswerColumn_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_AnswerEDocProto_AnswerColumn_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.AnswerEDocProto.AnswerColumn.class, EDoc.AnswerEDocProto.AnswerColumn.Builder.class);
        }

        // Construct using EDoc.AnswerEDocProto.AnswerColumn.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          id_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          customName_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_AnswerEDocProto_AnswerColumn_descriptor;
        }

        @java.lang.Override
        public EDoc.AnswerEDocProto.AnswerColumn getDefaultInstanceForType() {
          return EDoc.AnswerEDocProto.AnswerColumn.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.AnswerEDocProto.AnswerColumn build() {
          EDoc.AnswerEDocProto.AnswerColumn result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.AnswerEDocProto.AnswerColumn buildPartial() {
          EDoc.AnswerEDocProto.AnswerColumn result = new EDoc.AnswerEDocProto.AnswerColumn(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            to_bitField0_ |= 0x00000004;
          }
          result.customName_ = customName_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.AnswerEDocProto.AnswerColumn) {
            return mergeFrom((EDoc.AnswerEDocProto.AnswerColumn)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.AnswerEDocProto.AnswerColumn other) {
          if (other == EDoc.AnswerEDocProto.AnswerColumn.getDefaultInstance()) return this;
          if (other.hasId()) {
            bitField0_ |= 0x00000001;
            id_ = other.id_;
            onChanged();
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000002;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasCustomName()) {
            bitField0_ |= 0x00000004;
            customName_ = other.customName_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.AnswerEDocProto.AnswerColumn parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.AnswerEDocProto.AnswerColumn) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object id_ = "";
        /**
         * <pre>
         * [OPTIONAL].
         * Alias for the column for easy referencing in the edoc.
         * If not specified &#64;name is used as the &#64;id.
         * TODO(Archit): If &#64;id is not specified but &#64;custom_name is specified,
         * should we use &#64;custom_name as the &#64;id? Also should we merge &#64;id and
         * &#64;custom_name into 1 field or keep them separate as they serve different
         * purpose.
         * </pre>
         *
         * <code>optional string id = 1;</code>
         * @return Whether the id field is set.
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Alias for the column for easy referencing in the edoc.
         * If not specified &#64;name is used as the &#64;id.
         * TODO(Archit): If &#64;id is not specified but &#64;custom_name is specified,
         * should we use &#64;custom_name as the &#64;id? Also should we merge &#64;id and
         * &#64;custom_name into 1 field or keep them separate as they serve different
         * purpose.
         * </pre>
         *
         * <code>optional string id = 1;</code>
         * @return The id.
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              id_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Alias for the column for easy referencing in the edoc.
         * If not specified &#64;name is used as the &#64;id.
         * TODO(Archit): If &#64;id is not specified but &#64;custom_name is specified,
         * should we use &#64;custom_name as the &#64;id? Also should we merge &#64;id and
         * &#64;custom_name into 1 field or keep them separate as they serve different
         * purpose.
         * </pre>
         *
         * <code>optional string id = 1;</code>
         * @return The bytes for id.
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Alias for the column for easy referencing in the edoc.
         * If not specified &#64;name is used as the &#64;id.
         * TODO(Archit): If &#64;id is not specified but &#64;custom_name is specified,
         * should we use &#64;custom_name as the &#64;id? Also should we merge &#64;id and
         * &#64;custom_name into 1 field or keep them separate as they serve different
         * purpose.
         * </pre>
         *
         * <code>optional string id = 1;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Alias for the column for easy referencing in the edoc.
         * If not specified &#64;name is used as the &#64;id.
         * TODO(Archit): If &#64;id is not specified but &#64;custom_name is specified,
         * should we use &#64;custom_name as the &#64;id? Also should we merge &#64;id and
         * &#64;custom_name into 1 field or keep them separate as they serve different
         * purpose.
         * </pre>
         *
         * <code>optional string id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Alias for the column for easy referencing in the edoc.
         * If not specified &#64;name is used as the &#64;id.
         * TODO(Archit): If &#64;id is not specified but &#64;custom_name is specified,
         * should we use &#64;custom_name as the &#64;id? Also should we merge &#64;id and
         * &#64;custom_name into 1 field or keep them separate as they serve different
         * purpose.
         * </pre>
         *
         * <code>optional string id = 1;</code>
         * @param value The bytes for id to set.
         * @return This builder for chaining.
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * TODO(Archit): Should we rename "name" -&gt; query_column and "custom_name"
         * -&gt; "name". We can also just rename "custom_name" to "display_name".
         * [REQUIRED].
         * Auto generated name of the answer column from the search query.
         * Eg. Sum Revenue, Average Tax, ShipMode, Count Color, OrderDate Monthly.
         * This is how we will map the output columns of the search query to
         * AnswerEDoc's Answer Columns.
         * </pre>
         *
         * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * TODO(Archit): Should we rename "name" -&gt; query_column and "custom_name"
         * -&gt; "name". We can also just rename "custom_name" to "display_name".
         * [REQUIRED].
         * Auto generated name of the answer column from the search query.
         * Eg. Sum Revenue, Average Tax, ShipMode, Count Color, OrderDate Monthly.
         * This is how we will map the output columns of the search query to
         * AnswerEDoc's Answer Columns.
         * </pre>
         *
         * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * TODO(Archit): Should we rename "name" -&gt; query_column and "custom_name"
         * -&gt; "name". We can also just rename "custom_name" to "display_name".
         * [REQUIRED].
         * Auto generated name of the answer column from the search query.
         * Eg. Sum Revenue, Average Tax, ShipMode, Count Color, OrderDate Monthly.
         * This is how we will map the output columns of the search query to
         * AnswerEDoc's Answer Columns.
         * </pre>
         *
         * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * TODO(Archit): Should we rename "name" -&gt; query_column and "custom_name"
         * -&gt; "name". We can also just rename "custom_name" to "display_name".
         * [REQUIRED].
         * Auto generated name of the answer column from the search query.
         * Eg. Sum Revenue, Average Tax, ShipMode, Count Color, OrderDate Monthly.
         * This is how we will map the output columns of the search query to
         * AnswerEDoc's Answer Columns.
         * </pre>
         *
         * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TODO(Archit): Should we rename "name" -&gt; query_column and "custom_name"
         * -&gt; "name". We can also just rename "custom_name" to "display_name".
         * [REQUIRED].
         * Auto generated name of the answer column from the search query.
         * Eg. Sum Revenue, Average Tax, ShipMode, Count Color, OrderDate Monthly.
         * This is how we will map the output columns of the search query to
         * AnswerEDoc's Answer Columns.
         * </pre>
         *
         * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TODO(Archit): Should we rename "name" -&gt; query_column and "custom_name"
         * -&gt; "name". We can also just rename "custom_name" to "display_name".
         * [REQUIRED].
         * Auto generated name of the answer column from the search query.
         * Eg. Sum Revenue, Average Tax, ShipMode, Count Color, OrderDate Monthly.
         * This is how we will map the output columns of the search query to
         * AnswerEDoc's Answer Columns.
         * </pre>
         *
         * <code>optional string name = 2 [(.Annotation.compulsory) = true];</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object customName_ = "";
        /**
         * <pre>
         * [OPTIONAL].
         * Overriden display name specified by the user. If specified this will
         * replace auto generated &#64;name while rendering table or chart.
         * </pre>
         *
         * <code>optional string custom_name = 3;</code>
         * @return Whether the customName field is set.
         */
        public boolean hasCustomName() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Overriden display name specified by the user. If specified this will
         * replace auto generated &#64;name while rendering table or chart.
         * </pre>
         *
         * <code>optional string custom_name = 3;</code>
         * @return The customName.
         */
        public java.lang.String getCustomName() {
          java.lang.Object ref = customName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              customName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Overriden display name specified by the user. If specified this will
         * replace auto generated &#64;name while rendering table or chart.
         * </pre>
         *
         * <code>optional string custom_name = 3;</code>
         * @return The bytes for customName.
         */
        public com.google.protobuf.ByteString
            getCustomNameBytes() {
          java.lang.Object ref = customName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            customName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Overriden display name specified by the user. If specified this will
         * replace auto generated &#64;name while rendering table or chart.
         * </pre>
         *
         * <code>optional string custom_name = 3;</code>
         * @param value The customName to set.
         * @return This builder for chaining.
         */
        public Builder setCustomName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          customName_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Overriden display name specified by the user. If specified this will
         * replace auto generated &#64;name while rendering table or chart.
         * </pre>
         *
         * <code>optional string custom_name = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearCustomName() {
          bitField0_ = (bitField0_ & ~0x00000004);
          customName_ = getDefaultInstance().getCustomName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [OPTIONAL].
         * Overriden display name specified by the user. If specified this will
         * replace auto generated &#64;name while rendering table or chart.
         * </pre>
         *
         * <code>optional string custom_name = 3;</code>
         * @param value The bytes for customName to set.
         * @return This builder for chaining.
         */
        public Builder setCustomNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          customName_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:AnswerEDocProto.AnswerColumn)
      }

      // @@protoc_insertion_point(class_scope:AnswerEDocProto.AnswerColumn)
      private static final EDoc.AnswerEDocProto.AnswerColumn DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.AnswerEDocProto.AnswerColumn();
      }

      public static EDoc.AnswerEDocProto.AnswerColumn getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<AnswerColumn>
          PARSER = new com.google.protobuf.AbstractParser<AnswerColumn>() {
        @java.lang.Override
        public AnswerColumn parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AnswerColumn(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AnswerColumn> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AnswerColumn> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.AnswerEDocProto.AnswerColumn getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Display name of the answer.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Display name of the answer.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Display name of the answer.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * Description of the answer.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return Whether the description field is set.
     */
    @java.lang.Override
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Description of the answer.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Description of the answer.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TABLES_FIELD_NUMBER = 3;
    private java.util.List<EDoc.Identity> tables_;
    /**
     * <pre>
     * All the tables referred in the answer.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.Identity> getTablesList() {
      return tables_;
    }
    /**
     * <pre>
     * All the tables referred in the answer.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.IdentityOrBuilder> 
        getTablesOrBuilderList() {
      return tables_;
    }
    /**
     * <pre>
     * All the tables referred in the answer.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public int getTablesCount() {
      return tables_.size();
    }
    /**
     * <pre>
     * All the tables referred in the answer.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public EDoc.Identity getTables(int index) {
      return tables_.get(index);
    }
    /**
     * <pre>
     * All the tables referred in the answer.
     * </pre>
     *
     * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
     */
    @java.lang.Override
    public EDoc.IdentityOrBuilder getTablesOrBuilder(
        int index) {
      return tables_.get(index);
    }

    public static final int JOINS_FIELD_NUMBER = 4;
    private java.util.List<EDoc.Join> joins_;
    /**
     * <pre>
     * Joins that are used in the answer.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.Join> getJoinsList() {
      return joins_;
    }
    /**
     * <pre>
     * Joins that are used in the answer.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.JoinOrBuilder> 
        getJoinsOrBuilderList() {
      return joins_;
    }
    /**
     * <pre>
     * Joins that are used in the answer.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public int getJoinsCount() {
      return joins_.size();
    }
    /**
     * <pre>
     * Joins that are used in the answer.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.Join getJoins(int index) {
      return joins_.get(index);
    }
    /**
     * <pre>
     * Joins that are used in the answer.
     * </pre>
     *
     * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.JoinOrBuilder getJoinsOrBuilder(
        int index) {
      return joins_.get(index);
    }

    public static final int TABLE_PATHS_FIELD_NUMBER = 5;
    private java.util.List<EDoc.TablePath> tablePaths_;
    /**
     * <pre>
     * Various manifestations of the tables in the answer.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.TablePath> getTablePathsList() {
      return tablePaths_;
    }
    /**
     * <pre>
     * Various manifestations of the tables in the answer.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.TablePathOrBuilder> 
        getTablePathsOrBuilderList() {
      return tablePaths_;
    }
    /**
     * <pre>
     * Various manifestations of the tables in the answer.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public int getTablePathsCount() {
      return tablePaths_.size();
    }
    /**
     * <pre>
     * Various manifestations of the tables in the answer.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.TablePath getTablePaths(int index) {
      return tablePaths_.get(index);
    }
    /**
     * <pre>
     * Various manifestations of the tables in the answer.
     * </pre>
     *
     * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.TablePathOrBuilder getTablePathsOrBuilder(
        int index) {
      return tablePaths_.get(index);
    }

    public static final int FORMULAS_FIELD_NUMBER = 6;
    private java.util.List<EDoc.Formula> formulas_;
    /**
     * <pre>
     * Formulas defined in the answer.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.Formula> getFormulasList() {
      return formulas_;
    }
    /**
     * <pre>
     * Formulas defined in the answer.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.FormulaOrBuilder> 
        getFormulasOrBuilderList() {
      return formulas_;
    }
    /**
     * <pre>
     * Formulas defined in the answer.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public int getFormulasCount() {
      return formulas_.size();
    }
    /**
     * <pre>
     * Formulas defined in the answer.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.Formula getFormulas(int index) {
      return formulas_.get(index);
    }
    /**
     * <pre>
     * Formulas defined in the answer.
     * </pre>
     *
     * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.FormulaOrBuilder getFormulasOrBuilder(
        int index) {
      return formulas_.get(index);
    }

    public static final int SEARCH_QUERY_FIELD_NUMBER = 7;
    private volatile java.lang.Object searchQuery_;
    /**
     * <pre>
     * String representing fully disambiguated Search Query.
     * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
     * </pre>
     *
     * <code>optional string search_query = 7;</code>
     * @return Whether the searchQuery field is set.
     */
    @java.lang.Override
    public boolean hasSearchQuery() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * String representing fully disambiguated Search Query.
     * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
     * </pre>
     *
     * <code>optional string search_query = 7;</code>
     * @return The searchQuery.
     */
    @java.lang.Override
    public java.lang.String getSearchQuery() {
      java.lang.Object ref = searchQuery_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          searchQuery_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * String representing fully disambiguated Search Query.
     * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
     * </pre>
     *
     * <code>optional string search_query = 7;</code>
     * @return The bytes for searchQuery.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSearchQueryBytes() {
      java.lang.Object ref = searchQuery_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        searchQuery_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ANSWER_COLUMNS_FIELD_NUMBER = 8;
    private java.util.List<EDoc.AnswerEDocProto.AnswerColumn> answerColumns_;
    /**
     * <pre>
     * List of columns generated by the search query.
     * </pre>
     *
     * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.AnswerEDocProto.AnswerColumn> getAnswerColumnsList() {
      return answerColumns_;
    }
    /**
     * <pre>
     * List of columns generated by the search query.
     * </pre>
     *
     * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.AnswerEDocProto.AnswerColumnOrBuilder> 
        getAnswerColumnsOrBuilderList() {
      return answerColumns_;
    }
    /**
     * <pre>
     * List of columns generated by the search query.
     * </pre>
     *
     * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
     */
    @java.lang.Override
    public int getAnswerColumnsCount() {
      return answerColumns_.size();
    }
    /**
     * <pre>
     * List of columns generated by the search query.
     * </pre>
     *
     * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
     */
    @java.lang.Override
    public EDoc.AnswerEDocProto.AnswerColumn getAnswerColumns(int index) {
      return answerColumns_.get(index);
    }
    /**
     * <pre>
     * List of columns generated by the search query.
     * </pre>
     *
     * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
     */
    @java.lang.Override
    public EDoc.AnswerEDocProto.AnswerColumnOrBuilder getAnswerColumnsOrBuilder(
        int index) {
      return answerColumns_.get(index);
    }

    public static final int TABLE_FIELD_NUMBER = 9;
    private EDoc.TableVisualization table_;
    /**
     * <pre>
     * Visualizations present in the answer.
     * </pre>
     *
     * <code>optional .TableVisualization table = 9;</code>
     * @return Whether the table field is set.
     */
    @java.lang.Override
    public boolean hasTable() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Visualizations present in the answer.
     * </pre>
     *
     * <code>optional .TableVisualization table = 9;</code>
     * @return The table.
     */
    @java.lang.Override
    public EDoc.TableVisualization getTable() {
      return table_ == null ? EDoc.TableVisualization.getDefaultInstance() : table_;
    }
    /**
     * <pre>
     * Visualizations present in the answer.
     * </pre>
     *
     * <code>optional .TableVisualization table = 9;</code>
     */
    @java.lang.Override
    public EDoc.TableVisualizationOrBuilder getTableOrBuilder() {
      return table_ == null ? EDoc.TableVisualization.getDefaultInstance() : table_;
    }

    public static final int CHART_FIELD_NUMBER = 10;
    private EDoc.ChartVisualization chart_;
    /**
     * <code>optional .ChartVisualization chart = 10;</code>
     * @return Whether the chart field is set.
     */
    @java.lang.Override
    public boolean hasChart() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional .ChartVisualization chart = 10;</code>
     * @return The chart.
     */
    @java.lang.Override
    public EDoc.ChartVisualization getChart() {
      return chart_ == null ? EDoc.ChartVisualization.getDefaultInstance() : chart_;
    }
    /**
     * <code>optional .ChartVisualization chart = 10;</code>
     */
    @java.lang.Override
    public EDoc.ChartVisualizationOrBuilder getChartOrBuilder() {
      return chart_ == null ? EDoc.ChartVisualization.getDefaultInstance() : chart_;
    }

    public static final int DISPLAY_MODE_FIELD_NUMBER = 11;
    private volatile java.lang.Object displayMode_;
    /**
     * <pre>
     * This decides whether to display TABLE or CHART when the answer is opened.
     * Based on AnswerDisplayMode enum defined in Blink.
     * Allowed Values: TABLE_MODE | CHART_MODE .
     * Keeping this string instead of bool for future extensibility. Blink uses a
     * third value (R_ANALYSIS) for R Visualizations.
     * * TML does not support R viz as of now. R viz will get exported as table.
     * * If not set, TABLE_MODE is used as the default value during import.
     * </pre>
     *
     * <code>optional string display_mode = 11 [(.Annotation.allowed_values_key) = "edoc.display_mode"];</code>
     * @return Whether the displayMode field is set.
     */
    @java.lang.Override
    public boolean hasDisplayMode() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * This decides whether to display TABLE or CHART when the answer is opened.
     * Based on AnswerDisplayMode enum defined in Blink.
     * Allowed Values: TABLE_MODE | CHART_MODE .
     * Keeping this string instead of bool for future extensibility. Blink uses a
     * third value (R_ANALYSIS) for R Visualizations.
     * * TML does not support R viz as of now. R viz will get exported as table.
     * * If not set, TABLE_MODE is used as the default value during import.
     * </pre>
     *
     * <code>optional string display_mode = 11 [(.Annotation.allowed_values_key) = "edoc.display_mode"];</code>
     * @return The displayMode.
     */
    @java.lang.Override
    public java.lang.String getDisplayMode() {
      java.lang.Object ref = displayMode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          displayMode_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * This decides whether to display TABLE or CHART when the answer is opened.
     * Based on AnswerDisplayMode enum defined in Blink.
     * Allowed Values: TABLE_MODE | CHART_MODE .
     * Keeping this string instead of bool for future extensibility. Blink uses a
     * third value (R_ANALYSIS) for R Visualizations.
     * * TML does not support R viz as of now. R viz will get exported as table.
     * * If not set, TABLE_MODE is used as the default value during import.
     * </pre>
     *
     * <code>optional string display_mode = 11 [(.Annotation.allowed_values_key) = "edoc.display_mode"];</code>
     * @return The bytes for displayMode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDisplayModeBytes() {
      java.lang.Object ref = displayMode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        displayMode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_STATE_FIELD_NUMBER = 12;
    private volatile java.lang.Object clientState_;
    /**
     * <pre>
     * This field is for supporting answer column client state for old versions
     * where client state proto was not used
     * </pre>
     *
     * <code>optional string client_state = 12 [deprecated = true];</code>
     * @return Whether the clientState field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasClientState() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * This field is for supporting answer column client state for old versions
     * where client state proto was not used
     * </pre>
     *
     * <code>optional string client_state = 12 [deprecated = true];</code>
     * @return The clientState.
     */
    @java.lang.Override
    @java.lang.Deprecated public java.lang.String getClientState() {
      java.lang.Object ref = clientState_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientState_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * This field is for supporting answer column client state for old versions
     * where client state proto was not used
     * </pre>
     *
     * <code>optional string client_state = 12 [deprecated = true];</code>
     * @return The bytes for clientState.
     */
    @java.lang.Override
    @java.lang.Deprecated public com.google.protobuf.ByteString
        getClientStateBytes() {
      java.lang.Object ref = clientState_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientState_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
      }
      for (int i = 0; i < tables_.size(); i++) {
        output.writeMessage(3, tables_.get(i));
      }
      for (int i = 0; i < joins_.size(); i++) {
        output.writeMessage(4, joins_.get(i));
      }
      for (int i = 0; i < tablePaths_.size(); i++) {
        output.writeMessage(5, tablePaths_.get(i));
      }
      for (int i = 0; i < formulas_.size(); i++) {
        output.writeMessage(6, formulas_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, searchQuery_);
      }
      for (int i = 0; i < answerColumns_.size(); i++) {
        output.writeMessage(8, answerColumns_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(9, getTable());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(10, getChart());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, displayMode_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, clientState_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
      }
      for (int i = 0; i < tables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tables_.get(i));
      }
      for (int i = 0; i < joins_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, joins_.get(i));
      }
      for (int i = 0; i < tablePaths_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, tablePaths_.get(i));
      }
      for (int i = 0; i < formulas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, formulas_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, searchQuery_);
      }
      for (int i = 0; i < answerColumns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, answerColumns_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getTable());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getChart());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, displayMode_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, clientState_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.AnswerEDocProto)) {
        return super.equals(obj);
      }
      EDoc.AnswerEDocProto other = (EDoc.AnswerEDocProto) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasDescription() != other.hasDescription()) return false;
      if (hasDescription()) {
        if (!getDescription()
            .equals(other.getDescription())) return false;
      }
      if (!getTablesList()
          .equals(other.getTablesList())) return false;
      if (!getJoinsList()
          .equals(other.getJoinsList())) return false;
      if (!getTablePathsList()
          .equals(other.getTablePathsList())) return false;
      if (!getFormulasList()
          .equals(other.getFormulasList())) return false;
      if (hasSearchQuery() != other.hasSearchQuery()) return false;
      if (hasSearchQuery()) {
        if (!getSearchQuery()
            .equals(other.getSearchQuery())) return false;
      }
      if (!getAnswerColumnsList()
          .equals(other.getAnswerColumnsList())) return false;
      if (hasTable() != other.hasTable()) return false;
      if (hasTable()) {
        if (!getTable()
            .equals(other.getTable())) return false;
      }
      if (hasChart() != other.hasChart()) return false;
      if (hasChart()) {
        if (!getChart()
            .equals(other.getChart())) return false;
      }
      if (hasDisplayMode() != other.hasDisplayMode()) return false;
      if (hasDisplayMode()) {
        if (!getDisplayMode()
            .equals(other.getDisplayMode())) return false;
      }
      if (hasClientState() != other.hasClientState()) return false;
      if (hasClientState()) {
        if (!getClientState()
            .equals(other.getClientState())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasDescription()) {
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription().hashCode();
      }
      if (getTablesCount() > 0) {
        hash = (37 * hash) + TABLES_FIELD_NUMBER;
        hash = (53 * hash) + getTablesList().hashCode();
      }
      if (getJoinsCount() > 0) {
        hash = (37 * hash) + JOINS_FIELD_NUMBER;
        hash = (53 * hash) + getJoinsList().hashCode();
      }
      if (getTablePathsCount() > 0) {
        hash = (37 * hash) + TABLE_PATHS_FIELD_NUMBER;
        hash = (53 * hash) + getTablePathsList().hashCode();
      }
      if (getFormulasCount() > 0) {
        hash = (37 * hash) + FORMULAS_FIELD_NUMBER;
        hash = (53 * hash) + getFormulasList().hashCode();
      }
      if (hasSearchQuery()) {
        hash = (37 * hash) + SEARCH_QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getSearchQuery().hashCode();
      }
      if (getAnswerColumnsCount() > 0) {
        hash = (37 * hash) + ANSWER_COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getAnswerColumnsList().hashCode();
      }
      if (hasTable()) {
        hash = (37 * hash) + TABLE_FIELD_NUMBER;
        hash = (53 * hash) + getTable().hashCode();
      }
      if (hasChart()) {
        hash = (37 * hash) + CHART_FIELD_NUMBER;
        hash = (53 * hash) + getChart().hashCode();
      }
      if (hasDisplayMode()) {
        hash = (37 * hash) + DISPLAY_MODE_FIELD_NUMBER;
        hash = (53 * hash) + getDisplayMode().hashCode();
      }
      if (hasClientState()) {
        hash = (37 * hash) + CLIENT_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getClientState().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.AnswerEDocProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.AnswerEDocProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.AnswerEDocProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.AnswerEDocProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.AnswerEDocProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.AnswerEDocProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.AnswerEDocProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.AnswerEDocProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.AnswerEDocProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.AnswerEDocProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.AnswerEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.AnswerEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.AnswerEDocProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Proto definition for answer doc.
     * A simple answer will look something like this in YAML.
     * name: Simple Answer
     * description: Description of a Simple Answer
     * tables:
     * - name: LinedOrderWS
     * search_query: [Revenue] [Commit Date].yearly [Region] = 'asia'
     * chart:
     *   type: COLUMN
     *   axis_configs:
     *   - x:
     *     - Yearly Commit Date
     *     y:
     *     - Revenue
     * Same answer using an AnswerColumn to create an alias for year column which is
     * then used in chart config.
     * name: Simple Answer
     * description: Description of a Simple Answer
     * tables:
     * - name: LinedOrderWS
     * search_query: [Revenue] [Commit Date].yearly [Region] = 'asia'
     * answer_columns:
     * - id: Year                                   // Alias created for Year.
     *   name: Yearly Commit Date
     *   custom_name: Year of Commit Date
     * chart:
     *   type: COLUMN
     *   axis_configs:
     *   - x:
     *     - Year                                   // Alias used in chart.
     *     y:
     *     - Revenue
     * </pre>
     *
     * Protobuf type {@code AnswerEDocProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:AnswerEDocProto)
        EDoc.AnswerEDocProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_AnswerEDocProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_AnswerEDocProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.AnswerEDocProto.class, EDoc.AnswerEDocProto.Builder.class);
      }

      // Construct using EDoc.AnswerEDocProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTablesFieldBuilder();
          getJoinsFieldBuilder();
          getTablePathsFieldBuilder();
          getFormulasFieldBuilder();
          getAnswerColumnsFieldBuilder();
          getTableFieldBuilder();
          getChartFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          tablesBuilder_.clear();
        }
        if (joinsBuilder_ == null) {
          joins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          joinsBuilder_.clear();
        }
        if (tablePathsBuilder_ == null) {
          tablePaths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          tablePathsBuilder_.clear();
        }
        if (formulasBuilder_ == null) {
          formulas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          formulasBuilder_.clear();
        }
        searchQuery_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        if (answerColumnsBuilder_ == null) {
          answerColumns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          answerColumnsBuilder_.clear();
        }
        if (tableBuilder_ == null) {
          table_ = null;
        } else {
          tableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (chartBuilder_ == null) {
          chart_ = null;
        } else {
          chartBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        displayMode_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        clientState_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_AnswerEDocProto_descriptor;
      }

      @java.lang.Override
      public EDoc.AnswerEDocProto getDefaultInstanceForType() {
        return EDoc.AnswerEDocProto.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.AnswerEDocProto build() {
        EDoc.AnswerEDocProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.AnswerEDocProto buildPartial() {
        EDoc.AnswerEDocProto result = new EDoc.AnswerEDocProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.description_ = description_;
        if (tablesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            tables_ = java.util.Collections.unmodifiableList(tables_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.tables_ = tables_;
        } else {
          result.tables_ = tablesBuilder_.build();
        }
        if (joinsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            joins_ = java.util.Collections.unmodifiableList(joins_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.joins_ = joins_;
        } else {
          result.joins_ = joinsBuilder_.build();
        }
        if (tablePathsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            tablePaths_ = java.util.Collections.unmodifiableList(tablePaths_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.tablePaths_ = tablePaths_;
        } else {
          result.tablePaths_ = tablePathsBuilder_.build();
        }
        if (formulasBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            formulas_ = java.util.Collections.unmodifiableList(formulas_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.formulas_ = formulas_;
        } else {
          result.formulas_ = formulasBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.searchQuery_ = searchQuery_;
        if (answerColumnsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)) {
            answerColumns_ = java.util.Collections.unmodifiableList(answerColumns_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.answerColumns_ = answerColumns_;
        } else {
          result.answerColumns_ = answerColumnsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          if (tableBuilder_ == null) {
            result.table_ = table_;
          } else {
            result.table_ = tableBuilder_.build();
          }
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          if (chartBuilder_ == null) {
            result.chart_ = chart_;
          } else {
            result.chart_ = chartBuilder_.build();
          }
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          to_bitField0_ |= 0x00000020;
        }
        result.displayMode_ = displayMode_;
        if (((from_bitField0_ & 0x00000800) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.clientState_ = clientState_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.AnswerEDocProto) {
          return mergeFrom((EDoc.AnswerEDocProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.AnswerEDocProto other) {
        if (other == EDoc.AnswerEDocProto.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000002;
          description_ = other.description_;
          onChanged();
        }
        if (tablesBuilder_ == null) {
          if (!other.tables_.isEmpty()) {
            if (tables_.isEmpty()) {
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTablesIsMutable();
              tables_.addAll(other.tables_);
            }
            onChanged();
          }
        } else {
          if (!other.tables_.isEmpty()) {
            if (tablesBuilder_.isEmpty()) {
              tablesBuilder_.dispose();
              tablesBuilder_ = null;
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000004);
              tablesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTablesFieldBuilder() : null;
            } else {
              tablesBuilder_.addAllMessages(other.tables_);
            }
          }
        }
        if (joinsBuilder_ == null) {
          if (!other.joins_.isEmpty()) {
            if (joins_.isEmpty()) {
              joins_ = other.joins_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureJoinsIsMutable();
              joins_.addAll(other.joins_);
            }
            onChanged();
          }
        } else {
          if (!other.joins_.isEmpty()) {
            if (joinsBuilder_.isEmpty()) {
              joinsBuilder_.dispose();
              joinsBuilder_ = null;
              joins_ = other.joins_;
              bitField0_ = (bitField0_ & ~0x00000008);
              joinsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getJoinsFieldBuilder() : null;
            } else {
              joinsBuilder_.addAllMessages(other.joins_);
            }
          }
        }
        if (tablePathsBuilder_ == null) {
          if (!other.tablePaths_.isEmpty()) {
            if (tablePaths_.isEmpty()) {
              tablePaths_ = other.tablePaths_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureTablePathsIsMutable();
              tablePaths_.addAll(other.tablePaths_);
            }
            onChanged();
          }
        } else {
          if (!other.tablePaths_.isEmpty()) {
            if (tablePathsBuilder_.isEmpty()) {
              tablePathsBuilder_.dispose();
              tablePathsBuilder_ = null;
              tablePaths_ = other.tablePaths_;
              bitField0_ = (bitField0_ & ~0x00000010);
              tablePathsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTablePathsFieldBuilder() : null;
            } else {
              tablePathsBuilder_.addAllMessages(other.tablePaths_);
            }
          }
        }
        if (formulasBuilder_ == null) {
          if (!other.formulas_.isEmpty()) {
            if (formulas_.isEmpty()) {
              formulas_ = other.formulas_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureFormulasIsMutable();
              formulas_.addAll(other.formulas_);
            }
            onChanged();
          }
        } else {
          if (!other.formulas_.isEmpty()) {
            if (formulasBuilder_.isEmpty()) {
              formulasBuilder_.dispose();
              formulasBuilder_ = null;
              formulas_ = other.formulas_;
              bitField0_ = (bitField0_ & ~0x00000020);
              formulasBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFormulasFieldBuilder() : null;
            } else {
              formulasBuilder_.addAllMessages(other.formulas_);
            }
          }
        }
        if (other.hasSearchQuery()) {
          bitField0_ |= 0x00000040;
          searchQuery_ = other.searchQuery_;
          onChanged();
        }
        if (answerColumnsBuilder_ == null) {
          if (!other.answerColumns_.isEmpty()) {
            if (answerColumns_.isEmpty()) {
              answerColumns_ = other.answerColumns_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureAnswerColumnsIsMutable();
              answerColumns_.addAll(other.answerColumns_);
            }
            onChanged();
          }
        } else {
          if (!other.answerColumns_.isEmpty()) {
            if (answerColumnsBuilder_.isEmpty()) {
              answerColumnsBuilder_.dispose();
              answerColumnsBuilder_ = null;
              answerColumns_ = other.answerColumns_;
              bitField0_ = (bitField0_ & ~0x00000080);
              answerColumnsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAnswerColumnsFieldBuilder() : null;
            } else {
              answerColumnsBuilder_.addAllMessages(other.answerColumns_);
            }
          }
        }
        if (other.hasTable()) {
          mergeTable(other.getTable());
        }
        if (other.hasChart()) {
          mergeChart(other.getChart());
        }
        if (other.hasDisplayMode()) {
          bitField0_ |= 0x00000400;
          displayMode_ = other.displayMode_;
          onChanged();
        }
        if (other.hasClientState()) {
          bitField0_ |= 0x00000800;
          clientState_ = other.clientState_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.AnswerEDocProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.AnswerEDocProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Display name of the answer.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Display name of the answer.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Display name of the answer.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Display name of the answer.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Display name of the answer.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Display name of the answer.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * Description of the answer.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return Whether the description field is set.
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Description of the answer.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Description of the answer.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Description of the answer.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Description of the answer.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Description of the answer.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }

      private java.util.List<EDoc.Identity> tables_ =
        java.util.Collections.emptyList();
      private void ensureTablesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          tables_ = new java.util.ArrayList<EDoc.Identity>(tables_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> tablesBuilder_;

      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public java.util.List<EDoc.Identity> getTablesList() {
        if (tablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tables_);
        } else {
          return tablesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public int getTablesCount() {
        if (tablesBuilder_ == null) {
          return tables_.size();
        } else {
          return tablesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.Identity getTables(int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);
        } else {
          return tablesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder setTables(
          int index, EDoc.Identity value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.set(index, value);
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder setTables(
          int index, EDoc.Identity.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.set(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addTables(EDoc.Identity value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addTables(
          int index, EDoc.Identity value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(index, value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addTables(
          EDoc.Identity.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addTables(
          int index, EDoc.Identity.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder addAllTables(
          java.lang.Iterable<? extends EDoc.Identity> values) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tables_);
          onChanged();
        } else {
          tablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder clearTables() {
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          tablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public Builder removeTables(int index) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.remove(index);
          onChanged();
        } else {
          tablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.Identity.Builder getTablesBuilder(
          int index) {
        return getTablesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.IdentityOrBuilder getTablesOrBuilder(
          int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);  } else {
          return tablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public java.util.List<? extends EDoc.IdentityOrBuilder> 
           getTablesOrBuilderList() {
        if (tablesBuilder_ != null) {
          return tablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tables_);
        }
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.Identity.Builder addTablesBuilder() {
        return getTablesFieldBuilder().addBuilder(
            EDoc.Identity.getDefaultInstance());
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public EDoc.Identity.Builder addTablesBuilder(
          int index) {
        return getTablesFieldBuilder().addBuilder(
            index, EDoc.Identity.getDefaultInstance());
      }
      /**
       * <pre>
       * All the tables referred in the answer.
       * </pre>
       *
       * <code>repeated .Identity tables = 3 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id,fqn"];</code>
       */
      public java.util.List<EDoc.Identity.Builder> 
           getTablesBuilderList() {
        return getTablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> 
          getTablesFieldBuilder() {
        if (tablesBuilder_ == null) {
          tablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder>(
                  tables_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          tables_ = null;
        }
        return tablesBuilder_;
      }

      private java.util.List<EDoc.Join> joins_ =
        java.util.Collections.emptyList();
      private void ensureJoinsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          joins_ = new java.util.ArrayList<EDoc.Join>(joins_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Join, EDoc.Join.Builder, EDoc.JoinOrBuilder> joinsBuilder_;

      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.Join> getJoinsList() {
        if (joinsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(joins_);
        } else {
          return joinsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public int getJoinsCount() {
        if (joinsBuilder_ == null) {
          return joins_.size();
        } else {
          return joinsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Join getJoins(int index) {
        if (joinsBuilder_ == null) {
          return joins_.get(index);
        } else {
          return joinsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setJoins(
          int index, EDoc.Join value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.set(index, value);
          onChanged();
        } else {
          joinsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setJoins(
          int index, EDoc.Join.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.set(index, builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addJoins(EDoc.Join value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.add(value);
          onChanged();
        } else {
          joinsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addJoins(
          int index, EDoc.Join value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.add(index, value);
          onChanged();
        } else {
          joinsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addJoins(
          EDoc.Join.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.add(builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addJoins(
          int index, EDoc.Join.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.add(index, builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addAllJoins(
          java.lang.Iterable<? extends EDoc.Join> values) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, joins_);
          onChanged();
        } else {
          joinsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder clearJoins() {
        if (joinsBuilder_ == null) {
          joins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          joinsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public Builder removeJoins(int index) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.remove(index);
          onChanged();
        } else {
          joinsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Join.Builder getJoinsBuilder(
          int index) {
        return getJoinsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.JoinOrBuilder getJoinsOrBuilder(
          int index) {
        if (joinsBuilder_ == null) {
          return joins_.get(index);  } else {
          return joinsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<? extends EDoc.JoinOrBuilder> 
           getJoinsOrBuilderList() {
        if (joinsBuilder_ != null) {
          return joinsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(joins_);
        }
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Join.Builder addJoinsBuilder() {
        return getJoinsFieldBuilder().addBuilder(
            EDoc.Join.getDefaultInstance());
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Join.Builder addJoinsBuilder(
          int index) {
        return getJoinsFieldBuilder().addBuilder(
            index, EDoc.Join.getDefaultInstance());
      }
      /**
       * <pre>
       * Joins that are used in the answer.
       * </pre>
       *
       * <code>repeated .Join joins = 4 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.Join.Builder> 
           getJoinsBuilderList() {
        return getJoinsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Join, EDoc.Join.Builder, EDoc.JoinOrBuilder> 
          getJoinsFieldBuilder() {
        if (joinsBuilder_ == null) {
          joinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.Join, EDoc.Join.Builder, EDoc.JoinOrBuilder>(
                  joins_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          joins_ = null;
        }
        return joinsBuilder_;
      }

      private java.util.List<EDoc.TablePath> tablePaths_ =
        java.util.Collections.emptyList();
      private void ensureTablePathsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          tablePaths_ = new java.util.ArrayList<EDoc.TablePath>(tablePaths_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.TablePath, EDoc.TablePath.Builder, EDoc.TablePathOrBuilder> tablePathsBuilder_;

      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.TablePath> getTablePathsList() {
        if (tablePathsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tablePaths_);
        } else {
          return tablePathsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public int getTablePathsCount() {
        if (tablePathsBuilder_ == null) {
          return tablePaths_.size();
        } else {
          return tablePathsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePath getTablePaths(int index) {
        if (tablePathsBuilder_ == null) {
          return tablePaths_.get(index);
        } else {
          return tablePathsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setTablePaths(
          int index, EDoc.TablePath value) {
        if (tablePathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablePathsIsMutable();
          tablePaths_.set(index, value);
          onChanged();
        } else {
          tablePathsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setTablePaths(
          int index, EDoc.TablePath.Builder builderForValue) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          tablePaths_.set(index, builderForValue.build());
          onChanged();
        } else {
          tablePathsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addTablePaths(EDoc.TablePath value) {
        if (tablePathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablePathsIsMutable();
          tablePaths_.add(value);
          onChanged();
        } else {
          tablePathsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addTablePaths(
          int index, EDoc.TablePath value) {
        if (tablePathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablePathsIsMutable();
          tablePaths_.add(index, value);
          onChanged();
        } else {
          tablePathsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addTablePaths(
          EDoc.TablePath.Builder builderForValue) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          tablePaths_.add(builderForValue.build());
          onChanged();
        } else {
          tablePathsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addTablePaths(
          int index, EDoc.TablePath.Builder builderForValue) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          tablePaths_.add(index, builderForValue.build());
          onChanged();
        } else {
          tablePathsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addAllTablePaths(
          java.lang.Iterable<? extends EDoc.TablePath> values) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tablePaths_);
          onChanged();
        } else {
          tablePathsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder clearTablePaths() {
        if (tablePathsBuilder_ == null) {
          tablePaths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          tablePathsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public Builder removeTablePaths(int index) {
        if (tablePathsBuilder_ == null) {
          ensureTablePathsIsMutable();
          tablePaths_.remove(index);
          onChanged();
        } else {
          tablePathsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePath.Builder getTablePathsBuilder(
          int index) {
        return getTablePathsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePathOrBuilder getTablePathsOrBuilder(
          int index) {
        if (tablePathsBuilder_ == null) {
          return tablePaths_.get(index);  } else {
          return tablePathsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<? extends EDoc.TablePathOrBuilder> 
           getTablePathsOrBuilderList() {
        if (tablePathsBuilder_ != null) {
          return tablePathsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tablePaths_);
        }
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePath.Builder addTablePathsBuilder() {
        return getTablePathsFieldBuilder().addBuilder(
            EDoc.TablePath.getDefaultInstance());
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.TablePath.Builder addTablePathsBuilder(
          int index) {
        return getTablePathsFieldBuilder().addBuilder(
            index, EDoc.TablePath.getDefaultInstance());
      }
      /**
       * <pre>
       * Various manifestations of the tables in the answer.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 5 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.TablePath.Builder> 
           getTablePathsBuilderList() {
        return getTablePathsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.TablePath, EDoc.TablePath.Builder, EDoc.TablePathOrBuilder> 
          getTablePathsFieldBuilder() {
        if (tablePathsBuilder_ == null) {
          tablePathsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.TablePath, EDoc.TablePath.Builder, EDoc.TablePathOrBuilder>(
                  tablePaths_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          tablePaths_ = null;
        }
        return tablePathsBuilder_;
      }

      private java.util.List<EDoc.Formula> formulas_ =
        java.util.Collections.emptyList();
      private void ensureFormulasIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          formulas_ = new java.util.ArrayList<EDoc.Formula>(formulas_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Formula, EDoc.Formula.Builder, EDoc.FormulaOrBuilder> formulasBuilder_;

      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.Formula> getFormulasList() {
        if (formulasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(formulas_);
        } else {
          return formulasBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public int getFormulasCount() {
        if (formulasBuilder_ == null) {
          return formulas_.size();
        } else {
          return formulasBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Formula getFormulas(int index) {
        if (formulasBuilder_ == null) {
          return formulas_.get(index);
        } else {
          return formulasBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setFormulas(
          int index, EDoc.Formula value) {
        if (formulasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormulasIsMutable();
          formulas_.set(index, value);
          onChanged();
        } else {
          formulasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder setFormulas(
          int index, EDoc.Formula.Builder builderForValue) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          formulas_.set(index, builderForValue.build());
          onChanged();
        } else {
          formulasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addFormulas(EDoc.Formula value) {
        if (formulasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormulasIsMutable();
          formulas_.add(value);
          onChanged();
        } else {
          formulasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addFormulas(
          int index, EDoc.Formula value) {
        if (formulasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormulasIsMutable();
          formulas_.add(index, value);
          onChanged();
        } else {
          formulasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addFormulas(
          EDoc.Formula.Builder builderForValue) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          formulas_.add(builderForValue.build());
          onChanged();
        } else {
          formulasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addFormulas(
          int index, EDoc.Formula.Builder builderForValue) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          formulas_.add(index, builderForValue.build());
          onChanged();
        } else {
          formulasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder addAllFormulas(
          java.lang.Iterable<? extends EDoc.Formula> values) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, formulas_);
          onChanged();
        } else {
          formulasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder clearFormulas() {
        if (formulasBuilder_ == null) {
          formulas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          formulasBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public Builder removeFormulas(int index) {
        if (formulasBuilder_ == null) {
          ensureFormulasIsMutable();
          formulas_.remove(index);
          onChanged();
        } else {
          formulasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Formula.Builder getFormulasBuilder(
          int index) {
        return getFormulasFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.FormulaOrBuilder getFormulasOrBuilder(
          int index) {
        if (formulasBuilder_ == null) {
          return formulas_.get(index);  } else {
          return formulasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<? extends EDoc.FormulaOrBuilder> 
           getFormulasOrBuilderList() {
        if (formulasBuilder_ != null) {
          return formulasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(formulas_);
        }
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Formula.Builder addFormulasBuilder() {
        return getFormulasFieldBuilder().addBuilder(
            EDoc.Formula.getDefaultInstance());
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public EDoc.Formula.Builder addFormulasBuilder(
          int index) {
        return getFormulasFieldBuilder().addBuilder(
            index, EDoc.Formula.getDefaultInstance());
      }
      /**
       * <pre>
       * Formulas defined in the answer.
       * </pre>
       *
       * <code>repeated .Formula formulas = 6 [(.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.Formula.Builder> 
           getFormulasBuilderList() {
        return getFormulasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Formula, EDoc.Formula.Builder, EDoc.FormulaOrBuilder> 
          getFormulasFieldBuilder() {
        if (formulasBuilder_ == null) {
          formulasBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.Formula, EDoc.Formula.Builder, EDoc.FormulaOrBuilder>(
                  formulas_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          formulas_ = null;
        }
        return formulasBuilder_;
      }

      private java.lang.Object searchQuery_ = "";
      /**
       * <pre>
       * String representing fully disambiguated Search Query.
       * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
       * </pre>
       *
       * <code>optional string search_query = 7;</code>
       * @return Whether the searchQuery field is set.
       */
      public boolean hasSearchQuery() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * String representing fully disambiguated Search Query.
       * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
       * </pre>
       *
       * <code>optional string search_query = 7;</code>
       * @return The searchQuery.
       */
      public java.lang.String getSearchQuery() {
        java.lang.Object ref = searchQuery_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            searchQuery_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * String representing fully disambiguated Search Query.
       * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
       * </pre>
       *
       * <code>optional string search_query = 7;</code>
       * @return The bytes for searchQuery.
       */
      public com.google.protobuf.ByteString
          getSearchQueryBytes() {
        java.lang.Object ref = searchQuery_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          searchQuery_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * String representing fully disambiguated Search Query.
       * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
       * </pre>
       *
       * <code>optional string search_query = 7;</code>
       * @param value The searchQuery to set.
       * @return This builder for chaining.
       */
      public Builder setSearchQuery(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        searchQuery_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * String representing fully disambiguated Search Query.
       * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
       * </pre>
       *
       * <code>optional string search_query = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSearchQuery() {
        bitField0_ = (bitField0_ & ~0x00000040);
        searchQuery_ = getDefaultInstance().getSearchQuery();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * String representing fully disambiguated Search Query.
       * Refer to https://docs.thoughtspot.com/latest/app-integrate/reference/search-data-api.html#components .
       * </pre>
       *
       * <code>optional string search_query = 7;</code>
       * @param value The bytes for searchQuery to set.
       * @return This builder for chaining.
       */
      public Builder setSearchQueryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        searchQuery_ = value;
        onChanged();
        return this;
      }

      private java.util.List<EDoc.AnswerEDocProto.AnswerColumn> answerColumns_ =
        java.util.Collections.emptyList();
      private void ensureAnswerColumnsIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          answerColumns_ = new java.util.ArrayList<EDoc.AnswerEDocProto.AnswerColumn>(answerColumns_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.AnswerEDocProto.AnswerColumn, EDoc.AnswerEDocProto.AnswerColumn.Builder, EDoc.AnswerEDocProto.AnswerColumnOrBuilder> answerColumnsBuilder_;

      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public java.util.List<EDoc.AnswerEDocProto.AnswerColumn> getAnswerColumnsList() {
        if (answerColumnsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(answerColumns_);
        } else {
          return answerColumnsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public int getAnswerColumnsCount() {
        if (answerColumnsBuilder_ == null) {
          return answerColumns_.size();
        } else {
          return answerColumnsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public EDoc.AnswerEDocProto.AnswerColumn getAnswerColumns(int index) {
        if (answerColumnsBuilder_ == null) {
          return answerColumns_.get(index);
        } else {
          return answerColumnsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public Builder setAnswerColumns(
          int index, EDoc.AnswerEDocProto.AnswerColumn value) {
        if (answerColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnswerColumnsIsMutable();
          answerColumns_.set(index, value);
          onChanged();
        } else {
          answerColumnsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public Builder setAnswerColumns(
          int index, EDoc.AnswerEDocProto.AnswerColumn.Builder builderForValue) {
        if (answerColumnsBuilder_ == null) {
          ensureAnswerColumnsIsMutable();
          answerColumns_.set(index, builderForValue.build());
          onChanged();
        } else {
          answerColumnsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public Builder addAnswerColumns(EDoc.AnswerEDocProto.AnswerColumn value) {
        if (answerColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnswerColumnsIsMutable();
          answerColumns_.add(value);
          onChanged();
        } else {
          answerColumnsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public Builder addAnswerColumns(
          int index, EDoc.AnswerEDocProto.AnswerColumn value) {
        if (answerColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnswerColumnsIsMutable();
          answerColumns_.add(index, value);
          onChanged();
        } else {
          answerColumnsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public Builder addAnswerColumns(
          EDoc.AnswerEDocProto.AnswerColumn.Builder builderForValue) {
        if (answerColumnsBuilder_ == null) {
          ensureAnswerColumnsIsMutable();
          answerColumns_.add(builderForValue.build());
          onChanged();
        } else {
          answerColumnsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public Builder addAnswerColumns(
          int index, EDoc.AnswerEDocProto.AnswerColumn.Builder builderForValue) {
        if (answerColumnsBuilder_ == null) {
          ensureAnswerColumnsIsMutable();
          answerColumns_.add(index, builderForValue.build());
          onChanged();
        } else {
          answerColumnsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public Builder addAllAnswerColumns(
          java.lang.Iterable<? extends EDoc.AnswerEDocProto.AnswerColumn> values) {
        if (answerColumnsBuilder_ == null) {
          ensureAnswerColumnsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, answerColumns_);
          onChanged();
        } else {
          answerColumnsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public Builder clearAnswerColumns() {
        if (answerColumnsBuilder_ == null) {
          answerColumns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          answerColumnsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public Builder removeAnswerColumns(int index) {
        if (answerColumnsBuilder_ == null) {
          ensureAnswerColumnsIsMutable();
          answerColumns_.remove(index);
          onChanged();
        } else {
          answerColumnsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public EDoc.AnswerEDocProto.AnswerColumn.Builder getAnswerColumnsBuilder(
          int index) {
        return getAnswerColumnsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public EDoc.AnswerEDocProto.AnswerColumnOrBuilder getAnswerColumnsOrBuilder(
          int index) {
        if (answerColumnsBuilder_ == null) {
          return answerColumns_.get(index);  } else {
          return answerColumnsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public java.util.List<? extends EDoc.AnswerEDocProto.AnswerColumnOrBuilder> 
           getAnswerColumnsOrBuilderList() {
        if (answerColumnsBuilder_ != null) {
          return answerColumnsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(answerColumns_);
        }
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public EDoc.AnswerEDocProto.AnswerColumn.Builder addAnswerColumnsBuilder() {
        return getAnswerColumnsFieldBuilder().addBuilder(
            EDoc.AnswerEDocProto.AnswerColumn.getDefaultInstance());
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public EDoc.AnswerEDocProto.AnswerColumn.Builder addAnswerColumnsBuilder(
          int index) {
        return getAnswerColumnsFieldBuilder().addBuilder(
            index, EDoc.AnswerEDocProto.AnswerColumn.getDefaultInstance());
      }
      /**
       * <pre>
       * List of columns generated by the search query.
       * </pre>
       *
       * <code>repeated .AnswerEDocProto.AnswerColumn answer_columns = 8 [(.Annotation.unique) = "id,name"];</code>
       */
      public java.util.List<EDoc.AnswerEDocProto.AnswerColumn.Builder> 
           getAnswerColumnsBuilderList() {
        return getAnswerColumnsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.AnswerEDocProto.AnswerColumn, EDoc.AnswerEDocProto.AnswerColumn.Builder, EDoc.AnswerEDocProto.AnswerColumnOrBuilder> 
          getAnswerColumnsFieldBuilder() {
        if (answerColumnsBuilder_ == null) {
          answerColumnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.AnswerEDocProto.AnswerColumn, EDoc.AnswerEDocProto.AnswerColumn.Builder, EDoc.AnswerEDocProto.AnswerColumnOrBuilder>(
                  answerColumns_,
                  ((bitField0_ & 0x00000080) != 0),
                  getParentForChildren(),
                  isClean());
          answerColumns_ = null;
        }
        return answerColumnsBuilder_;
      }

      private EDoc.TableVisualization table_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.TableVisualization, EDoc.TableVisualization.Builder, EDoc.TableVisualizationOrBuilder> tableBuilder_;
      /**
       * <pre>
       * Visualizations present in the answer.
       * </pre>
       *
       * <code>optional .TableVisualization table = 9;</code>
       * @return Whether the table field is set.
       */
      public boolean hasTable() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Visualizations present in the answer.
       * </pre>
       *
       * <code>optional .TableVisualization table = 9;</code>
       * @return The table.
       */
      public EDoc.TableVisualization getTable() {
        if (tableBuilder_ == null) {
          return table_ == null ? EDoc.TableVisualization.getDefaultInstance() : table_;
        } else {
          return tableBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Visualizations present in the answer.
       * </pre>
       *
       * <code>optional .TableVisualization table = 9;</code>
       */
      public Builder setTable(EDoc.TableVisualization value) {
        if (tableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          table_ = value;
          onChanged();
        } else {
          tableBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Visualizations present in the answer.
       * </pre>
       *
       * <code>optional .TableVisualization table = 9;</code>
       */
      public Builder setTable(
          EDoc.TableVisualization.Builder builderForValue) {
        if (tableBuilder_ == null) {
          table_ = builderForValue.build();
          onChanged();
        } else {
          tableBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Visualizations present in the answer.
       * </pre>
       *
       * <code>optional .TableVisualization table = 9;</code>
       */
      public Builder mergeTable(EDoc.TableVisualization value) {
        if (tableBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0) &&
              table_ != null &&
              table_ != EDoc.TableVisualization.getDefaultInstance()) {
            table_ =
              EDoc.TableVisualization.newBuilder(table_).mergeFrom(value).buildPartial();
          } else {
            table_ = value;
          }
          onChanged();
        } else {
          tableBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Visualizations present in the answer.
       * </pre>
       *
       * <code>optional .TableVisualization table = 9;</code>
       */
      public Builder clearTable() {
        if (tableBuilder_ == null) {
          table_ = null;
          onChanged();
        } else {
          tableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <pre>
       * Visualizations present in the answer.
       * </pre>
       *
       * <code>optional .TableVisualization table = 9;</code>
       */
      public EDoc.TableVisualization.Builder getTableBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getTableFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Visualizations present in the answer.
       * </pre>
       *
       * <code>optional .TableVisualization table = 9;</code>
       */
      public EDoc.TableVisualizationOrBuilder getTableOrBuilder() {
        if (tableBuilder_ != null) {
          return tableBuilder_.getMessageOrBuilder();
        } else {
          return table_ == null ?
              EDoc.TableVisualization.getDefaultInstance() : table_;
        }
      }
      /**
       * <pre>
       * Visualizations present in the answer.
       * </pre>
       *
       * <code>optional .TableVisualization table = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.TableVisualization, EDoc.TableVisualization.Builder, EDoc.TableVisualizationOrBuilder> 
          getTableFieldBuilder() {
        if (tableBuilder_ == null) {
          tableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.TableVisualization, EDoc.TableVisualization.Builder, EDoc.TableVisualizationOrBuilder>(
                  getTable(),
                  getParentForChildren(),
                  isClean());
          table_ = null;
        }
        return tableBuilder_;
      }

      private EDoc.ChartVisualization chart_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.ChartVisualization, EDoc.ChartVisualization.Builder, EDoc.ChartVisualizationOrBuilder> chartBuilder_;
      /**
       * <code>optional .ChartVisualization chart = 10;</code>
       * @return Whether the chart field is set.
       */
      public boolean hasChart() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional .ChartVisualization chart = 10;</code>
       * @return The chart.
       */
      public EDoc.ChartVisualization getChart() {
        if (chartBuilder_ == null) {
          return chart_ == null ? EDoc.ChartVisualization.getDefaultInstance() : chart_;
        } else {
          return chartBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ChartVisualization chart = 10;</code>
       */
      public Builder setChart(EDoc.ChartVisualization value) {
        if (chartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chart_ = value;
          onChanged();
        } else {
          chartBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ChartVisualization chart = 10;</code>
       */
      public Builder setChart(
          EDoc.ChartVisualization.Builder builderForValue) {
        if (chartBuilder_ == null) {
          chart_ = builderForValue.build();
          onChanged();
        } else {
          chartBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ChartVisualization chart = 10;</code>
       */
      public Builder mergeChart(EDoc.ChartVisualization value) {
        if (chartBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0) &&
              chart_ != null &&
              chart_ != EDoc.ChartVisualization.getDefaultInstance()) {
            chart_ =
              EDoc.ChartVisualization.newBuilder(chart_).mergeFrom(value).buildPartial();
          } else {
            chart_ = value;
          }
          onChanged();
        } else {
          chartBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ChartVisualization chart = 10;</code>
       */
      public Builder clearChart() {
        if (chartBuilder_ == null) {
          chart_ = null;
          onChanged();
        } else {
          chartBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .ChartVisualization chart = 10;</code>
       */
      public EDoc.ChartVisualization.Builder getChartBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getChartFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ChartVisualization chart = 10;</code>
       */
      public EDoc.ChartVisualizationOrBuilder getChartOrBuilder() {
        if (chartBuilder_ != null) {
          return chartBuilder_.getMessageOrBuilder();
        } else {
          return chart_ == null ?
              EDoc.ChartVisualization.getDefaultInstance() : chart_;
        }
      }
      /**
       * <code>optional .ChartVisualization chart = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.ChartVisualization, EDoc.ChartVisualization.Builder, EDoc.ChartVisualizationOrBuilder> 
          getChartFieldBuilder() {
        if (chartBuilder_ == null) {
          chartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.ChartVisualization, EDoc.ChartVisualization.Builder, EDoc.ChartVisualizationOrBuilder>(
                  getChart(),
                  getParentForChildren(),
                  isClean());
          chart_ = null;
        }
        return chartBuilder_;
      }

      private java.lang.Object displayMode_ = "";
      /**
       * <pre>
       * This decides whether to display TABLE or CHART when the answer is opened.
       * Based on AnswerDisplayMode enum defined in Blink.
       * Allowed Values: TABLE_MODE | CHART_MODE .
       * Keeping this string instead of bool for future extensibility. Blink uses a
       * third value (R_ANALYSIS) for R Visualizations.
       * * TML does not support R viz as of now. R viz will get exported as table.
       * * If not set, TABLE_MODE is used as the default value during import.
       * </pre>
       *
       * <code>optional string display_mode = 11 [(.Annotation.allowed_values_key) = "edoc.display_mode"];</code>
       * @return Whether the displayMode field is set.
       */
      public boolean hasDisplayMode() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * This decides whether to display TABLE or CHART when the answer is opened.
       * Based on AnswerDisplayMode enum defined in Blink.
       * Allowed Values: TABLE_MODE | CHART_MODE .
       * Keeping this string instead of bool for future extensibility. Blink uses a
       * third value (R_ANALYSIS) for R Visualizations.
       * * TML does not support R viz as of now. R viz will get exported as table.
       * * If not set, TABLE_MODE is used as the default value during import.
       * </pre>
       *
       * <code>optional string display_mode = 11 [(.Annotation.allowed_values_key) = "edoc.display_mode"];</code>
       * @return The displayMode.
       */
      public java.lang.String getDisplayMode() {
        java.lang.Object ref = displayMode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            displayMode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * This decides whether to display TABLE or CHART when the answer is opened.
       * Based on AnswerDisplayMode enum defined in Blink.
       * Allowed Values: TABLE_MODE | CHART_MODE .
       * Keeping this string instead of bool for future extensibility. Blink uses a
       * third value (R_ANALYSIS) for R Visualizations.
       * * TML does not support R viz as of now. R viz will get exported as table.
       * * If not set, TABLE_MODE is used as the default value during import.
       * </pre>
       *
       * <code>optional string display_mode = 11 [(.Annotation.allowed_values_key) = "edoc.display_mode"];</code>
       * @return The bytes for displayMode.
       */
      public com.google.protobuf.ByteString
          getDisplayModeBytes() {
        java.lang.Object ref = displayMode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          displayMode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * This decides whether to display TABLE or CHART when the answer is opened.
       * Based on AnswerDisplayMode enum defined in Blink.
       * Allowed Values: TABLE_MODE | CHART_MODE .
       * Keeping this string instead of bool for future extensibility. Blink uses a
       * third value (R_ANALYSIS) for R Visualizations.
       * * TML does not support R viz as of now. R viz will get exported as table.
       * * If not set, TABLE_MODE is used as the default value during import.
       * </pre>
       *
       * <code>optional string display_mode = 11 [(.Annotation.allowed_values_key) = "edoc.display_mode"];</code>
       * @param value The displayMode to set.
       * @return This builder for chaining.
       */
      public Builder setDisplayMode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        displayMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This decides whether to display TABLE or CHART when the answer is opened.
       * Based on AnswerDisplayMode enum defined in Blink.
       * Allowed Values: TABLE_MODE | CHART_MODE .
       * Keeping this string instead of bool for future extensibility. Blink uses a
       * third value (R_ANALYSIS) for R Visualizations.
       * * TML does not support R viz as of now. R viz will get exported as table.
       * * If not set, TABLE_MODE is used as the default value during import.
       * </pre>
       *
       * <code>optional string display_mode = 11 [(.Annotation.allowed_values_key) = "edoc.display_mode"];</code>
       * @return This builder for chaining.
       */
      public Builder clearDisplayMode() {
        bitField0_ = (bitField0_ & ~0x00000400);
        displayMode_ = getDefaultInstance().getDisplayMode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This decides whether to display TABLE or CHART when the answer is opened.
       * Based on AnswerDisplayMode enum defined in Blink.
       * Allowed Values: TABLE_MODE | CHART_MODE .
       * Keeping this string instead of bool for future extensibility. Blink uses a
       * third value (R_ANALYSIS) for R Visualizations.
       * * TML does not support R viz as of now. R viz will get exported as table.
       * * If not set, TABLE_MODE is used as the default value during import.
       * </pre>
       *
       * <code>optional string display_mode = 11 [(.Annotation.allowed_values_key) = "edoc.display_mode"];</code>
       * @param value The bytes for displayMode to set.
       * @return This builder for chaining.
       */
      public Builder setDisplayModeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        displayMode_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object clientState_ = "";
      /**
       * <pre>
       * This field is for supporting answer column client state for old versions
       * where client state proto was not used
       * </pre>
       *
       * <code>optional string client_state = 12 [deprecated = true];</code>
       * @return Whether the clientState field is set.
       */
      @java.lang.Deprecated public boolean hasClientState() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * This field is for supporting answer column client state for old versions
       * where client state proto was not used
       * </pre>
       *
       * <code>optional string client_state = 12 [deprecated = true];</code>
       * @return The clientState.
       */
      @java.lang.Deprecated public java.lang.String getClientState() {
        java.lang.Object ref = clientState_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientState_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * This field is for supporting answer column client state for old versions
       * where client state proto was not used
       * </pre>
       *
       * <code>optional string client_state = 12 [deprecated = true];</code>
       * @return The bytes for clientState.
       */
      @java.lang.Deprecated public com.google.protobuf.ByteString
          getClientStateBytes() {
        java.lang.Object ref = clientState_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientState_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * This field is for supporting answer column client state for old versions
       * where client state proto was not used
       * </pre>
       *
       * <code>optional string client_state = 12 [deprecated = true];</code>
       * @param value The clientState to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setClientState(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        clientState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is for supporting answer column client state for old versions
       * where client state proto was not used
       * </pre>
       *
       * <code>optional string client_state = 12 [deprecated = true];</code>
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearClientState() {
        bitField0_ = (bitField0_ & ~0x00000800);
        clientState_ = getDefaultInstance().getClientState();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is for supporting answer column client state for old versions
       * where client state proto was not used
       * </pre>
       *
       * <code>optional string client_state = 12 [deprecated = true];</code>
       * @param value The bytes for clientState to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setClientStateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        clientState_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:AnswerEDocProto)
    }

    // @@protoc_insertion_point(class_scope:AnswerEDocProto)
    private static final EDoc.AnswerEDocProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.AnswerEDocProto();
    }

    public static EDoc.AnswerEDocProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<AnswerEDocProto>
        PARSER = new com.google.protobuf.AbstractParser<AnswerEDocProto>() {
      @java.lang.Override
      public AnswerEDocProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AnswerEDocProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AnswerEDocProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AnswerEDocProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.AnswerEDocProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PinnedVisualizationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PinnedVisualization)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Id used to refer this pinned answer in PinboardEDocProto. For eg. while
     * defining the layout. If not populated &#64;answer.name will be used as the &#64;id.
     * NOTE: We are using "1" as field number for "id" because we want "id" to be
     * printed before the complete answer definition for better readability of the
     * exported pinboard TML file.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * Id used to refer this pinned answer in PinboardEDocProto. For eg. while
     * defining the layout. If not populated &#64;answer.name will be used as the &#64;id.
     * NOTE: We are using "1" as field number for "id" because we want "id" to be
     * printed before the complete answer definition for better readability of the
     * exported pinboard TML file.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * Id used to refer this pinned answer in PinboardEDocProto. For eg. while
     * defining the layout. If not populated &#64;answer.name will be used as the &#64;id.
     * NOTE: We are using "1" as field number for "id" because we want "id" to be
     * printed before the complete answer definition for better readability of the
     * exported pinboard TML file.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * Underlying answer of the pinned visualization.
     * </pre>
     *
     * <code>optional .AnswerEDocProto answer = 2;</code>
     * @return Whether the answer field is set.
     */
    boolean hasAnswer();
    /**
     * <pre>
     * Underlying answer of the pinned visualization.
     * </pre>
     *
     * <code>optional .AnswerEDocProto answer = 2;</code>
     * @return The answer.
     */
    EDoc.AnswerEDocProto getAnswer();
    /**
     * <pre>
     * Underlying answer of the pinned visualization.
     * </pre>
     *
     * <code>optional .AnswerEDocProto answer = 2;</code>
     */
    EDoc.AnswerEDocProtoOrBuilder getAnswerOrBuilder();

    /**
     * <pre>
     * This is needed to figure out which visualization of the answer should be
     * displayed in the pinboard. User can specify one of the following:
     *  1. TABLE
     *  2. CHART
     *  3. HEADLINE of an AnswerColumn. This can be specified as
     *     HEADLINE::AnswerColumnId. For eg. HEADLINE::Revenue.
     * optional string display_mode = 3;
     * **************** Alternate way to capture display_mode ******************.
     * For TABLE|CHART, &#64;answer.display_mode can suffice. Hence extra bit is
     * needed only if HEADLINE needs to be displayed. We can just have a field
     * to capture the headline's column name if headline needs to be displayed.
     * </pre>
     *
     * <code>optional string display_headline_column = 3;</code>
     * @return Whether the displayHeadlineColumn field is set.
     */
    boolean hasDisplayHeadlineColumn();
    /**
     * <pre>
     * This is needed to figure out which visualization of the answer should be
     * displayed in the pinboard. User can specify one of the following:
     *  1. TABLE
     *  2. CHART
     *  3. HEADLINE of an AnswerColumn. This can be specified as
     *     HEADLINE::AnswerColumnId. For eg. HEADLINE::Revenue.
     * optional string display_mode = 3;
     * **************** Alternate way to capture display_mode ******************.
     * For TABLE|CHART, &#64;answer.display_mode can suffice. Hence extra bit is
     * needed only if HEADLINE needs to be displayed. We can just have a field
     * to capture the headline's column name if headline needs to be displayed.
     * </pre>
     *
     * <code>optional string display_headline_column = 3;</code>
     * @return The displayHeadlineColumn.
     */
    java.lang.String getDisplayHeadlineColumn();
    /**
     * <pre>
     * This is needed to figure out which visualization of the answer should be
     * displayed in the pinboard. User can specify one of the following:
     *  1. TABLE
     *  2. CHART
     *  3. HEADLINE of an AnswerColumn. This can be specified as
     *     HEADLINE::AnswerColumnId. For eg. HEADLINE::Revenue.
     * optional string display_mode = 3;
     * **************** Alternate way to capture display_mode ******************.
     * For TABLE|CHART, &#64;answer.display_mode can suffice. Hence extra bit is
     * needed only if HEADLINE needs to be displayed. We can just have a field
     * to capture the headline's column name if headline needs to be displayed.
     * </pre>
     *
     * <code>optional string display_headline_column = 3;</code>
     * @return The bytes for displayHeadlineColumn.
     */
    com.google.protobuf.ByteString
        getDisplayHeadlineColumnBytes();

    /**
     * <pre>
     * Sub-type of generic viz. In case  of generic viz we there will only be a
     * subType rather than pinned answer. Note that a pinboard can still have pinned
     * answer in addition to generic viz.
     * </pre>
     *
     * <code>optional string generic_viz_sub_type = 4;</code>
     * @return Whether the genericVizSubType field is set.
     */
    boolean hasGenericVizSubType();
    /**
     * <pre>
     * Sub-type of generic viz. In case  of generic viz we there will only be a
     * subType rather than pinned answer. Note that a pinboard can still have pinned
     * answer in addition to generic viz.
     * </pre>
     *
     * <code>optional string generic_viz_sub_type = 4;</code>
     * @return The genericVizSubType.
     */
    java.lang.String getGenericVizSubType();
    /**
     * <pre>
     * Sub-type of generic viz. In case  of generic viz we there will only be a
     * subType rather than pinned answer. Note that a pinboard can still have pinned
     * answer in addition to generic viz.
     * </pre>
     *
     * <code>optional string generic_viz_sub_type = 4;</code>
     * @return The bytes for genericVizSubType.
     */
    com.google.protobuf.ByteString
        getGenericVizSubTypeBytes();
  }
  /**
   * <pre>
   * Proto for defining a visualization pinned to a pinboard.
   * </pre>
   *
   * Protobuf type {@code PinnedVisualization}
   */
  public static final class PinnedVisualization extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PinnedVisualization)
      PinnedVisualizationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PinnedVisualization.newBuilder() to construct.
    private PinnedVisualization(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PinnedVisualization() {
      id_ = "";
      displayHeadlineColumn_ = "";
      genericVizSubType_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PinnedVisualization();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PinnedVisualization(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            case 18: {
              EDoc.AnswerEDocProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) != 0)) {
                subBuilder = answer_.toBuilder();
              }
              answer_ = input.readMessage(EDoc.AnswerEDocProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(answer_);
                answer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              displayHeadlineColumn_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              genericVizSubType_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_PinnedVisualization_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_PinnedVisualization_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.PinnedVisualization.class, EDoc.PinnedVisualization.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * Id used to refer this pinned answer in PinboardEDocProto. For eg. while
     * defining the layout. If not populated &#64;answer.name will be used as the &#64;id.
     * NOTE: We are using "1" as field number for "id" because we want "id" to be
     * printed before the complete answer definition for better readability of the
     * exported pinboard TML file.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Id used to refer this pinned answer in PinboardEDocProto. For eg. while
     * defining the layout. If not populated &#64;answer.name will be used as the &#64;id.
     * NOTE: We are using "1" as field number for "id" because we want "id" to be
     * printed before the complete answer definition for better readability of the
     * exported pinboard TML file.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Id used to refer this pinned answer in PinboardEDocProto. For eg. while
     * defining the layout. If not populated &#64;answer.name will be used as the &#64;id.
     * NOTE: We are using "1" as field number for "id" because we want "id" to be
     * printed before the complete answer definition for better readability of the
     * exported pinboard TML file.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ANSWER_FIELD_NUMBER = 2;
    private EDoc.AnswerEDocProto answer_;
    /**
     * <pre>
     * Underlying answer of the pinned visualization.
     * </pre>
     *
     * <code>optional .AnswerEDocProto answer = 2;</code>
     * @return Whether the answer field is set.
     */
    @java.lang.Override
    public boolean hasAnswer() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Underlying answer of the pinned visualization.
     * </pre>
     *
     * <code>optional .AnswerEDocProto answer = 2;</code>
     * @return The answer.
     */
    @java.lang.Override
    public EDoc.AnswerEDocProto getAnswer() {
      return answer_ == null ? EDoc.AnswerEDocProto.getDefaultInstance() : answer_;
    }
    /**
     * <pre>
     * Underlying answer of the pinned visualization.
     * </pre>
     *
     * <code>optional .AnswerEDocProto answer = 2;</code>
     */
    @java.lang.Override
    public EDoc.AnswerEDocProtoOrBuilder getAnswerOrBuilder() {
      return answer_ == null ? EDoc.AnswerEDocProto.getDefaultInstance() : answer_;
    }

    public static final int DISPLAY_HEADLINE_COLUMN_FIELD_NUMBER = 3;
    private volatile java.lang.Object displayHeadlineColumn_;
    /**
     * <pre>
     * This is needed to figure out which visualization of the answer should be
     * displayed in the pinboard. User can specify one of the following:
     *  1. TABLE
     *  2. CHART
     *  3. HEADLINE of an AnswerColumn. This can be specified as
     *     HEADLINE::AnswerColumnId. For eg. HEADLINE::Revenue.
     * optional string display_mode = 3;
     * **************** Alternate way to capture display_mode ******************.
     * For TABLE|CHART, &#64;answer.display_mode can suffice. Hence extra bit is
     * needed only if HEADLINE needs to be displayed. We can just have a field
     * to capture the headline's column name if headline needs to be displayed.
     * </pre>
     *
     * <code>optional string display_headline_column = 3;</code>
     * @return Whether the displayHeadlineColumn field is set.
     */
    @java.lang.Override
    public boolean hasDisplayHeadlineColumn() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * This is needed to figure out which visualization of the answer should be
     * displayed in the pinboard. User can specify one of the following:
     *  1. TABLE
     *  2. CHART
     *  3. HEADLINE of an AnswerColumn. This can be specified as
     *     HEADLINE::AnswerColumnId. For eg. HEADLINE::Revenue.
     * optional string display_mode = 3;
     * **************** Alternate way to capture display_mode ******************.
     * For TABLE|CHART, &#64;answer.display_mode can suffice. Hence extra bit is
     * needed only if HEADLINE needs to be displayed. We can just have a field
     * to capture the headline's column name if headline needs to be displayed.
     * </pre>
     *
     * <code>optional string display_headline_column = 3;</code>
     * @return The displayHeadlineColumn.
     */
    @java.lang.Override
    public java.lang.String getDisplayHeadlineColumn() {
      java.lang.Object ref = displayHeadlineColumn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          displayHeadlineColumn_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * This is needed to figure out which visualization of the answer should be
     * displayed in the pinboard. User can specify one of the following:
     *  1. TABLE
     *  2. CHART
     *  3. HEADLINE of an AnswerColumn. This can be specified as
     *     HEADLINE::AnswerColumnId. For eg. HEADLINE::Revenue.
     * optional string display_mode = 3;
     * **************** Alternate way to capture display_mode ******************.
     * For TABLE|CHART, &#64;answer.display_mode can suffice. Hence extra bit is
     * needed only if HEADLINE needs to be displayed. We can just have a field
     * to capture the headline's column name if headline needs to be displayed.
     * </pre>
     *
     * <code>optional string display_headline_column = 3;</code>
     * @return The bytes for displayHeadlineColumn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDisplayHeadlineColumnBytes() {
      java.lang.Object ref = displayHeadlineColumn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        displayHeadlineColumn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GENERIC_VIZ_SUB_TYPE_FIELD_NUMBER = 4;
    private volatile java.lang.Object genericVizSubType_;
    /**
     * <pre>
     * Sub-type of generic viz. In case  of generic viz we there will only be a
     * subType rather than pinned answer. Note that a pinboard can still have pinned
     * answer in addition to generic viz.
     * </pre>
     *
     * <code>optional string generic_viz_sub_type = 4;</code>
     * @return Whether the genericVizSubType field is set.
     */
    @java.lang.Override
    public boolean hasGenericVizSubType() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Sub-type of generic viz. In case  of generic viz we there will only be a
     * subType rather than pinned answer. Note that a pinboard can still have pinned
     * answer in addition to generic viz.
     * </pre>
     *
     * <code>optional string generic_viz_sub_type = 4;</code>
     * @return The genericVizSubType.
     */
    @java.lang.Override
    public java.lang.String getGenericVizSubType() {
      java.lang.Object ref = genericVizSubType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          genericVizSubType_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Sub-type of generic viz. In case  of generic viz we there will only be a
     * subType rather than pinned answer. Note that a pinboard can still have pinned
     * answer in addition to generic viz.
     * </pre>
     *
     * <code>optional string generic_viz_sub_type = 4;</code>
     * @return The bytes for genericVizSubType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGenericVizSubTypeBytes() {
      java.lang.Object ref = genericVizSubType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        genericVizSubType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getAnswer());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, displayHeadlineColumn_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, genericVizSubType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAnswer());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, displayHeadlineColumn_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, genericVizSubType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.PinnedVisualization)) {
        return super.equals(obj);
      }
      EDoc.PinnedVisualization other = (EDoc.PinnedVisualization) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (hasAnswer() != other.hasAnswer()) return false;
      if (hasAnswer()) {
        if (!getAnswer()
            .equals(other.getAnswer())) return false;
      }
      if (hasDisplayHeadlineColumn() != other.hasDisplayHeadlineColumn()) return false;
      if (hasDisplayHeadlineColumn()) {
        if (!getDisplayHeadlineColumn()
            .equals(other.getDisplayHeadlineColumn())) return false;
      }
      if (hasGenericVizSubType() != other.hasGenericVizSubType()) return false;
      if (hasGenericVizSubType()) {
        if (!getGenericVizSubType()
            .equals(other.getGenericVizSubType())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasAnswer()) {
        hash = (37 * hash) + ANSWER_FIELD_NUMBER;
        hash = (53 * hash) + getAnswer().hashCode();
      }
      if (hasDisplayHeadlineColumn()) {
        hash = (37 * hash) + DISPLAY_HEADLINE_COLUMN_FIELD_NUMBER;
        hash = (53 * hash) + getDisplayHeadlineColumn().hashCode();
      }
      if (hasGenericVizSubType()) {
        hash = (37 * hash) + GENERIC_VIZ_SUB_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getGenericVizSubType().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.PinnedVisualization parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.PinnedVisualization parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.PinnedVisualization parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.PinnedVisualization parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.PinnedVisualization parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.PinnedVisualization parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.PinnedVisualization parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.PinnedVisualization parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.PinnedVisualization parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.PinnedVisualization parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.PinnedVisualization parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.PinnedVisualization parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.PinnedVisualization prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Proto for defining a visualization pinned to a pinboard.
     * </pre>
     *
     * Protobuf type {@code PinnedVisualization}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PinnedVisualization)
        EDoc.PinnedVisualizationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_PinnedVisualization_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_PinnedVisualization_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.PinnedVisualization.class, EDoc.PinnedVisualization.Builder.class);
      }

      // Construct using EDoc.PinnedVisualization.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAnswerFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (answerBuilder_ == null) {
          answer_ = null;
        } else {
          answerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        displayHeadlineColumn_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        genericVizSubType_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_PinnedVisualization_descriptor;
      }

      @java.lang.Override
      public EDoc.PinnedVisualization getDefaultInstanceForType() {
        return EDoc.PinnedVisualization.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.PinnedVisualization build() {
        EDoc.PinnedVisualization result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.PinnedVisualization buildPartial() {
        EDoc.PinnedVisualization result = new EDoc.PinnedVisualization(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (answerBuilder_ == null) {
            result.answer_ = answer_;
          } else {
            result.answer_ = answerBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.displayHeadlineColumn_ = displayHeadlineColumn_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.genericVizSubType_ = genericVizSubType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.PinnedVisualization) {
          return mergeFrom((EDoc.PinnedVisualization)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.PinnedVisualization other) {
        if (other == EDoc.PinnedVisualization.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasAnswer()) {
          mergeAnswer(other.getAnswer());
        }
        if (other.hasDisplayHeadlineColumn()) {
          bitField0_ |= 0x00000004;
          displayHeadlineColumn_ = other.displayHeadlineColumn_;
          onChanged();
        }
        if (other.hasGenericVizSubType()) {
          bitField0_ |= 0x00000008;
          genericVizSubType_ = other.genericVizSubType_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.PinnedVisualization parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.PinnedVisualization) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * Id used to refer this pinned answer in PinboardEDocProto. For eg. while
       * defining the layout. If not populated &#64;answer.name will be used as the &#64;id.
       * NOTE: We are using "1" as field number for "id" because we want "id" to be
       * printed before the complete answer definition for better readability of the
       * exported pinboard TML file.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Id used to refer this pinned answer in PinboardEDocProto. For eg. while
       * defining the layout. If not populated &#64;answer.name will be used as the &#64;id.
       * NOTE: We are using "1" as field number for "id" because we want "id" to be
       * printed before the complete answer definition for better readability of the
       * exported pinboard TML file.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Id used to refer this pinned answer in PinboardEDocProto. For eg. while
       * defining the layout. If not populated &#64;answer.name will be used as the &#64;id.
       * NOTE: We are using "1" as field number for "id" because we want "id" to be
       * printed before the complete answer definition for better readability of the
       * exported pinboard TML file.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Id used to refer this pinned answer in PinboardEDocProto. For eg. while
       * defining the layout. If not populated &#64;answer.name will be used as the &#64;id.
       * NOTE: We are using "1" as field number for "id" because we want "id" to be
       * printed before the complete answer definition for better readability of the
       * exported pinboard TML file.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id used to refer this pinned answer in PinboardEDocProto. For eg. while
       * defining the layout. If not populated &#64;answer.name will be used as the &#64;id.
       * NOTE: We are using "1" as field number for "id" because we want "id" to be
       * printed before the complete answer definition for better readability of the
       * exported pinboard TML file.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id used to refer this pinned answer in PinboardEDocProto. For eg. while
       * defining the layout. If not populated &#64;answer.name will be used as the &#64;id.
       * NOTE: We are using "1" as field number for "id" because we want "id" to be
       * printed before the complete answer definition for better readability of the
       * exported pinboard TML file.
       * </pre>
       *
       * <code>optional string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private EDoc.AnswerEDocProto answer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.AnswerEDocProto, EDoc.AnswerEDocProto.Builder, EDoc.AnswerEDocProtoOrBuilder> answerBuilder_;
      /**
       * <pre>
       * Underlying answer of the pinned visualization.
       * </pre>
       *
       * <code>optional .AnswerEDocProto answer = 2;</code>
       * @return Whether the answer field is set.
       */
      public boolean hasAnswer() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Underlying answer of the pinned visualization.
       * </pre>
       *
       * <code>optional .AnswerEDocProto answer = 2;</code>
       * @return The answer.
       */
      public EDoc.AnswerEDocProto getAnswer() {
        if (answerBuilder_ == null) {
          return answer_ == null ? EDoc.AnswerEDocProto.getDefaultInstance() : answer_;
        } else {
          return answerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Underlying answer of the pinned visualization.
       * </pre>
       *
       * <code>optional .AnswerEDocProto answer = 2;</code>
       */
      public Builder setAnswer(EDoc.AnswerEDocProto value) {
        if (answerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          answer_ = value;
          onChanged();
        } else {
          answerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Underlying answer of the pinned visualization.
       * </pre>
       *
       * <code>optional .AnswerEDocProto answer = 2;</code>
       */
      public Builder setAnswer(
          EDoc.AnswerEDocProto.Builder builderForValue) {
        if (answerBuilder_ == null) {
          answer_ = builderForValue.build();
          onChanged();
        } else {
          answerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Underlying answer of the pinned visualization.
       * </pre>
       *
       * <code>optional .AnswerEDocProto answer = 2;</code>
       */
      public Builder mergeAnswer(EDoc.AnswerEDocProto value) {
        if (answerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              answer_ != null &&
              answer_ != EDoc.AnswerEDocProto.getDefaultInstance()) {
            answer_ =
              EDoc.AnswerEDocProto.newBuilder(answer_).mergeFrom(value).buildPartial();
          } else {
            answer_ = value;
          }
          onChanged();
        } else {
          answerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Underlying answer of the pinned visualization.
       * </pre>
       *
       * <code>optional .AnswerEDocProto answer = 2;</code>
       */
      public Builder clearAnswer() {
        if (answerBuilder_ == null) {
          answer_ = null;
          onChanged();
        } else {
          answerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * Underlying answer of the pinned visualization.
       * </pre>
       *
       * <code>optional .AnswerEDocProto answer = 2;</code>
       */
      public EDoc.AnswerEDocProto.Builder getAnswerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAnswerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Underlying answer of the pinned visualization.
       * </pre>
       *
       * <code>optional .AnswerEDocProto answer = 2;</code>
       */
      public EDoc.AnswerEDocProtoOrBuilder getAnswerOrBuilder() {
        if (answerBuilder_ != null) {
          return answerBuilder_.getMessageOrBuilder();
        } else {
          return answer_ == null ?
              EDoc.AnswerEDocProto.getDefaultInstance() : answer_;
        }
      }
      /**
       * <pre>
       * Underlying answer of the pinned visualization.
       * </pre>
       *
       * <code>optional .AnswerEDocProto answer = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.AnswerEDocProto, EDoc.AnswerEDocProto.Builder, EDoc.AnswerEDocProtoOrBuilder> 
          getAnswerFieldBuilder() {
        if (answerBuilder_ == null) {
          answerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.AnswerEDocProto, EDoc.AnswerEDocProto.Builder, EDoc.AnswerEDocProtoOrBuilder>(
                  getAnswer(),
                  getParentForChildren(),
                  isClean());
          answer_ = null;
        }
        return answerBuilder_;
      }

      private java.lang.Object displayHeadlineColumn_ = "";
      /**
       * <pre>
       * This is needed to figure out which visualization of the answer should be
       * displayed in the pinboard. User can specify one of the following:
       *  1. TABLE
       *  2. CHART
       *  3. HEADLINE of an AnswerColumn. This can be specified as
       *     HEADLINE::AnswerColumnId. For eg. HEADLINE::Revenue.
       * optional string display_mode = 3;
       * **************** Alternate way to capture display_mode ******************.
       * For TABLE|CHART, &#64;answer.display_mode can suffice. Hence extra bit is
       * needed only if HEADLINE needs to be displayed. We can just have a field
       * to capture the headline's column name if headline needs to be displayed.
       * </pre>
       *
       * <code>optional string display_headline_column = 3;</code>
       * @return Whether the displayHeadlineColumn field is set.
       */
      public boolean hasDisplayHeadlineColumn() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * This is needed to figure out which visualization of the answer should be
       * displayed in the pinboard. User can specify one of the following:
       *  1. TABLE
       *  2. CHART
       *  3. HEADLINE of an AnswerColumn. This can be specified as
       *     HEADLINE::AnswerColumnId. For eg. HEADLINE::Revenue.
       * optional string display_mode = 3;
       * **************** Alternate way to capture display_mode ******************.
       * For TABLE|CHART, &#64;answer.display_mode can suffice. Hence extra bit is
       * needed only if HEADLINE needs to be displayed. We can just have a field
       * to capture the headline's column name if headline needs to be displayed.
       * </pre>
       *
       * <code>optional string display_headline_column = 3;</code>
       * @return The displayHeadlineColumn.
       */
      public java.lang.String getDisplayHeadlineColumn() {
        java.lang.Object ref = displayHeadlineColumn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            displayHeadlineColumn_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * This is needed to figure out which visualization of the answer should be
       * displayed in the pinboard. User can specify one of the following:
       *  1. TABLE
       *  2. CHART
       *  3. HEADLINE of an AnswerColumn. This can be specified as
       *     HEADLINE::AnswerColumnId. For eg. HEADLINE::Revenue.
       * optional string display_mode = 3;
       * **************** Alternate way to capture display_mode ******************.
       * For TABLE|CHART, &#64;answer.display_mode can suffice. Hence extra bit is
       * needed only if HEADLINE needs to be displayed. We can just have a field
       * to capture the headline's column name if headline needs to be displayed.
       * </pre>
       *
       * <code>optional string display_headline_column = 3;</code>
       * @return The bytes for displayHeadlineColumn.
       */
      public com.google.protobuf.ByteString
          getDisplayHeadlineColumnBytes() {
        java.lang.Object ref = displayHeadlineColumn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          displayHeadlineColumn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * This is needed to figure out which visualization of the answer should be
       * displayed in the pinboard. User can specify one of the following:
       *  1. TABLE
       *  2. CHART
       *  3. HEADLINE of an AnswerColumn. This can be specified as
       *     HEADLINE::AnswerColumnId. For eg. HEADLINE::Revenue.
       * optional string display_mode = 3;
       * **************** Alternate way to capture display_mode ******************.
       * For TABLE|CHART, &#64;answer.display_mode can suffice. Hence extra bit is
       * needed only if HEADLINE needs to be displayed. We can just have a field
       * to capture the headline's column name if headline needs to be displayed.
       * </pre>
       *
       * <code>optional string display_headline_column = 3;</code>
       * @param value The displayHeadlineColumn to set.
       * @return This builder for chaining.
       */
      public Builder setDisplayHeadlineColumn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        displayHeadlineColumn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is needed to figure out which visualization of the answer should be
       * displayed in the pinboard. User can specify one of the following:
       *  1. TABLE
       *  2. CHART
       *  3. HEADLINE of an AnswerColumn. This can be specified as
       *     HEADLINE::AnswerColumnId. For eg. HEADLINE::Revenue.
       * optional string display_mode = 3;
       * **************** Alternate way to capture display_mode ******************.
       * For TABLE|CHART, &#64;answer.display_mode can suffice. Hence extra bit is
       * needed only if HEADLINE needs to be displayed. We can just have a field
       * to capture the headline's column name if headline needs to be displayed.
       * </pre>
       *
       * <code>optional string display_headline_column = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisplayHeadlineColumn() {
        bitField0_ = (bitField0_ & ~0x00000004);
        displayHeadlineColumn_ = getDefaultInstance().getDisplayHeadlineColumn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is needed to figure out which visualization of the answer should be
       * displayed in the pinboard. User can specify one of the following:
       *  1. TABLE
       *  2. CHART
       *  3. HEADLINE of an AnswerColumn. This can be specified as
       *     HEADLINE::AnswerColumnId. For eg. HEADLINE::Revenue.
       * optional string display_mode = 3;
       * **************** Alternate way to capture display_mode ******************.
       * For TABLE|CHART, &#64;answer.display_mode can suffice. Hence extra bit is
       * needed only if HEADLINE needs to be displayed. We can just have a field
       * to capture the headline's column name if headline needs to be displayed.
       * </pre>
       *
       * <code>optional string display_headline_column = 3;</code>
       * @param value The bytes for displayHeadlineColumn to set.
       * @return This builder for chaining.
       */
      public Builder setDisplayHeadlineColumnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        displayHeadlineColumn_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object genericVizSubType_ = "";
      /**
       * <pre>
       * Sub-type of generic viz. In case  of generic viz we there will only be a
       * subType rather than pinned answer. Note that a pinboard can still have pinned
       * answer in addition to generic viz.
       * </pre>
       *
       * <code>optional string generic_viz_sub_type = 4;</code>
       * @return Whether the genericVizSubType field is set.
       */
      public boolean hasGenericVizSubType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Sub-type of generic viz. In case  of generic viz we there will only be a
       * subType rather than pinned answer. Note that a pinboard can still have pinned
       * answer in addition to generic viz.
       * </pre>
       *
       * <code>optional string generic_viz_sub_type = 4;</code>
       * @return The genericVizSubType.
       */
      public java.lang.String getGenericVizSubType() {
        java.lang.Object ref = genericVizSubType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            genericVizSubType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Sub-type of generic viz. In case  of generic viz we there will only be a
       * subType rather than pinned answer. Note that a pinboard can still have pinned
       * answer in addition to generic viz.
       * </pre>
       *
       * <code>optional string generic_viz_sub_type = 4;</code>
       * @return The bytes for genericVizSubType.
       */
      public com.google.protobuf.ByteString
          getGenericVizSubTypeBytes() {
        java.lang.Object ref = genericVizSubType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          genericVizSubType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Sub-type of generic viz. In case  of generic viz we there will only be a
       * subType rather than pinned answer. Note that a pinboard can still have pinned
       * answer in addition to generic viz.
       * </pre>
       *
       * <code>optional string generic_viz_sub_type = 4;</code>
       * @param value The genericVizSubType to set.
       * @return This builder for chaining.
       */
      public Builder setGenericVizSubType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        genericVizSubType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sub-type of generic viz. In case  of generic viz we there will only be a
       * subType rather than pinned answer. Note that a pinboard can still have pinned
       * answer in addition to generic viz.
       * </pre>
       *
       * <code>optional string generic_viz_sub_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearGenericVizSubType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        genericVizSubType_ = getDefaultInstance().getGenericVizSubType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sub-type of generic viz. In case  of generic viz we there will only be a
       * subType rather than pinned answer. Note that a pinboard can still have pinned
       * answer in addition to generic viz.
       * </pre>
       *
       * <code>optional string generic_viz_sub_type = 4;</code>
       * @param value The bytes for genericVizSubType to set.
       * @return This builder for chaining.
       */
      public Builder setGenericVizSubTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        genericVizSubType_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PinnedVisualization)
    }

    // @@protoc_insertion_point(class_scope:PinnedVisualization)
    private static final EDoc.PinnedVisualization DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.PinnedVisualization();
    }

    public static EDoc.PinnedVisualization getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PinnedVisualization>
        PARSER = new com.google.protobuf.AbstractParser<PinnedVisualization>() {
      @java.lang.Override
      public PinnedVisualization parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PinnedVisualization(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PinnedVisualization> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PinnedVisualization> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.PinnedVisualization getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PinboardLayoutOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PinboardLayout)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of tiles ordered as per the desired layout.
     * </pre>
     *
     * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
     */
    java.util.List<EDoc.PinboardLayout.Tile> 
        getTilesList();
    /**
     * <pre>
     * List of tiles ordered as per the desired layout.
     * </pre>
     *
     * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
     */
    EDoc.PinboardLayout.Tile getTiles(int index);
    /**
     * <pre>
     * List of tiles ordered as per the desired layout.
     * </pre>
     *
     * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
     */
    int getTilesCount();
    /**
     * <pre>
     * List of tiles ordered as per the desired layout.
     * </pre>
     *
     * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
     */
    java.util.List<? extends EDoc.PinboardLayout.TileOrBuilder> 
        getTilesOrBuilderList();
    /**
     * <pre>
     * List of tiles ordered as per the desired layout.
     * </pre>
     *
     * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
     */
    EDoc.PinboardLayout.TileOrBuilder getTilesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * PinboardLayout proto to specify how pinned visualizations should be arranged
   * in a pinboard.
   * </pre>
   *
   * Protobuf type {@code PinboardLayout}
   */
  public static final class PinboardLayout extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PinboardLayout)
      PinboardLayoutOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PinboardLayout.newBuilder() to construct.
    private PinboardLayout(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PinboardLayout() {
      tiles_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PinboardLayout();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PinboardLayout(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tiles_ = new java.util.ArrayList<EDoc.PinboardLayout.Tile>();
                mutable_bitField0_ |= 0x00000001;
              }
              tiles_.add(
                  input.readMessage(EDoc.PinboardLayout.Tile.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tiles_ = java.util.Collections.unmodifiableList(tiles_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_PinboardLayout_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_PinboardLayout_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.PinboardLayout.class, EDoc.PinboardLayout.Builder.class);
    }

    public interface TileOrBuilder extends
        // @@protoc_insertion_point(interface_extends:PinboardLayout.Tile)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * PinnedVisualization's Id to be displayed in the tile.
       * </pre>
       *
       * <code>optional string visualization_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return Whether the visualizationId field is set.
       */
      boolean hasVisualizationId();
      /**
       * <pre>
       * PinnedVisualization's Id to be displayed in the tile.
       * </pre>
       *
       * <code>optional string visualization_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return The visualizationId.
       */
      java.lang.String getVisualizationId();
      /**
       * <pre>
       * PinnedVisualization's Id to be displayed in the tile.
       * </pre>
       *
       * <code>optional string visualization_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for visualizationId.
       */
      com.google.protobuf.ByteString
          getVisualizationIdBytes();

      /**
       * <pre>
       * Size of the tile.
       * Allowed Values:
       *  1. EXTRA_SMALL
       *  2. SMALL
       *  3. MEDIUM
       *  4. LARGE
       *  5. EXTRA_LARGE
       *  6. MEDIUM_SMALL
       *  7. LARGE_SMALL
       * Based on atlas.SheetLayout.Tile.Size defined in atlas/public/metadata.proto.
       * </pre>
       *
       * <code>optional string size = 2 [(.Annotation.allowed_values_key) = "edoc.pb_viz_size"];</code>
       * @return Whether the size field is set.
       */
      boolean hasSize();
      /**
       * <pre>
       * Size of the tile.
       * Allowed Values:
       *  1. EXTRA_SMALL
       *  2. SMALL
       *  3. MEDIUM
       *  4. LARGE
       *  5. EXTRA_LARGE
       *  6. MEDIUM_SMALL
       *  7. LARGE_SMALL
       * Based on atlas.SheetLayout.Tile.Size defined in atlas/public/metadata.proto.
       * </pre>
       *
       * <code>optional string size = 2 [(.Annotation.allowed_values_key) = "edoc.pb_viz_size"];</code>
       * @return The size.
       */
      java.lang.String getSize();
      /**
       * <pre>
       * Size of the tile.
       * Allowed Values:
       *  1. EXTRA_SMALL
       *  2. SMALL
       *  3. MEDIUM
       *  4. LARGE
       *  5. EXTRA_LARGE
       *  6. MEDIUM_SMALL
       *  7. LARGE_SMALL
       * Based on atlas.SheetLayout.Tile.Size defined in atlas/public/metadata.proto.
       * </pre>
       *
       * <code>optional string size = 2 [(.Annotation.allowed_values_key) = "edoc.pb_viz_size"];</code>
       * @return The bytes for size.
       */
      com.google.protobuf.ByteString
          getSizeBytes();
    }
    /**
     * Protobuf type {@code PinboardLayout.Tile}
     */
    public static final class Tile extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:PinboardLayout.Tile)
        TileOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Tile.newBuilder() to construct.
      private Tile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Tile() {
        visualizationId_ = "";
        size_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Tile();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Tile(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                visualizationId_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                size_ = bs;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_PinboardLayout_Tile_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_PinboardLayout_Tile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.PinboardLayout.Tile.class, EDoc.PinboardLayout.Tile.Builder.class);
      }

      private int bitField0_;
      public static final int VISUALIZATION_ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object visualizationId_;
      /**
       * <pre>
       * PinnedVisualization's Id to be displayed in the tile.
       * </pre>
       *
       * <code>optional string visualization_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return Whether the visualizationId field is set.
       */
      @java.lang.Override
      public boolean hasVisualizationId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * PinnedVisualization's Id to be displayed in the tile.
       * </pre>
       *
       * <code>optional string visualization_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return The visualizationId.
       */
      @java.lang.Override
      public java.lang.String getVisualizationId() {
        java.lang.Object ref = visualizationId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            visualizationId_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * PinnedVisualization's Id to be displayed in the tile.
       * </pre>
       *
       * <code>optional string visualization_id = 1 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for visualizationId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getVisualizationIdBytes() {
        java.lang.Object ref = visualizationId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          visualizationId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SIZE_FIELD_NUMBER = 2;
      private volatile java.lang.Object size_;
      /**
       * <pre>
       * Size of the tile.
       * Allowed Values:
       *  1. EXTRA_SMALL
       *  2. SMALL
       *  3. MEDIUM
       *  4. LARGE
       *  5. EXTRA_LARGE
       *  6. MEDIUM_SMALL
       *  7. LARGE_SMALL
       * Based on atlas.SheetLayout.Tile.Size defined in atlas/public/metadata.proto.
       * </pre>
       *
       * <code>optional string size = 2 [(.Annotation.allowed_values_key) = "edoc.pb_viz_size"];</code>
       * @return Whether the size field is set.
       */
      @java.lang.Override
      public boolean hasSize() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Size of the tile.
       * Allowed Values:
       *  1. EXTRA_SMALL
       *  2. SMALL
       *  3. MEDIUM
       *  4. LARGE
       *  5. EXTRA_LARGE
       *  6. MEDIUM_SMALL
       *  7. LARGE_SMALL
       * Based on atlas.SheetLayout.Tile.Size defined in atlas/public/metadata.proto.
       * </pre>
       *
       * <code>optional string size = 2 [(.Annotation.allowed_values_key) = "edoc.pb_viz_size"];</code>
       * @return The size.
       */
      @java.lang.Override
      public java.lang.String getSize() {
        java.lang.Object ref = size_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            size_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Size of the tile.
       * Allowed Values:
       *  1. EXTRA_SMALL
       *  2. SMALL
       *  3. MEDIUM
       *  4. LARGE
       *  5. EXTRA_LARGE
       *  6. MEDIUM_SMALL
       *  7. LARGE_SMALL
       * Based on atlas.SheetLayout.Tile.Size defined in atlas/public/metadata.proto.
       * </pre>
       *
       * <code>optional string size = 2 [(.Annotation.allowed_values_key) = "edoc.pb_viz_size"];</code>
       * @return The bytes for size.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSizeBytes() {
        java.lang.Object ref = size_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          size_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, visualizationId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, size_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, visualizationId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, size_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.PinboardLayout.Tile)) {
          return super.equals(obj);
        }
        EDoc.PinboardLayout.Tile other = (EDoc.PinboardLayout.Tile) obj;

        if (hasVisualizationId() != other.hasVisualizationId()) return false;
        if (hasVisualizationId()) {
          if (!getVisualizationId()
              .equals(other.getVisualizationId())) return false;
        }
        if (hasSize() != other.hasSize()) return false;
        if (hasSize()) {
          if (!getSize()
              .equals(other.getSize())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasVisualizationId()) {
          hash = (37 * hash) + VISUALIZATION_ID_FIELD_NUMBER;
          hash = (53 * hash) + getVisualizationId().hashCode();
        }
        if (hasSize()) {
          hash = (37 * hash) + SIZE_FIELD_NUMBER;
          hash = (53 * hash) + getSize().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.PinboardLayout.Tile parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.PinboardLayout.Tile parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.PinboardLayout.Tile parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.PinboardLayout.Tile parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.PinboardLayout.Tile parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.PinboardLayout.Tile parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.PinboardLayout.Tile parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.PinboardLayout.Tile parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.PinboardLayout.Tile parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.PinboardLayout.Tile parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.PinboardLayout.Tile parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.PinboardLayout.Tile parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.PinboardLayout.Tile prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code PinboardLayout.Tile}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:PinboardLayout.Tile)
          EDoc.PinboardLayout.TileOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_PinboardLayout_Tile_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_PinboardLayout_Tile_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.PinboardLayout.Tile.class, EDoc.PinboardLayout.Tile.Builder.class);
        }

        // Construct using EDoc.PinboardLayout.Tile.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          visualizationId_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          size_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_PinboardLayout_Tile_descriptor;
        }

        @java.lang.Override
        public EDoc.PinboardLayout.Tile getDefaultInstanceForType() {
          return EDoc.PinboardLayout.Tile.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.PinboardLayout.Tile build() {
          EDoc.PinboardLayout.Tile result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.PinboardLayout.Tile buildPartial() {
          EDoc.PinboardLayout.Tile result = new EDoc.PinboardLayout.Tile(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.visualizationId_ = visualizationId_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.size_ = size_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.PinboardLayout.Tile) {
            return mergeFrom((EDoc.PinboardLayout.Tile)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.PinboardLayout.Tile other) {
          if (other == EDoc.PinboardLayout.Tile.getDefaultInstance()) return this;
          if (other.hasVisualizationId()) {
            bitField0_ |= 0x00000001;
            visualizationId_ = other.visualizationId_;
            onChanged();
          }
          if (other.hasSize()) {
            bitField0_ |= 0x00000002;
            size_ = other.size_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.PinboardLayout.Tile parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.PinboardLayout.Tile) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object visualizationId_ = "";
        /**
         * <pre>
         * PinnedVisualization's Id to be displayed in the tile.
         * </pre>
         *
         * <code>optional string visualization_id = 1 [(.Annotation.compulsory) = true];</code>
         * @return Whether the visualizationId field is set.
         */
        public boolean hasVisualizationId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * PinnedVisualization's Id to be displayed in the tile.
         * </pre>
         *
         * <code>optional string visualization_id = 1 [(.Annotation.compulsory) = true];</code>
         * @return The visualizationId.
         */
        public java.lang.String getVisualizationId() {
          java.lang.Object ref = visualizationId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              visualizationId_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * PinnedVisualization's Id to be displayed in the tile.
         * </pre>
         *
         * <code>optional string visualization_id = 1 [(.Annotation.compulsory) = true];</code>
         * @return The bytes for visualizationId.
         */
        public com.google.protobuf.ByteString
            getVisualizationIdBytes() {
          java.lang.Object ref = visualizationId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            visualizationId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * PinnedVisualization's Id to be displayed in the tile.
         * </pre>
         *
         * <code>optional string visualization_id = 1 [(.Annotation.compulsory) = true];</code>
         * @param value The visualizationId to set.
         * @return This builder for chaining.
         */
        public Builder setVisualizationId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          visualizationId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * PinnedVisualization's Id to be displayed in the tile.
         * </pre>
         *
         * <code>optional string visualization_id = 1 [(.Annotation.compulsory) = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearVisualizationId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          visualizationId_ = getDefaultInstance().getVisualizationId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * PinnedVisualization's Id to be displayed in the tile.
         * </pre>
         *
         * <code>optional string visualization_id = 1 [(.Annotation.compulsory) = true];</code>
         * @param value The bytes for visualizationId to set.
         * @return This builder for chaining.
         */
        public Builder setVisualizationIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          visualizationId_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object size_ = "";
        /**
         * <pre>
         * Size of the tile.
         * Allowed Values:
         *  1. EXTRA_SMALL
         *  2. SMALL
         *  3. MEDIUM
         *  4. LARGE
         *  5. EXTRA_LARGE
         *  6. MEDIUM_SMALL
         *  7. LARGE_SMALL
         * Based on atlas.SheetLayout.Tile.Size defined in atlas/public/metadata.proto.
         * </pre>
         *
         * <code>optional string size = 2 [(.Annotation.allowed_values_key) = "edoc.pb_viz_size"];</code>
         * @return Whether the size field is set.
         */
        public boolean hasSize() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Size of the tile.
         * Allowed Values:
         *  1. EXTRA_SMALL
         *  2. SMALL
         *  3. MEDIUM
         *  4. LARGE
         *  5. EXTRA_LARGE
         *  6. MEDIUM_SMALL
         *  7. LARGE_SMALL
         * Based on atlas.SheetLayout.Tile.Size defined in atlas/public/metadata.proto.
         * </pre>
         *
         * <code>optional string size = 2 [(.Annotation.allowed_values_key) = "edoc.pb_viz_size"];</code>
         * @return The size.
         */
        public java.lang.String getSize() {
          java.lang.Object ref = size_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              size_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Size of the tile.
         * Allowed Values:
         *  1. EXTRA_SMALL
         *  2. SMALL
         *  3. MEDIUM
         *  4. LARGE
         *  5. EXTRA_LARGE
         *  6. MEDIUM_SMALL
         *  7. LARGE_SMALL
         * Based on atlas.SheetLayout.Tile.Size defined in atlas/public/metadata.proto.
         * </pre>
         *
         * <code>optional string size = 2 [(.Annotation.allowed_values_key) = "edoc.pb_viz_size"];</code>
         * @return The bytes for size.
         */
        public com.google.protobuf.ByteString
            getSizeBytes() {
          java.lang.Object ref = size_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            size_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Size of the tile.
         * Allowed Values:
         *  1. EXTRA_SMALL
         *  2. SMALL
         *  3. MEDIUM
         *  4. LARGE
         *  5. EXTRA_LARGE
         *  6. MEDIUM_SMALL
         *  7. LARGE_SMALL
         * Based on atlas.SheetLayout.Tile.Size defined in atlas/public/metadata.proto.
         * </pre>
         *
         * <code>optional string size = 2 [(.Annotation.allowed_values_key) = "edoc.pb_viz_size"];</code>
         * @param value The size to set.
         * @return This builder for chaining.
         */
        public Builder setSize(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          size_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Size of the tile.
         * Allowed Values:
         *  1. EXTRA_SMALL
         *  2. SMALL
         *  3. MEDIUM
         *  4. LARGE
         *  5. EXTRA_LARGE
         *  6. MEDIUM_SMALL
         *  7. LARGE_SMALL
         * Based on atlas.SheetLayout.Tile.Size defined in atlas/public/metadata.proto.
         * </pre>
         *
         * <code>optional string size = 2 [(.Annotation.allowed_values_key) = "edoc.pb_viz_size"];</code>
         * @return This builder for chaining.
         */
        public Builder clearSize() {
          bitField0_ = (bitField0_ & ~0x00000002);
          size_ = getDefaultInstance().getSize();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Size of the tile.
         * Allowed Values:
         *  1. EXTRA_SMALL
         *  2. SMALL
         *  3. MEDIUM
         *  4. LARGE
         *  5. EXTRA_LARGE
         *  6. MEDIUM_SMALL
         *  7. LARGE_SMALL
         * Based on atlas.SheetLayout.Tile.Size defined in atlas/public/metadata.proto.
         * </pre>
         *
         * <code>optional string size = 2 [(.Annotation.allowed_values_key) = "edoc.pb_viz_size"];</code>
         * @param value The bytes for size to set.
         * @return This builder for chaining.
         */
        public Builder setSizeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          size_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:PinboardLayout.Tile)
      }

      // @@protoc_insertion_point(class_scope:PinboardLayout.Tile)
      private static final EDoc.PinboardLayout.Tile DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.PinboardLayout.Tile();
      }

      public static EDoc.PinboardLayout.Tile getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Tile>
          PARSER = new com.google.protobuf.AbstractParser<Tile>() {
        @java.lang.Override
        public Tile parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Tile(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Tile> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Tile> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.PinboardLayout.Tile getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int TILES_FIELD_NUMBER = 1;
    private java.util.List<EDoc.PinboardLayout.Tile> tiles_;
    /**
     * <pre>
     * List of tiles ordered as per the desired layout.
     * </pre>
     *
     * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.PinboardLayout.Tile> getTilesList() {
      return tiles_;
    }
    /**
     * <pre>
     * List of tiles ordered as per the desired layout.
     * </pre>
     *
     * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.PinboardLayout.TileOrBuilder> 
        getTilesOrBuilderList() {
      return tiles_;
    }
    /**
     * <pre>
     * List of tiles ordered as per the desired layout.
     * </pre>
     *
     * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
     */
    @java.lang.Override
    public int getTilesCount() {
      return tiles_.size();
    }
    /**
     * <pre>
     * List of tiles ordered as per the desired layout.
     * </pre>
     *
     * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
     */
    @java.lang.Override
    public EDoc.PinboardLayout.Tile getTiles(int index) {
      return tiles_.get(index);
    }
    /**
     * <pre>
     * List of tiles ordered as per the desired layout.
     * </pre>
     *
     * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
     */
    @java.lang.Override
    public EDoc.PinboardLayout.TileOrBuilder getTilesOrBuilder(
        int index) {
      return tiles_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < tiles_.size(); i++) {
        output.writeMessage(1, tiles_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tiles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tiles_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.PinboardLayout)) {
        return super.equals(obj);
      }
      EDoc.PinboardLayout other = (EDoc.PinboardLayout) obj;

      if (!getTilesList()
          .equals(other.getTilesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTilesCount() > 0) {
        hash = (37 * hash) + TILES_FIELD_NUMBER;
        hash = (53 * hash) + getTilesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.PinboardLayout parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.PinboardLayout parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.PinboardLayout parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.PinboardLayout parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.PinboardLayout parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.PinboardLayout parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.PinboardLayout parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.PinboardLayout parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.PinboardLayout parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.PinboardLayout parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.PinboardLayout parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.PinboardLayout parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.PinboardLayout prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PinboardLayout proto to specify how pinned visualizations should be arranged
     * in a pinboard.
     * </pre>
     *
     * Protobuf type {@code PinboardLayout}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PinboardLayout)
        EDoc.PinboardLayoutOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_PinboardLayout_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_PinboardLayout_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.PinboardLayout.class, EDoc.PinboardLayout.Builder.class);
      }

      // Construct using EDoc.PinboardLayout.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTilesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (tilesBuilder_ == null) {
          tiles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          tilesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_PinboardLayout_descriptor;
      }

      @java.lang.Override
      public EDoc.PinboardLayout getDefaultInstanceForType() {
        return EDoc.PinboardLayout.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.PinboardLayout build() {
        EDoc.PinboardLayout result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.PinboardLayout buildPartial() {
        EDoc.PinboardLayout result = new EDoc.PinboardLayout(this);
        int from_bitField0_ = bitField0_;
        if (tilesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            tiles_ = java.util.Collections.unmodifiableList(tiles_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.tiles_ = tiles_;
        } else {
          result.tiles_ = tilesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.PinboardLayout) {
          return mergeFrom((EDoc.PinboardLayout)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.PinboardLayout other) {
        if (other == EDoc.PinboardLayout.getDefaultInstance()) return this;
        if (tilesBuilder_ == null) {
          if (!other.tiles_.isEmpty()) {
            if (tiles_.isEmpty()) {
              tiles_ = other.tiles_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTilesIsMutable();
              tiles_.addAll(other.tiles_);
            }
            onChanged();
          }
        } else {
          if (!other.tiles_.isEmpty()) {
            if (tilesBuilder_.isEmpty()) {
              tilesBuilder_.dispose();
              tilesBuilder_ = null;
              tiles_ = other.tiles_;
              bitField0_ = (bitField0_ & ~0x00000001);
              tilesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTilesFieldBuilder() : null;
            } else {
              tilesBuilder_.addAllMessages(other.tiles_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.PinboardLayout parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.PinboardLayout) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<EDoc.PinboardLayout.Tile> tiles_ =
        java.util.Collections.emptyList();
      private void ensureTilesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tiles_ = new java.util.ArrayList<EDoc.PinboardLayout.Tile>(tiles_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.PinboardLayout.Tile, EDoc.PinboardLayout.Tile.Builder, EDoc.PinboardLayout.TileOrBuilder> tilesBuilder_;

      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public java.util.List<EDoc.PinboardLayout.Tile> getTilesList() {
        if (tilesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tiles_);
        } else {
          return tilesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public int getTilesCount() {
        if (tilesBuilder_ == null) {
          return tiles_.size();
        } else {
          return tilesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public EDoc.PinboardLayout.Tile getTiles(int index) {
        if (tilesBuilder_ == null) {
          return tiles_.get(index);
        } else {
          return tilesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public Builder setTiles(
          int index, EDoc.PinboardLayout.Tile value) {
        if (tilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTilesIsMutable();
          tiles_.set(index, value);
          onChanged();
        } else {
          tilesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public Builder setTiles(
          int index, EDoc.PinboardLayout.Tile.Builder builderForValue) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          tiles_.set(index, builderForValue.build());
          onChanged();
        } else {
          tilesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public Builder addTiles(EDoc.PinboardLayout.Tile value) {
        if (tilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTilesIsMutable();
          tiles_.add(value);
          onChanged();
        } else {
          tilesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public Builder addTiles(
          int index, EDoc.PinboardLayout.Tile value) {
        if (tilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTilesIsMutable();
          tiles_.add(index, value);
          onChanged();
        } else {
          tilesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public Builder addTiles(
          EDoc.PinboardLayout.Tile.Builder builderForValue) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          tiles_.add(builderForValue.build());
          onChanged();
        } else {
          tilesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public Builder addTiles(
          int index, EDoc.PinboardLayout.Tile.Builder builderForValue) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          tiles_.add(index, builderForValue.build());
          onChanged();
        } else {
          tilesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public Builder addAllTiles(
          java.lang.Iterable<? extends EDoc.PinboardLayout.Tile> values) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tiles_);
          onChanged();
        } else {
          tilesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public Builder clearTiles() {
        if (tilesBuilder_ == null) {
          tiles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          tilesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public Builder removeTiles(int index) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          tiles_.remove(index);
          onChanged();
        } else {
          tilesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public EDoc.PinboardLayout.Tile.Builder getTilesBuilder(
          int index) {
        return getTilesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public EDoc.PinboardLayout.TileOrBuilder getTilesOrBuilder(
          int index) {
        if (tilesBuilder_ == null) {
          return tiles_.get(index);  } else {
          return tilesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public java.util.List<? extends EDoc.PinboardLayout.TileOrBuilder> 
           getTilesOrBuilderList() {
        if (tilesBuilder_ != null) {
          return tilesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tiles_);
        }
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public EDoc.PinboardLayout.Tile.Builder addTilesBuilder() {
        return getTilesFieldBuilder().addBuilder(
            EDoc.PinboardLayout.Tile.getDefaultInstance());
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public EDoc.PinboardLayout.Tile.Builder addTilesBuilder(
          int index) {
        return getTilesFieldBuilder().addBuilder(
            index, EDoc.PinboardLayout.Tile.getDefaultInstance());
      }
      /**
       * <pre>
       * List of tiles ordered as per the desired layout.
       * </pre>
       *
       * <code>repeated .PinboardLayout.Tile tiles = 1;</code>
       */
      public java.util.List<EDoc.PinboardLayout.Tile.Builder> 
           getTilesBuilderList() {
        return getTilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.PinboardLayout.Tile, EDoc.PinboardLayout.Tile.Builder, EDoc.PinboardLayout.TileOrBuilder> 
          getTilesFieldBuilder() {
        if (tilesBuilder_ == null) {
          tilesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.PinboardLayout.Tile, EDoc.PinboardLayout.Tile.Builder, EDoc.PinboardLayout.TileOrBuilder>(
                  tiles_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          tiles_ = null;
        }
        return tilesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PinboardLayout)
    }

    // @@protoc_insertion_point(class_scope:PinboardLayout)
    private static final EDoc.PinboardLayout DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.PinboardLayout();
    }

    public static EDoc.PinboardLayout getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PinboardLayout>
        PARSER = new com.google.protobuf.AbstractParser<PinboardLayout>() {
      @java.lang.Override
      public PinboardLayout parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PinboardLayout(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PinboardLayout> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PinboardLayout> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.PinboardLayout getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PinboardEDocProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PinboardEDocProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Display name of the pinboard.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * Display name of the pinboard.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Display name of the pinboard.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Description of the pinboard.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return Whether the description field is set.
     */
    boolean hasDescription();
    /**
     * <pre>
     * Description of the pinboard.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Description of the pinboard.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * All the tables referred in the pinboard.
     * TODO(Archit): Should we keep this only inside answer? But what if whole
     * pinboard is built on top of a single worksheet? We will end up repeating
     * this in all the answers.
     * </pre>
     *
     * <code>repeated .Identity tables = 3;</code>
     */
    java.util.List<EDoc.Identity> 
        getTablesList();
    /**
     * <pre>
     * All the tables referred in the pinboard.
     * TODO(Archit): Should we keep this only inside answer? But what if whole
     * pinboard is built on top of a single worksheet? We will end up repeating
     * this in all the answers.
     * </pre>
     *
     * <code>repeated .Identity tables = 3;</code>
     */
    EDoc.Identity getTables(int index);
    /**
     * <pre>
     * All the tables referred in the pinboard.
     * TODO(Archit): Should we keep this only inside answer? But what if whole
     * pinboard is built on top of a single worksheet? We will end up repeating
     * this in all the answers.
     * </pre>
     *
     * <code>repeated .Identity tables = 3;</code>
     */
    int getTablesCount();
    /**
     * <pre>
     * All the tables referred in the pinboard.
     * TODO(Archit): Should we keep this only inside answer? But what if whole
     * pinboard is built on top of a single worksheet? We will end up repeating
     * this in all the answers.
     * </pre>
     *
     * <code>repeated .Identity tables = 3;</code>
     */
    java.util.List<? extends EDoc.IdentityOrBuilder> 
        getTablesOrBuilderList();
    /**
     * <pre>
     * All the tables referred in the pinboard.
     * TODO(Archit): Should we keep this only inside answer? But what if whole
     * pinboard is built on top of a single worksheet? We will end up repeating
     * this in all the answers.
     * </pre>
     *
     * <code>repeated .Identity tables = 3;</code>
     */
    EDoc.IdentityOrBuilder getTablesOrBuilder(
        int index);

    /**
     * <pre>
     * List of pinned visualizations.
     * </pre>
     *
     * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
     */
    java.util.List<EDoc.PinnedVisualization> 
        getVisualizationsList();
    /**
     * <pre>
     * List of pinned visualizations.
     * </pre>
     *
     * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
     */
    EDoc.PinnedVisualization getVisualizations(int index);
    /**
     * <pre>
     * List of pinned visualizations.
     * </pre>
     *
     * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
     */
    int getVisualizationsCount();
    /**
     * <pre>
     * List of pinned visualizations.
     * </pre>
     *
     * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
     */
    java.util.List<? extends EDoc.PinnedVisualizationOrBuilder> 
        getVisualizationsOrBuilderList();
    /**
     * <pre>
     * List of pinned visualizations.
     * </pre>
     *
     * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
     */
    EDoc.PinnedVisualizationOrBuilder getVisualizationsOrBuilder(
        int index);

    /**
     * <pre>
     * List of pinboard filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 5;</code>
     */
    java.util.List<EDoc.Filter> 
        getFiltersList();
    /**
     * <pre>
     * List of pinboard filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 5;</code>
     */
    EDoc.Filter getFilters(int index);
    /**
     * <pre>
     * List of pinboard filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 5;</code>
     */
    int getFiltersCount();
    /**
     * <pre>
     * List of pinboard filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 5;</code>
     */
    java.util.List<? extends EDoc.FilterOrBuilder> 
        getFiltersOrBuilderList();
    /**
     * <pre>
     * List of pinboard filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 5;</code>
     */
    EDoc.FilterOrBuilder getFiltersOrBuilder(
        int index);

    /**
     * <pre>
     * Pinboard layout specifying how pinned visualizations should be arranged
     * in this pinboard.
     * </pre>
     *
     * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
     * @return Whether the layout field is set.
     */
    boolean hasLayout();
    /**
     * <pre>
     * Pinboard layout specifying how pinned visualizations should be arranged
     * in this pinboard.
     * </pre>
     *
     * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
     * @return The layout.
     */
    EDoc.PinboardLayout getLayout();
    /**
     * <pre>
     * Pinboard layout specifying how pinned visualizations should be arranged
     * in this pinboard.
     * </pre>
     *
     * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
     */
    EDoc.PinboardLayoutOrBuilder getLayoutOrBuilder();
  }
  /**
   * <pre>
   * Proto definition for pinboard doc.
   * TODO(Archit): Add a simple example for better readability.
   * </pre>
   *
   * Protobuf type {@code PinboardEDocProto}
   */
  public static final class PinboardEDocProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PinboardEDocProto)
      PinboardEDocProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PinboardEDocProto.newBuilder() to construct.
    private PinboardEDocProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PinboardEDocProto() {
      name_ = "";
      description_ = "";
      tables_ = java.util.Collections.emptyList();
      visualizations_ = java.util.Collections.emptyList();
      filters_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PinboardEDocProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PinboardEDocProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              description_ = bs;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                tables_ = new java.util.ArrayList<EDoc.Identity>();
                mutable_bitField0_ |= 0x00000004;
              }
              tables_.add(
                  input.readMessage(EDoc.Identity.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                visualizations_ = new java.util.ArrayList<EDoc.PinnedVisualization>();
                mutable_bitField0_ |= 0x00000008;
              }
              visualizations_.add(
                  input.readMessage(EDoc.PinnedVisualization.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                filters_ = new java.util.ArrayList<EDoc.Filter>();
                mutable_bitField0_ |= 0x00000010;
              }
              filters_.add(
                  input.readMessage(EDoc.Filter.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              EDoc.PinboardLayout.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) != 0)) {
                subBuilder = layout_.toBuilder();
              }
              layout_ = input.readMessage(EDoc.PinboardLayout.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(layout_);
                layout_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          tables_ = java.util.Collections.unmodifiableList(tables_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          visualizations_ = java.util.Collections.unmodifiableList(visualizations_);
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          filters_ = java.util.Collections.unmodifiableList(filters_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_PinboardEDocProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_PinboardEDocProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.PinboardEDocProto.class, EDoc.PinboardEDocProto.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Display name of the pinboard.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Display name of the pinboard.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Display name of the pinboard.
     * </pre>
     *
     * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * Description of the pinboard.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return Whether the description field is set.
     */
    @java.lang.Override
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Description of the pinboard.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Description of the pinboard.
     * </pre>
     *
     * <code>optional string description = 2;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TABLES_FIELD_NUMBER = 3;
    private java.util.List<EDoc.Identity> tables_;
    /**
     * <pre>
     * All the tables referred in the pinboard.
     * TODO(Archit): Should we keep this only inside answer? But what if whole
     * pinboard is built on top of a single worksheet? We will end up repeating
     * this in all the answers.
     * </pre>
     *
     * <code>repeated .Identity tables = 3;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.Identity> getTablesList() {
      return tables_;
    }
    /**
     * <pre>
     * All the tables referred in the pinboard.
     * TODO(Archit): Should we keep this only inside answer? But what if whole
     * pinboard is built on top of a single worksheet? We will end up repeating
     * this in all the answers.
     * </pre>
     *
     * <code>repeated .Identity tables = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.IdentityOrBuilder> 
        getTablesOrBuilderList() {
      return tables_;
    }
    /**
     * <pre>
     * All the tables referred in the pinboard.
     * TODO(Archit): Should we keep this only inside answer? But what if whole
     * pinboard is built on top of a single worksheet? We will end up repeating
     * this in all the answers.
     * </pre>
     *
     * <code>repeated .Identity tables = 3;</code>
     */
    @java.lang.Override
    public int getTablesCount() {
      return tables_.size();
    }
    /**
     * <pre>
     * All the tables referred in the pinboard.
     * TODO(Archit): Should we keep this only inside answer? But what if whole
     * pinboard is built on top of a single worksheet? We will end up repeating
     * this in all the answers.
     * </pre>
     *
     * <code>repeated .Identity tables = 3;</code>
     */
    @java.lang.Override
    public EDoc.Identity getTables(int index) {
      return tables_.get(index);
    }
    /**
     * <pre>
     * All the tables referred in the pinboard.
     * TODO(Archit): Should we keep this only inside answer? But what if whole
     * pinboard is built on top of a single worksheet? We will end up repeating
     * this in all the answers.
     * </pre>
     *
     * <code>repeated .Identity tables = 3;</code>
     */
    @java.lang.Override
    public EDoc.IdentityOrBuilder getTablesOrBuilder(
        int index) {
      return tables_.get(index);
    }

    public static final int VISUALIZATIONS_FIELD_NUMBER = 4;
    private java.util.List<EDoc.PinnedVisualization> visualizations_;
    /**
     * <pre>
     * List of pinned visualizations.
     * </pre>
     *
     * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.PinnedVisualization> getVisualizationsList() {
      return visualizations_;
    }
    /**
     * <pre>
     * List of pinned visualizations.
     * </pre>
     *
     * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.PinnedVisualizationOrBuilder> 
        getVisualizationsOrBuilderList() {
      return visualizations_;
    }
    /**
     * <pre>
     * List of pinned visualizations.
     * </pre>
     *
     * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public int getVisualizationsCount() {
      return visualizations_.size();
    }
    /**
     * <pre>
     * List of pinned visualizations.
     * </pre>
     *
     * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.PinnedVisualization getVisualizations(int index) {
      return visualizations_.get(index);
    }
    /**
     * <pre>
     * List of pinned visualizations.
     * </pre>
     *
     * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
     */
    @java.lang.Override
    public EDoc.PinnedVisualizationOrBuilder getVisualizationsOrBuilder(
        int index) {
      return visualizations_.get(index);
    }

    public static final int FILTERS_FIELD_NUMBER = 5;
    private java.util.List<EDoc.Filter> filters_;
    /**
     * <pre>
     * List of pinboard filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 5;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.Filter> getFiltersList() {
      return filters_;
    }
    /**
     * <pre>
     * List of pinboard filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.FilterOrBuilder> 
        getFiltersOrBuilderList() {
      return filters_;
    }
    /**
     * <pre>
     * List of pinboard filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 5;</code>
     */
    @java.lang.Override
    public int getFiltersCount() {
      return filters_.size();
    }
    /**
     * <pre>
     * List of pinboard filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 5;</code>
     */
    @java.lang.Override
    public EDoc.Filter getFilters(int index) {
      return filters_.get(index);
    }
    /**
     * <pre>
     * List of pinboard filters.
     * </pre>
     *
     * <code>repeated .Filter filters = 5;</code>
     */
    @java.lang.Override
    public EDoc.FilterOrBuilder getFiltersOrBuilder(
        int index) {
      return filters_.get(index);
    }

    public static final int LAYOUT_FIELD_NUMBER = 6;
    private EDoc.PinboardLayout layout_;
    /**
     * <pre>
     * Pinboard layout specifying how pinned visualizations should be arranged
     * in this pinboard.
     * </pre>
     *
     * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
     * @return Whether the layout field is set.
     */
    @java.lang.Override
    public boolean hasLayout() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Pinboard layout specifying how pinned visualizations should be arranged
     * in this pinboard.
     * </pre>
     *
     * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
     * @return The layout.
     */
    @java.lang.Override
    public EDoc.PinboardLayout getLayout() {
      return layout_ == null ? EDoc.PinboardLayout.getDefaultInstance() : layout_;
    }
    /**
     * <pre>
     * Pinboard layout specifying how pinned visualizations should be arranged
     * in this pinboard.
     * </pre>
     *
     * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
     */
    @java.lang.Override
    public EDoc.PinboardLayoutOrBuilder getLayoutOrBuilder() {
      return layout_ == null ? EDoc.PinboardLayout.getDefaultInstance() : layout_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
      }
      for (int i = 0; i < tables_.size(); i++) {
        output.writeMessage(3, tables_.get(i));
      }
      for (int i = 0; i < visualizations_.size(); i++) {
        output.writeMessage(4, visualizations_.get(i));
      }
      for (int i = 0; i < filters_.size(); i++) {
        output.writeMessage(5, filters_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(6, getLayout());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
      }
      for (int i = 0; i < tables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tables_.get(i));
      }
      for (int i = 0; i < visualizations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, visualizations_.get(i));
      }
      for (int i = 0; i < filters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, filters_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getLayout());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.PinboardEDocProto)) {
        return super.equals(obj);
      }
      EDoc.PinboardEDocProto other = (EDoc.PinboardEDocProto) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasDescription() != other.hasDescription()) return false;
      if (hasDescription()) {
        if (!getDescription()
            .equals(other.getDescription())) return false;
      }
      if (!getTablesList()
          .equals(other.getTablesList())) return false;
      if (!getVisualizationsList()
          .equals(other.getVisualizationsList())) return false;
      if (!getFiltersList()
          .equals(other.getFiltersList())) return false;
      if (hasLayout() != other.hasLayout()) return false;
      if (hasLayout()) {
        if (!getLayout()
            .equals(other.getLayout())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasDescription()) {
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription().hashCode();
      }
      if (getTablesCount() > 0) {
        hash = (37 * hash) + TABLES_FIELD_NUMBER;
        hash = (53 * hash) + getTablesList().hashCode();
      }
      if (getVisualizationsCount() > 0) {
        hash = (37 * hash) + VISUALIZATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getVisualizationsList().hashCode();
      }
      if (getFiltersCount() > 0) {
        hash = (37 * hash) + FILTERS_FIELD_NUMBER;
        hash = (53 * hash) + getFiltersList().hashCode();
      }
      if (hasLayout()) {
        hash = (37 * hash) + LAYOUT_FIELD_NUMBER;
        hash = (53 * hash) + getLayout().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.PinboardEDocProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.PinboardEDocProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.PinboardEDocProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.PinboardEDocProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.PinboardEDocProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.PinboardEDocProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.PinboardEDocProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.PinboardEDocProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.PinboardEDocProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.PinboardEDocProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.PinboardEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.PinboardEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.PinboardEDocProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Proto definition for pinboard doc.
     * TODO(Archit): Add a simple example for better readability.
     * </pre>
     *
     * Protobuf type {@code PinboardEDocProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PinboardEDocProto)
        EDoc.PinboardEDocProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_PinboardEDocProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_PinboardEDocProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.PinboardEDocProto.class, EDoc.PinboardEDocProto.Builder.class);
      }

      // Construct using EDoc.PinboardEDocProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTablesFieldBuilder();
          getVisualizationsFieldBuilder();
          getFiltersFieldBuilder();
          getLayoutFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          tablesBuilder_.clear();
        }
        if (visualizationsBuilder_ == null) {
          visualizations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          visualizationsBuilder_.clear();
        }
        if (filtersBuilder_ == null) {
          filters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          filtersBuilder_.clear();
        }
        if (layoutBuilder_ == null) {
          layout_ = null;
        } else {
          layoutBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_PinboardEDocProto_descriptor;
      }

      @java.lang.Override
      public EDoc.PinboardEDocProto getDefaultInstanceForType() {
        return EDoc.PinboardEDocProto.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.PinboardEDocProto build() {
        EDoc.PinboardEDocProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.PinboardEDocProto buildPartial() {
        EDoc.PinboardEDocProto result = new EDoc.PinboardEDocProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.description_ = description_;
        if (tablesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            tables_ = java.util.Collections.unmodifiableList(tables_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.tables_ = tables_;
        } else {
          result.tables_ = tablesBuilder_.build();
        }
        if (visualizationsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            visualizations_ = java.util.Collections.unmodifiableList(visualizations_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.visualizations_ = visualizations_;
        } else {
          result.visualizations_ = visualizationsBuilder_.build();
        }
        if (filtersBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            filters_ = java.util.Collections.unmodifiableList(filters_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.filters_ = filters_;
        } else {
          result.filters_ = filtersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          if (layoutBuilder_ == null) {
            result.layout_ = layout_;
          } else {
            result.layout_ = layoutBuilder_.build();
          }
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.PinboardEDocProto) {
          return mergeFrom((EDoc.PinboardEDocProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.PinboardEDocProto other) {
        if (other == EDoc.PinboardEDocProto.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000002;
          description_ = other.description_;
          onChanged();
        }
        if (tablesBuilder_ == null) {
          if (!other.tables_.isEmpty()) {
            if (tables_.isEmpty()) {
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTablesIsMutable();
              tables_.addAll(other.tables_);
            }
            onChanged();
          }
        } else {
          if (!other.tables_.isEmpty()) {
            if (tablesBuilder_.isEmpty()) {
              tablesBuilder_.dispose();
              tablesBuilder_ = null;
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000004);
              tablesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTablesFieldBuilder() : null;
            } else {
              tablesBuilder_.addAllMessages(other.tables_);
            }
          }
        }
        if (visualizationsBuilder_ == null) {
          if (!other.visualizations_.isEmpty()) {
            if (visualizations_.isEmpty()) {
              visualizations_ = other.visualizations_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureVisualizationsIsMutable();
              visualizations_.addAll(other.visualizations_);
            }
            onChanged();
          }
        } else {
          if (!other.visualizations_.isEmpty()) {
            if (visualizationsBuilder_.isEmpty()) {
              visualizationsBuilder_.dispose();
              visualizationsBuilder_ = null;
              visualizations_ = other.visualizations_;
              bitField0_ = (bitField0_ & ~0x00000008);
              visualizationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVisualizationsFieldBuilder() : null;
            } else {
              visualizationsBuilder_.addAllMessages(other.visualizations_);
            }
          }
        }
        if (filtersBuilder_ == null) {
          if (!other.filters_.isEmpty()) {
            if (filters_.isEmpty()) {
              filters_ = other.filters_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureFiltersIsMutable();
              filters_.addAll(other.filters_);
            }
            onChanged();
          }
        } else {
          if (!other.filters_.isEmpty()) {
            if (filtersBuilder_.isEmpty()) {
              filtersBuilder_.dispose();
              filtersBuilder_ = null;
              filters_ = other.filters_;
              bitField0_ = (bitField0_ & ~0x00000010);
              filtersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFiltersFieldBuilder() : null;
            } else {
              filtersBuilder_.addAllMessages(other.filters_);
            }
          }
        }
        if (other.hasLayout()) {
          mergeLayout(other.getLayout());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.PinboardEDocProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.PinboardEDocProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Display name of the pinboard.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Display name of the pinboard.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Display name of the pinboard.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Display name of the pinboard.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Display name of the pinboard.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Display name of the pinboard.
       * </pre>
       *
       * <code>optional string name = 1 [(.Annotation.compulsory) = true];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * Description of the pinboard.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return Whether the description field is set.
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Description of the pinboard.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Description of the pinboard.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Description of the pinboard.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Description of the pinboard.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Description of the pinboard.
       * </pre>
       *
       * <code>optional string description = 2;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }

      private java.util.List<EDoc.Identity> tables_ =
        java.util.Collections.emptyList();
      private void ensureTablesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          tables_ = new java.util.ArrayList<EDoc.Identity>(tables_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> tablesBuilder_;

      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public java.util.List<EDoc.Identity> getTablesList() {
        if (tablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tables_);
        } else {
          return tablesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public int getTablesCount() {
        if (tablesBuilder_ == null) {
          return tables_.size();
        } else {
          return tablesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public EDoc.Identity getTables(int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);
        } else {
          return tablesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public Builder setTables(
          int index, EDoc.Identity value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.set(index, value);
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public Builder setTables(
          int index, EDoc.Identity.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.set(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public Builder addTables(EDoc.Identity value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public Builder addTables(
          int index, EDoc.Identity value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(index, value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public Builder addTables(
          EDoc.Identity.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public Builder addTables(
          int index, EDoc.Identity.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public Builder addAllTables(
          java.lang.Iterable<? extends EDoc.Identity> values) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tables_);
          onChanged();
        } else {
          tablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public Builder clearTables() {
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          tablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public Builder removeTables(int index) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.remove(index);
          onChanged();
        } else {
          tablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public EDoc.Identity.Builder getTablesBuilder(
          int index) {
        return getTablesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public EDoc.IdentityOrBuilder getTablesOrBuilder(
          int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);  } else {
          return tablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public java.util.List<? extends EDoc.IdentityOrBuilder> 
           getTablesOrBuilderList() {
        if (tablesBuilder_ != null) {
          return tablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tables_);
        }
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public EDoc.Identity.Builder addTablesBuilder() {
        return getTablesFieldBuilder().addBuilder(
            EDoc.Identity.getDefaultInstance());
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public EDoc.Identity.Builder addTablesBuilder(
          int index) {
        return getTablesFieldBuilder().addBuilder(
            index, EDoc.Identity.getDefaultInstance());
      }
      /**
       * <pre>
       * All the tables referred in the pinboard.
       * TODO(Archit): Should we keep this only inside answer? But what if whole
       * pinboard is built on top of a single worksheet? We will end up repeating
       * this in all the answers.
       * </pre>
       *
       * <code>repeated .Identity tables = 3;</code>
       */
      public java.util.List<EDoc.Identity.Builder> 
           getTablesBuilderList() {
        return getTablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> 
          getTablesFieldBuilder() {
        if (tablesBuilder_ == null) {
          tablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder>(
                  tables_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          tables_ = null;
        }
        return tablesBuilder_;
      }

      private java.util.List<EDoc.PinnedVisualization> visualizations_ =
        java.util.Collections.emptyList();
      private void ensureVisualizationsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          visualizations_ = new java.util.ArrayList<EDoc.PinnedVisualization>(visualizations_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.PinnedVisualization, EDoc.PinnedVisualization.Builder, EDoc.PinnedVisualizationOrBuilder> visualizationsBuilder_;

      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.PinnedVisualization> getVisualizationsList() {
        if (visualizationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(visualizations_);
        } else {
          return visualizationsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public int getVisualizationsCount() {
        if (visualizationsBuilder_ == null) {
          return visualizations_.size();
        } else {
          return visualizationsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public EDoc.PinnedVisualization getVisualizations(int index) {
        if (visualizationsBuilder_ == null) {
          return visualizations_.get(index);
        } else {
          return visualizationsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public Builder setVisualizations(
          int index, EDoc.PinnedVisualization value) {
        if (visualizationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVisualizationsIsMutable();
          visualizations_.set(index, value);
          onChanged();
        } else {
          visualizationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public Builder setVisualizations(
          int index, EDoc.PinnedVisualization.Builder builderForValue) {
        if (visualizationsBuilder_ == null) {
          ensureVisualizationsIsMutable();
          visualizations_.set(index, builderForValue.build());
          onChanged();
        } else {
          visualizationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public Builder addVisualizations(EDoc.PinnedVisualization value) {
        if (visualizationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVisualizationsIsMutable();
          visualizations_.add(value);
          onChanged();
        } else {
          visualizationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public Builder addVisualizations(
          int index, EDoc.PinnedVisualization value) {
        if (visualizationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVisualizationsIsMutable();
          visualizations_.add(index, value);
          onChanged();
        } else {
          visualizationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public Builder addVisualizations(
          EDoc.PinnedVisualization.Builder builderForValue) {
        if (visualizationsBuilder_ == null) {
          ensureVisualizationsIsMutable();
          visualizations_.add(builderForValue.build());
          onChanged();
        } else {
          visualizationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public Builder addVisualizations(
          int index, EDoc.PinnedVisualization.Builder builderForValue) {
        if (visualizationsBuilder_ == null) {
          ensureVisualizationsIsMutable();
          visualizations_.add(index, builderForValue.build());
          onChanged();
        } else {
          visualizationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public Builder addAllVisualizations(
          java.lang.Iterable<? extends EDoc.PinnedVisualization> values) {
        if (visualizationsBuilder_ == null) {
          ensureVisualizationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, visualizations_);
          onChanged();
        } else {
          visualizationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public Builder clearVisualizations() {
        if (visualizationsBuilder_ == null) {
          visualizations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          visualizationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public Builder removeVisualizations(int index) {
        if (visualizationsBuilder_ == null) {
          ensureVisualizationsIsMutable();
          visualizations_.remove(index);
          onChanged();
        } else {
          visualizationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public EDoc.PinnedVisualization.Builder getVisualizationsBuilder(
          int index) {
        return getVisualizationsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public EDoc.PinnedVisualizationOrBuilder getVisualizationsOrBuilder(
          int index) {
        if (visualizationsBuilder_ == null) {
          return visualizations_.get(index);  } else {
          return visualizationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public java.util.List<? extends EDoc.PinnedVisualizationOrBuilder> 
           getVisualizationsOrBuilderList() {
        if (visualizationsBuilder_ != null) {
          return visualizationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(visualizations_);
        }
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public EDoc.PinnedVisualization.Builder addVisualizationsBuilder() {
        return getVisualizationsFieldBuilder().addBuilder(
            EDoc.PinnedVisualization.getDefaultInstance());
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public EDoc.PinnedVisualization.Builder addVisualizationsBuilder(
          int index) {
        return getVisualizationsFieldBuilder().addBuilder(
            index, EDoc.PinnedVisualization.getDefaultInstance());
      }
      /**
       * <pre>
       * List of pinned visualizations.
       * </pre>
       *
       * <code>repeated .PinnedVisualization visualizations = 4 [(.Annotation.compulsory) = true, (.Annotation.unique) = "id"];</code>
       */
      public java.util.List<EDoc.PinnedVisualization.Builder> 
           getVisualizationsBuilderList() {
        return getVisualizationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.PinnedVisualization, EDoc.PinnedVisualization.Builder, EDoc.PinnedVisualizationOrBuilder> 
          getVisualizationsFieldBuilder() {
        if (visualizationsBuilder_ == null) {
          visualizationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.PinnedVisualization, EDoc.PinnedVisualization.Builder, EDoc.PinnedVisualizationOrBuilder>(
                  visualizations_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          visualizations_ = null;
        }
        return visualizationsBuilder_;
      }

      private java.util.List<EDoc.Filter> filters_ =
        java.util.Collections.emptyList();
      private void ensureFiltersIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          filters_ = new java.util.ArrayList<EDoc.Filter>(filters_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Filter, EDoc.Filter.Builder, EDoc.FilterOrBuilder> filtersBuilder_;

      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public java.util.List<EDoc.Filter> getFiltersList() {
        if (filtersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(filters_);
        } else {
          return filtersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public int getFiltersCount() {
        if (filtersBuilder_ == null) {
          return filters_.size();
        } else {
          return filtersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public EDoc.Filter getFilters(int index) {
        if (filtersBuilder_ == null) {
          return filters_.get(index);
        } else {
          return filtersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public Builder setFilters(
          int index, EDoc.Filter value) {
        if (filtersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiltersIsMutable();
          filters_.set(index, value);
          onChanged();
        } else {
          filtersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public Builder setFilters(
          int index, EDoc.Filter.Builder builderForValue) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          filters_.set(index, builderForValue.build());
          onChanged();
        } else {
          filtersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public Builder addFilters(EDoc.Filter value) {
        if (filtersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiltersIsMutable();
          filters_.add(value);
          onChanged();
        } else {
          filtersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public Builder addFilters(
          int index, EDoc.Filter value) {
        if (filtersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiltersIsMutable();
          filters_.add(index, value);
          onChanged();
        } else {
          filtersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public Builder addFilters(
          EDoc.Filter.Builder builderForValue) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          filters_.add(builderForValue.build());
          onChanged();
        } else {
          filtersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public Builder addFilters(
          int index, EDoc.Filter.Builder builderForValue) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          filters_.add(index, builderForValue.build());
          onChanged();
        } else {
          filtersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public Builder addAllFilters(
          java.lang.Iterable<? extends EDoc.Filter> values) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, filters_);
          onChanged();
        } else {
          filtersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public Builder clearFilters() {
        if (filtersBuilder_ == null) {
          filters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          filtersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public Builder removeFilters(int index) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          filters_.remove(index);
          onChanged();
        } else {
          filtersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public EDoc.Filter.Builder getFiltersBuilder(
          int index) {
        return getFiltersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public EDoc.FilterOrBuilder getFiltersOrBuilder(
          int index) {
        if (filtersBuilder_ == null) {
          return filters_.get(index);  } else {
          return filtersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public java.util.List<? extends EDoc.FilterOrBuilder> 
           getFiltersOrBuilderList() {
        if (filtersBuilder_ != null) {
          return filtersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(filters_);
        }
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public EDoc.Filter.Builder addFiltersBuilder() {
        return getFiltersFieldBuilder().addBuilder(
            EDoc.Filter.getDefaultInstance());
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public EDoc.Filter.Builder addFiltersBuilder(
          int index) {
        return getFiltersFieldBuilder().addBuilder(
            index, EDoc.Filter.getDefaultInstance());
      }
      /**
       * <pre>
       * List of pinboard filters.
       * </pre>
       *
       * <code>repeated .Filter filters = 5;</code>
       */
      public java.util.List<EDoc.Filter.Builder> 
           getFiltersBuilderList() {
        return getFiltersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.Filter, EDoc.Filter.Builder, EDoc.FilterOrBuilder> 
          getFiltersFieldBuilder() {
        if (filtersBuilder_ == null) {
          filtersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.Filter, EDoc.Filter.Builder, EDoc.FilterOrBuilder>(
                  filters_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          filters_ = null;
        }
        return filtersBuilder_;
      }

      private EDoc.PinboardLayout layout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.PinboardLayout, EDoc.PinboardLayout.Builder, EDoc.PinboardLayoutOrBuilder> layoutBuilder_;
      /**
       * <pre>
       * Pinboard layout specifying how pinned visualizations should be arranged
       * in this pinboard.
       * </pre>
       *
       * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
       * @return Whether the layout field is set.
       */
      public boolean hasLayout() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Pinboard layout specifying how pinned visualizations should be arranged
       * in this pinboard.
       * </pre>
       *
       * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
       * @return The layout.
       */
      public EDoc.PinboardLayout getLayout() {
        if (layoutBuilder_ == null) {
          return layout_ == null ? EDoc.PinboardLayout.getDefaultInstance() : layout_;
        } else {
          return layoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Pinboard layout specifying how pinned visualizations should be arranged
       * in this pinboard.
       * </pre>
       *
       * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
       */
      public Builder setLayout(EDoc.PinboardLayout value) {
        if (layoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          layout_ = value;
          onChanged();
        } else {
          layoutBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Pinboard layout specifying how pinned visualizations should be arranged
       * in this pinboard.
       * </pre>
       *
       * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
       */
      public Builder setLayout(
          EDoc.PinboardLayout.Builder builderForValue) {
        if (layoutBuilder_ == null) {
          layout_ = builderForValue.build();
          onChanged();
        } else {
          layoutBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Pinboard layout specifying how pinned visualizations should be arranged
       * in this pinboard.
       * </pre>
       *
       * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
       */
      public Builder mergeLayout(EDoc.PinboardLayout value) {
        if (layoutBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
              layout_ != null &&
              layout_ != EDoc.PinboardLayout.getDefaultInstance()) {
            layout_ =
              EDoc.PinboardLayout.newBuilder(layout_).mergeFrom(value).buildPartial();
          } else {
            layout_ = value;
          }
          onChanged();
        } else {
          layoutBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Pinboard layout specifying how pinned visualizations should be arranged
       * in this pinboard.
       * </pre>
       *
       * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
       */
      public Builder clearLayout() {
        if (layoutBuilder_ == null) {
          layout_ = null;
          onChanged();
        } else {
          layoutBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <pre>
       * Pinboard layout specifying how pinned visualizations should be arranged
       * in this pinboard.
       * </pre>
       *
       * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
       */
      public EDoc.PinboardLayout.Builder getLayoutBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getLayoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Pinboard layout specifying how pinned visualizations should be arranged
       * in this pinboard.
       * </pre>
       *
       * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
       */
      public EDoc.PinboardLayoutOrBuilder getLayoutOrBuilder() {
        if (layoutBuilder_ != null) {
          return layoutBuilder_.getMessageOrBuilder();
        } else {
          return layout_ == null ?
              EDoc.PinboardLayout.getDefaultInstance() : layout_;
        }
      }
      /**
       * <pre>
       * Pinboard layout specifying how pinned visualizations should be arranged
       * in this pinboard.
       * </pre>
       *
       * <code>optional .PinboardLayout layout = 6 [(.Annotation.unique) = "visualization_id"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.PinboardLayout, EDoc.PinboardLayout.Builder, EDoc.PinboardLayoutOrBuilder> 
          getLayoutFieldBuilder() {
        if (layoutBuilder_ == null) {
          layoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.PinboardLayout, EDoc.PinboardLayout.Builder, EDoc.PinboardLayoutOrBuilder>(
                  getLayout(),
                  getParentForChildren(),
                  isClean());
          layout_ = null;
        }
        return layoutBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PinboardEDocProto)
    }

    // @@protoc_insertion_point(class_scope:PinboardEDocProto)
    private static final EDoc.PinboardEDocProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.PinboardEDocProto();
    }

    public static EDoc.PinboardEDocProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PinboardEDocProto>
        PARSER = new com.google.protobuf.AbstractParser<PinboardEDocProto>() {
      @java.lang.Override
      public PinboardEDocProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PinboardEDocProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PinboardEDocProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PinboardEDocProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.PinboardEDocProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogicalTableEDocProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogicalTableEDocProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * User readable name and description of the logical table to create/update.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * User readable name and description of the logical table to create/update.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * User readable name and description of the logical table to create/update.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional string description = 2;</code>
     * @return Whether the description field is set.
     */
    boolean hasDescription();
    /**
     * <code>optional string description = 2;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <code>optional string description = 2;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * Fields required to uniquely identify the db table this table maps to.
     * </pre>
     *
     * <code>optional string db = 3;</code>
     * @return Whether the db field is set.
     */
    boolean hasDb();
    /**
     * <pre>
     * Fields required to uniquely identify the db table this table maps to.
     * </pre>
     *
     * <code>optional string db = 3;</code>
     * @return The db.
     */
    java.lang.String getDb();
    /**
     * <pre>
     * Fields required to uniquely identify the db table this table maps to.
     * </pre>
     *
     * <code>optional string db = 3;</code>
     * @return The bytes for db.
     */
    com.google.protobuf.ByteString
        getDbBytes();

    /**
     * <code>optional string schema = 4;</code>
     * @return Whether the schema field is set.
     */
    boolean hasSchema();
    /**
     * <code>optional string schema = 4;</code>
     * @return The schema.
     */
    java.lang.String getSchema();
    /**
     * <code>optional string schema = 4;</code>
     * @return The bytes for schema.
     */
    com.google.protobuf.ByteString
        getSchemaBytes();

    /**
     * <pre>
     * Note: We assume that only a single table with given &#64;db_table name
     *       exists in the dependant db-schema pair.
     *       Since we don't need fqn, using string instead of Identity here.
     * </pre>
     *
     * <code>optional string db_table = 5;</code>
     * @return Whether the dbTable field is set.
     */
    boolean hasDbTable();
    /**
     * <pre>
     * Note: We assume that only a single table with given &#64;db_table name
     *       exists in the dependant db-schema pair.
     *       Since we don't need fqn, using string instead of Identity here.
     * </pre>
     *
     * <code>optional string db_table = 5;</code>
     * @return The dbTable.
     */
    java.lang.String getDbTable();
    /**
     * <pre>
     * Note: We assume that only a single table with given &#64;db_table name
     *       exists in the dependant db-schema pair.
     *       Since we don't need fqn, using string instead of Identity here.
     * </pre>
     *
     * <code>optional string db_table = 5;</code>
     * @return The bytes for dbTable.
     */
    com.google.protobuf.ByteString
        getDbTableBytes();

    /**
     * <pre>
     * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
     * a database table. But since we also support multiple database systems, we
     * need one more identifier i.e. &lt;system, db, schema, table&gt;.
     * In embrace terminology, we call this new vairable a 'connection'.
     * In a cluster we can have multiple connections, to the same or to different
     * database systems. Also each connection has a name that need not be unique.
     * Side note: Since logical tables now depends on a connection object instead
     *            of the physical tables directly, the connection controls what
     *            underlying tables and columns are visible to the logical layer.
     * Based on this design, the following rule applies when an external db is
     * involved:
     * 1. while downloading, we just download the name of the connection object.
     * 2. while uploading, we need to provide a name (or fqn in-case name is not
     *    unique) of the connection we want to use.
     *    More details about upload logic present in "EDocToTableTranslator.java"
     * However an empty connection field indicates we indent to use a database in
     * falcon.
     * </pre>
     *
     * <code>optional .Identity connection = 6;</code>
     * @return Whether the connection field is set.
     */
    boolean hasConnection();
    /**
     * <pre>
     * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
     * a database table. But since we also support multiple database systems, we
     * need one more identifier i.e. &lt;system, db, schema, table&gt;.
     * In embrace terminology, we call this new vairable a 'connection'.
     * In a cluster we can have multiple connections, to the same or to different
     * database systems. Also each connection has a name that need not be unique.
     * Side note: Since logical tables now depends on a connection object instead
     *            of the physical tables directly, the connection controls what
     *            underlying tables and columns are visible to the logical layer.
     * Based on this design, the following rule applies when an external db is
     * involved:
     * 1. while downloading, we just download the name of the connection object.
     * 2. while uploading, we need to provide a name (or fqn in-case name is not
     *    unique) of the connection we want to use.
     *    More details about upload logic present in "EDocToTableTranslator.java"
     * However an empty connection field indicates we indent to use a database in
     * falcon.
     * </pre>
     *
     * <code>optional .Identity connection = 6;</code>
     * @return The connection.
     */
    EDoc.Identity getConnection();
    /**
     * <pre>
     * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
     * a database table. But since we also support multiple database systems, we
     * need one more identifier i.e. &lt;system, db, schema, table&gt;.
     * In embrace terminology, we call this new vairable a 'connection'.
     * In a cluster we can have multiple connections, to the same or to different
     * database systems. Also each connection has a name that need not be unique.
     * Side note: Since logical tables now depends on a connection object instead
     *            of the physical tables directly, the connection controls what
     *            underlying tables and columns are visible to the logical layer.
     * Based on this design, the following rule applies when an external db is
     * involved:
     * 1. while downloading, we just download the name of the connection object.
     * 2. while uploading, we need to provide a name (or fqn in-case name is not
     *    unique) of the connection we want to use.
     *    More details about upload logic present in "EDocToTableTranslator.java"
     * However an empty connection field indicates we indent to use a database in
     * falcon.
     * </pre>
     *
     * <code>optional .Identity connection = 6;</code>
     */
    EDoc.IdentityOrBuilder getConnectionOrBuilder();

    /**
     * <pre>
     * Below fields defines this table.
     * </pre>
     *
     * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
     */
    java.util.List<EDoc.LogicalTableEDocProto.LogicalColumnEDocProto> 
        getColumnsList();
    /**
     * <pre>
     * Below fields defines this table.
     * </pre>
     *
     * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
     */
    EDoc.LogicalTableEDocProto.LogicalColumnEDocProto getColumns(int index);
    /**
     * <pre>
     * Below fields defines this table.
     * </pre>
     *
     * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
     */
    int getColumnsCount();
    /**
     * <pre>
     * Below fields defines this table.
     * </pre>
     *
     * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
     */
    java.util.List<? extends EDoc.LogicalTableEDocProto.LogicalColumnEDocProtoOrBuilder> 
        getColumnsOrBuilderList();
    /**
     * <pre>
     * Below fields defines this table.
     * </pre>
     *
     * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
     */
    EDoc.LogicalTableEDocProto.LogicalColumnEDocProtoOrBuilder getColumnsOrBuilder(
        int index);

    /**
     * <pre>
     * Order'd list of rls filters along with supplementary information applied to table.
     * </pre>
     *
     * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
     * @return Whether the rlsRules field is set.
     */
    boolean hasRlsRules();
    /**
     * <pre>
     * Order'd list of rls filters along with supplementary information applied to table.
     * </pre>
     *
     * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
     * @return The rlsRules.
     */
    EDoc.LogicalTableEDocProto.RlsRule getRlsRules();
    /**
     * <pre>
     * Order'd list of rls filters along with supplementary information applied to table.
     * </pre>
     *
     * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
     */
    EDoc.LogicalTableEDocProto.RlsRuleOrBuilder getRlsRulesOrBuilder();

    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    java.util.List<EDoc.RelationEDocProto> 
        getJoinsWithList();
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    EDoc.RelationEDocProto getJoinsWith(int index);
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    int getJoinsWithCount();
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    java.util.List<? extends EDoc.RelationEDocProtoOrBuilder> 
        getJoinsWithOrBuilderList();
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    EDoc.RelationEDocProtoOrBuilder getJoinsWithOrBuilder(
        int index);
  }
  /**
   * <pre>
   * All user defined objects like answers, pinboards, views and worksheets, are
   * created using a logical representation of the underlying tables.
   * For e.g.
   *         MyAnswer -&gt; LINEORDER[Logical] -&gt; LINEORDER[Physical]
   * Here MyAnswer uses columns from a logical table called LINEORDER, that is
   * derived from a physical table called LINEORDER.
   * This logical representation allows users to customize the underlying schema
   * for their convenience and requirements.
   * For e.g. at logical layer, a user is allowed to,
   *   a. change table/column names.
   *   b. set column type. e.g. a numeric column can be labelled as ATTRIBUTE or
   *      MEASURE by the user.
   *   c. add RLS rules on tables.
   *   d. define new joins between tables.
   * Since the logical layer can have a lot of user customizations, as explained
   * above, we allow users to download the entire logical schema as an edoc.
   * Implementation detail:
   * In callosum metadata, worksheets and views are also represented as a logical
   * table. And a bunch of fields in LogicalTable.java are there to support these
   * special types of logical tables.
   * However since we already have a specialized edoc representation for both
   * views and worksheets, we are not adding those fields in the edoc definition
   * of a LogicalTable.
   * e.g. we have 2 types of filters in LogicalTable.java
   *   1. TableFilter
   *   2. Filter
   * Here 'Filter' is used to define worksheet filters, while table filters are
   * used for expressing RLS rules. So out of the 2, we only add TableFilter in
   * the edoc definition.
   * This message defines the edoc representation of a logical table.
   * </pre>
   *
   * Protobuf type {@code LogicalTableEDocProto}
   */
  public static final class LogicalTableEDocProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:LogicalTableEDocProto)
      LogicalTableEDocProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogicalTableEDocProto.newBuilder() to construct.
    private LogicalTableEDocProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogicalTableEDocProto() {
      name_ = "";
      description_ = "";
      db_ = "";
      schema_ = "";
      dbTable_ = "";
      columns_ = java.util.Collections.emptyList();
      joinsWith_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogicalTableEDocProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LogicalTableEDocProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              description_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              db_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              schema_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              dbTable_ = bs;
              break;
            }
            case 50: {
              EDoc.Identity.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) != 0)) {
                subBuilder = connection_.toBuilder();
              }
              connection_ = input.readMessage(EDoc.Identity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(connection_);
                connection_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                columns_ = new java.util.ArrayList<EDoc.LogicalTableEDocProto.LogicalColumnEDocProto>();
                mutable_bitField0_ |= 0x00000040;
              }
              columns_.add(
                  input.readMessage(EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              EDoc.LogicalTableEDocProto.RlsRule.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) != 0)) {
                subBuilder = rlsRules_.toBuilder();
              }
              rlsRules_ = input.readMessage(EDoc.LogicalTableEDocProto.RlsRule.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rlsRules_);
                rlsRules_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                joinsWith_ = new java.util.ArrayList<EDoc.RelationEDocProto>();
                mutable_bitField0_ |= 0x00000100;
              }
              joinsWith_.add(
                  input.readMessage(EDoc.RelationEDocProto.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          columns_ = java.util.Collections.unmodifiableList(columns_);
        }
        if (((mutable_bitField0_ & 0x00000100) != 0)) {
          joinsWith_ = java.util.Collections.unmodifiableList(joinsWith_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_LogicalTableEDocProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_LogicalTableEDocProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.LogicalTableEDocProto.class, EDoc.LogicalTableEDocProto.Builder.class);
    }

    public interface RlsRuleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:LogicalTableEDocProto.RlsRule)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * All the tables referred by the RLS rule.
       * </pre>
       *
       * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
       */
      java.util.List<EDoc.Identity> 
          getTablesList();
      /**
       * <pre>
       * All the tables referred by the RLS rule.
       * </pre>
       *
       * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
       */
      EDoc.Identity getTables(int index);
      /**
       * <pre>
       * All the tables referred by the RLS rule.
       * </pre>
       *
       * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
       */
      int getTablesCount();
      /**
       * <pre>
       * All the tables referred by the RLS rule.
       * </pre>
       *
       * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
       */
      java.util.List<? extends EDoc.IdentityOrBuilder> 
          getTablesOrBuilderList();
      /**
       * <pre>
       * All the tables referred by the RLS rule.
       * </pre>
       *
       * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
       */
      EDoc.IdentityOrBuilder getTablesOrBuilder(
          int index);

      /**
       * <pre>
       * Joins that are used by the table.
       * </pre>
       *
       * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
       */
      java.util.List<EDoc.Join> 
          getJoinsList();
      /**
       * <pre>
       * Joins that are used by the table.
       * </pre>
       *
       * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
       */
      EDoc.Join getJoins(int index);
      /**
       * <pre>
       * Joins that are used by the table.
       * </pre>
       *
       * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
       */
      int getJoinsCount();
      /**
       * <pre>
       * Joins that are used by the table.
       * </pre>
       *
       * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
       */
      java.util.List<? extends EDoc.JoinOrBuilder> 
          getJoinsOrBuilderList();
      /**
       * <pre>
       * Joins that are used by the table.
       * </pre>
       *
       * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
       */
      EDoc.JoinOrBuilder getJoinsOrBuilder(
          int index);

      /**
       * <pre>
       * Various manifestations of the joined tables.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
       */
      java.util.List<EDoc.TablePath> 
          getTablePathsList();
      /**
       * <pre>
       * Various manifestations of the joined tables.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
       */
      EDoc.TablePath getTablePaths(int index);
      /**
       * <pre>
       * Various manifestations of the joined tables.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
       */
      int getTablePathsCount();
      /**
       * <pre>
       * Various manifestations of the joined tables.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
       */
      java.util.List<? extends EDoc.TablePathOrBuilder> 
          getTablePathsOrBuilderList();
      /**
       * <pre>
       * Various manifestations of the joined tables.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
       */
      EDoc.TablePathOrBuilder getTablePathsOrBuilder(
          int index);

      /**
       * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
       */
      java.util.List<EDoc.LogicalTableEDocProto.RlsRule.Rule> 
          getRulesList();
      /**
       * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
       */
      EDoc.LogicalTableEDocProto.RlsRule.Rule getRules(int index);
      /**
       * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
       */
      int getRulesCount();
      /**
       * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
       */
      java.util.List<? extends EDoc.LogicalTableEDocProto.RlsRule.RuleOrBuilder> 
          getRulesOrBuilderList();
      /**
       * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
       */
      EDoc.LogicalTableEDocProto.RlsRule.RuleOrBuilder getRulesOrBuilder(
          int index);
    }
    /**
     * <pre>
     * This message defines the edoc representation for rls rules.
     * </pre>
     *
     * Protobuf type {@code LogicalTableEDocProto.RlsRule}
     */
    public static final class RlsRule extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:LogicalTableEDocProto.RlsRule)
        RlsRuleOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use RlsRule.newBuilder() to construct.
      private RlsRule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RlsRule() {
        tables_ = java.util.Collections.emptyList();
        joins_ = java.util.Collections.emptyList();
        tablePaths_ = java.util.Collections.emptyList();
        rules_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new RlsRule();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private RlsRule(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  tables_ = new java.util.ArrayList<EDoc.Identity>();
                  mutable_bitField0_ |= 0x00000001;
                }
                tables_.add(
                    input.readMessage(EDoc.Identity.PARSER, extensionRegistry));
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  joins_ = new java.util.ArrayList<EDoc.Join>();
                  mutable_bitField0_ |= 0x00000002;
                }
                joins_.add(
                    input.readMessage(EDoc.Join.PARSER, extensionRegistry));
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                  tablePaths_ = new java.util.ArrayList<EDoc.TablePath>();
                  mutable_bitField0_ |= 0x00000004;
                }
                tablePaths_.add(
                    input.readMessage(EDoc.TablePath.PARSER, extensionRegistry));
                break;
              }
              case 34: {
                if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                  rules_ = new java.util.ArrayList<EDoc.LogicalTableEDocProto.RlsRule.Rule>();
                  mutable_bitField0_ |= 0x00000008;
                }
                rules_.add(
                    input.readMessage(EDoc.LogicalTableEDocProto.RlsRule.Rule.PARSER, extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            tables_ = java.util.Collections.unmodifiableList(tables_);
          }
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            joins_ = java.util.Collections.unmodifiableList(joins_);
          }
          if (((mutable_bitField0_ & 0x00000004) != 0)) {
            tablePaths_ = java.util.Collections.unmodifiableList(tablePaths_);
          }
          if (((mutable_bitField0_ & 0x00000008) != 0)) {
            rules_ = java.util.Collections.unmodifiableList(rules_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_LogicalTableEDocProto_RlsRule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_LogicalTableEDocProto_RlsRule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.LogicalTableEDocProto.RlsRule.class, EDoc.LogicalTableEDocProto.RlsRule.Builder.class);
      }

      public interface RuleOrBuilder extends
          // @@protoc_insertion_point(interface_extends:LogicalTableEDocProto.RlsRule.Rule)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Each RLS rule is a boolean sage expressions, that is represented
         * using a string. e.g.
         * RLS rules support variables (ts_groups and ts_username). To represent them, we prefix a
         * '$' sign.
         *     1. f1 : column = $ts_groups
         *     2. f2 : $ts_groups IN ('air','road')
         *     3. f3 : column1 = column2
         * An example RLS rule definition is
         *    rls_rules:
         *    - name: sales-mapping-rule
         *    - expr: rls_sales_detail_mapping_1::group_name = $ts_groups
         * rls_sales_detail_mapping_1 is a table path that is defined earlier.
         * If there is an RLS rule that uses only columns from the same table, the column name is
         * still qualified with the table path.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        boolean hasName();
        /**
         * <pre>
         * Each RLS rule is a boolean sage expressions, that is represented
         * using a string. e.g.
         * RLS rules support variables (ts_groups and ts_username). To represent them, we prefix a
         * '$' sign.
         *     1. f1 : column = $ts_groups
         *     2. f2 : $ts_groups IN ('air','road')
         *     3. f3 : column1 = column2
         * An example RLS rule definition is
         *    rls_rules:
         *    - name: sales-mapping-rule
         *    - expr: rls_sales_detail_mapping_1::group_name = $ts_groups
         * rls_sales_detail_mapping_1 is a table path that is defined earlier.
         * If there is an RLS rule that uses only columns from the same table, the column name is
         * still qualified with the table path.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The name.
         */
        java.lang.String getName();
        /**
         * <pre>
         * Each RLS rule is a boolean sage expressions, that is represented
         * using a string. e.g.
         * RLS rules support variables (ts_groups and ts_username). To represent them, we prefix a
         * '$' sign.
         *     1. f1 : column = $ts_groups
         *     2. f2 : $ts_groups IN ('air','road')
         *     3. f3 : column1 = column2
         * An example RLS rule definition is
         *    rls_rules:
         *    - name: sales-mapping-rule
         *    - expr: rls_sales_detail_mapping_1::group_name = $ts_groups
         * rls_sales_detail_mapping_1 is a table path that is defined earlier.
         * If there is an RLS rule that uses only columns from the same table, the column name is
         * still qualified with the table path.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The bytes for name.
         */
        com.google.protobuf.ByteString
            getNameBytes();

        /**
         * <code>optional string expr = 2;</code>
         * @return Whether the expr field is set.
         */
        boolean hasExpr();
        /**
         * <code>optional string expr = 2;</code>
         * @return The expr.
         */
        java.lang.String getExpr();
        /**
         * <code>optional string expr = 2;</code>
         * @return The bytes for expr.
         */
        com.google.protobuf.ByteString
            getExprBytes();
      }
      /**
       * Protobuf type {@code LogicalTableEDocProto.RlsRule.Rule}
       */
      public static final class Rule extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:LogicalTableEDocProto.RlsRule.Rule)
          RuleOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Rule.newBuilder() to construct.
        private Rule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Rule() {
          name_ = "";
          expr_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Rule();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Rule(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000001;
                  name_ = bs;
                  break;
                }
                case 18: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  expr_ = bs;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_LogicalTableEDocProto_RlsRule_Rule_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_LogicalTableEDocProto_RlsRule_Rule_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.LogicalTableEDocProto.RlsRule.Rule.class, EDoc.LogicalTableEDocProto.RlsRule.Rule.Builder.class);
        }

        private int bitField0_;
        public static final int NAME_FIELD_NUMBER = 1;
        private volatile java.lang.Object name_;
        /**
         * <pre>
         * Each RLS rule is a boolean sage expressions, that is represented
         * using a string. e.g.
         * RLS rules support variables (ts_groups and ts_username). To represent them, we prefix a
         * '$' sign.
         *     1. f1 : column = $ts_groups
         *     2. f2 : $ts_groups IN ('air','road')
         *     3. f3 : column1 = column2
         * An example RLS rule definition is
         *    rls_rules:
         *    - name: sales-mapping-rule
         *    - expr: rls_sales_detail_mapping_1::group_name = $ts_groups
         * rls_sales_detail_mapping_1 is a table path that is defined earlier.
         * If there is an RLS rule that uses only columns from the same table, the column name is
         * still qualified with the table path.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        @java.lang.Override
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Each RLS rule is a boolean sage expressions, that is represented
         * using a string. e.g.
         * RLS rules support variables (ts_groups and ts_username). To represent them, we prefix a
         * '$' sign.
         *     1. f1 : column = $ts_groups
         *     2. f2 : $ts_groups IN ('air','road')
         *     3. f3 : column1 = column2
         * An example RLS rule definition is
         *    rls_rules:
         *    - name: sales-mapping-rule
         *    - expr: rls_sales_detail_mapping_1::group_name = $ts_groups
         * rls_sales_detail_mapping_1 is a table path that is defined earlier.
         * If there is an RLS rule that uses only columns from the same table, the column name is
         * still qualified with the table path.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The name.
         */
        @java.lang.Override
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * Each RLS rule is a boolean sage expressions, that is represented
         * using a string. e.g.
         * RLS rules support variables (ts_groups and ts_username). To represent them, we prefix a
         * '$' sign.
         *     1. f1 : column = $ts_groups
         *     2. f2 : $ts_groups IN ('air','road')
         *     3. f3 : column1 = column2
         * An example RLS rule definition is
         *    rls_rules:
         *    - name: sales-mapping-rule
         *    - expr: rls_sales_detail_mapping_1::group_name = $ts_groups
         * rls_sales_detail_mapping_1 is a table path that is defined earlier.
         * If there is an RLS rule that uses only columns from the same table, the column name is
         * still qualified with the table path.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The bytes for name.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int EXPR_FIELD_NUMBER = 2;
        private volatile java.lang.Object expr_;
        /**
         * <code>optional string expr = 2;</code>
         * @return Whether the expr field is set.
         */
        @java.lang.Override
        public boolean hasExpr() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string expr = 2;</code>
         * @return The expr.
         */
        @java.lang.Override
        public java.lang.String getExpr() {
          java.lang.Object ref = expr_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              expr_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string expr = 2;</code>
         * @return The bytes for expr.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getExprBytes() {
          java.lang.Object ref = expr_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            expr_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, expr_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, expr_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof EDoc.LogicalTableEDocProto.RlsRule.Rule)) {
            return super.equals(obj);
          }
          EDoc.LogicalTableEDocProto.RlsRule.Rule other = (EDoc.LogicalTableEDocProto.RlsRule.Rule) obj;

          if (hasName() != other.hasName()) return false;
          if (hasName()) {
            if (!getName()
                .equals(other.getName())) return false;
          }
          if (hasExpr() != other.hasExpr()) return false;
          if (hasExpr()) {
            if (!getExpr()
                .equals(other.getExpr())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasName()) {
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
          }
          if (hasExpr()) {
            hash = (37 * hash) + EXPR_FIELD_NUMBER;
            hash = (53 * hash) + getExpr().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static EDoc.LogicalTableEDocProto.RlsRule.Rule parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static EDoc.LogicalTableEDocProto.RlsRule.Rule parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static EDoc.LogicalTableEDocProto.RlsRule.Rule parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static EDoc.LogicalTableEDocProto.RlsRule.Rule parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static EDoc.LogicalTableEDocProto.RlsRule.Rule parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static EDoc.LogicalTableEDocProto.RlsRule.Rule parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static EDoc.LogicalTableEDocProto.RlsRule.Rule parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static EDoc.LogicalTableEDocProto.RlsRule.Rule parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static EDoc.LogicalTableEDocProto.RlsRule.Rule parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static EDoc.LogicalTableEDocProto.RlsRule.Rule parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static EDoc.LogicalTableEDocProto.RlsRule.Rule parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static EDoc.LogicalTableEDocProto.RlsRule.Rule parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(EDoc.LogicalTableEDocProto.RlsRule.Rule prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code LogicalTableEDocProto.RlsRule.Rule}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:LogicalTableEDocProto.RlsRule.Rule)
            EDoc.LogicalTableEDocProto.RlsRule.RuleOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return EDoc.internal_static_LogicalTableEDocProto_RlsRule_Rule_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return EDoc.internal_static_LogicalTableEDocProto_RlsRule_Rule_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    EDoc.LogicalTableEDocProto.RlsRule.Rule.class, EDoc.LogicalTableEDocProto.RlsRule.Rule.Builder.class);
          }

          // Construct using EDoc.LogicalTableEDocProto.RlsRule.Rule.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            name_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            expr_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return EDoc.internal_static_LogicalTableEDocProto_RlsRule_Rule_descriptor;
          }

          @java.lang.Override
          public EDoc.LogicalTableEDocProto.RlsRule.Rule getDefaultInstanceForType() {
            return EDoc.LogicalTableEDocProto.RlsRule.Rule.getDefaultInstance();
          }

          @java.lang.Override
          public EDoc.LogicalTableEDocProto.RlsRule.Rule build() {
            EDoc.LogicalTableEDocProto.RlsRule.Rule result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public EDoc.LogicalTableEDocProto.RlsRule.Rule buildPartial() {
            EDoc.LogicalTableEDocProto.RlsRule.Rule result = new EDoc.LogicalTableEDocProto.RlsRule.Rule(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              to_bitField0_ |= 0x00000001;
            }
            result.name_ = name_;
            if (((from_bitField0_ & 0x00000002) != 0)) {
              to_bitField0_ |= 0x00000002;
            }
            result.expr_ = expr_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof EDoc.LogicalTableEDocProto.RlsRule.Rule) {
              return mergeFrom((EDoc.LogicalTableEDocProto.RlsRule.Rule)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(EDoc.LogicalTableEDocProto.RlsRule.Rule other) {
            if (other == EDoc.LogicalTableEDocProto.RlsRule.Rule.getDefaultInstance()) return this;
            if (other.hasName()) {
              bitField0_ |= 0x00000001;
              name_ = other.name_;
              onChanged();
            }
            if (other.hasExpr()) {
              bitField0_ |= 0x00000002;
              expr_ = other.expr_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            EDoc.LogicalTableEDocProto.RlsRule.Rule parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (EDoc.LogicalTableEDocProto.RlsRule.Rule) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object name_ = "";
          /**
           * <pre>
           * Each RLS rule is a boolean sage expressions, that is represented
           * using a string. e.g.
           * RLS rules support variables (ts_groups and ts_username). To represent them, we prefix a
           * '$' sign.
           *     1. f1 : column = $ts_groups
           *     2. f2 : $ts_groups IN ('air','road')
           *     3. f3 : column1 = column2
           * An example RLS rule definition is
           *    rls_rules:
           *    - name: sales-mapping-rule
           *    - expr: rls_sales_detail_mapping_1::group_name = $ts_groups
           * rls_sales_detail_mapping_1 is a table path that is defined earlier.
           * If there is an RLS rule that uses only columns from the same table, the column name is
           * still qualified with the table path.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           * @return Whether the name field is set.
           */
          public boolean hasName() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * Each RLS rule is a boolean sage expressions, that is represented
           * using a string. e.g.
           * RLS rules support variables (ts_groups and ts_username). To represent them, we prefix a
           * '$' sign.
           *     1. f1 : column = $ts_groups
           *     2. f2 : $ts_groups IN ('air','road')
           *     3. f3 : column1 = column2
           * An example RLS rule definition is
           *    rls_rules:
           *    - name: sales-mapping-rule
           *    - expr: rls_sales_detail_mapping_1::group_name = $ts_groups
           * rls_sales_detail_mapping_1 is a table path that is defined earlier.
           * If there is an RLS rule that uses only columns from the same table, the column name is
           * still qualified with the table path.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           * @return The name.
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                name_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Each RLS rule is a boolean sage expressions, that is represented
           * using a string. e.g.
           * RLS rules support variables (ts_groups and ts_username). To represent them, we prefix a
           * '$' sign.
           *     1. f1 : column = $ts_groups
           *     2. f2 : $ts_groups IN ('air','road')
           *     3. f3 : column1 = column2
           * An example RLS rule definition is
           *    rls_rules:
           *    - name: sales-mapping-rule
           *    - expr: rls_sales_detail_mapping_1::group_name = $ts_groups
           * rls_sales_detail_mapping_1 is a table path that is defined earlier.
           * If there is an RLS rule that uses only columns from the same table, the column name is
           * still qualified with the table path.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           * @return The bytes for name.
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Each RLS rule is a boolean sage expressions, that is represented
           * using a string. e.g.
           * RLS rules support variables (ts_groups and ts_username). To represent them, we prefix a
           * '$' sign.
           *     1. f1 : column = $ts_groups
           *     2. f2 : $ts_groups IN ('air','road')
           *     3. f3 : column1 = column2
           * An example RLS rule definition is
           *    rls_rules:
           *    - name: sales-mapping-rule
           *    - expr: rls_sales_detail_mapping_1::group_name = $ts_groups
           * rls_sales_detail_mapping_1 is a table path that is defined earlier.
           * If there is an RLS rule that uses only columns from the same table, the column name is
           * still qualified with the table path.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           * @param value The name to set.
           * @return This builder for chaining.
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            name_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Each RLS rule is a boolean sage expressions, that is represented
           * using a string. e.g.
           * RLS rules support variables (ts_groups and ts_username). To represent them, we prefix a
           * '$' sign.
           *     1. f1 : column = $ts_groups
           *     2. f2 : $ts_groups IN ('air','road')
           *     3. f3 : column1 = column2
           * An example RLS rule definition is
           *    rls_rules:
           *    - name: sales-mapping-rule
           *    - expr: rls_sales_detail_mapping_1::group_name = $ts_groups
           * rls_sales_detail_mapping_1 is a table path that is defined earlier.
           * If there is an RLS rule that uses only columns from the same table, the column name is
           * still qualified with the table path.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearName() {
            bitField0_ = (bitField0_ & ~0x00000001);
            name_ = getDefaultInstance().getName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Each RLS rule is a boolean sage expressions, that is represented
           * using a string. e.g.
           * RLS rules support variables (ts_groups and ts_username). To represent them, we prefix a
           * '$' sign.
           *     1. f1 : column = $ts_groups
           *     2. f2 : $ts_groups IN ('air','road')
           *     3. f3 : column1 = column2
           * An example RLS rule definition is
           *    rls_rules:
           *    - name: sales-mapping-rule
           *    - expr: rls_sales_detail_mapping_1::group_name = $ts_groups
           * rls_sales_detail_mapping_1 is a table path that is defined earlier.
           * If there is an RLS rule that uses only columns from the same table, the column name is
           * still qualified with the table path.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           * @param value The bytes for name to set.
           * @return This builder for chaining.
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            name_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object expr_ = "";
          /**
           * <code>optional string expr = 2;</code>
           * @return Whether the expr field is set.
           */
          public boolean hasExpr() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional string expr = 2;</code>
           * @return The expr.
           */
          public java.lang.String getExpr() {
            java.lang.Object ref = expr_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                expr_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string expr = 2;</code>
           * @return The bytes for expr.
           */
          public com.google.protobuf.ByteString
              getExprBytes() {
            java.lang.Object ref = expr_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              expr_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string expr = 2;</code>
           * @param value The expr to set.
           * @return This builder for chaining.
           */
          public Builder setExpr(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            expr_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string expr = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearExpr() {
            bitField0_ = (bitField0_ & ~0x00000002);
            expr_ = getDefaultInstance().getExpr();
            onChanged();
            return this;
          }
          /**
           * <code>optional string expr = 2;</code>
           * @param value The bytes for expr to set.
           * @return This builder for chaining.
           */
          public Builder setExprBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            expr_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:LogicalTableEDocProto.RlsRule.Rule)
        }

        // @@protoc_insertion_point(class_scope:LogicalTableEDocProto.RlsRule.Rule)
        private static final EDoc.LogicalTableEDocProto.RlsRule.Rule DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new EDoc.LogicalTableEDocProto.RlsRule.Rule();
        }

        public static EDoc.LogicalTableEDocProto.RlsRule.Rule getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<Rule>
            PARSER = new com.google.protobuf.AbstractParser<Rule>() {
          @java.lang.Override
          public Rule parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Rule(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Rule> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Rule> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public EDoc.LogicalTableEDocProto.RlsRule.Rule getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int TABLES_FIELD_NUMBER = 1;
      private java.util.List<EDoc.Identity> tables_;
      /**
       * <pre>
       * All the tables referred by the RLS rule.
       * </pre>
       *
       * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
       */
      @java.lang.Override
      public java.util.List<EDoc.Identity> getTablesList() {
        return tables_;
      }
      /**
       * <pre>
       * All the tables referred by the RLS rule.
       * </pre>
       *
       * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
       */
      @java.lang.Override
      public java.util.List<? extends EDoc.IdentityOrBuilder> 
          getTablesOrBuilderList() {
        return tables_;
      }
      /**
       * <pre>
       * All the tables referred by the RLS rule.
       * </pre>
       *
       * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
       */
      @java.lang.Override
      public int getTablesCount() {
        return tables_.size();
      }
      /**
       * <pre>
       * All the tables referred by the RLS rule.
       * </pre>
       *
       * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
       */
      @java.lang.Override
      public EDoc.Identity getTables(int index) {
        return tables_.get(index);
      }
      /**
       * <pre>
       * All the tables referred by the RLS rule.
       * </pre>
       *
       * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
       */
      @java.lang.Override
      public EDoc.IdentityOrBuilder getTablesOrBuilder(
          int index) {
        return tables_.get(index);
      }

      public static final int JOINS_FIELD_NUMBER = 2;
      private java.util.List<EDoc.Join> joins_;
      /**
       * <pre>
       * Joins that are used by the table.
       * </pre>
       *
       * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
       */
      @java.lang.Override
      public java.util.List<EDoc.Join> getJoinsList() {
        return joins_;
      }
      /**
       * <pre>
       * Joins that are used by the table.
       * </pre>
       *
       * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
       */
      @java.lang.Override
      public java.util.List<? extends EDoc.JoinOrBuilder> 
          getJoinsOrBuilderList() {
        return joins_;
      }
      /**
       * <pre>
       * Joins that are used by the table.
       * </pre>
       *
       * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
       */
      @java.lang.Override
      public int getJoinsCount() {
        return joins_.size();
      }
      /**
       * <pre>
       * Joins that are used by the table.
       * </pre>
       *
       * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
       */
      @java.lang.Override
      public EDoc.Join getJoins(int index) {
        return joins_.get(index);
      }
      /**
       * <pre>
       * Joins that are used by the table.
       * </pre>
       *
       * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
       */
      @java.lang.Override
      public EDoc.JoinOrBuilder getJoinsOrBuilder(
          int index) {
        return joins_.get(index);
      }

      public static final int TABLE_PATHS_FIELD_NUMBER = 3;
      private java.util.List<EDoc.TablePath> tablePaths_;
      /**
       * <pre>
       * Various manifestations of the joined tables.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
       */
      @java.lang.Override
      public java.util.List<EDoc.TablePath> getTablePathsList() {
        return tablePaths_;
      }
      /**
       * <pre>
       * Various manifestations of the joined tables.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
       */
      @java.lang.Override
      public java.util.List<? extends EDoc.TablePathOrBuilder> 
          getTablePathsOrBuilderList() {
        return tablePaths_;
      }
      /**
       * <pre>
       * Various manifestations of the joined tables.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
       */
      @java.lang.Override
      public int getTablePathsCount() {
        return tablePaths_.size();
      }
      /**
       * <pre>
       * Various manifestations of the joined tables.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
       */
      @java.lang.Override
      public EDoc.TablePath getTablePaths(int index) {
        return tablePaths_.get(index);
      }
      /**
       * <pre>
       * Various manifestations of the joined tables.
       * </pre>
       *
       * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
       */
      @java.lang.Override
      public EDoc.TablePathOrBuilder getTablePathsOrBuilder(
          int index) {
        return tablePaths_.get(index);
      }

      public static final int RULES_FIELD_NUMBER = 4;
      private java.util.List<EDoc.LogicalTableEDocProto.RlsRule.Rule> rules_;
      /**
       * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
       */
      @java.lang.Override
      public java.util.List<EDoc.LogicalTableEDocProto.RlsRule.Rule> getRulesList() {
        return rules_;
      }
      /**
       * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
       */
      @java.lang.Override
      public java.util.List<? extends EDoc.LogicalTableEDocProto.RlsRule.RuleOrBuilder> 
          getRulesOrBuilderList() {
        return rules_;
      }
      /**
       * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
       */
      @java.lang.Override
      public int getRulesCount() {
        return rules_.size();
      }
      /**
       * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
       */
      @java.lang.Override
      public EDoc.LogicalTableEDocProto.RlsRule.Rule getRules(int index) {
        return rules_.get(index);
      }
      /**
       * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
       */
      @java.lang.Override
      public EDoc.LogicalTableEDocProto.RlsRule.RuleOrBuilder getRulesOrBuilder(
          int index) {
        return rules_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < tables_.size(); i++) {
          output.writeMessage(1, tables_.get(i));
        }
        for (int i = 0; i < joins_.size(); i++) {
          output.writeMessage(2, joins_.get(i));
        }
        for (int i = 0; i < tablePaths_.size(); i++) {
          output.writeMessage(3, tablePaths_.get(i));
        }
        for (int i = 0; i < rules_.size(); i++) {
          output.writeMessage(4, rules_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < tables_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, tables_.get(i));
        }
        for (int i = 0; i < joins_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, joins_.get(i));
        }
        for (int i = 0; i < tablePaths_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, tablePaths_.get(i));
        }
        for (int i = 0; i < rules_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, rules_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.LogicalTableEDocProto.RlsRule)) {
          return super.equals(obj);
        }
        EDoc.LogicalTableEDocProto.RlsRule other = (EDoc.LogicalTableEDocProto.RlsRule) obj;

        if (!getTablesList()
            .equals(other.getTablesList())) return false;
        if (!getJoinsList()
            .equals(other.getJoinsList())) return false;
        if (!getTablePathsList()
            .equals(other.getTablePathsList())) return false;
        if (!getRulesList()
            .equals(other.getRulesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getTablesCount() > 0) {
          hash = (37 * hash) + TABLES_FIELD_NUMBER;
          hash = (53 * hash) + getTablesList().hashCode();
        }
        if (getJoinsCount() > 0) {
          hash = (37 * hash) + JOINS_FIELD_NUMBER;
          hash = (53 * hash) + getJoinsList().hashCode();
        }
        if (getTablePathsCount() > 0) {
          hash = (37 * hash) + TABLE_PATHS_FIELD_NUMBER;
          hash = (53 * hash) + getTablePathsList().hashCode();
        }
        if (getRulesCount() > 0) {
          hash = (37 * hash) + RULES_FIELD_NUMBER;
          hash = (53 * hash) + getRulesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.LogicalTableEDocProto.RlsRule parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.LogicalTableEDocProto.RlsRule parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.RlsRule parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.LogicalTableEDocProto.RlsRule parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.RlsRule parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.LogicalTableEDocProto.RlsRule parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.RlsRule parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.LogicalTableEDocProto.RlsRule parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.RlsRule parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.LogicalTableEDocProto.RlsRule parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.RlsRule parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.LogicalTableEDocProto.RlsRule parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.LogicalTableEDocProto.RlsRule prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * This message defines the edoc representation for rls rules.
       * </pre>
       *
       * Protobuf type {@code LogicalTableEDocProto.RlsRule}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:LogicalTableEDocProto.RlsRule)
          EDoc.LogicalTableEDocProto.RlsRuleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_LogicalTableEDocProto_RlsRule_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_LogicalTableEDocProto_RlsRule_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.LogicalTableEDocProto.RlsRule.class, EDoc.LogicalTableEDocProto.RlsRule.Builder.class);
        }

        // Construct using EDoc.LogicalTableEDocProto.RlsRule.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getTablesFieldBuilder();
            getJoinsFieldBuilder();
            getTablePathsFieldBuilder();
            getRulesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (tablesBuilder_ == null) {
            tables_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            tablesBuilder_.clear();
          }
          if (joinsBuilder_ == null) {
            joins_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            joinsBuilder_.clear();
          }
          if (tablePathsBuilder_ == null) {
            tablePaths_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            tablePathsBuilder_.clear();
          }
          if (rulesBuilder_ == null) {
            rules_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            rulesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_LogicalTableEDocProto_RlsRule_descriptor;
        }

        @java.lang.Override
        public EDoc.LogicalTableEDocProto.RlsRule getDefaultInstanceForType() {
          return EDoc.LogicalTableEDocProto.RlsRule.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.LogicalTableEDocProto.RlsRule build() {
          EDoc.LogicalTableEDocProto.RlsRule result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.LogicalTableEDocProto.RlsRule buildPartial() {
          EDoc.LogicalTableEDocProto.RlsRule result = new EDoc.LogicalTableEDocProto.RlsRule(this);
          int from_bitField0_ = bitField0_;
          if (tablesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              tables_ = java.util.Collections.unmodifiableList(tables_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.tables_ = tables_;
          } else {
            result.tables_ = tablesBuilder_.build();
          }
          if (joinsBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              joins_ = java.util.Collections.unmodifiableList(joins_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.joins_ = joins_;
          } else {
            result.joins_ = joinsBuilder_.build();
          }
          if (tablePathsBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0)) {
              tablePaths_ = java.util.Collections.unmodifiableList(tablePaths_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.tablePaths_ = tablePaths_;
          } else {
            result.tablePaths_ = tablePathsBuilder_.build();
          }
          if (rulesBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0)) {
              rules_ = java.util.Collections.unmodifiableList(rules_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.rules_ = rules_;
          } else {
            result.rules_ = rulesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.LogicalTableEDocProto.RlsRule) {
            return mergeFrom((EDoc.LogicalTableEDocProto.RlsRule)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.LogicalTableEDocProto.RlsRule other) {
          if (other == EDoc.LogicalTableEDocProto.RlsRule.getDefaultInstance()) return this;
          if (tablesBuilder_ == null) {
            if (!other.tables_.isEmpty()) {
              if (tables_.isEmpty()) {
                tables_ = other.tables_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureTablesIsMutable();
                tables_.addAll(other.tables_);
              }
              onChanged();
            }
          } else {
            if (!other.tables_.isEmpty()) {
              if (tablesBuilder_.isEmpty()) {
                tablesBuilder_.dispose();
                tablesBuilder_ = null;
                tables_ = other.tables_;
                bitField0_ = (bitField0_ & ~0x00000001);
                tablesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getTablesFieldBuilder() : null;
              } else {
                tablesBuilder_.addAllMessages(other.tables_);
              }
            }
          }
          if (joinsBuilder_ == null) {
            if (!other.joins_.isEmpty()) {
              if (joins_.isEmpty()) {
                joins_ = other.joins_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureJoinsIsMutable();
                joins_.addAll(other.joins_);
              }
              onChanged();
            }
          } else {
            if (!other.joins_.isEmpty()) {
              if (joinsBuilder_.isEmpty()) {
                joinsBuilder_.dispose();
                joinsBuilder_ = null;
                joins_ = other.joins_;
                bitField0_ = (bitField0_ & ~0x00000002);
                joinsBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getJoinsFieldBuilder() : null;
              } else {
                joinsBuilder_.addAllMessages(other.joins_);
              }
            }
          }
          if (tablePathsBuilder_ == null) {
            if (!other.tablePaths_.isEmpty()) {
              if (tablePaths_.isEmpty()) {
                tablePaths_ = other.tablePaths_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureTablePathsIsMutable();
                tablePaths_.addAll(other.tablePaths_);
              }
              onChanged();
            }
          } else {
            if (!other.tablePaths_.isEmpty()) {
              if (tablePathsBuilder_.isEmpty()) {
                tablePathsBuilder_.dispose();
                tablePathsBuilder_ = null;
                tablePaths_ = other.tablePaths_;
                bitField0_ = (bitField0_ & ~0x00000004);
                tablePathsBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getTablePathsFieldBuilder() : null;
              } else {
                tablePathsBuilder_.addAllMessages(other.tablePaths_);
              }
            }
          }
          if (rulesBuilder_ == null) {
            if (!other.rules_.isEmpty()) {
              if (rules_.isEmpty()) {
                rules_ = other.rules_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureRulesIsMutable();
                rules_.addAll(other.rules_);
              }
              onChanged();
            }
          } else {
            if (!other.rules_.isEmpty()) {
              if (rulesBuilder_.isEmpty()) {
                rulesBuilder_.dispose();
                rulesBuilder_ = null;
                rules_ = other.rules_;
                bitField0_ = (bitField0_ & ~0x00000008);
                rulesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getRulesFieldBuilder() : null;
              } else {
                rulesBuilder_.addAllMessages(other.rules_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.LogicalTableEDocProto.RlsRule parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.LogicalTableEDocProto.RlsRule) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<EDoc.Identity> tables_ =
          java.util.Collections.emptyList();
        private void ensureTablesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            tables_ = new java.util.ArrayList<EDoc.Identity>(tables_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> tablesBuilder_;

        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public java.util.List<EDoc.Identity> getTablesList() {
          if (tablesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(tables_);
          } else {
            return tablesBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public int getTablesCount() {
          if (tablesBuilder_ == null) {
            return tables_.size();
          } else {
            return tablesBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public EDoc.Identity getTables(int index) {
          if (tablesBuilder_ == null) {
            return tables_.get(index);
          } else {
            return tablesBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public Builder setTables(
            int index, EDoc.Identity value) {
          if (tablesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTablesIsMutable();
            tables_.set(index, value);
            onChanged();
          } else {
            tablesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public Builder setTables(
            int index, EDoc.Identity.Builder builderForValue) {
          if (tablesBuilder_ == null) {
            ensureTablesIsMutable();
            tables_.set(index, builderForValue.build());
            onChanged();
          } else {
            tablesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public Builder addTables(EDoc.Identity value) {
          if (tablesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTablesIsMutable();
            tables_.add(value);
            onChanged();
          } else {
            tablesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public Builder addTables(
            int index, EDoc.Identity value) {
          if (tablesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTablesIsMutable();
            tables_.add(index, value);
            onChanged();
          } else {
            tablesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public Builder addTables(
            EDoc.Identity.Builder builderForValue) {
          if (tablesBuilder_ == null) {
            ensureTablesIsMutable();
            tables_.add(builderForValue.build());
            onChanged();
          } else {
            tablesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public Builder addTables(
            int index, EDoc.Identity.Builder builderForValue) {
          if (tablesBuilder_ == null) {
            ensureTablesIsMutable();
            tables_.add(index, builderForValue.build());
            onChanged();
          } else {
            tablesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public Builder addAllTables(
            java.lang.Iterable<? extends EDoc.Identity> values) {
          if (tablesBuilder_ == null) {
            ensureTablesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, tables_);
            onChanged();
          } else {
            tablesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public Builder clearTables() {
          if (tablesBuilder_ == null) {
            tables_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            tablesBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public Builder removeTables(int index) {
          if (tablesBuilder_ == null) {
            ensureTablesIsMutable();
            tables_.remove(index);
            onChanged();
          } else {
            tablesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public EDoc.Identity.Builder getTablesBuilder(
            int index) {
          return getTablesFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public EDoc.IdentityOrBuilder getTablesOrBuilder(
            int index) {
          if (tablesBuilder_ == null) {
            return tables_.get(index);  } else {
            return tablesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public java.util.List<? extends EDoc.IdentityOrBuilder> 
             getTablesOrBuilderList() {
          if (tablesBuilder_ != null) {
            return tablesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(tables_);
          }
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public EDoc.Identity.Builder addTablesBuilder() {
          return getTablesFieldBuilder().addBuilder(
              EDoc.Identity.getDefaultInstance());
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public EDoc.Identity.Builder addTablesBuilder(
            int index) {
          return getTablesFieldBuilder().addBuilder(
              index, EDoc.Identity.getDefaultInstance());
        }
        /**
         * <pre>
         * All the tables referred by the RLS rule.
         * </pre>
         *
         * <code>repeated .Identity tables = 1 [(.Annotation.unique) = "id,fqn"];</code>
         */
        public java.util.List<EDoc.Identity.Builder> 
             getTablesBuilderList() {
          return getTablesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> 
            getTablesFieldBuilder() {
          if (tablesBuilder_ == null) {
            tablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder>(
                    tables_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            tables_ = null;
          }
          return tablesBuilder_;
        }

        private java.util.List<EDoc.Join> joins_ =
          java.util.Collections.emptyList();
        private void ensureJoinsIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            joins_ = new java.util.ArrayList<EDoc.Join>(joins_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            EDoc.Join, EDoc.Join.Builder, EDoc.JoinOrBuilder> joinsBuilder_;

        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public java.util.List<EDoc.Join> getJoinsList() {
          if (joinsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(joins_);
          } else {
            return joinsBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public int getJoinsCount() {
          if (joinsBuilder_ == null) {
            return joins_.size();
          } else {
            return joinsBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public EDoc.Join getJoins(int index) {
          if (joinsBuilder_ == null) {
            return joins_.get(index);
          } else {
            return joinsBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public Builder setJoins(
            int index, EDoc.Join value) {
          if (joinsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureJoinsIsMutable();
            joins_.set(index, value);
            onChanged();
          } else {
            joinsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public Builder setJoins(
            int index, EDoc.Join.Builder builderForValue) {
          if (joinsBuilder_ == null) {
            ensureJoinsIsMutable();
            joins_.set(index, builderForValue.build());
            onChanged();
          } else {
            joinsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public Builder addJoins(EDoc.Join value) {
          if (joinsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureJoinsIsMutable();
            joins_.add(value);
            onChanged();
          } else {
            joinsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public Builder addJoins(
            int index, EDoc.Join value) {
          if (joinsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureJoinsIsMutable();
            joins_.add(index, value);
            onChanged();
          } else {
            joinsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public Builder addJoins(
            EDoc.Join.Builder builderForValue) {
          if (joinsBuilder_ == null) {
            ensureJoinsIsMutable();
            joins_.add(builderForValue.build());
            onChanged();
          } else {
            joinsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public Builder addJoins(
            int index, EDoc.Join.Builder builderForValue) {
          if (joinsBuilder_ == null) {
            ensureJoinsIsMutable();
            joins_.add(index, builderForValue.build());
            onChanged();
          } else {
            joinsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public Builder addAllJoins(
            java.lang.Iterable<? extends EDoc.Join> values) {
          if (joinsBuilder_ == null) {
            ensureJoinsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, joins_);
            onChanged();
          } else {
            joinsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public Builder clearJoins() {
          if (joinsBuilder_ == null) {
            joins_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            joinsBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public Builder removeJoins(int index) {
          if (joinsBuilder_ == null) {
            ensureJoinsIsMutable();
            joins_.remove(index);
            onChanged();
          } else {
            joinsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public EDoc.Join.Builder getJoinsBuilder(
            int index) {
          return getJoinsFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public EDoc.JoinOrBuilder getJoinsOrBuilder(
            int index) {
          if (joinsBuilder_ == null) {
            return joins_.get(index);  } else {
            return joinsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public java.util.List<? extends EDoc.JoinOrBuilder> 
             getJoinsOrBuilderList() {
          if (joinsBuilder_ != null) {
            return joinsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(joins_);
          }
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public EDoc.Join.Builder addJoinsBuilder() {
          return getJoinsFieldBuilder().addBuilder(
              EDoc.Join.getDefaultInstance());
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public EDoc.Join.Builder addJoinsBuilder(
            int index) {
          return getJoinsFieldBuilder().addBuilder(
              index, EDoc.Join.getDefaultInstance());
        }
        /**
         * <pre>
         * Joins that are used by the table.
         * </pre>
         *
         * <code>repeated .Join joins = 2 [(.Annotation.unique) = "id"];</code>
         */
        public java.util.List<EDoc.Join.Builder> 
             getJoinsBuilderList() {
          return getJoinsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            EDoc.Join, EDoc.Join.Builder, EDoc.JoinOrBuilder> 
            getJoinsFieldBuilder() {
          if (joinsBuilder_ == null) {
            joinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                EDoc.Join, EDoc.Join.Builder, EDoc.JoinOrBuilder>(
                    joins_,
                    ((bitField0_ & 0x00000002) != 0),
                    getParentForChildren(),
                    isClean());
            joins_ = null;
          }
          return joinsBuilder_;
        }

        private java.util.List<EDoc.TablePath> tablePaths_ =
          java.util.Collections.emptyList();
        private void ensureTablePathsIsMutable() {
          if (!((bitField0_ & 0x00000004) != 0)) {
            tablePaths_ = new java.util.ArrayList<EDoc.TablePath>(tablePaths_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            EDoc.TablePath, EDoc.TablePath.Builder, EDoc.TablePathOrBuilder> tablePathsBuilder_;

        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public java.util.List<EDoc.TablePath> getTablePathsList() {
          if (tablePathsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(tablePaths_);
          } else {
            return tablePathsBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public int getTablePathsCount() {
          if (tablePathsBuilder_ == null) {
            return tablePaths_.size();
          } else {
            return tablePathsBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public EDoc.TablePath getTablePaths(int index) {
          if (tablePathsBuilder_ == null) {
            return tablePaths_.get(index);
          } else {
            return tablePathsBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public Builder setTablePaths(
            int index, EDoc.TablePath value) {
          if (tablePathsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTablePathsIsMutable();
            tablePaths_.set(index, value);
            onChanged();
          } else {
            tablePathsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public Builder setTablePaths(
            int index, EDoc.TablePath.Builder builderForValue) {
          if (tablePathsBuilder_ == null) {
            ensureTablePathsIsMutable();
            tablePaths_.set(index, builderForValue.build());
            onChanged();
          } else {
            tablePathsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public Builder addTablePaths(EDoc.TablePath value) {
          if (tablePathsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTablePathsIsMutable();
            tablePaths_.add(value);
            onChanged();
          } else {
            tablePathsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public Builder addTablePaths(
            int index, EDoc.TablePath value) {
          if (tablePathsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTablePathsIsMutable();
            tablePaths_.add(index, value);
            onChanged();
          } else {
            tablePathsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public Builder addTablePaths(
            EDoc.TablePath.Builder builderForValue) {
          if (tablePathsBuilder_ == null) {
            ensureTablePathsIsMutable();
            tablePaths_.add(builderForValue.build());
            onChanged();
          } else {
            tablePathsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public Builder addTablePaths(
            int index, EDoc.TablePath.Builder builderForValue) {
          if (tablePathsBuilder_ == null) {
            ensureTablePathsIsMutable();
            tablePaths_.add(index, builderForValue.build());
            onChanged();
          } else {
            tablePathsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public Builder addAllTablePaths(
            java.lang.Iterable<? extends EDoc.TablePath> values) {
          if (tablePathsBuilder_ == null) {
            ensureTablePathsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, tablePaths_);
            onChanged();
          } else {
            tablePathsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public Builder clearTablePaths() {
          if (tablePathsBuilder_ == null) {
            tablePaths_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            tablePathsBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public Builder removeTablePaths(int index) {
          if (tablePathsBuilder_ == null) {
            ensureTablePathsIsMutable();
            tablePaths_.remove(index);
            onChanged();
          } else {
            tablePathsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public EDoc.TablePath.Builder getTablePathsBuilder(
            int index) {
          return getTablePathsFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public EDoc.TablePathOrBuilder getTablePathsOrBuilder(
            int index) {
          if (tablePathsBuilder_ == null) {
            return tablePaths_.get(index);  } else {
            return tablePathsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public java.util.List<? extends EDoc.TablePathOrBuilder> 
             getTablePathsOrBuilderList() {
          if (tablePathsBuilder_ != null) {
            return tablePathsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(tablePaths_);
          }
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public EDoc.TablePath.Builder addTablePathsBuilder() {
          return getTablePathsFieldBuilder().addBuilder(
              EDoc.TablePath.getDefaultInstance());
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public EDoc.TablePath.Builder addTablePathsBuilder(
            int index) {
          return getTablePathsFieldBuilder().addBuilder(
              index, EDoc.TablePath.getDefaultInstance());
        }
        /**
         * <pre>
         * Various manifestations of the joined tables.
         * </pre>
         *
         * <code>repeated .TablePath table_paths = 3 [(.Annotation.unique) = "id"];</code>
         */
        public java.util.List<EDoc.TablePath.Builder> 
             getTablePathsBuilderList() {
          return getTablePathsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            EDoc.TablePath, EDoc.TablePath.Builder, EDoc.TablePathOrBuilder> 
            getTablePathsFieldBuilder() {
          if (tablePathsBuilder_ == null) {
            tablePathsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                EDoc.TablePath, EDoc.TablePath.Builder, EDoc.TablePathOrBuilder>(
                    tablePaths_,
                    ((bitField0_ & 0x00000004) != 0),
                    getParentForChildren(),
                    isClean());
            tablePaths_ = null;
          }
          return tablePathsBuilder_;
        }

        private java.util.List<EDoc.LogicalTableEDocProto.RlsRule.Rule> rules_ =
          java.util.Collections.emptyList();
        private void ensureRulesIsMutable() {
          if (!((bitField0_ & 0x00000008) != 0)) {
            rules_ = new java.util.ArrayList<EDoc.LogicalTableEDocProto.RlsRule.Rule>(rules_);
            bitField0_ |= 0x00000008;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            EDoc.LogicalTableEDocProto.RlsRule.Rule, EDoc.LogicalTableEDocProto.RlsRule.Rule.Builder, EDoc.LogicalTableEDocProto.RlsRule.RuleOrBuilder> rulesBuilder_;

        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public java.util.List<EDoc.LogicalTableEDocProto.RlsRule.Rule> getRulesList() {
          if (rulesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(rules_);
          } else {
            return rulesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public int getRulesCount() {
          if (rulesBuilder_ == null) {
            return rules_.size();
          } else {
            return rulesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public EDoc.LogicalTableEDocProto.RlsRule.Rule getRules(int index) {
          if (rulesBuilder_ == null) {
            return rules_.get(index);
          } else {
            return rulesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public Builder setRules(
            int index, EDoc.LogicalTableEDocProto.RlsRule.Rule value) {
          if (rulesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRulesIsMutable();
            rules_.set(index, value);
            onChanged();
          } else {
            rulesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public Builder setRules(
            int index, EDoc.LogicalTableEDocProto.RlsRule.Rule.Builder builderForValue) {
          if (rulesBuilder_ == null) {
            ensureRulesIsMutable();
            rules_.set(index, builderForValue.build());
            onChanged();
          } else {
            rulesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public Builder addRules(EDoc.LogicalTableEDocProto.RlsRule.Rule value) {
          if (rulesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRulesIsMutable();
            rules_.add(value);
            onChanged();
          } else {
            rulesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public Builder addRules(
            int index, EDoc.LogicalTableEDocProto.RlsRule.Rule value) {
          if (rulesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRulesIsMutable();
            rules_.add(index, value);
            onChanged();
          } else {
            rulesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public Builder addRules(
            EDoc.LogicalTableEDocProto.RlsRule.Rule.Builder builderForValue) {
          if (rulesBuilder_ == null) {
            ensureRulesIsMutable();
            rules_.add(builderForValue.build());
            onChanged();
          } else {
            rulesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public Builder addRules(
            int index, EDoc.LogicalTableEDocProto.RlsRule.Rule.Builder builderForValue) {
          if (rulesBuilder_ == null) {
            ensureRulesIsMutable();
            rules_.add(index, builderForValue.build());
            onChanged();
          } else {
            rulesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public Builder addAllRules(
            java.lang.Iterable<? extends EDoc.LogicalTableEDocProto.RlsRule.Rule> values) {
          if (rulesBuilder_ == null) {
            ensureRulesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, rules_);
            onChanged();
          } else {
            rulesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public Builder clearRules() {
          if (rulesBuilder_ == null) {
            rules_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
          } else {
            rulesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public Builder removeRules(int index) {
          if (rulesBuilder_ == null) {
            ensureRulesIsMutable();
            rules_.remove(index);
            onChanged();
          } else {
            rulesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public EDoc.LogicalTableEDocProto.RlsRule.Rule.Builder getRulesBuilder(
            int index) {
          return getRulesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public EDoc.LogicalTableEDocProto.RlsRule.RuleOrBuilder getRulesOrBuilder(
            int index) {
          if (rulesBuilder_ == null) {
            return rules_.get(index);  } else {
            return rulesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public java.util.List<? extends EDoc.LogicalTableEDocProto.RlsRule.RuleOrBuilder> 
             getRulesOrBuilderList() {
          if (rulesBuilder_ != null) {
            return rulesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(rules_);
          }
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public EDoc.LogicalTableEDocProto.RlsRule.Rule.Builder addRulesBuilder() {
          return getRulesFieldBuilder().addBuilder(
              EDoc.LogicalTableEDocProto.RlsRule.Rule.getDefaultInstance());
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public EDoc.LogicalTableEDocProto.RlsRule.Rule.Builder addRulesBuilder(
            int index) {
          return getRulesFieldBuilder().addBuilder(
              index, EDoc.LogicalTableEDocProto.RlsRule.Rule.getDefaultInstance());
        }
        /**
         * <code>repeated .LogicalTableEDocProto.RlsRule.Rule rules = 4;</code>
         */
        public java.util.List<EDoc.LogicalTableEDocProto.RlsRule.Rule.Builder> 
             getRulesBuilderList() {
          return getRulesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            EDoc.LogicalTableEDocProto.RlsRule.Rule, EDoc.LogicalTableEDocProto.RlsRule.Rule.Builder, EDoc.LogicalTableEDocProto.RlsRule.RuleOrBuilder> 
            getRulesFieldBuilder() {
          if (rulesBuilder_ == null) {
            rulesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                EDoc.LogicalTableEDocProto.RlsRule.Rule, EDoc.LogicalTableEDocProto.RlsRule.Rule.Builder, EDoc.LogicalTableEDocProto.RlsRule.RuleOrBuilder>(
                    rules_,
                    ((bitField0_ & 0x00000008) != 0),
                    getParentForChildren(),
                    isClean());
            rules_ = null;
          }
          return rulesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:LogicalTableEDocProto.RlsRule)
      }

      // @@protoc_insertion_point(class_scope:LogicalTableEDocProto.RlsRule)
      private static final EDoc.LogicalTableEDocProto.RlsRule DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.LogicalTableEDocProto.RlsRule();
      }

      public static EDoc.LogicalTableEDocProto.RlsRule getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<RlsRule>
          PARSER = new com.google.protobuf.AbstractParser<RlsRule>() {
        @java.lang.Override
        public RlsRule parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RlsRule(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<RlsRule> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RlsRule> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.LogicalTableEDocProto.RlsRule getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LogicalColumnEDocProtoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:LogicalTableEDocProto.LogicalColumnEDocProto)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * User readable name and description of this logical column.
       * Note: this name is expected to be unique in the scope of this table.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       * User readable name and description of this logical column.
       * Note: this name is expected to be unique in the scope of this table.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * User readable name and description of this logical column.
       * Note: this name is expected to be unique in the scope of this table.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional string description = 2;</code>
       * @return Whether the description field is set.
       */
      boolean hasDescription();
      /**
       * <code>optional string description = 2;</code>
       * @return The description.
       */
      java.lang.String getDescription();
      /**
       * <code>optional string description = 2;</code>
       * @return The bytes for description.
       */
      com.google.protobuf.ByteString
          getDescriptionBytes();

      /**
       * <pre>
       * Name of the column in the physical table this column maps to.
       * Note: We assume that only a single column with this name exists in the
       * db table.
       * TODO(Archit/Akshay): Should this be an optional field, that needs to be
       * set only when the logical name is not same as this.
       * For embrace(external) tables, this field is the external column name.
       * </pre>
       *
       * <code>optional string db_column_name = 3;</code>
       * @return Whether the dbColumnName field is set.
       */
      boolean hasDbColumnName();
      /**
       * <pre>
       * Name of the column in the physical table this column maps to.
       * Note: We assume that only a single column with this name exists in the
       * db table.
       * TODO(Archit/Akshay): Should this be an optional field, that needs to be
       * set only when the logical name is not same as this.
       * For embrace(external) tables, this field is the external column name.
       * </pre>
       *
       * <code>optional string db_column_name = 3;</code>
       * @return The dbColumnName.
       */
      java.lang.String getDbColumnName();
      /**
       * <pre>
       * Name of the column in the physical table this column maps to.
       * Note: We assume that only a single column with this name exists in the
       * db table.
       * TODO(Archit/Akshay): Should this be an optional field, that needs to be
       * set only when the logical name is not same as this.
       * For embrace(external) tables, this field is the external column name.
       * </pre>
       *
       * <code>optional string db_column_name = 3;</code>
       * @return The bytes for dbColumnName.
       */
      com.google.protobuf.ByteString
          getDbColumnNameBytes();

      /**
       * <code>optional .ColumnProperties properties = 4;</code>
       * @return Whether the properties field is set.
       */
      boolean hasProperties();
      /**
       * <code>optional .ColumnProperties properties = 4;</code>
       * @return The properties.
       */
      EDoc.ColumnProperties getProperties();
      /**
       * <code>optional .ColumnProperties properties = 4;</code>
       */
      EDoc.ColumnPropertiesOrBuilder getPropertiesOrBuilder();

      /**
       * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
       * @return Whether the dbColumnProperties field is set.
       */
      boolean hasDbColumnProperties();
      /**
       * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
       * @return The dbColumnProperties.
       */
      EDoc.LogicalTableEDocProto.DbColumnProperties getDbColumnProperties();
      /**
       * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
       */
      EDoc.LogicalTableEDocProto.DbColumnPropertiesOrBuilder getDbColumnPropertiesOrBuilder();
    }
    /**
     * <pre>
     * This message defines the edoc representation of a logical column.
     * </pre>
     *
     * Protobuf type {@code LogicalTableEDocProto.LogicalColumnEDocProto}
     */
    public static final class LogicalColumnEDocProto extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:LogicalTableEDocProto.LogicalColumnEDocProto)
        LogicalColumnEDocProtoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LogicalColumnEDocProto.newBuilder() to construct.
      private LogicalColumnEDocProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LogicalColumnEDocProto() {
        name_ = "";
        description_ = "";
        dbColumnName_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LogicalColumnEDocProto();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private LogicalColumnEDocProto(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                description_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                dbColumnName_ = bs;
                break;
              }
              case 34: {
                EDoc.ColumnProperties.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) != 0)) {
                  subBuilder = properties_.toBuilder();
                }
                properties_ = input.readMessage(EDoc.ColumnProperties.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(properties_);
                  properties_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
              case 42: {
                EDoc.LogicalTableEDocProto.DbColumnProperties.Builder subBuilder = null;
                if (((bitField0_ & 0x00000010) != 0)) {
                  subBuilder = dbColumnProperties_.toBuilder();
                }
                dbColumnProperties_ = input.readMessage(EDoc.LogicalTableEDocProto.DbColumnProperties.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(dbColumnProperties_);
                  dbColumnProperties_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000010;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_LogicalTableEDocProto_LogicalColumnEDocProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_LogicalTableEDocProto_LogicalColumnEDocProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.class, EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.Builder.class);
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * User readable name and description of this logical column.
       * Note: this name is expected to be unique in the scope of this table.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * User readable name and description of this logical column.
       * Note: this name is expected to be unique in the scope of this table.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * User readable name and description of this logical column.
       * Note: this name is expected to be unique in the scope of this table.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DESCRIPTION_FIELD_NUMBER = 2;
      private volatile java.lang.Object description_;
      /**
       * <code>optional string description = 2;</code>
       * @return Whether the description field is set.
       */
      @java.lang.Override
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string description = 2;</code>
       * @return The description.
       */
      @java.lang.Override
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string description = 2;</code>
       * @return The bytes for description.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DB_COLUMN_NAME_FIELD_NUMBER = 3;
      private volatile java.lang.Object dbColumnName_;
      /**
       * <pre>
       * Name of the column in the physical table this column maps to.
       * Note: We assume that only a single column with this name exists in the
       * db table.
       * TODO(Archit/Akshay): Should this be an optional field, that needs to be
       * set only when the logical name is not same as this.
       * For embrace(external) tables, this field is the external column name.
       * </pre>
       *
       * <code>optional string db_column_name = 3;</code>
       * @return Whether the dbColumnName field is set.
       */
      @java.lang.Override
      public boolean hasDbColumnName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Name of the column in the physical table this column maps to.
       * Note: We assume that only a single column with this name exists in the
       * db table.
       * TODO(Archit/Akshay): Should this be an optional field, that needs to be
       * set only when the logical name is not same as this.
       * For embrace(external) tables, this field is the external column name.
       * </pre>
       *
       * <code>optional string db_column_name = 3;</code>
       * @return The dbColumnName.
       */
      @java.lang.Override
      public java.lang.String getDbColumnName() {
        java.lang.Object ref = dbColumnName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dbColumnName_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Name of the column in the physical table this column maps to.
       * Note: We assume that only a single column with this name exists in the
       * db table.
       * TODO(Archit/Akshay): Should this be an optional field, that needs to be
       * set only when the logical name is not same as this.
       * For embrace(external) tables, this field is the external column name.
       * </pre>
       *
       * <code>optional string db_column_name = 3;</code>
       * @return The bytes for dbColumnName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDbColumnNameBytes() {
        java.lang.Object ref = dbColumnName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dbColumnName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PROPERTIES_FIELD_NUMBER = 4;
      private EDoc.ColumnProperties properties_;
      /**
       * <code>optional .ColumnProperties properties = 4;</code>
       * @return Whether the properties field is set.
       */
      @java.lang.Override
      public boolean hasProperties() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .ColumnProperties properties = 4;</code>
       * @return The properties.
       */
      @java.lang.Override
      public EDoc.ColumnProperties getProperties() {
        return properties_ == null ? EDoc.ColumnProperties.getDefaultInstance() : properties_;
      }
      /**
       * <code>optional .ColumnProperties properties = 4;</code>
       */
      @java.lang.Override
      public EDoc.ColumnPropertiesOrBuilder getPropertiesOrBuilder() {
        return properties_ == null ? EDoc.ColumnProperties.getDefaultInstance() : properties_;
      }

      public static final int DB_COLUMN_PROPERTIES_FIELD_NUMBER = 5;
      private EDoc.LogicalTableEDocProto.DbColumnProperties dbColumnProperties_;
      /**
       * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
       * @return Whether the dbColumnProperties field is set.
       */
      @java.lang.Override
      public boolean hasDbColumnProperties() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
       * @return The dbColumnProperties.
       */
      @java.lang.Override
      public EDoc.LogicalTableEDocProto.DbColumnProperties getDbColumnProperties() {
        return dbColumnProperties_ == null ? EDoc.LogicalTableEDocProto.DbColumnProperties.getDefaultInstance() : dbColumnProperties_;
      }
      /**
       * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
       */
      @java.lang.Override
      public EDoc.LogicalTableEDocProto.DbColumnPropertiesOrBuilder getDbColumnPropertiesOrBuilder() {
        return dbColumnProperties_ == null ? EDoc.LogicalTableEDocProto.DbColumnProperties.getDefaultInstance() : dbColumnProperties_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, dbColumnName_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeMessage(4, getProperties());
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeMessage(5, getDbColumnProperties());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, dbColumnName_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getProperties());
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getDbColumnProperties());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.LogicalTableEDocProto.LogicalColumnEDocProto)) {
          return super.equals(obj);
        }
        EDoc.LogicalTableEDocProto.LogicalColumnEDocProto other = (EDoc.LogicalTableEDocProto.LogicalColumnEDocProto) obj;

        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasDescription() != other.hasDescription()) return false;
        if (hasDescription()) {
          if (!getDescription()
              .equals(other.getDescription())) return false;
        }
        if (hasDbColumnName() != other.hasDbColumnName()) return false;
        if (hasDbColumnName()) {
          if (!getDbColumnName()
              .equals(other.getDbColumnName())) return false;
        }
        if (hasProperties() != other.hasProperties()) return false;
        if (hasProperties()) {
          if (!getProperties()
              .equals(other.getProperties())) return false;
        }
        if (hasDbColumnProperties() != other.hasDbColumnProperties()) return false;
        if (hasDbColumnProperties()) {
          if (!getDbColumnProperties()
              .equals(other.getDbColumnProperties())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasDescription()) {
          hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getDescription().hashCode();
        }
        if (hasDbColumnName()) {
          hash = (37 * hash) + DB_COLUMN_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getDbColumnName().hashCode();
        }
        if (hasProperties()) {
          hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
          hash = (53 * hash) + getProperties().hashCode();
        }
        if (hasDbColumnProperties()) {
          hash = (37 * hash) + DB_COLUMN_PROPERTIES_FIELD_NUMBER;
          hash = (53 * hash) + getDbColumnProperties().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.LogicalTableEDocProto.LogicalColumnEDocProto parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.LogicalTableEDocProto.LogicalColumnEDocProto parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.LogicalColumnEDocProto parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.LogicalTableEDocProto.LogicalColumnEDocProto parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.LogicalColumnEDocProto parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.LogicalTableEDocProto.LogicalColumnEDocProto parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.LogicalColumnEDocProto parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.LogicalTableEDocProto.LogicalColumnEDocProto parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.LogicalColumnEDocProto parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.LogicalTableEDocProto.LogicalColumnEDocProto parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.LogicalColumnEDocProto parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.LogicalTableEDocProto.LogicalColumnEDocProto parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.LogicalTableEDocProto.LogicalColumnEDocProto prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * This message defines the edoc representation of a logical column.
       * </pre>
       *
       * Protobuf type {@code LogicalTableEDocProto.LogicalColumnEDocProto}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:LogicalTableEDocProto.LogicalColumnEDocProto)
          EDoc.LogicalTableEDocProto.LogicalColumnEDocProtoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_LogicalTableEDocProto_LogicalColumnEDocProto_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_LogicalTableEDocProto_LogicalColumnEDocProto_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.class, EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.Builder.class);
        }

        // Construct using EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getPropertiesFieldBuilder();
            getDbColumnPropertiesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          description_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          dbColumnName_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          if (propertiesBuilder_ == null) {
            properties_ = null;
          } else {
            propertiesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          if (dbColumnPropertiesBuilder_ == null) {
            dbColumnProperties_ = null;
          } else {
            dbColumnPropertiesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_LogicalTableEDocProto_LogicalColumnEDocProto_descriptor;
        }

        @java.lang.Override
        public EDoc.LogicalTableEDocProto.LogicalColumnEDocProto getDefaultInstanceForType() {
          return EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.LogicalTableEDocProto.LogicalColumnEDocProto build() {
          EDoc.LogicalTableEDocProto.LogicalColumnEDocProto result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.LogicalTableEDocProto.LogicalColumnEDocProto buildPartial() {
          EDoc.LogicalTableEDocProto.LogicalColumnEDocProto result = new EDoc.LogicalTableEDocProto.LogicalColumnEDocProto(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.description_ = description_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            to_bitField0_ |= 0x00000004;
          }
          result.dbColumnName_ = dbColumnName_;
          if (((from_bitField0_ & 0x00000008) != 0)) {
            if (propertiesBuilder_ == null) {
              result.properties_ = properties_;
            } else {
              result.properties_ = propertiesBuilder_.build();
            }
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            if (dbColumnPropertiesBuilder_ == null) {
              result.dbColumnProperties_ = dbColumnProperties_;
            } else {
              result.dbColumnProperties_ = dbColumnPropertiesBuilder_.build();
            }
            to_bitField0_ |= 0x00000010;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.LogicalTableEDocProto.LogicalColumnEDocProto) {
            return mergeFrom((EDoc.LogicalTableEDocProto.LogicalColumnEDocProto)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.LogicalTableEDocProto.LogicalColumnEDocProto other) {
          if (other == EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasDescription()) {
            bitField0_ |= 0x00000002;
            description_ = other.description_;
            onChanged();
          }
          if (other.hasDbColumnName()) {
            bitField0_ |= 0x00000004;
            dbColumnName_ = other.dbColumnName_;
            onChanged();
          }
          if (other.hasProperties()) {
            mergeProperties(other.getProperties());
          }
          if (other.hasDbColumnProperties()) {
            mergeDbColumnProperties(other.getDbColumnProperties());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.LogicalTableEDocProto.LogicalColumnEDocProto parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.LogicalTableEDocProto.LogicalColumnEDocProto) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * User readable name and description of this logical column.
         * Note: this name is expected to be unique in the scope of this table.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * User readable name and description of this logical column.
         * Note: this name is expected to be unique in the scope of this table.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * User readable name and description of this logical column.
         * Note: this name is expected to be unique in the scope of this table.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * User readable name and description of this logical column.
         * Note: this name is expected to be unique in the scope of this table.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * User readable name and description of this logical column.
         * Note: this name is expected to be unique in the scope of this table.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * User readable name and description of this logical column.
         * Note: this name is expected to be unique in the scope of this table.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object description_ = "";
        /**
         * <code>optional string description = 2;</code>
         * @return Whether the description field is set.
         */
        public boolean hasDescription() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string description = 2;</code>
         * @return The description.
         */
        public java.lang.String getDescription() {
          java.lang.Object ref = description_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              description_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string description = 2;</code>
         * @return The bytes for description.
         */
        public com.google.protobuf.ByteString
            getDescriptionBytes() {
          java.lang.Object ref = description_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            description_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string description = 2;</code>
         * @param value The description to set.
         * @return This builder for chaining.
         */
        public Builder setDescription(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          description_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string description = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearDescription() {
          bitField0_ = (bitField0_ & ~0x00000002);
          description_ = getDefaultInstance().getDescription();
          onChanged();
          return this;
        }
        /**
         * <code>optional string description = 2;</code>
         * @param value The bytes for description to set.
         * @return This builder for chaining.
         */
        public Builder setDescriptionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          description_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object dbColumnName_ = "";
        /**
         * <pre>
         * Name of the column in the physical table this column maps to.
         * Note: We assume that only a single column with this name exists in the
         * db table.
         * TODO(Archit/Akshay): Should this be an optional field, that needs to be
         * set only when the logical name is not same as this.
         * For embrace(external) tables, this field is the external column name.
         * </pre>
         *
         * <code>optional string db_column_name = 3;</code>
         * @return Whether the dbColumnName field is set.
         */
        public boolean hasDbColumnName() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Name of the column in the physical table this column maps to.
         * Note: We assume that only a single column with this name exists in the
         * db table.
         * TODO(Archit/Akshay): Should this be an optional field, that needs to be
         * set only when the logical name is not same as this.
         * For embrace(external) tables, this field is the external column name.
         * </pre>
         *
         * <code>optional string db_column_name = 3;</code>
         * @return The dbColumnName.
         */
        public java.lang.String getDbColumnName() {
          java.lang.Object ref = dbColumnName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              dbColumnName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Name of the column in the physical table this column maps to.
         * Note: We assume that only a single column with this name exists in the
         * db table.
         * TODO(Archit/Akshay): Should this be an optional field, that needs to be
         * set only when the logical name is not same as this.
         * For embrace(external) tables, this field is the external column name.
         * </pre>
         *
         * <code>optional string db_column_name = 3;</code>
         * @return The bytes for dbColumnName.
         */
        public com.google.protobuf.ByteString
            getDbColumnNameBytes() {
          java.lang.Object ref = dbColumnName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            dbColumnName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Name of the column in the physical table this column maps to.
         * Note: We assume that only a single column with this name exists in the
         * db table.
         * TODO(Archit/Akshay): Should this be an optional field, that needs to be
         * set only when the logical name is not same as this.
         * For embrace(external) tables, this field is the external column name.
         * </pre>
         *
         * <code>optional string db_column_name = 3;</code>
         * @param value The dbColumnName to set.
         * @return This builder for chaining.
         */
        public Builder setDbColumnName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          dbColumnName_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the column in the physical table this column maps to.
         * Note: We assume that only a single column with this name exists in the
         * db table.
         * TODO(Archit/Akshay): Should this be an optional field, that needs to be
         * set only when the logical name is not same as this.
         * For embrace(external) tables, this field is the external column name.
         * </pre>
         *
         * <code>optional string db_column_name = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearDbColumnName() {
          bitField0_ = (bitField0_ & ~0x00000004);
          dbColumnName_ = getDefaultInstance().getDbColumnName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the column in the physical table this column maps to.
         * Note: We assume that only a single column with this name exists in the
         * db table.
         * TODO(Archit/Akshay): Should this be an optional field, that needs to be
         * set only when the logical name is not same as this.
         * For embrace(external) tables, this field is the external column name.
         * </pre>
         *
         * <code>optional string db_column_name = 3;</code>
         * @param value The bytes for dbColumnName to set.
         * @return This builder for chaining.
         */
        public Builder setDbColumnNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          dbColumnName_ = value;
          onChanged();
          return this;
        }

        private EDoc.ColumnProperties properties_;
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ColumnProperties, EDoc.ColumnProperties.Builder, EDoc.ColumnPropertiesOrBuilder> propertiesBuilder_;
        /**
         * <code>optional .ColumnProperties properties = 4;</code>
         * @return Whether the properties field is set.
         */
        public boolean hasProperties() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional .ColumnProperties properties = 4;</code>
         * @return The properties.
         */
        public EDoc.ColumnProperties getProperties() {
          if (propertiesBuilder_ == null) {
            return properties_ == null ? EDoc.ColumnProperties.getDefaultInstance() : properties_;
          } else {
            return propertiesBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .ColumnProperties properties = 4;</code>
         */
        public Builder setProperties(EDoc.ColumnProperties value) {
          if (propertiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            properties_ = value;
            onChanged();
          } else {
            propertiesBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .ColumnProperties properties = 4;</code>
         */
        public Builder setProperties(
            EDoc.ColumnProperties.Builder builderForValue) {
          if (propertiesBuilder_ == null) {
            properties_ = builderForValue.build();
            onChanged();
          } else {
            propertiesBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .ColumnProperties properties = 4;</code>
         */
        public Builder mergeProperties(EDoc.ColumnProperties value) {
          if (propertiesBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0) &&
                properties_ != null &&
                properties_ != EDoc.ColumnProperties.getDefaultInstance()) {
              properties_ =
                EDoc.ColumnProperties.newBuilder(properties_).mergeFrom(value).buildPartial();
            } else {
              properties_ = value;
            }
            onChanged();
          } else {
            propertiesBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .ColumnProperties properties = 4;</code>
         */
        public Builder clearProperties() {
          if (propertiesBuilder_ == null) {
            properties_ = null;
            onChanged();
          } else {
            propertiesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>optional .ColumnProperties properties = 4;</code>
         */
        public EDoc.ColumnProperties.Builder getPropertiesBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getPropertiesFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .ColumnProperties properties = 4;</code>
         */
        public EDoc.ColumnPropertiesOrBuilder getPropertiesOrBuilder() {
          if (propertiesBuilder_ != null) {
            return propertiesBuilder_.getMessageOrBuilder();
          } else {
            return properties_ == null ?
                EDoc.ColumnProperties.getDefaultInstance() : properties_;
          }
        }
        /**
         * <code>optional .ColumnProperties properties = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.ColumnProperties, EDoc.ColumnProperties.Builder, EDoc.ColumnPropertiesOrBuilder> 
            getPropertiesFieldBuilder() {
          if (propertiesBuilder_ == null) {
            propertiesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                EDoc.ColumnProperties, EDoc.ColumnProperties.Builder, EDoc.ColumnPropertiesOrBuilder>(
                    getProperties(),
                    getParentForChildren(),
                    isClean());
            properties_ = null;
          }
          return propertiesBuilder_;
        }

        private EDoc.LogicalTableEDocProto.DbColumnProperties dbColumnProperties_;
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.LogicalTableEDocProto.DbColumnProperties, EDoc.LogicalTableEDocProto.DbColumnProperties.Builder, EDoc.LogicalTableEDocProto.DbColumnPropertiesOrBuilder> dbColumnPropertiesBuilder_;
        /**
         * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
         * @return Whether the dbColumnProperties field is set.
         */
        public boolean hasDbColumnProperties() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
         * @return The dbColumnProperties.
         */
        public EDoc.LogicalTableEDocProto.DbColumnProperties getDbColumnProperties() {
          if (dbColumnPropertiesBuilder_ == null) {
            return dbColumnProperties_ == null ? EDoc.LogicalTableEDocProto.DbColumnProperties.getDefaultInstance() : dbColumnProperties_;
          } else {
            return dbColumnPropertiesBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
         */
        public Builder setDbColumnProperties(EDoc.LogicalTableEDocProto.DbColumnProperties value) {
          if (dbColumnPropertiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            dbColumnProperties_ = value;
            onChanged();
          } else {
            dbColumnPropertiesBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
         */
        public Builder setDbColumnProperties(
            EDoc.LogicalTableEDocProto.DbColumnProperties.Builder builderForValue) {
          if (dbColumnPropertiesBuilder_ == null) {
            dbColumnProperties_ = builderForValue.build();
            onChanged();
          } else {
            dbColumnPropertiesBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
         */
        public Builder mergeDbColumnProperties(EDoc.LogicalTableEDocProto.DbColumnProperties value) {
          if (dbColumnPropertiesBuilder_ == null) {
            if (((bitField0_ & 0x00000010) != 0) &&
                dbColumnProperties_ != null &&
                dbColumnProperties_ != EDoc.LogicalTableEDocProto.DbColumnProperties.getDefaultInstance()) {
              dbColumnProperties_ =
                EDoc.LogicalTableEDocProto.DbColumnProperties.newBuilder(dbColumnProperties_).mergeFrom(value).buildPartial();
            } else {
              dbColumnProperties_ = value;
            }
            onChanged();
          } else {
            dbColumnPropertiesBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
         */
        public Builder clearDbColumnProperties() {
          if (dbColumnPropertiesBuilder_ == null) {
            dbColumnProperties_ = null;
            onChanged();
          } else {
            dbColumnPropertiesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        /**
         * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
         */
        public EDoc.LogicalTableEDocProto.DbColumnProperties.Builder getDbColumnPropertiesBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getDbColumnPropertiesFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
         */
        public EDoc.LogicalTableEDocProto.DbColumnPropertiesOrBuilder getDbColumnPropertiesOrBuilder() {
          if (dbColumnPropertiesBuilder_ != null) {
            return dbColumnPropertiesBuilder_.getMessageOrBuilder();
          } else {
            return dbColumnProperties_ == null ?
                EDoc.LogicalTableEDocProto.DbColumnProperties.getDefaultInstance() : dbColumnProperties_;
          }
        }
        /**
         * <code>optional .LogicalTableEDocProto.DbColumnProperties db_column_properties = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            EDoc.LogicalTableEDocProto.DbColumnProperties, EDoc.LogicalTableEDocProto.DbColumnProperties.Builder, EDoc.LogicalTableEDocProto.DbColumnPropertiesOrBuilder> 
            getDbColumnPropertiesFieldBuilder() {
          if (dbColumnPropertiesBuilder_ == null) {
            dbColumnPropertiesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                EDoc.LogicalTableEDocProto.DbColumnProperties, EDoc.LogicalTableEDocProto.DbColumnProperties.Builder, EDoc.LogicalTableEDocProto.DbColumnPropertiesOrBuilder>(
                    getDbColumnProperties(),
                    getParentForChildren(),
                    isClean());
            dbColumnProperties_ = null;
          }
          return dbColumnPropertiesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:LogicalTableEDocProto.LogicalColumnEDocProto)
      }

      // @@protoc_insertion_point(class_scope:LogicalTableEDocProto.LogicalColumnEDocProto)
      private static final EDoc.LogicalTableEDocProto.LogicalColumnEDocProto DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.LogicalTableEDocProto.LogicalColumnEDocProto();
      }

      public static EDoc.LogicalTableEDocProto.LogicalColumnEDocProto getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<LogicalColumnEDocProto>
          PARSER = new com.google.protobuf.AbstractParser<LogicalColumnEDocProto>() {
        @java.lang.Override
        public LogicalColumnEDocProto parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LogicalColumnEDocProto(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<LogicalColumnEDocProto> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LogicalColumnEDocProto> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.LogicalTableEDocProto.LogicalColumnEDocProto getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DbColumnPropertiesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:LogicalTableEDocProto.DbColumnProperties)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string data_type = 1;</code>
       * @return Whether the dataType field is set.
       */
      boolean hasDataType();
      /**
       * <code>optional string data_type = 1;</code>
       * @return The dataType.
       */
      java.lang.String getDataType();
      /**
       * <code>optional string data_type = 1;</code>
       * @return The bytes for dataType.
       */
      com.google.protobuf.ByteString
          getDataTypeBytes();
    }
    /**
     * <pre>
     * ColumnProperties are used for updating the logical column. But we also need
     * some data structure for scripting physical column properties like
     * primary_key, foreing_key and data_type. This message can be used for that
     * requirement.
     * </pre>
     *
     * Protobuf type {@code LogicalTableEDocProto.DbColumnProperties}
     */
    public static final class DbColumnProperties extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:LogicalTableEDocProto.DbColumnProperties)
        DbColumnPropertiesOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DbColumnProperties.newBuilder() to construct.
      private DbColumnProperties(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DbColumnProperties() {
        dataType_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new DbColumnProperties();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DbColumnProperties(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                dataType_ = bs;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_LogicalTableEDocProto_DbColumnProperties_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_LogicalTableEDocProto_DbColumnProperties_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.LogicalTableEDocProto.DbColumnProperties.class, EDoc.LogicalTableEDocProto.DbColumnProperties.Builder.class);
      }

      private int bitField0_;
      public static final int DATA_TYPE_FIELD_NUMBER = 1;
      private volatile java.lang.Object dataType_;
      /**
       * <code>optional string data_type = 1;</code>
       * @return Whether the dataType field is set.
       */
      @java.lang.Override
      public boolean hasDataType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string data_type = 1;</code>
       * @return The dataType.
       */
      @java.lang.Override
      public java.lang.String getDataType() {
        java.lang.Object ref = dataType_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dataType_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string data_type = 1;</code>
       * @return The bytes for dataType.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDataTypeBytes() {
        java.lang.Object ref = dataType_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, dataType_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, dataType_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.LogicalTableEDocProto.DbColumnProperties)) {
          return super.equals(obj);
        }
        EDoc.LogicalTableEDocProto.DbColumnProperties other = (EDoc.LogicalTableEDocProto.DbColumnProperties) obj;

        if (hasDataType() != other.hasDataType()) return false;
        if (hasDataType()) {
          if (!getDataType()
              .equals(other.getDataType())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDataType()) {
          hash = (37 * hash) + DATA_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getDataType().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.LogicalTableEDocProto.DbColumnProperties parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.LogicalTableEDocProto.DbColumnProperties parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.DbColumnProperties parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.LogicalTableEDocProto.DbColumnProperties parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.DbColumnProperties parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.LogicalTableEDocProto.DbColumnProperties parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.DbColumnProperties parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.LogicalTableEDocProto.DbColumnProperties parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.DbColumnProperties parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.LogicalTableEDocProto.DbColumnProperties parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.LogicalTableEDocProto.DbColumnProperties parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.LogicalTableEDocProto.DbColumnProperties parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.LogicalTableEDocProto.DbColumnProperties prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * ColumnProperties are used for updating the logical column. But we also need
       * some data structure for scripting physical column properties like
       * primary_key, foreing_key and data_type. This message can be used for that
       * requirement.
       * </pre>
       *
       * Protobuf type {@code LogicalTableEDocProto.DbColumnProperties}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:LogicalTableEDocProto.DbColumnProperties)
          EDoc.LogicalTableEDocProto.DbColumnPropertiesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_LogicalTableEDocProto_DbColumnProperties_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_LogicalTableEDocProto_DbColumnProperties_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.LogicalTableEDocProto.DbColumnProperties.class, EDoc.LogicalTableEDocProto.DbColumnProperties.Builder.class);
        }

        // Construct using EDoc.LogicalTableEDocProto.DbColumnProperties.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          dataType_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_LogicalTableEDocProto_DbColumnProperties_descriptor;
        }

        @java.lang.Override
        public EDoc.LogicalTableEDocProto.DbColumnProperties getDefaultInstanceForType() {
          return EDoc.LogicalTableEDocProto.DbColumnProperties.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.LogicalTableEDocProto.DbColumnProperties build() {
          EDoc.LogicalTableEDocProto.DbColumnProperties result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.LogicalTableEDocProto.DbColumnProperties buildPartial() {
          EDoc.LogicalTableEDocProto.DbColumnProperties result = new EDoc.LogicalTableEDocProto.DbColumnProperties(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.dataType_ = dataType_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.LogicalTableEDocProto.DbColumnProperties) {
            return mergeFrom((EDoc.LogicalTableEDocProto.DbColumnProperties)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.LogicalTableEDocProto.DbColumnProperties other) {
          if (other == EDoc.LogicalTableEDocProto.DbColumnProperties.getDefaultInstance()) return this;
          if (other.hasDataType()) {
            bitField0_ |= 0x00000001;
            dataType_ = other.dataType_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.LogicalTableEDocProto.DbColumnProperties parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.LogicalTableEDocProto.DbColumnProperties) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object dataType_ = "";
        /**
         * <code>optional string data_type = 1;</code>
         * @return Whether the dataType field is set.
         */
        public boolean hasDataType() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string data_type = 1;</code>
         * @return The dataType.
         */
        public java.lang.String getDataType() {
          java.lang.Object ref = dataType_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              dataType_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string data_type = 1;</code>
         * @return The bytes for dataType.
         */
        public com.google.protobuf.ByteString
            getDataTypeBytes() {
          java.lang.Object ref = dataType_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            dataType_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string data_type = 1;</code>
         * @param value The dataType to set.
         * @return This builder for chaining.
         */
        public Builder setDataType(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          dataType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string data_type = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearDataType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          dataType_ = getDefaultInstance().getDataType();
          onChanged();
          return this;
        }
        /**
         * <code>optional string data_type = 1;</code>
         * @param value The bytes for dataType to set.
         * @return This builder for chaining.
         */
        public Builder setDataTypeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          dataType_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:LogicalTableEDocProto.DbColumnProperties)
      }

      // @@protoc_insertion_point(class_scope:LogicalTableEDocProto.DbColumnProperties)
      private static final EDoc.LogicalTableEDocProto.DbColumnProperties DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.LogicalTableEDocProto.DbColumnProperties();
      }

      public static EDoc.LogicalTableEDocProto.DbColumnProperties getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DbColumnProperties>
          PARSER = new com.google.protobuf.AbstractParser<DbColumnProperties>() {
        @java.lang.Override
        public DbColumnProperties parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DbColumnProperties(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DbColumnProperties> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DbColumnProperties> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.LogicalTableEDocProto.DbColumnProperties getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * User readable name and description of the logical table to create/update.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * User readable name and description of the logical table to create/update.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * User readable name and description of the logical table to create/update.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object description_;
    /**
     * <code>optional string description = 2;</code>
     * @return Whether the description field is set.
     */
    @java.lang.Override
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string description = 2;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string description = 2;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DB_FIELD_NUMBER = 3;
    private volatile java.lang.Object db_;
    /**
     * <pre>
     * Fields required to uniquely identify the db table this table maps to.
     * </pre>
     *
     * <code>optional string db = 3;</code>
     * @return Whether the db field is set.
     */
    @java.lang.Override
    public boolean hasDb() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Fields required to uniquely identify the db table this table maps to.
     * </pre>
     *
     * <code>optional string db = 3;</code>
     * @return The db.
     */
    @java.lang.Override
    public java.lang.String getDb() {
      java.lang.Object ref = db_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          db_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Fields required to uniquely identify the db table this table maps to.
     * </pre>
     *
     * <code>optional string db = 3;</code>
     * @return The bytes for db.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDbBytes() {
      java.lang.Object ref = db_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        db_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCHEMA_FIELD_NUMBER = 4;
    private volatile java.lang.Object schema_;
    /**
     * <code>optional string schema = 4;</code>
     * @return Whether the schema field is set.
     */
    @java.lang.Override
    public boolean hasSchema() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional string schema = 4;</code>
     * @return The schema.
     */
    @java.lang.Override
    public java.lang.String getSchema() {
      java.lang.Object ref = schema_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          schema_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string schema = 4;</code>
     * @return The bytes for schema.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSchemaBytes() {
      java.lang.Object ref = schema_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        schema_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DB_TABLE_FIELD_NUMBER = 5;
    private volatile java.lang.Object dbTable_;
    /**
     * <pre>
     * Note: We assume that only a single table with given &#64;db_table name
     *       exists in the dependant db-schema pair.
     *       Since we don't need fqn, using string instead of Identity here.
     * </pre>
     *
     * <code>optional string db_table = 5;</code>
     * @return Whether the dbTable field is set.
     */
    @java.lang.Override
    public boolean hasDbTable() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Note: We assume that only a single table with given &#64;db_table name
     *       exists in the dependant db-schema pair.
     *       Since we don't need fqn, using string instead of Identity here.
     * </pre>
     *
     * <code>optional string db_table = 5;</code>
     * @return The dbTable.
     */
    @java.lang.Override
    public java.lang.String getDbTable() {
      java.lang.Object ref = dbTable_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dbTable_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Note: We assume that only a single table with given &#64;db_table name
     *       exists in the dependant db-schema pair.
     *       Since we don't need fqn, using string instead of Identity here.
     * </pre>
     *
     * <code>optional string db_table = 5;</code>
     * @return The bytes for dbTable.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDbTableBytes() {
      java.lang.Object ref = dbTable_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dbTable_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONNECTION_FIELD_NUMBER = 6;
    private EDoc.Identity connection_;
    /**
     * <pre>
     * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
     * a database table. But since we also support multiple database systems, we
     * need one more identifier i.e. &lt;system, db, schema, table&gt;.
     * In embrace terminology, we call this new vairable a 'connection'.
     * In a cluster we can have multiple connections, to the same or to different
     * database systems. Also each connection has a name that need not be unique.
     * Side note: Since logical tables now depends on a connection object instead
     *            of the physical tables directly, the connection controls what
     *            underlying tables and columns are visible to the logical layer.
     * Based on this design, the following rule applies when an external db is
     * involved:
     * 1. while downloading, we just download the name of the connection object.
     * 2. while uploading, we need to provide a name (or fqn in-case name is not
     *    unique) of the connection we want to use.
     *    More details about upload logic present in "EDocToTableTranslator.java"
     * However an empty connection field indicates we indent to use a database in
     * falcon.
     * </pre>
     *
     * <code>optional .Identity connection = 6;</code>
     * @return Whether the connection field is set.
     */
    @java.lang.Override
    public boolean hasConnection() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
     * a database table. But since we also support multiple database systems, we
     * need one more identifier i.e. &lt;system, db, schema, table&gt;.
     * In embrace terminology, we call this new vairable a 'connection'.
     * In a cluster we can have multiple connections, to the same or to different
     * database systems. Also each connection has a name that need not be unique.
     * Side note: Since logical tables now depends on a connection object instead
     *            of the physical tables directly, the connection controls what
     *            underlying tables and columns are visible to the logical layer.
     * Based on this design, the following rule applies when an external db is
     * involved:
     * 1. while downloading, we just download the name of the connection object.
     * 2. while uploading, we need to provide a name (or fqn in-case name is not
     *    unique) of the connection we want to use.
     *    More details about upload logic present in "EDocToTableTranslator.java"
     * However an empty connection field indicates we indent to use a database in
     * falcon.
     * </pre>
     *
     * <code>optional .Identity connection = 6;</code>
     * @return The connection.
     */
    @java.lang.Override
    public EDoc.Identity getConnection() {
      return connection_ == null ? EDoc.Identity.getDefaultInstance() : connection_;
    }
    /**
     * <pre>
     * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
     * a database table. But since we also support multiple database systems, we
     * need one more identifier i.e. &lt;system, db, schema, table&gt;.
     * In embrace terminology, we call this new vairable a 'connection'.
     * In a cluster we can have multiple connections, to the same or to different
     * database systems. Also each connection has a name that need not be unique.
     * Side note: Since logical tables now depends on a connection object instead
     *            of the physical tables directly, the connection controls what
     *            underlying tables and columns are visible to the logical layer.
     * Based on this design, the following rule applies when an external db is
     * involved:
     * 1. while downloading, we just download the name of the connection object.
     * 2. while uploading, we need to provide a name (or fqn in-case name is not
     *    unique) of the connection we want to use.
     *    More details about upload logic present in "EDocToTableTranslator.java"
     * However an empty connection field indicates we indent to use a database in
     * falcon.
     * </pre>
     *
     * <code>optional .Identity connection = 6;</code>
     */
    @java.lang.Override
    public EDoc.IdentityOrBuilder getConnectionOrBuilder() {
      return connection_ == null ? EDoc.Identity.getDefaultInstance() : connection_;
    }

    public static final int COLUMNS_FIELD_NUMBER = 7;
    private java.util.List<EDoc.LogicalTableEDocProto.LogicalColumnEDocProto> columns_;
    /**
     * <pre>
     * Below fields defines this table.
     * </pre>
     *
     * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.LogicalTableEDocProto.LogicalColumnEDocProto> getColumnsList() {
      return columns_;
    }
    /**
     * <pre>
     * Below fields defines this table.
     * </pre>
     *
     * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.LogicalTableEDocProto.LogicalColumnEDocProtoOrBuilder> 
        getColumnsOrBuilderList() {
      return columns_;
    }
    /**
     * <pre>
     * Below fields defines this table.
     * </pre>
     *
     * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
     */
    @java.lang.Override
    public int getColumnsCount() {
      return columns_.size();
    }
    /**
     * <pre>
     * Below fields defines this table.
     * </pre>
     *
     * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
     */
    @java.lang.Override
    public EDoc.LogicalTableEDocProto.LogicalColumnEDocProto getColumns(int index) {
      return columns_.get(index);
    }
    /**
     * <pre>
     * Below fields defines this table.
     * </pre>
     *
     * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
     */
    @java.lang.Override
    public EDoc.LogicalTableEDocProto.LogicalColumnEDocProtoOrBuilder getColumnsOrBuilder(
        int index) {
      return columns_.get(index);
    }

    public static final int RLS_RULES_FIELD_NUMBER = 8;
    private EDoc.LogicalTableEDocProto.RlsRule rlsRules_;
    /**
     * <pre>
     * Order'd list of rls filters along with supplementary information applied to table.
     * </pre>
     *
     * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
     * @return Whether the rlsRules field is set.
     */
    @java.lang.Override
    public boolean hasRlsRules() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Order'd list of rls filters along with supplementary information applied to table.
     * </pre>
     *
     * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
     * @return The rlsRules.
     */
    @java.lang.Override
    public EDoc.LogicalTableEDocProto.RlsRule getRlsRules() {
      return rlsRules_ == null ? EDoc.LogicalTableEDocProto.RlsRule.getDefaultInstance() : rlsRules_;
    }
    /**
     * <pre>
     * Order'd list of rls filters along with supplementary information applied to table.
     * </pre>
     *
     * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
     */
    @java.lang.Override
    public EDoc.LogicalTableEDocProto.RlsRuleOrBuilder getRlsRulesOrBuilder() {
      return rlsRules_ == null ? EDoc.LogicalTableEDocProto.RlsRule.getDefaultInstance() : rlsRules_;
    }

    public static final int JOINS_WITH_FIELD_NUMBER = 9;
    private java.util.List<EDoc.RelationEDocProto> joinsWith_;
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.RelationEDocProto> getJoinsWithList() {
      return joinsWith_;
    }
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.RelationEDocProtoOrBuilder> 
        getJoinsWithOrBuilderList() {
      return joinsWith_;
    }
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    @java.lang.Override
    public int getJoinsWithCount() {
      return joinsWith_.size();
    }
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    @java.lang.Override
    public EDoc.RelationEDocProto getJoinsWith(int index) {
      return joinsWith_.get(index);
    }
    /**
     * <pre>
     * List of outgoing relationship definitions from this logical table.
     * </pre>
     *
     * <code>repeated .RelationEDocProto joins_with = 9;</code>
     */
    @java.lang.Override
    public EDoc.RelationEDocProtoOrBuilder getJoinsWithOrBuilder(
        int index) {
      return joinsWith_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, db_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, schema_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, dbTable_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeMessage(6, getConnection());
      }
      for (int i = 0; i < columns_.size(); i++) {
        output.writeMessage(7, columns_.get(i));
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeMessage(8, getRlsRules());
      }
      for (int i = 0; i < joinsWith_.size(); i++) {
        output.writeMessage(9, joinsWith_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, db_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, schema_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, dbTable_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getConnection());
      }
      for (int i = 0; i < columns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, columns_.get(i));
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getRlsRules());
      }
      for (int i = 0; i < joinsWith_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, joinsWith_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.LogicalTableEDocProto)) {
        return super.equals(obj);
      }
      EDoc.LogicalTableEDocProto other = (EDoc.LogicalTableEDocProto) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasDescription() != other.hasDescription()) return false;
      if (hasDescription()) {
        if (!getDescription()
            .equals(other.getDescription())) return false;
      }
      if (hasDb() != other.hasDb()) return false;
      if (hasDb()) {
        if (!getDb()
            .equals(other.getDb())) return false;
      }
      if (hasSchema() != other.hasSchema()) return false;
      if (hasSchema()) {
        if (!getSchema()
            .equals(other.getSchema())) return false;
      }
      if (hasDbTable() != other.hasDbTable()) return false;
      if (hasDbTable()) {
        if (!getDbTable()
            .equals(other.getDbTable())) return false;
      }
      if (hasConnection() != other.hasConnection()) return false;
      if (hasConnection()) {
        if (!getConnection()
            .equals(other.getConnection())) return false;
      }
      if (!getColumnsList()
          .equals(other.getColumnsList())) return false;
      if (hasRlsRules() != other.hasRlsRules()) return false;
      if (hasRlsRules()) {
        if (!getRlsRules()
            .equals(other.getRlsRules())) return false;
      }
      if (!getJoinsWithList()
          .equals(other.getJoinsWithList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasDescription()) {
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription().hashCode();
      }
      if (hasDb()) {
        hash = (37 * hash) + DB_FIELD_NUMBER;
        hash = (53 * hash) + getDb().hashCode();
      }
      if (hasSchema()) {
        hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
        hash = (53 * hash) + getSchema().hashCode();
      }
      if (hasDbTable()) {
        hash = (37 * hash) + DB_TABLE_FIELD_NUMBER;
        hash = (53 * hash) + getDbTable().hashCode();
      }
      if (hasConnection()) {
        hash = (37 * hash) + CONNECTION_FIELD_NUMBER;
        hash = (53 * hash) + getConnection().hashCode();
      }
      if (getColumnsCount() > 0) {
        hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getColumnsList().hashCode();
      }
      if (hasRlsRules()) {
        hash = (37 * hash) + RLS_RULES_FIELD_NUMBER;
        hash = (53 * hash) + getRlsRules().hashCode();
      }
      if (getJoinsWithCount() > 0) {
        hash = (37 * hash) + JOINS_WITH_FIELD_NUMBER;
        hash = (53 * hash) + getJoinsWithList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.LogicalTableEDocProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.LogicalTableEDocProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.LogicalTableEDocProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.LogicalTableEDocProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.LogicalTableEDocProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.LogicalTableEDocProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.LogicalTableEDocProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.LogicalTableEDocProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.LogicalTableEDocProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.LogicalTableEDocProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.LogicalTableEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.LogicalTableEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.LogicalTableEDocProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * All user defined objects like answers, pinboards, views and worksheets, are
     * created using a logical representation of the underlying tables.
     * For e.g.
     *         MyAnswer -&gt; LINEORDER[Logical] -&gt; LINEORDER[Physical]
     * Here MyAnswer uses columns from a logical table called LINEORDER, that is
     * derived from a physical table called LINEORDER.
     * This logical representation allows users to customize the underlying schema
     * for their convenience and requirements.
     * For e.g. at logical layer, a user is allowed to,
     *   a. change table/column names.
     *   b. set column type. e.g. a numeric column can be labelled as ATTRIBUTE or
     *      MEASURE by the user.
     *   c. add RLS rules on tables.
     *   d. define new joins between tables.
     * Since the logical layer can have a lot of user customizations, as explained
     * above, we allow users to download the entire logical schema as an edoc.
     * Implementation detail:
     * In callosum metadata, worksheets and views are also represented as a logical
     * table. And a bunch of fields in LogicalTable.java are there to support these
     * special types of logical tables.
     * However since we already have a specialized edoc representation for both
     * views and worksheets, we are not adding those fields in the edoc definition
     * of a LogicalTable.
     * e.g. we have 2 types of filters in LogicalTable.java
     *   1. TableFilter
     *   2. Filter
     * Here 'Filter' is used to define worksheet filters, while table filters are
     * used for expressing RLS rules. So out of the 2, we only add TableFilter in
     * the edoc definition.
     * This message defines the edoc representation of a logical table.
     * </pre>
     *
     * Protobuf type {@code LogicalTableEDocProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogicalTableEDocProto)
        EDoc.LogicalTableEDocProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_LogicalTableEDocProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_LogicalTableEDocProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.LogicalTableEDocProto.class, EDoc.LogicalTableEDocProto.Builder.class);
      }

      // Construct using EDoc.LogicalTableEDocProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getConnectionFieldBuilder();
          getColumnsFieldBuilder();
          getRlsRulesFieldBuilder();
          getJoinsWithFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        db_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        schema_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        dbTable_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        if (connectionBuilder_ == null) {
          connection_ = null;
        } else {
          connectionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (columnsBuilder_ == null) {
          columns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          columnsBuilder_.clear();
        }
        if (rlsRulesBuilder_ == null) {
          rlsRules_ = null;
        } else {
          rlsRulesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (joinsWithBuilder_ == null) {
          joinsWith_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          joinsWithBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_LogicalTableEDocProto_descriptor;
      }

      @java.lang.Override
      public EDoc.LogicalTableEDocProto getDefaultInstanceForType() {
        return EDoc.LogicalTableEDocProto.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.LogicalTableEDocProto build() {
        EDoc.LogicalTableEDocProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.LogicalTableEDocProto buildPartial() {
        EDoc.LogicalTableEDocProto result = new EDoc.LogicalTableEDocProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.description_ = description_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.db_ = db_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.schema_ = schema_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dbTable_ = dbTable_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          if (connectionBuilder_ == null) {
            result.connection_ = connection_;
          } else {
            result.connection_ = connectionBuilder_.build();
          }
          to_bitField0_ |= 0x00000020;
        }
        if (columnsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            columns_ = java.util.Collections.unmodifiableList(columns_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.columns_ = columns_;
        } else {
          result.columns_ = columnsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          if (rlsRulesBuilder_ == null) {
            result.rlsRules_ = rlsRules_;
          } else {
            result.rlsRules_ = rlsRulesBuilder_.build();
          }
          to_bitField0_ |= 0x00000040;
        }
        if (joinsWithBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0)) {
            joinsWith_ = java.util.Collections.unmodifiableList(joinsWith_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.joinsWith_ = joinsWith_;
        } else {
          result.joinsWith_ = joinsWithBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.LogicalTableEDocProto) {
          return mergeFrom((EDoc.LogicalTableEDocProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.LogicalTableEDocProto other) {
        if (other == EDoc.LogicalTableEDocProto.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000002;
          description_ = other.description_;
          onChanged();
        }
        if (other.hasDb()) {
          bitField0_ |= 0x00000004;
          db_ = other.db_;
          onChanged();
        }
        if (other.hasSchema()) {
          bitField0_ |= 0x00000008;
          schema_ = other.schema_;
          onChanged();
        }
        if (other.hasDbTable()) {
          bitField0_ |= 0x00000010;
          dbTable_ = other.dbTable_;
          onChanged();
        }
        if (other.hasConnection()) {
          mergeConnection(other.getConnection());
        }
        if (columnsBuilder_ == null) {
          if (!other.columns_.isEmpty()) {
            if (columns_.isEmpty()) {
              columns_ = other.columns_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureColumnsIsMutable();
              columns_.addAll(other.columns_);
            }
            onChanged();
          }
        } else {
          if (!other.columns_.isEmpty()) {
            if (columnsBuilder_.isEmpty()) {
              columnsBuilder_.dispose();
              columnsBuilder_ = null;
              columns_ = other.columns_;
              bitField0_ = (bitField0_ & ~0x00000040);
              columnsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getColumnsFieldBuilder() : null;
            } else {
              columnsBuilder_.addAllMessages(other.columns_);
            }
          }
        }
        if (other.hasRlsRules()) {
          mergeRlsRules(other.getRlsRules());
        }
        if (joinsWithBuilder_ == null) {
          if (!other.joinsWith_.isEmpty()) {
            if (joinsWith_.isEmpty()) {
              joinsWith_ = other.joinsWith_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureJoinsWithIsMutable();
              joinsWith_.addAll(other.joinsWith_);
            }
            onChanged();
          }
        } else {
          if (!other.joinsWith_.isEmpty()) {
            if (joinsWithBuilder_.isEmpty()) {
              joinsWithBuilder_.dispose();
              joinsWithBuilder_ = null;
              joinsWith_ = other.joinsWith_;
              bitField0_ = (bitField0_ & ~0x00000100);
              joinsWithBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getJoinsWithFieldBuilder() : null;
            } else {
              joinsWithBuilder_.addAllMessages(other.joinsWith_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.LogicalTableEDocProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.LogicalTableEDocProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * User readable name and description of the logical table to create/update.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * User readable name and description of the logical table to create/update.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * User readable name and description of the logical table to create/update.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * User readable name and description of the logical table to create/update.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User readable name and description of the logical table to create/update.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User readable name and description of the logical table to create/update.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <code>optional string description = 2;</code>
       * @return Whether the description field is set.
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string description = 2;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string description = 2;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string description = 2;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 2;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object db_ = "";
      /**
       * <pre>
       * Fields required to uniquely identify the db table this table maps to.
       * </pre>
       *
       * <code>optional string db = 3;</code>
       * @return Whether the db field is set.
       */
      public boolean hasDb() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Fields required to uniquely identify the db table this table maps to.
       * </pre>
       *
       * <code>optional string db = 3;</code>
       * @return The db.
       */
      public java.lang.String getDb() {
        java.lang.Object ref = db_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            db_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Fields required to uniquely identify the db table this table maps to.
       * </pre>
       *
       * <code>optional string db = 3;</code>
       * @return The bytes for db.
       */
      public com.google.protobuf.ByteString
          getDbBytes() {
        java.lang.Object ref = db_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          db_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Fields required to uniquely identify the db table this table maps to.
       * </pre>
       *
       * <code>optional string db = 3;</code>
       * @param value The db to set.
       * @return This builder for chaining.
       */
      public Builder setDb(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        db_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fields required to uniquely identify the db table this table maps to.
       * </pre>
       *
       * <code>optional string db = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDb() {
        bitField0_ = (bitField0_ & ~0x00000004);
        db_ = getDefaultInstance().getDb();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fields required to uniquely identify the db table this table maps to.
       * </pre>
       *
       * <code>optional string db = 3;</code>
       * @param value The bytes for db to set.
       * @return This builder for chaining.
       */
      public Builder setDbBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        db_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object schema_ = "";
      /**
       * <code>optional string schema = 4;</code>
       * @return Whether the schema field is set.
       */
      public boolean hasSchema() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional string schema = 4;</code>
       * @return The schema.
       */
      public java.lang.String getSchema() {
        java.lang.Object ref = schema_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            schema_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string schema = 4;</code>
       * @return The bytes for schema.
       */
      public com.google.protobuf.ByteString
          getSchemaBytes() {
        java.lang.Object ref = schema_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          schema_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string schema = 4;</code>
       * @param value The schema to set.
       * @return This builder for chaining.
       */
      public Builder setSchema(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        schema_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string schema = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSchema() {
        bitField0_ = (bitField0_ & ~0x00000008);
        schema_ = getDefaultInstance().getSchema();
        onChanged();
        return this;
      }
      /**
       * <code>optional string schema = 4;</code>
       * @param value The bytes for schema to set.
       * @return This builder for chaining.
       */
      public Builder setSchemaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        schema_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dbTable_ = "";
      /**
       * <pre>
       * Note: We assume that only a single table with given &#64;db_table name
       *       exists in the dependant db-schema pair.
       *       Since we don't need fqn, using string instead of Identity here.
       * </pre>
       *
       * <code>optional string db_table = 5;</code>
       * @return Whether the dbTable field is set.
       */
      public boolean hasDbTable() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Note: We assume that only a single table with given &#64;db_table name
       *       exists in the dependant db-schema pair.
       *       Since we don't need fqn, using string instead of Identity here.
       * </pre>
       *
       * <code>optional string db_table = 5;</code>
       * @return The dbTable.
       */
      public java.lang.String getDbTable() {
        java.lang.Object ref = dbTable_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dbTable_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Note: We assume that only a single table with given &#64;db_table name
       *       exists in the dependant db-schema pair.
       *       Since we don't need fqn, using string instead of Identity here.
       * </pre>
       *
       * <code>optional string db_table = 5;</code>
       * @return The bytes for dbTable.
       */
      public com.google.protobuf.ByteString
          getDbTableBytes() {
        java.lang.Object ref = dbTable_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dbTable_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Note: We assume that only a single table with given &#64;db_table name
       *       exists in the dependant db-schema pair.
       *       Since we don't need fqn, using string instead of Identity here.
       * </pre>
       *
       * <code>optional string db_table = 5;</code>
       * @param value The dbTable to set.
       * @return This builder for chaining.
       */
      public Builder setDbTable(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        dbTable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Note: We assume that only a single table with given &#64;db_table name
       *       exists in the dependant db-schema pair.
       *       Since we don't need fqn, using string instead of Identity here.
       * </pre>
       *
       * <code>optional string db_table = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbTable() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dbTable_ = getDefaultInstance().getDbTable();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Note: We assume that only a single table with given &#64;db_table name
       *       exists in the dependant db-schema pair.
       *       Since we don't need fqn, using string instead of Identity here.
       * </pre>
       *
       * <code>optional string db_table = 5;</code>
       * @param value The bytes for dbTable to set.
       * @return This builder for chaining.
       */
      public Builder setDbTableBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        dbTable_ = value;
        onChanged();
        return this;
      }

      private EDoc.Identity connection_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> connectionBuilder_;
      /**
       * <pre>
       * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
       * a database table. But since we also support multiple database systems, we
       * need one more identifier i.e. &lt;system, db, schema, table&gt;.
       * In embrace terminology, we call this new vairable a 'connection'.
       * In a cluster we can have multiple connections, to the same or to different
       * database systems. Also each connection has a name that need not be unique.
       * Side note: Since logical tables now depends on a connection object instead
       *            of the physical tables directly, the connection controls what
       *            underlying tables and columns are visible to the logical layer.
       * Based on this design, the following rule applies when an external db is
       * involved:
       * 1. while downloading, we just download the name of the connection object.
       * 2. while uploading, we need to provide a name (or fqn in-case name is not
       *    unique) of the connection we want to use.
       *    More details about upload logic present in "EDocToTableTranslator.java"
       * However an empty connection field indicates we indent to use a database in
       * falcon.
       * </pre>
       *
       * <code>optional .Identity connection = 6;</code>
       * @return Whether the connection field is set.
       */
      public boolean hasConnection() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
       * a database table. But since we also support multiple database systems, we
       * need one more identifier i.e. &lt;system, db, schema, table&gt;.
       * In embrace terminology, we call this new vairable a 'connection'.
       * In a cluster we can have multiple connections, to the same or to different
       * database systems. Also each connection has a name that need not be unique.
       * Side note: Since logical tables now depends on a connection object instead
       *            of the physical tables directly, the connection controls what
       *            underlying tables and columns are visible to the logical layer.
       * Based on this design, the following rule applies when an external db is
       * involved:
       * 1. while downloading, we just download the name of the connection object.
       * 2. while uploading, we need to provide a name (or fqn in-case name is not
       *    unique) of the connection we want to use.
       *    More details about upload logic present in "EDocToTableTranslator.java"
       * However an empty connection field indicates we indent to use a database in
       * falcon.
       * </pre>
       *
       * <code>optional .Identity connection = 6;</code>
       * @return The connection.
       */
      public EDoc.Identity getConnection() {
        if (connectionBuilder_ == null) {
          return connection_ == null ? EDoc.Identity.getDefaultInstance() : connection_;
        } else {
          return connectionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
       * a database table. But since we also support multiple database systems, we
       * need one more identifier i.e. &lt;system, db, schema, table&gt;.
       * In embrace terminology, we call this new vairable a 'connection'.
       * In a cluster we can have multiple connections, to the same or to different
       * database systems. Also each connection has a name that need not be unique.
       * Side note: Since logical tables now depends on a connection object instead
       *            of the physical tables directly, the connection controls what
       *            underlying tables and columns are visible to the logical layer.
       * Based on this design, the following rule applies when an external db is
       * involved:
       * 1. while downloading, we just download the name of the connection object.
       * 2. while uploading, we need to provide a name (or fqn in-case name is not
       *    unique) of the connection we want to use.
       *    More details about upload logic present in "EDocToTableTranslator.java"
       * However an empty connection field indicates we indent to use a database in
       * falcon.
       * </pre>
       *
       * <code>optional .Identity connection = 6;</code>
       */
      public Builder setConnection(EDoc.Identity value) {
        if (connectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connection_ = value;
          onChanged();
        } else {
          connectionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
       * a database table. But since we also support multiple database systems, we
       * need one more identifier i.e. &lt;system, db, schema, table&gt;.
       * In embrace terminology, we call this new vairable a 'connection'.
       * In a cluster we can have multiple connections, to the same or to different
       * database systems. Also each connection has a name that need not be unique.
       * Side note: Since logical tables now depends on a connection object instead
       *            of the physical tables directly, the connection controls what
       *            underlying tables and columns are visible to the logical layer.
       * Based on this design, the following rule applies when an external db is
       * involved:
       * 1. while downloading, we just download the name of the connection object.
       * 2. while uploading, we need to provide a name (or fqn in-case name is not
       *    unique) of the connection we want to use.
       *    More details about upload logic present in "EDocToTableTranslator.java"
       * However an empty connection field indicates we indent to use a database in
       * falcon.
       * </pre>
       *
       * <code>optional .Identity connection = 6;</code>
       */
      public Builder setConnection(
          EDoc.Identity.Builder builderForValue) {
        if (connectionBuilder_ == null) {
          connection_ = builderForValue.build();
          onChanged();
        } else {
          connectionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
       * a database table. But since we also support multiple database systems, we
       * need one more identifier i.e. &lt;system, db, schema, table&gt;.
       * In embrace terminology, we call this new vairable a 'connection'.
       * In a cluster we can have multiple connections, to the same or to different
       * database systems. Also each connection has a name that need not be unique.
       * Side note: Since logical tables now depends on a connection object instead
       *            of the physical tables directly, the connection controls what
       *            underlying tables and columns are visible to the logical layer.
       * Based on this design, the following rule applies when an external db is
       * involved:
       * 1. while downloading, we just download the name of the connection object.
       * 2. while uploading, we need to provide a name (or fqn in-case name is not
       *    unique) of the connection we want to use.
       *    More details about upload logic present in "EDocToTableTranslator.java"
       * However an empty connection field indicates we indent to use a database in
       * falcon.
       * </pre>
       *
       * <code>optional .Identity connection = 6;</code>
       */
      public Builder mergeConnection(EDoc.Identity value) {
        if (connectionBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
              connection_ != null &&
              connection_ != EDoc.Identity.getDefaultInstance()) {
            connection_ =
              EDoc.Identity.newBuilder(connection_).mergeFrom(value).buildPartial();
          } else {
            connection_ = value;
          }
          onChanged();
        } else {
          connectionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
       * a database table. But since we also support multiple database systems, we
       * need one more identifier i.e. &lt;system, db, schema, table&gt;.
       * In embrace terminology, we call this new vairable a 'connection'.
       * In a cluster we can have multiple connections, to the same or to different
       * database systems. Also each connection has a name that need not be unique.
       * Side note: Since logical tables now depends on a connection object instead
       *            of the physical tables directly, the connection controls what
       *            underlying tables and columns are visible to the logical layer.
       * Based on this design, the following rule applies when an external db is
       * involved:
       * 1. while downloading, we just download the name of the connection object.
       * 2. while uploading, we need to provide a name (or fqn in-case name is not
       *    unique) of the connection we want to use.
       *    More details about upload logic present in "EDocToTableTranslator.java"
       * However an empty connection field indicates we indent to use a database in
       * falcon.
       * </pre>
       *
       * <code>optional .Identity connection = 6;</code>
       */
      public Builder clearConnection() {
        if (connectionBuilder_ == null) {
          connection_ = null;
          onChanged();
        } else {
          connectionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <pre>
       * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
       * a database table. But since we also support multiple database systems, we
       * need one more identifier i.e. &lt;system, db, schema, table&gt;.
       * In embrace terminology, we call this new vairable a 'connection'.
       * In a cluster we can have multiple connections, to the same or to different
       * database systems. Also each connection has a name that need not be unique.
       * Side note: Since logical tables now depends on a connection object instead
       *            of the physical tables directly, the connection controls what
       *            underlying tables and columns are visible to the logical layer.
       * Based on this design, the following rule applies when an external db is
       * involved:
       * 1. while downloading, we just download the name of the connection object.
       * 2. while uploading, we need to provide a name (or fqn in-case name is not
       *    unique) of the connection we want to use.
       *    More details about upload logic present in "EDocToTableTranslator.java"
       * However an empty connection field indicates we indent to use a database in
       * falcon.
       * </pre>
       *
       * <code>optional .Identity connection = 6;</code>
       */
      public EDoc.Identity.Builder getConnectionBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getConnectionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
       * a database table. But since we also support multiple database systems, we
       * need one more identifier i.e. &lt;system, db, schema, table&gt;.
       * In embrace terminology, we call this new vairable a 'connection'.
       * In a cluster we can have multiple connections, to the same or to different
       * database systems. Also each connection has a name that need not be unique.
       * Side note: Since logical tables now depends on a connection object instead
       *            of the physical tables directly, the connection controls what
       *            underlying tables and columns are visible to the logical layer.
       * Based on this design, the following rule applies when an external db is
       * involved:
       * 1. while downloading, we just download the name of the connection object.
       * 2. while uploading, we need to provide a name (or fqn in-case name is not
       *    unique) of the connection we want to use.
       *    More details about upload logic present in "EDocToTableTranslator.java"
       * However an empty connection field indicates we indent to use a database in
       * falcon.
       * </pre>
       *
       * <code>optional .Identity connection = 6;</code>
       */
      public EDoc.IdentityOrBuilder getConnectionOrBuilder() {
        if (connectionBuilder_ != null) {
          return connectionBuilder_.getMessageOrBuilder();
        } else {
          return connection_ == null ?
              EDoc.Identity.getDefaultInstance() : connection_;
        }
      }
      /**
       * <pre>
       * A tuple of &lt;db, schema, table&gt; is usually sufficient to uniquely identify
       * a database table. But since we also support multiple database systems, we
       * need one more identifier i.e. &lt;system, db, schema, table&gt;.
       * In embrace terminology, we call this new vairable a 'connection'.
       * In a cluster we can have multiple connections, to the same or to different
       * database systems. Also each connection has a name that need not be unique.
       * Side note: Since logical tables now depends on a connection object instead
       *            of the physical tables directly, the connection controls what
       *            underlying tables and columns are visible to the logical layer.
       * Based on this design, the following rule applies when an external db is
       * involved:
       * 1. while downloading, we just download the name of the connection object.
       * 2. while uploading, we need to provide a name (or fqn in-case name is not
       *    unique) of the connection we want to use.
       *    More details about upload logic present in "EDocToTableTranslator.java"
       * However an empty connection field indicates we indent to use a database in
       * falcon.
       * </pre>
       *
       * <code>optional .Identity connection = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> 
          getConnectionFieldBuilder() {
        if (connectionBuilder_ == null) {
          connectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder>(
                  getConnection(),
                  getParentForChildren(),
                  isClean());
          connection_ = null;
        }
        return connectionBuilder_;
      }

      private java.util.List<EDoc.LogicalTableEDocProto.LogicalColumnEDocProto> columns_ =
        java.util.Collections.emptyList();
      private void ensureColumnsIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          columns_ = new java.util.ArrayList<EDoc.LogicalTableEDocProto.LogicalColumnEDocProto>(columns_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.LogicalTableEDocProto.LogicalColumnEDocProto, EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.Builder, EDoc.LogicalTableEDocProto.LogicalColumnEDocProtoOrBuilder> columnsBuilder_;

      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public java.util.List<EDoc.LogicalTableEDocProto.LogicalColumnEDocProto> getColumnsList() {
        if (columnsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(columns_);
        } else {
          return columnsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public int getColumnsCount() {
        if (columnsBuilder_ == null) {
          return columns_.size();
        } else {
          return columnsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public EDoc.LogicalTableEDocProto.LogicalColumnEDocProto getColumns(int index) {
        if (columnsBuilder_ == null) {
          return columns_.get(index);
        } else {
          return columnsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public Builder setColumns(
          int index, EDoc.LogicalTableEDocProto.LogicalColumnEDocProto value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.set(index, value);
          onChanged();
        } else {
          columnsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public Builder setColumns(
          int index, EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.set(index, builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public Builder addColumns(EDoc.LogicalTableEDocProto.LogicalColumnEDocProto value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.add(value);
          onChanged();
        } else {
          columnsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public Builder addColumns(
          int index, EDoc.LogicalTableEDocProto.LogicalColumnEDocProto value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.add(index, value);
          onChanged();
        } else {
          columnsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public Builder addColumns(
          EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.add(builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public Builder addColumns(
          int index, EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.add(index, builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public Builder addAllColumns(
          java.lang.Iterable<? extends EDoc.LogicalTableEDocProto.LogicalColumnEDocProto> values) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, columns_);
          onChanged();
        } else {
          columnsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public Builder clearColumns() {
        if (columnsBuilder_ == null) {
          columns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          columnsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public Builder removeColumns(int index) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.remove(index);
          onChanged();
        } else {
          columnsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.Builder getColumnsBuilder(
          int index) {
        return getColumnsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public EDoc.LogicalTableEDocProto.LogicalColumnEDocProtoOrBuilder getColumnsOrBuilder(
          int index) {
        if (columnsBuilder_ == null) {
          return columns_.get(index);  } else {
          return columnsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public java.util.List<? extends EDoc.LogicalTableEDocProto.LogicalColumnEDocProtoOrBuilder> 
           getColumnsOrBuilderList() {
        if (columnsBuilder_ != null) {
          return columnsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(columns_);
        }
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.Builder addColumnsBuilder() {
        return getColumnsFieldBuilder().addBuilder(
            EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.Builder addColumnsBuilder(
          int index) {
        return getColumnsFieldBuilder().addBuilder(
            index, EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Below fields defines this table.
       * </pre>
       *
       * <code>repeated .LogicalTableEDocProto.LogicalColumnEDocProto columns = 7;</code>
       */
      public java.util.List<EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.Builder> 
           getColumnsBuilderList() {
        return getColumnsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.LogicalTableEDocProto.LogicalColumnEDocProto, EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.Builder, EDoc.LogicalTableEDocProto.LogicalColumnEDocProtoOrBuilder> 
          getColumnsFieldBuilder() {
        if (columnsBuilder_ == null) {
          columnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.LogicalTableEDocProto.LogicalColumnEDocProto, EDoc.LogicalTableEDocProto.LogicalColumnEDocProto.Builder, EDoc.LogicalTableEDocProto.LogicalColumnEDocProtoOrBuilder>(
                  columns_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          columns_ = null;
        }
        return columnsBuilder_;
      }

      private EDoc.LogicalTableEDocProto.RlsRule rlsRules_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.LogicalTableEDocProto.RlsRule, EDoc.LogicalTableEDocProto.RlsRule.Builder, EDoc.LogicalTableEDocProto.RlsRuleOrBuilder> rlsRulesBuilder_;
      /**
       * <pre>
       * Order'd list of rls filters along with supplementary information applied to table.
       * </pre>
       *
       * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
       * @return Whether the rlsRules field is set.
       */
      public boolean hasRlsRules() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Order'd list of rls filters along with supplementary information applied to table.
       * </pre>
       *
       * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
       * @return The rlsRules.
       */
      public EDoc.LogicalTableEDocProto.RlsRule getRlsRules() {
        if (rlsRulesBuilder_ == null) {
          return rlsRules_ == null ? EDoc.LogicalTableEDocProto.RlsRule.getDefaultInstance() : rlsRules_;
        } else {
          return rlsRulesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Order'd list of rls filters along with supplementary information applied to table.
       * </pre>
       *
       * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
       */
      public Builder setRlsRules(EDoc.LogicalTableEDocProto.RlsRule value) {
        if (rlsRulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rlsRules_ = value;
          onChanged();
        } else {
          rlsRulesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <pre>
       * Order'd list of rls filters along with supplementary information applied to table.
       * </pre>
       *
       * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
       */
      public Builder setRlsRules(
          EDoc.LogicalTableEDocProto.RlsRule.Builder builderForValue) {
        if (rlsRulesBuilder_ == null) {
          rlsRules_ = builderForValue.build();
          onChanged();
        } else {
          rlsRulesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <pre>
       * Order'd list of rls filters along with supplementary information applied to table.
       * </pre>
       *
       * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
       */
      public Builder mergeRlsRules(EDoc.LogicalTableEDocProto.RlsRule value) {
        if (rlsRulesBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
              rlsRules_ != null &&
              rlsRules_ != EDoc.LogicalTableEDocProto.RlsRule.getDefaultInstance()) {
            rlsRules_ =
              EDoc.LogicalTableEDocProto.RlsRule.newBuilder(rlsRules_).mergeFrom(value).buildPartial();
          } else {
            rlsRules_ = value;
          }
          onChanged();
        } else {
          rlsRulesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <pre>
       * Order'd list of rls filters along with supplementary information applied to table.
       * </pre>
       *
       * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
       */
      public Builder clearRlsRules() {
        if (rlsRulesBuilder_ == null) {
          rlsRules_ = null;
          onChanged();
        } else {
          rlsRulesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <pre>
       * Order'd list of rls filters along with supplementary information applied to table.
       * </pre>
       *
       * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
       */
      public EDoc.LogicalTableEDocProto.RlsRule.Builder getRlsRulesBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getRlsRulesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Order'd list of rls filters along with supplementary information applied to table.
       * </pre>
       *
       * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
       */
      public EDoc.LogicalTableEDocProto.RlsRuleOrBuilder getRlsRulesOrBuilder() {
        if (rlsRulesBuilder_ != null) {
          return rlsRulesBuilder_.getMessageOrBuilder();
        } else {
          return rlsRules_ == null ?
              EDoc.LogicalTableEDocProto.RlsRule.getDefaultInstance() : rlsRules_;
        }
      }
      /**
       * <pre>
       * Order'd list of rls filters along with supplementary information applied to table.
       * </pre>
       *
       * <code>optional .LogicalTableEDocProto.RlsRule rls_rules = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.LogicalTableEDocProto.RlsRule, EDoc.LogicalTableEDocProto.RlsRule.Builder, EDoc.LogicalTableEDocProto.RlsRuleOrBuilder> 
          getRlsRulesFieldBuilder() {
        if (rlsRulesBuilder_ == null) {
          rlsRulesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.LogicalTableEDocProto.RlsRule, EDoc.LogicalTableEDocProto.RlsRule.Builder, EDoc.LogicalTableEDocProto.RlsRuleOrBuilder>(
                  getRlsRules(),
                  getParentForChildren(),
                  isClean());
          rlsRules_ = null;
        }
        return rlsRulesBuilder_;
      }

      private java.util.List<EDoc.RelationEDocProto> joinsWith_ =
        java.util.Collections.emptyList();
      private void ensureJoinsWithIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          joinsWith_ = new java.util.ArrayList<EDoc.RelationEDocProto>(joinsWith_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.RelationEDocProto, EDoc.RelationEDocProto.Builder, EDoc.RelationEDocProtoOrBuilder> joinsWithBuilder_;

      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public java.util.List<EDoc.RelationEDocProto> getJoinsWithList() {
        if (joinsWithBuilder_ == null) {
          return java.util.Collections.unmodifiableList(joinsWith_);
        } else {
          return joinsWithBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public int getJoinsWithCount() {
        if (joinsWithBuilder_ == null) {
          return joinsWith_.size();
        } else {
          return joinsWithBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public EDoc.RelationEDocProto getJoinsWith(int index) {
        if (joinsWithBuilder_ == null) {
          return joinsWith_.get(index);
        } else {
          return joinsWithBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder setJoinsWith(
          int index, EDoc.RelationEDocProto value) {
        if (joinsWithBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsWithIsMutable();
          joinsWith_.set(index, value);
          onChanged();
        } else {
          joinsWithBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder setJoinsWith(
          int index, EDoc.RelationEDocProto.Builder builderForValue) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          joinsWith_.set(index, builderForValue.build());
          onChanged();
        } else {
          joinsWithBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder addJoinsWith(EDoc.RelationEDocProto value) {
        if (joinsWithBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsWithIsMutable();
          joinsWith_.add(value);
          onChanged();
        } else {
          joinsWithBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder addJoinsWith(
          int index, EDoc.RelationEDocProto value) {
        if (joinsWithBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsWithIsMutable();
          joinsWith_.add(index, value);
          onChanged();
        } else {
          joinsWithBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder addJoinsWith(
          EDoc.RelationEDocProto.Builder builderForValue) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          joinsWith_.add(builderForValue.build());
          onChanged();
        } else {
          joinsWithBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder addJoinsWith(
          int index, EDoc.RelationEDocProto.Builder builderForValue) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          joinsWith_.add(index, builderForValue.build());
          onChanged();
        } else {
          joinsWithBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder addAllJoinsWith(
          java.lang.Iterable<? extends EDoc.RelationEDocProto> values) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, joinsWith_);
          onChanged();
        } else {
          joinsWithBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder clearJoinsWith() {
        if (joinsWithBuilder_ == null) {
          joinsWith_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          joinsWithBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public Builder removeJoinsWith(int index) {
        if (joinsWithBuilder_ == null) {
          ensureJoinsWithIsMutable();
          joinsWith_.remove(index);
          onChanged();
        } else {
          joinsWithBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public EDoc.RelationEDocProto.Builder getJoinsWithBuilder(
          int index) {
        return getJoinsWithFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public EDoc.RelationEDocProtoOrBuilder getJoinsWithOrBuilder(
          int index) {
        if (joinsWithBuilder_ == null) {
          return joinsWith_.get(index);  } else {
          return joinsWithBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public java.util.List<? extends EDoc.RelationEDocProtoOrBuilder> 
           getJoinsWithOrBuilderList() {
        if (joinsWithBuilder_ != null) {
          return joinsWithBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(joinsWith_);
        }
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public EDoc.RelationEDocProto.Builder addJoinsWithBuilder() {
        return getJoinsWithFieldBuilder().addBuilder(
            EDoc.RelationEDocProto.getDefaultInstance());
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public EDoc.RelationEDocProto.Builder addJoinsWithBuilder(
          int index) {
        return getJoinsWithFieldBuilder().addBuilder(
            index, EDoc.RelationEDocProto.getDefaultInstance());
      }
      /**
       * <pre>
       * List of outgoing relationship definitions from this logical table.
       * </pre>
       *
       * <code>repeated .RelationEDocProto joins_with = 9;</code>
       */
      public java.util.List<EDoc.RelationEDocProto.Builder> 
           getJoinsWithBuilderList() {
        return getJoinsWithFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.RelationEDocProto, EDoc.RelationEDocProto.Builder, EDoc.RelationEDocProtoOrBuilder> 
          getJoinsWithFieldBuilder() {
        if (joinsWithBuilder_ == null) {
          joinsWithBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.RelationEDocProto, EDoc.RelationEDocProto.Builder, EDoc.RelationEDocProtoOrBuilder>(
                  joinsWith_,
                  ((bitField0_ & 0x00000100) != 0),
                  getParentForChildren(),
                  isClean());
          joinsWith_ = null;
        }
        return joinsWithBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:LogicalTableEDocProto)
    }

    // @@protoc_insertion_point(class_scope:LogicalTableEDocProto)
    private static final EDoc.LogicalTableEDocProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.LogicalTableEDocProto();
    }

    public static EDoc.LogicalTableEDocProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LogicalTableEDocProto>
        PARSER = new com.google.protobuf.AbstractParser<LogicalTableEDocProto>() {
      @java.lang.Override
      public LogicalTableEDocProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogicalTableEDocProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogicalTableEDocProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogicalTableEDocProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.LogicalTableEDocProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface JoinEDocProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:JoinEDocProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * User readable name and description of the relationship to create/update.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * User readable name and description of the relationship to create/update.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * User readable name and description of the relationship to create/update.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional string description = 2;</code>
     * @return Whether the description field is set.
     */
    boolean hasDescription();
    /**
     * <code>optional string description = 2;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <code>optional string description = 2;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * Logical table name or FQN (in case of multiple tables with same name), of
     * source table.
     * </pre>
     *
     * <code>optional .Identity source_table = 3;</code>
     * @return Whether the sourceTable field is set.
     */
    boolean hasSourceTable();
    /**
     * <pre>
     * Logical table name or FQN (in case of multiple tables with same name), of
     * source table.
     * </pre>
     *
     * <code>optional .Identity source_table = 3;</code>
     * @return The sourceTable.
     */
    EDoc.Identity getSourceTable();
    /**
     * <pre>
     * Logical table name or FQN (in case of multiple tables with same name), of
     * source table.
     * </pre>
     *
     * <code>optional .Identity source_table = 3;</code>
     */
    EDoc.IdentityOrBuilder getSourceTableOrBuilder();

    /**
     * <pre>
     * Logical table name or FQN (in case of multiple tables with same name), of
     * destination table.
     * </pre>
     *
     * <code>optional .Identity destination_table = 4;</code>
     * @return Whether the destinationTable field is set.
     */
    boolean hasDestinationTable();
    /**
     * <pre>
     * Logical table name or FQN (in case of multiple tables with same name), of
     * destination table.
     * </pre>
     *
     * <code>optional .Identity destination_table = 4;</code>
     * @return The destinationTable.
     */
    EDoc.Identity getDestinationTable();
    /**
     * <pre>
     * Logical table name or FQN (in case of multiple tables with same name), of
     * destination table.
     * </pre>
     *
     * <code>optional .Identity destination_table = 4;</code>
     */
    EDoc.IdentityOrBuilder getDestinationTableOrBuilder();

    /**
     * <pre>
     * A join between two tables can be one-to-one, many-to-one or many-to-many.
     * A ColumnPair represents an edge in the set of relationships in this join.
     * </pre>
     *
     * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
     */
    java.util.List<EDoc.JoinEDocProto.ColumnPair> 
        getColumnPairsList();
    /**
     * <pre>
     * A join between two tables can be one-to-one, many-to-one or many-to-many.
     * A ColumnPair represents an edge in the set of relationships in this join.
     * </pre>
     *
     * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
     */
    EDoc.JoinEDocProto.ColumnPair getColumnPairs(int index);
    /**
     * <pre>
     * A join between two tables can be one-to-one, many-to-one or many-to-many.
     * A ColumnPair represents an edge in the set of relationships in this join.
     * </pre>
     *
     * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
     */
    int getColumnPairsCount();
    /**
     * <pre>
     * A join between two tables can be one-to-one, many-to-one or many-to-many.
     * A ColumnPair represents an edge in the set of relationships in this join.
     * </pre>
     *
     * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
     */
    java.util.List<? extends EDoc.JoinEDocProto.ColumnPairOrBuilder> 
        getColumnPairsOrBuilderList();
    /**
     * <pre>
     * A join between two tables can be one-to-one, many-to-one or many-to-many.
     * A ColumnPair represents an edge in the set of relationships in this join.
     * </pre>
     *
     * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
     */
    EDoc.JoinEDocProto.ColumnPairOrBuilder getColumnPairsOrBuilder(
        int index);

    /**
     * <pre>
     * Allowed values: { inner, outer, left-outer, right-outer }
     * </pre>
     *
     * <code>optional string type = 6;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <pre>
     * Allowed values: { inner, outer, left-outer, right-outer }
     * </pre>
     *
     * <code>optional string type = 6;</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * Allowed values: { inner, outer, left-outer, right-outer }
     * </pre>
     *
     * <code>optional string type = 6;</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * A string representaion of a boolean expression that represents the join
     * condition. Note: We assume an equi-join if this field is not set.
     * TODO(Akshay): Revisit.
     * </pre>
     *
     * <code>optional string generic_join_condition = 7;</code>
     * @return Whether the genericJoinCondition field is set.
     */
    boolean hasGenericJoinCondition();
    /**
     * <pre>
     * A string representaion of a boolean expression that represents the join
     * condition. Note: We assume an equi-join if this field is not set.
     * TODO(Akshay): Revisit.
     * </pre>
     *
     * <code>optional string generic_join_condition = 7;</code>
     * @return The genericJoinCondition.
     */
    java.lang.String getGenericJoinCondition();
    /**
     * <pre>
     * A string representaion of a boolean expression that represents the join
     * condition. Note: We assume an equi-join if this field is not set.
     * TODO(Akshay): Revisit.
     * </pre>
     *
     * <code>optional string generic_join_condition = 7;</code>
     * @return The bytes for genericJoinCondition.
     */
    com.google.protobuf.ByteString
        getGenericJoinConditionBytes();

    /**
     * <code>optional bool is_one_to_one = 8;</code>
     * @return Whether the isOneToOne field is set.
     */
    boolean hasIsOneToOne();
    /**
     * <code>optional bool is_one_to_one = 8;</code>
     * @return The isOneToOne.
     */
    boolean getIsOneToOne();
  }
  /**
   * <pre>
   * This message defines the edoc representation of logical relationship.
   * </pre>
   *
   * Protobuf type {@code JoinEDocProto}
   */
  public static final class JoinEDocProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:JoinEDocProto)
      JoinEDocProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use JoinEDocProto.newBuilder() to construct.
    private JoinEDocProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JoinEDocProto() {
      name_ = "";
      description_ = "";
      columnPairs_ = java.util.Collections.emptyList();
      type_ = "";
      genericJoinCondition_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new JoinEDocProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private JoinEDocProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              description_ = bs;
              break;
            }
            case 26: {
              EDoc.Identity.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) != 0)) {
                subBuilder = sourceTable_.toBuilder();
              }
              sourceTable_ = input.readMessage(EDoc.Identity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sourceTable_);
                sourceTable_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              EDoc.Identity.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) != 0)) {
                subBuilder = destinationTable_.toBuilder();
              }
              destinationTable_ = input.readMessage(EDoc.Identity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(destinationTable_);
                destinationTable_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                columnPairs_ = new java.util.ArrayList<EDoc.JoinEDocProto.ColumnPair>();
                mutable_bitField0_ |= 0x00000010;
              }
              columnPairs_.add(
                  input.readMessage(EDoc.JoinEDocProto.ColumnPair.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              type_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              genericJoinCondition_ = bs;
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              isOneToOne_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          columnPairs_ = java.util.Collections.unmodifiableList(columnPairs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_JoinEDocProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_JoinEDocProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.JoinEDocProto.class, EDoc.JoinEDocProto.Builder.class);
    }

    public interface ColumnPairOrBuilder extends
        // @@protoc_insertion_point(interface_extends:JoinEDocProto.ColumnPair)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Note: These names in conjunction with source and destination tables
       * identities, can un-ambigously represent a logical column in metadata.
       * </pre>
       *
       * <code>optional string source_column = 1;</code>
       * @return Whether the sourceColumn field is set.
       */
      boolean hasSourceColumn();
      /**
       * <pre>
       * Note: These names in conjunction with source and destination tables
       * identities, can un-ambigously represent a logical column in metadata.
       * </pre>
       *
       * <code>optional string source_column = 1;</code>
       * @return The sourceColumn.
       */
      java.lang.String getSourceColumn();
      /**
       * <pre>
       * Note: These names in conjunction with source and destination tables
       * identities, can un-ambigously represent a logical column in metadata.
       * </pre>
       *
       * <code>optional string source_column = 1;</code>
       * @return The bytes for sourceColumn.
       */
      com.google.protobuf.ByteString
          getSourceColumnBytes();

      /**
       * <code>optional string destination_column = 2;</code>
       * @return Whether the destinationColumn field is set.
       */
      boolean hasDestinationColumn();
      /**
       * <code>optional string destination_column = 2;</code>
       * @return The destinationColumn.
       */
      java.lang.String getDestinationColumn();
      /**
       * <code>optional string destination_column = 2;</code>
       * @return The bytes for destinationColumn.
       */
      com.google.protobuf.ByteString
          getDestinationColumnBytes();
    }
    /**
     * Protobuf type {@code JoinEDocProto.ColumnPair}
     */
    public static final class ColumnPair extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:JoinEDocProto.ColumnPair)
        ColumnPairOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ColumnPair.newBuilder() to construct.
      private ColumnPair(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ColumnPair() {
        sourceColumn_ = "";
        destinationColumn_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ColumnPair();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ColumnPair(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                sourceColumn_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                destinationColumn_ = bs;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_JoinEDocProto_ColumnPair_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_JoinEDocProto_ColumnPair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.JoinEDocProto.ColumnPair.class, EDoc.JoinEDocProto.ColumnPair.Builder.class);
      }

      private int bitField0_;
      public static final int SOURCE_COLUMN_FIELD_NUMBER = 1;
      private volatile java.lang.Object sourceColumn_;
      /**
       * <pre>
       * Note: These names in conjunction with source and destination tables
       * identities, can un-ambigously represent a logical column in metadata.
       * </pre>
       *
       * <code>optional string source_column = 1;</code>
       * @return Whether the sourceColumn field is set.
       */
      @java.lang.Override
      public boolean hasSourceColumn() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Note: These names in conjunction with source and destination tables
       * identities, can un-ambigously represent a logical column in metadata.
       * </pre>
       *
       * <code>optional string source_column = 1;</code>
       * @return The sourceColumn.
       */
      @java.lang.Override
      public java.lang.String getSourceColumn() {
        java.lang.Object ref = sourceColumn_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sourceColumn_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Note: These names in conjunction with source and destination tables
       * identities, can un-ambigously represent a logical column in metadata.
       * </pre>
       *
       * <code>optional string source_column = 1;</code>
       * @return The bytes for sourceColumn.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSourceColumnBytes() {
        java.lang.Object ref = sourceColumn_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sourceColumn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DESTINATION_COLUMN_FIELD_NUMBER = 2;
      private volatile java.lang.Object destinationColumn_;
      /**
       * <code>optional string destination_column = 2;</code>
       * @return Whether the destinationColumn field is set.
       */
      @java.lang.Override
      public boolean hasDestinationColumn() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string destination_column = 2;</code>
       * @return The destinationColumn.
       */
      @java.lang.Override
      public java.lang.String getDestinationColumn() {
        java.lang.Object ref = destinationColumn_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            destinationColumn_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string destination_column = 2;</code>
       * @return The bytes for destinationColumn.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDestinationColumnBytes() {
        java.lang.Object ref = destinationColumn_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          destinationColumn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sourceColumn_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, destinationColumn_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sourceColumn_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, destinationColumn_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof EDoc.JoinEDocProto.ColumnPair)) {
          return super.equals(obj);
        }
        EDoc.JoinEDocProto.ColumnPair other = (EDoc.JoinEDocProto.ColumnPair) obj;

        if (hasSourceColumn() != other.hasSourceColumn()) return false;
        if (hasSourceColumn()) {
          if (!getSourceColumn()
              .equals(other.getSourceColumn())) return false;
        }
        if (hasDestinationColumn() != other.hasDestinationColumn()) return false;
        if (hasDestinationColumn()) {
          if (!getDestinationColumn()
              .equals(other.getDestinationColumn())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSourceColumn()) {
          hash = (37 * hash) + SOURCE_COLUMN_FIELD_NUMBER;
          hash = (53 * hash) + getSourceColumn().hashCode();
        }
        if (hasDestinationColumn()) {
          hash = (37 * hash) + DESTINATION_COLUMN_FIELD_NUMBER;
          hash = (53 * hash) + getDestinationColumn().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static EDoc.JoinEDocProto.ColumnPair parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.JoinEDocProto.ColumnPair parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.JoinEDocProto.ColumnPair parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.JoinEDocProto.ColumnPair parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.JoinEDocProto.ColumnPair parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static EDoc.JoinEDocProto.ColumnPair parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static EDoc.JoinEDocProto.ColumnPair parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.JoinEDocProto.ColumnPair parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.JoinEDocProto.ColumnPair parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static EDoc.JoinEDocProto.ColumnPair parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static EDoc.JoinEDocProto.ColumnPair parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static EDoc.JoinEDocProto.ColumnPair parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(EDoc.JoinEDocProto.ColumnPair prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code JoinEDocProto.ColumnPair}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:JoinEDocProto.ColumnPair)
          EDoc.JoinEDocProto.ColumnPairOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return EDoc.internal_static_JoinEDocProto_ColumnPair_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return EDoc.internal_static_JoinEDocProto_ColumnPair_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  EDoc.JoinEDocProto.ColumnPair.class, EDoc.JoinEDocProto.ColumnPair.Builder.class);
        }

        // Construct using EDoc.JoinEDocProto.ColumnPair.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          sourceColumn_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          destinationColumn_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return EDoc.internal_static_JoinEDocProto_ColumnPair_descriptor;
        }

        @java.lang.Override
        public EDoc.JoinEDocProto.ColumnPair getDefaultInstanceForType() {
          return EDoc.JoinEDocProto.ColumnPair.getDefaultInstance();
        }

        @java.lang.Override
        public EDoc.JoinEDocProto.ColumnPair build() {
          EDoc.JoinEDocProto.ColumnPair result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public EDoc.JoinEDocProto.ColumnPair buildPartial() {
          EDoc.JoinEDocProto.ColumnPair result = new EDoc.JoinEDocProto.ColumnPair(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.sourceColumn_ = sourceColumn_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.destinationColumn_ = destinationColumn_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof EDoc.JoinEDocProto.ColumnPair) {
            return mergeFrom((EDoc.JoinEDocProto.ColumnPair)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(EDoc.JoinEDocProto.ColumnPair other) {
          if (other == EDoc.JoinEDocProto.ColumnPair.getDefaultInstance()) return this;
          if (other.hasSourceColumn()) {
            bitField0_ |= 0x00000001;
            sourceColumn_ = other.sourceColumn_;
            onChanged();
          }
          if (other.hasDestinationColumn()) {
            bitField0_ |= 0x00000002;
            destinationColumn_ = other.destinationColumn_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          EDoc.JoinEDocProto.ColumnPair parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (EDoc.JoinEDocProto.ColumnPair) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object sourceColumn_ = "";
        /**
         * <pre>
         * Note: These names in conjunction with source and destination tables
         * identities, can un-ambigously represent a logical column in metadata.
         * </pre>
         *
         * <code>optional string source_column = 1;</code>
         * @return Whether the sourceColumn field is set.
         */
        public boolean hasSourceColumn() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Note: These names in conjunction with source and destination tables
         * identities, can un-ambigously represent a logical column in metadata.
         * </pre>
         *
         * <code>optional string source_column = 1;</code>
         * @return The sourceColumn.
         */
        public java.lang.String getSourceColumn() {
          java.lang.Object ref = sourceColumn_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              sourceColumn_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Note: These names in conjunction with source and destination tables
         * identities, can un-ambigously represent a logical column in metadata.
         * </pre>
         *
         * <code>optional string source_column = 1;</code>
         * @return The bytes for sourceColumn.
         */
        public com.google.protobuf.ByteString
            getSourceColumnBytes() {
          java.lang.Object ref = sourceColumn_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sourceColumn_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Note: These names in conjunction with source and destination tables
         * identities, can un-ambigously represent a logical column in metadata.
         * </pre>
         *
         * <code>optional string source_column = 1;</code>
         * @param value The sourceColumn to set.
         * @return This builder for chaining.
         */
        public Builder setSourceColumn(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          sourceColumn_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Note: These names in conjunction with source and destination tables
         * identities, can un-ambigously represent a logical column in metadata.
         * </pre>
         *
         * <code>optional string source_column = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearSourceColumn() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sourceColumn_ = getDefaultInstance().getSourceColumn();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Note: These names in conjunction with source and destination tables
         * identities, can un-ambigously represent a logical column in metadata.
         * </pre>
         *
         * <code>optional string source_column = 1;</code>
         * @param value The bytes for sourceColumn to set.
         * @return This builder for chaining.
         */
        public Builder setSourceColumnBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          sourceColumn_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object destinationColumn_ = "";
        /**
         * <code>optional string destination_column = 2;</code>
         * @return Whether the destinationColumn field is set.
         */
        public boolean hasDestinationColumn() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string destination_column = 2;</code>
         * @return The destinationColumn.
         */
        public java.lang.String getDestinationColumn() {
          java.lang.Object ref = destinationColumn_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              destinationColumn_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string destination_column = 2;</code>
         * @return The bytes for destinationColumn.
         */
        public com.google.protobuf.ByteString
            getDestinationColumnBytes() {
          java.lang.Object ref = destinationColumn_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            destinationColumn_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string destination_column = 2;</code>
         * @param value The destinationColumn to set.
         * @return This builder for chaining.
         */
        public Builder setDestinationColumn(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          destinationColumn_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string destination_column = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearDestinationColumn() {
          bitField0_ = (bitField0_ & ~0x00000002);
          destinationColumn_ = getDefaultInstance().getDestinationColumn();
          onChanged();
          return this;
        }
        /**
         * <code>optional string destination_column = 2;</code>
         * @param value The bytes for destinationColumn to set.
         * @return This builder for chaining.
         */
        public Builder setDestinationColumnBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          destinationColumn_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:JoinEDocProto.ColumnPair)
      }

      // @@protoc_insertion_point(class_scope:JoinEDocProto.ColumnPair)
      private static final EDoc.JoinEDocProto.ColumnPair DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EDoc.JoinEDocProto.ColumnPair();
      }

      public static EDoc.JoinEDocProto.ColumnPair getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ColumnPair>
          PARSER = new com.google.protobuf.AbstractParser<ColumnPair>() {
        @java.lang.Override
        public ColumnPair parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ColumnPair(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ColumnPair> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ColumnPair> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public EDoc.JoinEDocProto.ColumnPair getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * User readable name and description of the relationship to create/update.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * User readable name and description of the relationship to create/update.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * User readable name and description of the relationship to create/update.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object description_;
    /**
     * <code>optional string description = 2;</code>
     * @return Whether the description field is set.
     */
    @java.lang.Override
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string description = 2;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string description = 2;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_TABLE_FIELD_NUMBER = 3;
    private EDoc.Identity sourceTable_;
    /**
     * <pre>
     * Logical table name or FQN (in case of multiple tables with same name), of
     * source table.
     * </pre>
     *
     * <code>optional .Identity source_table = 3;</code>
     * @return Whether the sourceTable field is set.
     */
    @java.lang.Override
    public boolean hasSourceTable() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Logical table name or FQN (in case of multiple tables with same name), of
     * source table.
     * </pre>
     *
     * <code>optional .Identity source_table = 3;</code>
     * @return The sourceTable.
     */
    @java.lang.Override
    public EDoc.Identity getSourceTable() {
      return sourceTable_ == null ? EDoc.Identity.getDefaultInstance() : sourceTable_;
    }
    /**
     * <pre>
     * Logical table name or FQN (in case of multiple tables with same name), of
     * source table.
     * </pre>
     *
     * <code>optional .Identity source_table = 3;</code>
     */
    @java.lang.Override
    public EDoc.IdentityOrBuilder getSourceTableOrBuilder() {
      return sourceTable_ == null ? EDoc.Identity.getDefaultInstance() : sourceTable_;
    }

    public static final int DESTINATION_TABLE_FIELD_NUMBER = 4;
    private EDoc.Identity destinationTable_;
    /**
     * <pre>
     * Logical table name or FQN (in case of multiple tables with same name), of
     * destination table.
     * </pre>
     *
     * <code>optional .Identity destination_table = 4;</code>
     * @return Whether the destinationTable field is set.
     */
    @java.lang.Override
    public boolean hasDestinationTable() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Logical table name or FQN (in case of multiple tables with same name), of
     * destination table.
     * </pre>
     *
     * <code>optional .Identity destination_table = 4;</code>
     * @return The destinationTable.
     */
    @java.lang.Override
    public EDoc.Identity getDestinationTable() {
      return destinationTable_ == null ? EDoc.Identity.getDefaultInstance() : destinationTable_;
    }
    /**
     * <pre>
     * Logical table name or FQN (in case of multiple tables with same name), of
     * destination table.
     * </pre>
     *
     * <code>optional .Identity destination_table = 4;</code>
     */
    @java.lang.Override
    public EDoc.IdentityOrBuilder getDestinationTableOrBuilder() {
      return destinationTable_ == null ? EDoc.Identity.getDefaultInstance() : destinationTable_;
    }

    public static final int COLUMN_PAIRS_FIELD_NUMBER = 5;
    private java.util.List<EDoc.JoinEDocProto.ColumnPair> columnPairs_;
    /**
     * <pre>
     * A join between two tables can be one-to-one, many-to-one or many-to-many.
     * A ColumnPair represents an edge in the set of relationships in this join.
     * </pre>
     *
     * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.JoinEDocProto.ColumnPair> getColumnPairsList() {
      return columnPairs_;
    }
    /**
     * <pre>
     * A join between two tables can be one-to-one, many-to-one or many-to-many.
     * A ColumnPair represents an edge in the set of relationships in this join.
     * </pre>
     *
     * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.JoinEDocProto.ColumnPairOrBuilder> 
        getColumnPairsOrBuilderList() {
      return columnPairs_;
    }
    /**
     * <pre>
     * A join between two tables can be one-to-one, many-to-one or many-to-many.
     * A ColumnPair represents an edge in the set of relationships in this join.
     * </pre>
     *
     * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
     */
    @java.lang.Override
    public int getColumnPairsCount() {
      return columnPairs_.size();
    }
    /**
     * <pre>
     * A join between two tables can be one-to-one, many-to-one or many-to-many.
     * A ColumnPair represents an edge in the set of relationships in this join.
     * </pre>
     *
     * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
     */
    @java.lang.Override
    public EDoc.JoinEDocProto.ColumnPair getColumnPairs(int index) {
      return columnPairs_.get(index);
    }
    /**
     * <pre>
     * A join between two tables can be one-to-one, many-to-one or many-to-many.
     * A ColumnPair represents an edge in the set of relationships in this join.
     * </pre>
     *
     * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
     */
    @java.lang.Override
    public EDoc.JoinEDocProto.ColumnPairOrBuilder getColumnPairsOrBuilder(
        int index) {
      return columnPairs_.get(index);
    }

    public static final int TYPE_FIELD_NUMBER = 6;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * Allowed values: { inner, outer, left-outer, right-outer }
     * </pre>
     *
     * <code>optional string type = 6;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Allowed values: { inner, outer, left-outer, right-outer }
     * </pre>
     *
     * <code>optional string type = 6;</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Allowed values: { inner, outer, left-outer, right-outer }
     * </pre>
     *
     * <code>optional string type = 6;</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GENERIC_JOIN_CONDITION_FIELD_NUMBER = 7;
    private volatile java.lang.Object genericJoinCondition_;
    /**
     * <pre>
     * A string representaion of a boolean expression that represents the join
     * condition. Note: We assume an equi-join if this field is not set.
     * TODO(Akshay): Revisit.
     * </pre>
     *
     * <code>optional string generic_join_condition = 7;</code>
     * @return Whether the genericJoinCondition field is set.
     */
    @java.lang.Override
    public boolean hasGenericJoinCondition() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * A string representaion of a boolean expression that represents the join
     * condition. Note: We assume an equi-join if this field is not set.
     * TODO(Akshay): Revisit.
     * </pre>
     *
     * <code>optional string generic_join_condition = 7;</code>
     * @return The genericJoinCondition.
     */
    @java.lang.Override
    public java.lang.String getGenericJoinCondition() {
      java.lang.Object ref = genericJoinCondition_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          genericJoinCondition_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * A string representaion of a boolean expression that represents the join
     * condition. Note: We assume an equi-join if this field is not set.
     * TODO(Akshay): Revisit.
     * </pre>
     *
     * <code>optional string generic_join_condition = 7;</code>
     * @return The bytes for genericJoinCondition.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGenericJoinConditionBytes() {
      java.lang.Object ref = genericJoinCondition_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        genericJoinCondition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IS_ONE_TO_ONE_FIELD_NUMBER = 8;
    private boolean isOneToOne_;
    /**
     * <code>optional bool is_one_to_one = 8;</code>
     * @return Whether the isOneToOne field is set.
     */
    @java.lang.Override
    public boolean hasIsOneToOne() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional bool is_one_to_one = 8;</code>
     * @return The isOneToOne.
     */
    @java.lang.Override
    public boolean getIsOneToOne() {
      return isOneToOne_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getSourceTable());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(4, getDestinationTable());
      }
      for (int i = 0; i < columnPairs_.size(); i++) {
        output.writeMessage(5, columnPairs_.get(i));
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, type_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, genericJoinCondition_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeBool(8, isOneToOne_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSourceTable());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getDestinationTable());
      }
      for (int i = 0; i < columnPairs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, columnPairs_.get(i));
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, type_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, genericJoinCondition_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isOneToOne_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.JoinEDocProto)) {
        return super.equals(obj);
      }
      EDoc.JoinEDocProto other = (EDoc.JoinEDocProto) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasDescription() != other.hasDescription()) return false;
      if (hasDescription()) {
        if (!getDescription()
            .equals(other.getDescription())) return false;
      }
      if (hasSourceTable() != other.hasSourceTable()) return false;
      if (hasSourceTable()) {
        if (!getSourceTable()
            .equals(other.getSourceTable())) return false;
      }
      if (hasDestinationTable() != other.hasDestinationTable()) return false;
      if (hasDestinationTable()) {
        if (!getDestinationTable()
            .equals(other.getDestinationTable())) return false;
      }
      if (!getColumnPairsList()
          .equals(other.getColumnPairsList())) return false;
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (!getType()
            .equals(other.getType())) return false;
      }
      if (hasGenericJoinCondition() != other.hasGenericJoinCondition()) return false;
      if (hasGenericJoinCondition()) {
        if (!getGenericJoinCondition()
            .equals(other.getGenericJoinCondition())) return false;
      }
      if (hasIsOneToOne() != other.hasIsOneToOne()) return false;
      if (hasIsOneToOne()) {
        if (getIsOneToOne()
            != other.getIsOneToOne()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasDescription()) {
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription().hashCode();
      }
      if (hasSourceTable()) {
        hash = (37 * hash) + SOURCE_TABLE_FIELD_NUMBER;
        hash = (53 * hash) + getSourceTable().hashCode();
      }
      if (hasDestinationTable()) {
        hash = (37 * hash) + DESTINATION_TABLE_FIELD_NUMBER;
        hash = (53 * hash) + getDestinationTable().hashCode();
      }
      if (getColumnPairsCount() > 0) {
        hash = (37 * hash) + COLUMN_PAIRS_FIELD_NUMBER;
        hash = (53 * hash) + getColumnPairsList().hashCode();
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      if (hasGenericJoinCondition()) {
        hash = (37 * hash) + GENERIC_JOIN_CONDITION_FIELD_NUMBER;
        hash = (53 * hash) + getGenericJoinCondition().hashCode();
      }
      if (hasIsOneToOne()) {
        hash = (37 * hash) + IS_ONE_TO_ONE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsOneToOne());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.JoinEDocProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.JoinEDocProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.JoinEDocProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.JoinEDocProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.JoinEDocProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.JoinEDocProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.JoinEDocProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.JoinEDocProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.JoinEDocProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.JoinEDocProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.JoinEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.JoinEDocProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.JoinEDocProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This message defines the edoc representation of logical relationship.
     * </pre>
     *
     * Protobuf type {@code JoinEDocProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:JoinEDocProto)
        EDoc.JoinEDocProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_JoinEDocProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_JoinEDocProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.JoinEDocProto.class, EDoc.JoinEDocProto.Builder.class);
      }

      // Construct using EDoc.JoinEDocProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSourceTableFieldBuilder();
          getDestinationTableFieldBuilder();
          getColumnPairsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (sourceTableBuilder_ == null) {
          sourceTable_ = null;
        } else {
          sourceTableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (destinationTableBuilder_ == null) {
          destinationTable_ = null;
        } else {
          destinationTableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (columnPairsBuilder_ == null) {
          columnPairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          columnPairsBuilder_.clear();
        }
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        genericJoinCondition_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        isOneToOne_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_JoinEDocProto_descriptor;
      }

      @java.lang.Override
      public EDoc.JoinEDocProto getDefaultInstanceForType() {
        return EDoc.JoinEDocProto.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.JoinEDocProto build() {
        EDoc.JoinEDocProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.JoinEDocProto buildPartial() {
        EDoc.JoinEDocProto result = new EDoc.JoinEDocProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.description_ = description_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          if (sourceTableBuilder_ == null) {
            result.sourceTable_ = sourceTable_;
          } else {
            result.sourceTable_ = sourceTableBuilder_.build();
          }
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          if (destinationTableBuilder_ == null) {
            result.destinationTable_ = destinationTable_;
          } else {
            result.destinationTable_ = destinationTableBuilder_.build();
          }
          to_bitField0_ |= 0x00000008;
        }
        if (columnPairsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            columnPairs_ = java.util.Collections.unmodifiableList(columnPairs_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.columnPairs_ = columnPairs_;
        } else {
          result.columnPairs_ = columnPairsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000020;
        }
        result.genericJoinCondition_ = genericJoinCondition_;
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.isOneToOne_ = isOneToOne_;
          to_bitField0_ |= 0x00000040;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.JoinEDocProto) {
          return mergeFrom((EDoc.JoinEDocProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.JoinEDocProto other) {
        if (other == EDoc.JoinEDocProto.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000002;
          description_ = other.description_;
          onChanged();
        }
        if (other.hasSourceTable()) {
          mergeSourceTable(other.getSourceTable());
        }
        if (other.hasDestinationTable()) {
          mergeDestinationTable(other.getDestinationTable());
        }
        if (columnPairsBuilder_ == null) {
          if (!other.columnPairs_.isEmpty()) {
            if (columnPairs_.isEmpty()) {
              columnPairs_ = other.columnPairs_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureColumnPairsIsMutable();
              columnPairs_.addAll(other.columnPairs_);
            }
            onChanged();
          }
        } else {
          if (!other.columnPairs_.isEmpty()) {
            if (columnPairsBuilder_.isEmpty()) {
              columnPairsBuilder_.dispose();
              columnPairsBuilder_ = null;
              columnPairs_ = other.columnPairs_;
              bitField0_ = (bitField0_ & ~0x00000010);
              columnPairsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getColumnPairsFieldBuilder() : null;
            } else {
              columnPairsBuilder_.addAllMessages(other.columnPairs_);
            }
          }
        }
        if (other.hasType()) {
          bitField0_ |= 0x00000020;
          type_ = other.type_;
          onChanged();
        }
        if (other.hasGenericJoinCondition()) {
          bitField0_ |= 0x00000040;
          genericJoinCondition_ = other.genericJoinCondition_;
          onChanged();
        }
        if (other.hasIsOneToOne()) {
          setIsOneToOne(other.getIsOneToOne());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.JoinEDocProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.JoinEDocProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * User readable name and description of the relationship to create/update.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * User readable name and description of the relationship to create/update.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * User readable name and description of the relationship to create/update.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * User readable name and description of the relationship to create/update.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User readable name and description of the relationship to create/update.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User readable name and description of the relationship to create/update.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <code>optional string description = 2;</code>
       * @return Whether the description field is set.
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string description = 2;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string description = 2;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string description = 2;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 2;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }

      private EDoc.Identity sourceTable_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> sourceTableBuilder_;
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * source table.
       * </pre>
       *
       * <code>optional .Identity source_table = 3;</code>
       * @return Whether the sourceTable field is set.
       */
      public boolean hasSourceTable() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * source table.
       * </pre>
       *
       * <code>optional .Identity source_table = 3;</code>
       * @return The sourceTable.
       */
      public EDoc.Identity getSourceTable() {
        if (sourceTableBuilder_ == null) {
          return sourceTable_ == null ? EDoc.Identity.getDefaultInstance() : sourceTable_;
        } else {
          return sourceTableBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * source table.
       * </pre>
       *
       * <code>optional .Identity source_table = 3;</code>
       */
      public Builder setSourceTable(EDoc.Identity value) {
        if (sourceTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sourceTable_ = value;
          onChanged();
        } else {
          sourceTableBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * source table.
       * </pre>
       *
       * <code>optional .Identity source_table = 3;</code>
       */
      public Builder setSourceTable(
          EDoc.Identity.Builder builderForValue) {
        if (sourceTableBuilder_ == null) {
          sourceTable_ = builderForValue.build();
          onChanged();
        } else {
          sourceTableBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * source table.
       * </pre>
       *
       * <code>optional .Identity source_table = 3;</code>
       */
      public Builder mergeSourceTable(EDoc.Identity value) {
        if (sourceTableBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
              sourceTable_ != null &&
              sourceTable_ != EDoc.Identity.getDefaultInstance()) {
            sourceTable_ =
              EDoc.Identity.newBuilder(sourceTable_).mergeFrom(value).buildPartial();
          } else {
            sourceTable_ = value;
          }
          onChanged();
        } else {
          sourceTableBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * source table.
       * </pre>
       *
       * <code>optional .Identity source_table = 3;</code>
       */
      public Builder clearSourceTable() {
        if (sourceTableBuilder_ == null) {
          sourceTable_ = null;
          onChanged();
        } else {
          sourceTableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * source table.
       * </pre>
       *
       * <code>optional .Identity source_table = 3;</code>
       */
      public EDoc.Identity.Builder getSourceTableBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSourceTableFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * source table.
       * </pre>
       *
       * <code>optional .Identity source_table = 3;</code>
       */
      public EDoc.IdentityOrBuilder getSourceTableOrBuilder() {
        if (sourceTableBuilder_ != null) {
          return sourceTableBuilder_.getMessageOrBuilder();
        } else {
          return sourceTable_ == null ?
              EDoc.Identity.getDefaultInstance() : sourceTable_;
        }
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * source table.
       * </pre>
       *
       * <code>optional .Identity source_table = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> 
          getSourceTableFieldBuilder() {
        if (sourceTableBuilder_ == null) {
          sourceTableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder>(
                  getSourceTable(),
                  getParentForChildren(),
                  isClean());
          sourceTable_ = null;
        }
        return sourceTableBuilder_;
      }

      private EDoc.Identity destinationTable_;
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> destinationTableBuilder_;
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * destination table.
       * </pre>
       *
       * <code>optional .Identity destination_table = 4;</code>
       * @return Whether the destinationTable field is set.
       */
      public boolean hasDestinationTable() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * destination table.
       * </pre>
       *
       * <code>optional .Identity destination_table = 4;</code>
       * @return The destinationTable.
       */
      public EDoc.Identity getDestinationTable() {
        if (destinationTableBuilder_ == null) {
          return destinationTable_ == null ? EDoc.Identity.getDefaultInstance() : destinationTable_;
        } else {
          return destinationTableBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * destination table.
       * </pre>
       *
       * <code>optional .Identity destination_table = 4;</code>
       */
      public Builder setDestinationTable(EDoc.Identity value) {
        if (destinationTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          destinationTable_ = value;
          onChanged();
        } else {
          destinationTableBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * destination table.
       * </pre>
       *
       * <code>optional .Identity destination_table = 4;</code>
       */
      public Builder setDestinationTable(
          EDoc.Identity.Builder builderForValue) {
        if (destinationTableBuilder_ == null) {
          destinationTable_ = builderForValue.build();
          onChanged();
        } else {
          destinationTableBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * destination table.
       * </pre>
       *
       * <code>optional .Identity destination_table = 4;</code>
       */
      public Builder mergeDestinationTable(EDoc.Identity value) {
        if (destinationTableBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
              destinationTable_ != null &&
              destinationTable_ != EDoc.Identity.getDefaultInstance()) {
            destinationTable_ =
              EDoc.Identity.newBuilder(destinationTable_).mergeFrom(value).buildPartial();
          } else {
            destinationTable_ = value;
          }
          onChanged();
        } else {
          destinationTableBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * destination table.
       * </pre>
       *
       * <code>optional .Identity destination_table = 4;</code>
       */
      public Builder clearDestinationTable() {
        if (destinationTableBuilder_ == null) {
          destinationTable_ = null;
          onChanged();
        } else {
          destinationTableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * destination table.
       * </pre>
       *
       * <code>optional .Identity destination_table = 4;</code>
       */
      public EDoc.Identity.Builder getDestinationTableBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDestinationTableFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * destination table.
       * </pre>
       *
       * <code>optional .Identity destination_table = 4;</code>
       */
      public EDoc.IdentityOrBuilder getDestinationTableOrBuilder() {
        if (destinationTableBuilder_ != null) {
          return destinationTableBuilder_.getMessageOrBuilder();
        } else {
          return destinationTable_ == null ?
              EDoc.Identity.getDefaultInstance() : destinationTable_;
        }
      }
      /**
       * <pre>
       * Logical table name or FQN (in case of multiple tables with same name), of
       * destination table.
       * </pre>
       *
       * <code>optional .Identity destination_table = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder> 
          getDestinationTableFieldBuilder() {
        if (destinationTableBuilder_ == null) {
          destinationTableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              EDoc.Identity, EDoc.Identity.Builder, EDoc.IdentityOrBuilder>(
                  getDestinationTable(),
                  getParentForChildren(),
                  isClean());
          destinationTable_ = null;
        }
        return destinationTableBuilder_;
      }

      private java.util.List<EDoc.JoinEDocProto.ColumnPair> columnPairs_ =
        java.util.Collections.emptyList();
      private void ensureColumnPairsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          columnPairs_ = new java.util.ArrayList<EDoc.JoinEDocProto.ColumnPair>(columnPairs_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.JoinEDocProto.ColumnPair, EDoc.JoinEDocProto.ColumnPair.Builder, EDoc.JoinEDocProto.ColumnPairOrBuilder> columnPairsBuilder_;

      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public java.util.List<EDoc.JoinEDocProto.ColumnPair> getColumnPairsList() {
        if (columnPairsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(columnPairs_);
        } else {
          return columnPairsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public int getColumnPairsCount() {
        if (columnPairsBuilder_ == null) {
          return columnPairs_.size();
        } else {
          return columnPairsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public EDoc.JoinEDocProto.ColumnPair getColumnPairs(int index) {
        if (columnPairsBuilder_ == null) {
          return columnPairs_.get(index);
        } else {
          return columnPairsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public Builder setColumnPairs(
          int index, EDoc.JoinEDocProto.ColumnPair value) {
        if (columnPairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnPairsIsMutable();
          columnPairs_.set(index, value);
          onChanged();
        } else {
          columnPairsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public Builder setColumnPairs(
          int index, EDoc.JoinEDocProto.ColumnPair.Builder builderForValue) {
        if (columnPairsBuilder_ == null) {
          ensureColumnPairsIsMutable();
          columnPairs_.set(index, builderForValue.build());
          onChanged();
        } else {
          columnPairsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public Builder addColumnPairs(EDoc.JoinEDocProto.ColumnPair value) {
        if (columnPairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnPairsIsMutable();
          columnPairs_.add(value);
          onChanged();
        } else {
          columnPairsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public Builder addColumnPairs(
          int index, EDoc.JoinEDocProto.ColumnPair value) {
        if (columnPairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnPairsIsMutable();
          columnPairs_.add(index, value);
          onChanged();
        } else {
          columnPairsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public Builder addColumnPairs(
          EDoc.JoinEDocProto.ColumnPair.Builder builderForValue) {
        if (columnPairsBuilder_ == null) {
          ensureColumnPairsIsMutable();
          columnPairs_.add(builderForValue.build());
          onChanged();
        } else {
          columnPairsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public Builder addColumnPairs(
          int index, EDoc.JoinEDocProto.ColumnPair.Builder builderForValue) {
        if (columnPairsBuilder_ == null) {
          ensureColumnPairsIsMutable();
          columnPairs_.add(index, builderForValue.build());
          onChanged();
        } else {
          columnPairsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public Builder addAllColumnPairs(
          java.lang.Iterable<? extends EDoc.JoinEDocProto.ColumnPair> values) {
        if (columnPairsBuilder_ == null) {
          ensureColumnPairsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, columnPairs_);
          onChanged();
        } else {
          columnPairsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public Builder clearColumnPairs() {
        if (columnPairsBuilder_ == null) {
          columnPairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          columnPairsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public Builder removeColumnPairs(int index) {
        if (columnPairsBuilder_ == null) {
          ensureColumnPairsIsMutable();
          columnPairs_.remove(index);
          onChanged();
        } else {
          columnPairsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public EDoc.JoinEDocProto.ColumnPair.Builder getColumnPairsBuilder(
          int index) {
        return getColumnPairsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public EDoc.JoinEDocProto.ColumnPairOrBuilder getColumnPairsOrBuilder(
          int index) {
        if (columnPairsBuilder_ == null) {
          return columnPairs_.get(index);  } else {
          return columnPairsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public java.util.List<? extends EDoc.JoinEDocProto.ColumnPairOrBuilder> 
           getColumnPairsOrBuilderList() {
        if (columnPairsBuilder_ != null) {
          return columnPairsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(columnPairs_);
        }
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public EDoc.JoinEDocProto.ColumnPair.Builder addColumnPairsBuilder() {
        return getColumnPairsFieldBuilder().addBuilder(
            EDoc.JoinEDocProto.ColumnPair.getDefaultInstance());
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public EDoc.JoinEDocProto.ColumnPair.Builder addColumnPairsBuilder(
          int index) {
        return getColumnPairsFieldBuilder().addBuilder(
            index, EDoc.JoinEDocProto.ColumnPair.getDefaultInstance());
      }
      /**
       * <pre>
       * A join between two tables can be one-to-one, many-to-one or many-to-many.
       * A ColumnPair represents an edge in the set of relationships in this join.
       * </pre>
       *
       * <code>repeated .JoinEDocProto.ColumnPair column_pairs = 5;</code>
       */
      public java.util.List<EDoc.JoinEDocProto.ColumnPair.Builder> 
           getColumnPairsBuilderList() {
        return getColumnPairsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.JoinEDocProto.ColumnPair, EDoc.JoinEDocProto.ColumnPair.Builder, EDoc.JoinEDocProto.ColumnPairOrBuilder> 
          getColumnPairsFieldBuilder() {
        if (columnPairsBuilder_ == null) {
          columnPairsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.JoinEDocProto.ColumnPair, EDoc.JoinEDocProto.ColumnPair.Builder, EDoc.JoinEDocProto.ColumnPairOrBuilder>(
                  columnPairs_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          columnPairs_ = null;
        }
        return columnPairsBuilder_;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * Allowed values: { inner, outer, left-outer, right-outer }
       * </pre>
       *
       * <code>optional string type = 6;</code>
       * @return Whether the type field is set.
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Allowed values: { inner, outer, left-outer, right-outer }
       * </pre>
       *
       * <code>optional string type = 6;</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            type_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Allowed values: { inner, outer, left-outer, right-outer }
       * </pre>
       *
       * <code>optional string type = 6;</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Allowed values: { inner, outer, left-outer, right-outer }
       * </pre>
       *
       * <code>optional string type = 6;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Allowed values: { inner, outer, left-outer, right-outer }
       * </pre>
       *
       * <code>optional string type = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Allowed values: { inner, outer, left-outer, right-outer }
       * </pre>
       *
       * <code>optional string type = 6;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object genericJoinCondition_ = "";
      /**
       * <pre>
       * A string representaion of a boolean expression that represents the join
       * condition. Note: We assume an equi-join if this field is not set.
       * TODO(Akshay): Revisit.
       * </pre>
       *
       * <code>optional string generic_join_condition = 7;</code>
       * @return Whether the genericJoinCondition field is set.
       */
      public boolean hasGenericJoinCondition() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * A string representaion of a boolean expression that represents the join
       * condition. Note: We assume an equi-join if this field is not set.
       * TODO(Akshay): Revisit.
       * </pre>
       *
       * <code>optional string generic_join_condition = 7;</code>
       * @return The genericJoinCondition.
       */
      public java.lang.String getGenericJoinCondition() {
        java.lang.Object ref = genericJoinCondition_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            genericJoinCondition_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A string representaion of a boolean expression that represents the join
       * condition. Note: We assume an equi-join if this field is not set.
       * TODO(Akshay): Revisit.
       * </pre>
       *
       * <code>optional string generic_join_condition = 7;</code>
       * @return The bytes for genericJoinCondition.
       */
      public com.google.protobuf.ByteString
          getGenericJoinConditionBytes() {
        java.lang.Object ref = genericJoinCondition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          genericJoinCondition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A string representaion of a boolean expression that represents the join
       * condition. Note: We assume an equi-join if this field is not set.
       * TODO(Akshay): Revisit.
       * </pre>
       *
       * <code>optional string generic_join_condition = 7;</code>
       * @param value The genericJoinCondition to set.
       * @return This builder for chaining.
       */
      public Builder setGenericJoinCondition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        genericJoinCondition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A string representaion of a boolean expression that represents the join
       * condition. Note: We assume an equi-join if this field is not set.
       * TODO(Akshay): Revisit.
       * </pre>
       *
       * <code>optional string generic_join_condition = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearGenericJoinCondition() {
        bitField0_ = (bitField0_ & ~0x00000040);
        genericJoinCondition_ = getDefaultInstance().getGenericJoinCondition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A string representaion of a boolean expression that represents the join
       * condition. Note: We assume an equi-join if this field is not set.
       * TODO(Akshay): Revisit.
       * </pre>
       *
       * <code>optional string generic_join_condition = 7;</code>
       * @param value The bytes for genericJoinCondition to set.
       * @return This builder for chaining.
       */
      public Builder setGenericJoinConditionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        genericJoinCondition_ = value;
        onChanged();
        return this;
      }

      private boolean isOneToOne_ ;
      /**
       * <code>optional bool is_one_to_one = 8;</code>
       * @return Whether the isOneToOne field is set.
       */
      @java.lang.Override
      public boolean hasIsOneToOne() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional bool is_one_to_one = 8;</code>
       * @return The isOneToOne.
       */
      @java.lang.Override
      public boolean getIsOneToOne() {
        return isOneToOne_;
      }
      /**
       * <code>optional bool is_one_to_one = 8;</code>
       * @param value The isOneToOne to set.
       * @return This builder for chaining.
       */
      public Builder setIsOneToOne(boolean value) {
        bitField0_ |= 0x00000080;
        isOneToOne_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_one_to_one = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsOneToOne() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isOneToOne_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:JoinEDocProto)
    }

    // @@protoc_insertion_point(class_scope:JoinEDocProto)
    private static final EDoc.JoinEDocProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.JoinEDocProto();
    }

    public static EDoc.JoinEDocProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<JoinEDocProto>
        PARSER = new com.google.protobuf.AbstractParser<JoinEDocProto>() {
      @java.lang.Override
      public JoinEDocProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JoinEDocProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<JoinEDocProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JoinEDocProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.JoinEDocProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogicalSchemaProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogicalSchemaProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .LogicalTableEDocProto tables = 1;</code>
     */
    java.util.List<EDoc.LogicalTableEDocProto> 
        getTablesList();
    /**
     * <code>repeated .LogicalTableEDocProto tables = 1;</code>
     */
    EDoc.LogicalTableEDocProto getTables(int index);
    /**
     * <code>repeated .LogicalTableEDocProto tables = 1;</code>
     */
    int getTablesCount();
    /**
     * <code>repeated .LogicalTableEDocProto tables = 1;</code>
     */
    java.util.List<? extends EDoc.LogicalTableEDocProtoOrBuilder> 
        getTablesOrBuilderList();
    /**
     * <code>repeated .LogicalTableEDocProto tables = 1;</code>
     */
    EDoc.LogicalTableEDocProtoOrBuilder getTablesOrBuilder(
        int index);

    /**
     * <code>repeated .JoinEDocProto joins = 2;</code>
     */
    java.util.List<EDoc.JoinEDocProto> 
        getJoinsList();
    /**
     * <code>repeated .JoinEDocProto joins = 2;</code>
     */
    EDoc.JoinEDocProto getJoins(int index);
    /**
     * <code>repeated .JoinEDocProto joins = 2;</code>
     */
    int getJoinsCount();
    /**
     * <code>repeated .JoinEDocProto joins = 2;</code>
     */
    java.util.List<? extends EDoc.JoinEDocProtoOrBuilder> 
        getJoinsOrBuilderList();
    /**
     * <code>repeated .JoinEDocProto joins = 2;</code>
     */
    EDoc.JoinEDocProtoOrBuilder getJoinsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * This message defines the edoc representation of logical schema.
   * </pre>
   *
   * Protobuf type {@code LogicalSchemaProto}
   */
  public static final class LogicalSchemaProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:LogicalSchemaProto)
      LogicalSchemaProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogicalSchemaProto.newBuilder() to construct.
    private LogicalSchemaProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogicalSchemaProto() {
      tables_ = java.util.Collections.emptyList();
      joins_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogicalSchemaProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LogicalSchemaProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tables_ = new java.util.ArrayList<EDoc.LogicalTableEDocProto>();
                mutable_bitField0_ |= 0x00000001;
              }
              tables_.add(
                  input.readMessage(EDoc.LogicalTableEDocProto.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                joins_ = new java.util.ArrayList<EDoc.JoinEDocProto>();
                mutable_bitField0_ |= 0x00000002;
              }
              joins_.add(
                  input.readMessage(EDoc.JoinEDocProto.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tables_ = java.util.Collections.unmodifiableList(tables_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          joins_ = java.util.Collections.unmodifiableList(joins_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_LogicalSchemaProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_LogicalSchemaProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.LogicalSchemaProto.class, EDoc.LogicalSchemaProto.Builder.class);
    }

    public static final int TABLES_FIELD_NUMBER = 1;
    private java.util.List<EDoc.LogicalTableEDocProto> tables_;
    /**
     * <code>repeated .LogicalTableEDocProto tables = 1;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.LogicalTableEDocProto> getTablesList() {
      return tables_;
    }
    /**
     * <code>repeated .LogicalTableEDocProto tables = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.LogicalTableEDocProtoOrBuilder> 
        getTablesOrBuilderList() {
      return tables_;
    }
    /**
     * <code>repeated .LogicalTableEDocProto tables = 1;</code>
     */
    @java.lang.Override
    public int getTablesCount() {
      return tables_.size();
    }
    /**
     * <code>repeated .LogicalTableEDocProto tables = 1;</code>
     */
    @java.lang.Override
    public EDoc.LogicalTableEDocProto getTables(int index) {
      return tables_.get(index);
    }
    /**
     * <code>repeated .LogicalTableEDocProto tables = 1;</code>
     */
    @java.lang.Override
    public EDoc.LogicalTableEDocProtoOrBuilder getTablesOrBuilder(
        int index) {
      return tables_.get(index);
    }

    public static final int JOINS_FIELD_NUMBER = 2;
    private java.util.List<EDoc.JoinEDocProto> joins_;
    /**
     * <code>repeated .JoinEDocProto joins = 2;</code>
     */
    @java.lang.Override
    public java.util.List<EDoc.JoinEDocProto> getJoinsList() {
      return joins_;
    }
    /**
     * <code>repeated .JoinEDocProto joins = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends EDoc.JoinEDocProtoOrBuilder> 
        getJoinsOrBuilderList() {
      return joins_;
    }
    /**
     * <code>repeated .JoinEDocProto joins = 2;</code>
     */
    @java.lang.Override
    public int getJoinsCount() {
      return joins_.size();
    }
    /**
     * <code>repeated .JoinEDocProto joins = 2;</code>
     */
    @java.lang.Override
    public EDoc.JoinEDocProto getJoins(int index) {
      return joins_.get(index);
    }
    /**
     * <code>repeated .JoinEDocProto joins = 2;</code>
     */
    @java.lang.Override
    public EDoc.JoinEDocProtoOrBuilder getJoinsOrBuilder(
        int index) {
      return joins_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < tables_.size(); i++) {
        output.writeMessage(1, tables_.get(i));
      }
      for (int i = 0; i < joins_.size(); i++) {
        output.writeMessage(2, joins_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tables_.get(i));
      }
      for (int i = 0; i < joins_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, joins_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.LogicalSchemaProto)) {
        return super.equals(obj);
      }
      EDoc.LogicalSchemaProto other = (EDoc.LogicalSchemaProto) obj;

      if (!getTablesList()
          .equals(other.getTablesList())) return false;
      if (!getJoinsList()
          .equals(other.getJoinsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTablesCount() > 0) {
        hash = (37 * hash) + TABLES_FIELD_NUMBER;
        hash = (53 * hash) + getTablesList().hashCode();
      }
      if (getJoinsCount() > 0) {
        hash = (37 * hash) + JOINS_FIELD_NUMBER;
        hash = (53 * hash) + getJoinsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.LogicalSchemaProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.LogicalSchemaProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.LogicalSchemaProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.LogicalSchemaProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.LogicalSchemaProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.LogicalSchemaProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.LogicalSchemaProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.LogicalSchemaProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.LogicalSchemaProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.LogicalSchemaProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.LogicalSchemaProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.LogicalSchemaProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.LogicalSchemaProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This message defines the edoc representation of logical schema.
     * </pre>
     *
     * Protobuf type {@code LogicalSchemaProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogicalSchemaProto)
        EDoc.LogicalSchemaProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_LogicalSchemaProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_LogicalSchemaProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.LogicalSchemaProto.class, EDoc.LogicalSchemaProto.Builder.class);
      }

      // Construct using EDoc.LogicalSchemaProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTablesFieldBuilder();
          getJoinsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          tablesBuilder_.clear();
        }
        if (joinsBuilder_ == null) {
          joins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          joinsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_LogicalSchemaProto_descriptor;
      }

      @java.lang.Override
      public EDoc.LogicalSchemaProto getDefaultInstanceForType() {
        return EDoc.LogicalSchemaProto.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.LogicalSchemaProto build() {
        EDoc.LogicalSchemaProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.LogicalSchemaProto buildPartial() {
        EDoc.LogicalSchemaProto result = new EDoc.LogicalSchemaProto(this);
        int from_bitField0_ = bitField0_;
        if (tablesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            tables_ = java.util.Collections.unmodifiableList(tables_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.tables_ = tables_;
        } else {
          result.tables_ = tablesBuilder_.build();
        }
        if (joinsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            joins_ = java.util.Collections.unmodifiableList(joins_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.joins_ = joins_;
        } else {
          result.joins_ = joinsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.LogicalSchemaProto) {
          return mergeFrom((EDoc.LogicalSchemaProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.LogicalSchemaProto other) {
        if (other == EDoc.LogicalSchemaProto.getDefaultInstance()) return this;
        if (tablesBuilder_ == null) {
          if (!other.tables_.isEmpty()) {
            if (tables_.isEmpty()) {
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTablesIsMutable();
              tables_.addAll(other.tables_);
            }
            onChanged();
          }
        } else {
          if (!other.tables_.isEmpty()) {
            if (tablesBuilder_.isEmpty()) {
              tablesBuilder_.dispose();
              tablesBuilder_ = null;
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000001);
              tablesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTablesFieldBuilder() : null;
            } else {
              tablesBuilder_.addAllMessages(other.tables_);
            }
          }
        }
        if (joinsBuilder_ == null) {
          if (!other.joins_.isEmpty()) {
            if (joins_.isEmpty()) {
              joins_ = other.joins_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureJoinsIsMutable();
              joins_.addAll(other.joins_);
            }
            onChanged();
          }
        } else {
          if (!other.joins_.isEmpty()) {
            if (joinsBuilder_.isEmpty()) {
              joinsBuilder_.dispose();
              joinsBuilder_ = null;
              joins_ = other.joins_;
              bitField0_ = (bitField0_ & ~0x00000002);
              joinsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getJoinsFieldBuilder() : null;
            } else {
              joinsBuilder_.addAllMessages(other.joins_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.LogicalSchemaProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.LogicalSchemaProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<EDoc.LogicalTableEDocProto> tables_ =
        java.util.Collections.emptyList();
      private void ensureTablesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tables_ = new java.util.ArrayList<EDoc.LogicalTableEDocProto>(tables_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.LogicalTableEDocProto, EDoc.LogicalTableEDocProto.Builder, EDoc.LogicalTableEDocProtoOrBuilder> tablesBuilder_;

      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public java.util.List<EDoc.LogicalTableEDocProto> getTablesList() {
        if (tablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tables_);
        } else {
          return tablesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public int getTablesCount() {
        if (tablesBuilder_ == null) {
          return tables_.size();
        } else {
          return tablesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public EDoc.LogicalTableEDocProto getTables(int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);
        } else {
          return tablesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public Builder setTables(
          int index, EDoc.LogicalTableEDocProto value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.set(index, value);
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public Builder setTables(
          int index, EDoc.LogicalTableEDocProto.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.set(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public Builder addTables(EDoc.LogicalTableEDocProto value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public Builder addTables(
          int index, EDoc.LogicalTableEDocProto value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(index, value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public Builder addTables(
          EDoc.LogicalTableEDocProto.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public Builder addTables(
          int index, EDoc.LogicalTableEDocProto.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public Builder addAllTables(
          java.lang.Iterable<? extends EDoc.LogicalTableEDocProto> values) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tables_);
          onChanged();
        } else {
          tablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public Builder clearTables() {
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          tablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public Builder removeTables(int index) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.remove(index);
          onChanged();
        } else {
          tablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public EDoc.LogicalTableEDocProto.Builder getTablesBuilder(
          int index) {
        return getTablesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public EDoc.LogicalTableEDocProtoOrBuilder getTablesOrBuilder(
          int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);  } else {
          return tablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public java.util.List<? extends EDoc.LogicalTableEDocProtoOrBuilder> 
           getTablesOrBuilderList() {
        if (tablesBuilder_ != null) {
          return tablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tables_);
        }
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public EDoc.LogicalTableEDocProto.Builder addTablesBuilder() {
        return getTablesFieldBuilder().addBuilder(
            EDoc.LogicalTableEDocProto.getDefaultInstance());
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public EDoc.LogicalTableEDocProto.Builder addTablesBuilder(
          int index) {
        return getTablesFieldBuilder().addBuilder(
            index, EDoc.LogicalTableEDocProto.getDefaultInstance());
      }
      /**
       * <code>repeated .LogicalTableEDocProto tables = 1;</code>
       */
      public java.util.List<EDoc.LogicalTableEDocProto.Builder> 
           getTablesBuilderList() {
        return getTablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.LogicalTableEDocProto, EDoc.LogicalTableEDocProto.Builder, EDoc.LogicalTableEDocProtoOrBuilder> 
          getTablesFieldBuilder() {
        if (tablesBuilder_ == null) {
          tablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.LogicalTableEDocProto, EDoc.LogicalTableEDocProto.Builder, EDoc.LogicalTableEDocProtoOrBuilder>(
                  tables_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          tables_ = null;
        }
        return tablesBuilder_;
      }

      private java.util.List<EDoc.JoinEDocProto> joins_ =
        java.util.Collections.emptyList();
      private void ensureJoinsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          joins_ = new java.util.ArrayList<EDoc.JoinEDocProto>(joins_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.JoinEDocProto, EDoc.JoinEDocProto.Builder, EDoc.JoinEDocProtoOrBuilder> joinsBuilder_;

      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public java.util.List<EDoc.JoinEDocProto> getJoinsList() {
        if (joinsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(joins_);
        } else {
          return joinsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public int getJoinsCount() {
        if (joinsBuilder_ == null) {
          return joins_.size();
        } else {
          return joinsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public EDoc.JoinEDocProto getJoins(int index) {
        if (joinsBuilder_ == null) {
          return joins_.get(index);
        } else {
          return joinsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public Builder setJoins(
          int index, EDoc.JoinEDocProto value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.set(index, value);
          onChanged();
        } else {
          joinsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public Builder setJoins(
          int index, EDoc.JoinEDocProto.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.set(index, builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public Builder addJoins(EDoc.JoinEDocProto value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.add(value);
          onChanged();
        } else {
          joinsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public Builder addJoins(
          int index, EDoc.JoinEDocProto value) {
        if (joinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJoinsIsMutable();
          joins_.add(index, value);
          onChanged();
        } else {
          joinsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public Builder addJoins(
          EDoc.JoinEDocProto.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.add(builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public Builder addJoins(
          int index, EDoc.JoinEDocProto.Builder builderForValue) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.add(index, builderForValue.build());
          onChanged();
        } else {
          joinsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public Builder addAllJoins(
          java.lang.Iterable<? extends EDoc.JoinEDocProto> values) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, joins_);
          onChanged();
        } else {
          joinsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public Builder clearJoins() {
        if (joinsBuilder_ == null) {
          joins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          joinsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public Builder removeJoins(int index) {
        if (joinsBuilder_ == null) {
          ensureJoinsIsMutable();
          joins_.remove(index);
          onChanged();
        } else {
          joinsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public EDoc.JoinEDocProto.Builder getJoinsBuilder(
          int index) {
        return getJoinsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public EDoc.JoinEDocProtoOrBuilder getJoinsOrBuilder(
          int index) {
        if (joinsBuilder_ == null) {
          return joins_.get(index);  } else {
          return joinsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public java.util.List<? extends EDoc.JoinEDocProtoOrBuilder> 
           getJoinsOrBuilderList() {
        if (joinsBuilder_ != null) {
          return joinsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(joins_);
        }
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public EDoc.JoinEDocProto.Builder addJoinsBuilder() {
        return getJoinsFieldBuilder().addBuilder(
            EDoc.JoinEDocProto.getDefaultInstance());
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public EDoc.JoinEDocProto.Builder addJoinsBuilder(
          int index) {
        return getJoinsFieldBuilder().addBuilder(
            index, EDoc.JoinEDocProto.getDefaultInstance());
      }
      /**
       * <code>repeated .JoinEDocProto joins = 2;</code>
       */
      public java.util.List<EDoc.JoinEDocProto.Builder> 
           getJoinsBuilderList() {
        return getJoinsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          EDoc.JoinEDocProto, EDoc.JoinEDocProto.Builder, EDoc.JoinEDocProtoOrBuilder> 
          getJoinsFieldBuilder() {
        if (joinsBuilder_ == null) {
          joinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              EDoc.JoinEDocProto, EDoc.JoinEDocProto.Builder, EDoc.JoinEDocProtoOrBuilder>(
                  joins_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          joins_ = null;
        }
        return joinsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:LogicalSchemaProto)
    }

    // @@protoc_insertion_point(class_scope:LogicalSchemaProto)
    private static final EDoc.LogicalSchemaProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.LogicalSchemaProto();
    }

    public static EDoc.LogicalSchemaProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LogicalSchemaProto>
        PARSER = new com.google.protobuf.AbstractParser<LogicalSchemaProto>() {
      @java.lang.Override
      public LogicalSchemaProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogicalSchemaProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogicalSchemaProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogicalSchemaProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.LogicalSchemaProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ObjectPermissionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ObjectPermissions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * There is a provision in system to just share a column of a base table rather
     * than sharing complete table. If a particular column is being shared, we will
     * have column name followed by the permissions.
     * </pre>
     *
     * <code>repeated string columns = 1;</code>
     * @return A list containing the columns.
     */
    java.util.List<java.lang.String>
        getColumnsList();
    /**
     * <pre>
     * There is a provision in system to just share a column of a base table rather
     * than sharing complete table. If a particular column is being shared, we will
     * have column name followed by the permissions.
     * </pre>
     *
     * <code>repeated string columns = 1;</code>
     * @return The count of columns.
     */
    int getColumnsCount();
    /**
     * <pre>
     * There is a provision in system to just share a column of a base table rather
     * than sharing complete table. If a particular column is being shared, we will
     * have column name followed by the permissions.
     * </pre>
     *
     * <code>repeated string columns = 1;</code>
     * @param index The index of the element to return.
     * @return The columns at the given index.
     */
    java.lang.String getColumns(int index);
    /**
     * <pre>
     * There is a provision in system to just share a column of a base table rather
     * than sharing complete table. If a particular column is being shared, we will
     * have column name followed by the permissions.
     * </pre>
     *
     * <code>repeated string columns = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the columns at the given index.
     */
    com.google.protobuf.ByteString
        getColumnsBytes(int index);

    /**
     * <code>optional string access_type = 2 [(.Annotation.allowed_values_key) = "edoc.access_type"];</code>
     * @return Whether the accessType field is set.
     */
    boolean hasAccessType();
    /**
     * <code>optional string access_type = 2 [(.Annotation.allowed_values_key) = "edoc.access_type"];</code>
     * @return The accessType.
     */
    java.lang.String getAccessType();
    /**
     * <code>optional string access_type = 2 [(.Annotation.allowed_values_key) = "edoc.access_type"];</code>
     * @return The bytes for accessType.
     */
    com.google.protobuf.ByteString
        getAccessTypeBytes();

    /**
     * <code>repeated string users = 3;</code>
     * @return A list containing the users.
     */
    java.util.List<java.lang.String>
        getUsersList();
    /**
     * <code>repeated string users = 3;</code>
     * @return The count of users.
     */
    int getUsersCount();
    /**
     * <code>repeated string users = 3;</code>
     * @param index The index of the element to return.
     * @return The users at the given index.
     */
    java.lang.String getUsers(int index);
    /**
     * <code>repeated string users = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the users at the given index.
     */
    com.google.protobuf.ByteString
        getUsersBytes(int index);

    /**
     * <code>repeated string user_groups = 4;</code>
     * @return A list containing the userGroups.
     */
    java.util.List<java.lang.String>
        getUserGroupsList();
    /**
     * <code>repeated string user_groups = 4;</code>
     * @return The count of userGroups.
     */
    int getUserGroupsCount();
    /**
     * <code>repeated string user_groups = 4;</code>
     * @param index The index of the element to return.
     * @return The userGroups at the given index.
     */
    java.lang.String getUserGroups(int index);
    /**
     * <code>repeated string user_groups = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the userGroups at the given index.
     */
    com.google.protobuf.ByteString
        getUserGroupsBytes(int index);
  }
  /**
   * <pre>
   * This message defines the edoc representation of logical schema.
   * </pre>
   *
   * Protobuf type {@code ObjectPermissions}
   */
  public static final class ObjectPermissions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ObjectPermissions)
      ObjectPermissionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ObjectPermissions.newBuilder() to construct.
    private ObjectPermissions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ObjectPermissions() {
      columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      accessType_ = "";
      users_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      userGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ObjectPermissions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ObjectPermissions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                columns_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              columns_.add(bs);
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              accessType_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                users_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              users_.add(bs);
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                userGroups_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              userGroups_.add(bs);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          columns_ = columns_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          users_ = users_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          userGroups_ = userGroups_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EDoc.internal_static_ObjectPermissions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EDoc.internal_static_ObjectPermissions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EDoc.ObjectPermissions.class, EDoc.ObjectPermissions.Builder.class);
    }

    private int bitField0_;
    public static final int COLUMNS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList columns_;
    /**
     * <pre>
     * There is a provision in system to just share a column of a base table rather
     * than sharing complete table. If a particular column is being shared, we will
     * have column name followed by the permissions.
     * </pre>
     *
     * <code>repeated string columns = 1;</code>
     * @return A list containing the columns.
     */
    public com.google.protobuf.ProtocolStringList
        getColumnsList() {
      return columns_;
    }
    /**
     * <pre>
     * There is a provision in system to just share a column of a base table rather
     * than sharing complete table. If a particular column is being shared, we will
     * have column name followed by the permissions.
     * </pre>
     *
     * <code>repeated string columns = 1;</code>
     * @return The count of columns.
     */
    public int getColumnsCount() {
      return columns_.size();
    }
    /**
     * <pre>
     * There is a provision in system to just share a column of a base table rather
     * than sharing complete table. If a particular column is being shared, we will
     * have column name followed by the permissions.
     * </pre>
     *
     * <code>repeated string columns = 1;</code>
     * @param index The index of the element to return.
     * @return The columns at the given index.
     */
    public java.lang.String getColumns(int index) {
      return columns_.get(index);
    }
    /**
     * <pre>
     * There is a provision in system to just share a column of a base table rather
     * than sharing complete table. If a particular column is being shared, we will
     * have column name followed by the permissions.
     * </pre>
     *
     * <code>repeated string columns = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the columns at the given index.
     */
    public com.google.protobuf.ByteString
        getColumnsBytes(int index) {
      return columns_.getByteString(index);
    }

    public static final int ACCESS_TYPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object accessType_;
    /**
     * <code>optional string access_type = 2 [(.Annotation.allowed_values_key) = "edoc.access_type"];</code>
     * @return Whether the accessType field is set.
     */
    @java.lang.Override
    public boolean hasAccessType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string access_type = 2 [(.Annotation.allowed_values_key) = "edoc.access_type"];</code>
     * @return The accessType.
     */
    @java.lang.Override
    public java.lang.String getAccessType() {
      java.lang.Object ref = accessType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          accessType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string access_type = 2 [(.Annotation.allowed_values_key) = "edoc.access_type"];</code>
     * @return The bytes for accessType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAccessTypeBytes() {
      java.lang.Object ref = accessType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        accessType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USERS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList users_;
    /**
     * <code>repeated string users = 3;</code>
     * @return A list containing the users.
     */
    public com.google.protobuf.ProtocolStringList
        getUsersList() {
      return users_;
    }
    /**
     * <code>repeated string users = 3;</code>
     * @return The count of users.
     */
    public int getUsersCount() {
      return users_.size();
    }
    /**
     * <code>repeated string users = 3;</code>
     * @param index The index of the element to return.
     * @return The users at the given index.
     */
    public java.lang.String getUsers(int index) {
      return users_.get(index);
    }
    /**
     * <code>repeated string users = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the users at the given index.
     */
    public com.google.protobuf.ByteString
        getUsersBytes(int index) {
      return users_.getByteString(index);
    }

    public static final int USER_GROUPS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList userGroups_;
    /**
     * <code>repeated string user_groups = 4;</code>
     * @return A list containing the userGroups.
     */
    public com.google.protobuf.ProtocolStringList
        getUserGroupsList() {
      return userGroups_;
    }
    /**
     * <code>repeated string user_groups = 4;</code>
     * @return The count of userGroups.
     */
    public int getUserGroupsCount() {
      return userGroups_.size();
    }
    /**
     * <code>repeated string user_groups = 4;</code>
     * @param index The index of the element to return.
     * @return The userGroups at the given index.
     */
    public java.lang.String getUserGroups(int index) {
      return userGroups_.get(index);
    }
    /**
     * <code>repeated string user_groups = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the userGroups at the given index.
     */
    public com.google.protobuf.ByteString
        getUserGroupsBytes(int index) {
      return userGroups_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < columns_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, columns_.getRaw(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, accessType_);
      }
      for (int i = 0; i < users_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, users_.getRaw(i));
      }
      for (int i = 0; i < userGroups_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, userGroups_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < columns_.size(); i++) {
          dataSize += computeStringSizeNoTag(columns_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getColumnsList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, accessType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < users_.size(); i++) {
          dataSize += computeStringSizeNoTag(users_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getUsersList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userGroups_.size(); i++) {
          dataSize += computeStringSizeNoTag(userGroups_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getUserGroupsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EDoc.ObjectPermissions)) {
        return super.equals(obj);
      }
      EDoc.ObjectPermissions other = (EDoc.ObjectPermissions) obj;

      if (!getColumnsList()
          .equals(other.getColumnsList())) return false;
      if (hasAccessType() != other.hasAccessType()) return false;
      if (hasAccessType()) {
        if (!getAccessType()
            .equals(other.getAccessType())) return false;
      }
      if (!getUsersList()
          .equals(other.getUsersList())) return false;
      if (!getUserGroupsList()
          .equals(other.getUserGroupsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getColumnsCount() > 0) {
        hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getColumnsList().hashCode();
      }
      if (hasAccessType()) {
        hash = (37 * hash) + ACCESS_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getAccessType().hashCode();
      }
      if (getUsersCount() > 0) {
        hash = (37 * hash) + USERS_FIELD_NUMBER;
        hash = (53 * hash) + getUsersList().hashCode();
      }
      if (getUserGroupsCount() > 0) {
        hash = (37 * hash) + USER_GROUPS_FIELD_NUMBER;
        hash = (53 * hash) + getUserGroupsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EDoc.ObjectPermissions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ObjectPermissions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ObjectPermissions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ObjectPermissions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ObjectPermissions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EDoc.ObjectPermissions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EDoc.ObjectPermissions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.ObjectPermissions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.ObjectPermissions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EDoc.ObjectPermissions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EDoc.ObjectPermissions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EDoc.ObjectPermissions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EDoc.ObjectPermissions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This message defines the edoc representation of logical schema.
     * </pre>
     *
     * Protobuf type {@code ObjectPermissions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ObjectPermissions)
        EDoc.ObjectPermissionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return EDoc.internal_static_ObjectPermissions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return EDoc.internal_static_ObjectPermissions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EDoc.ObjectPermissions.class, EDoc.ObjectPermissions.Builder.class);
      }

      // Construct using EDoc.ObjectPermissions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        accessType_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        users_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        userGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EDoc.internal_static_ObjectPermissions_descriptor;
      }

      @java.lang.Override
      public EDoc.ObjectPermissions getDefaultInstanceForType() {
        return EDoc.ObjectPermissions.getDefaultInstance();
      }

      @java.lang.Override
      public EDoc.ObjectPermissions build() {
        EDoc.ObjectPermissions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public EDoc.ObjectPermissions buildPartial() {
        EDoc.ObjectPermissions result = new EDoc.ObjectPermissions(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          columns_ = columns_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.columns_ = columns_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accessType_ = accessType_;
        if (((bitField0_ & 0x00000004) != 0)) {
          users_ = users_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.users_ = users_;
        if (((bitField0_ & 0x00000008) != 0)) {
          userGroups_ = userGroups_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.userGroups_ = userGroups_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EDoc.ObjectPermissions) {
          return mergeFrom((EDoc.ObjectPermissions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EDoc.ObjectPermissions other) {
        if (other == EDoc.ObjectPermissions.getDefaultInstance()) return this;
        if (!other.columns_.isEmpty()) {
          if (columns_.isEmpty()) {
            columns_ = other.columns_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureColumnsIsMutable();
            columns_.addAll(other.columns_);
          }
          onChanged();
        }
        if (other.hasAccessType()) {
          bitField0_ |= 0x00000002;
          accessType_ = other.accessType_;
          onChanged();
        }
        if (!other.users_.isEmpty()) {
          if (users_.isEmpty()) {
            users_ = other.users_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureUsersIsMutable();
            users_.addAll(other.users_);
          }
          onChanged();
        }
        if (!other.userGroups_.isEmpty()) {
          if (userGroups_.isEmpty()) {
            userGroups_ = other.userGroups_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureUserGroupsIsMutable();
            userGroups_.addAll(other.userGroups_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EDoc.ObjectPermissions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EDoc.ObjectPermissions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureColumnsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          columns_ = new com.google.protobuf.LazyStringArrayList(columns_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * There is a provision in system to just share a column of a base table rather
       * than sharing complete table. If a particular column is being shared, we will
       * have column name followed by the permissions.
       * </pre>
       *
       * <code>repeated string columns = 1;</code>
       * @return A list containing the columns.
       */
      public com.google.protobuf.ProtocolStringList
          getColumnsList() {
        return columns_.getUnmodifiableView();
      }
      /**
       * <pre>
       * There is a provision in system to just share a column of a base table rather
       * than sharing complete table. If a particular column is being shared, we will
       * have column name followed by the permissions.
       * </pre>
       *
       * <code>repeated string columns = 1;</code>
       * @return The count of columns.
       */
      public int getColumnsCount() {
        return columns_.size();
      }
      /**
       * <pre>
       * There is a provision in system to just share a column of a base table rather
       * than sharing complete table. If a particular column is being shared, we will
       * have column name followed by the permissions.
       * </pre>
       *
       * <code>repeated string columns = 1;</code>
       * @param index The index of the element to return.
       * @return The columns at the given index.
       */
      public java.lang.String getColumns(int index) {
        return columns_.get(index);
      }
      /**
       * <pre>
       * There is a provision in system to just share a column of a base table rather
       * than sharing complete table. If a particular column is being shared, we will
       * have column name followed by the permissions.
       * </pre>
       *
       * <code>repeated string columns = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the columns at the given index.
       */
      public com.google.protobuf.ByteString
          getColumnsBytes(int index) {
        return columns_.getByteString(index);
      }
      /**
       * <pre>
       * There is a provision in system to just share a column of a base table rather
       * than sharing complete table. If a particular column is being shared, we will
       * have column name followed by the permissions.
       * </pre>
       *
       * <code>repeated string columns = 1;</code>
       * @param index The index to set the value at.
       * @param value The columns to set.
       * @return This builder for chaining.
       */
      public Builder setColumns(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnsIsMutable();
        columns_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * There is a provision in system to just share a column of a base table rather
       * than sharing complete table. If a particular column is being shared, we will
       * have column name followed by the permissions.
       * </pre>
       *
       * <code>repeated string columns = 1;</code>
       * @param value The columns to add.
       * @return This builder for chaining.
       */
      public Builder addColumns(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnsIsMutable();
        columns_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * There is a provision in system to just share a column of a base table rather
       * than sharing complete table. If a particular column is being shared, we will
       * have column name followed by the permissions.
       * </pre>
       *
       * <code>repeated string columns = 1;</code>
       * @param values The columns to add.
       * @return This builder for chaining.
       */
      public Builder addAllColumns(
          java.lang.Iterable<java.lang.String> values) {
        ensureColumnsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, columns_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * There is a provision in system to just share a column of a base table rather
       * than sharing complete table. If a particular column is being shared, we will
       * have column name followed by the permissions.
       * </pre>
       *
       * <code>repeated string columns = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearColumns() {
        columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * There is a provision in system to just share a column of a base table rather
       * than sharing complete table. If a particular column is being shared, we will
       * have column name followed by the permissions.
       * </pre>
       *
       * <code>repeated string columns = 1;</code>
       * @param value The bytes of the columns to add.
       * @return This builder for chaining.
       */
      public Builder addColumnsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnsIsMutable();
        columns_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object accessType_ = "";
      /**
       * <code>optional string access_type = 2 [(.Annotation.allowed_values_key) = "edoc.access_type"];</code>
       * @return Whether the accessType field is set.
       */
      public boolean hasAccessType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string access_type = 2 [(.Annotation.allowed_values_key) = "edoc.access_type"];</code>
       * @return The accessType.
       */
      public java.lang.String getAccessType() {
        java.lang.Object ref = accessType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            accessType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string access_type = 2 [(.Annotation.allowed_values_key) = "edoc.access_type"];</code>
       * @return The bytes for accessType.
       */
      public com.google.protobuf.ByteString
          getAccessTypeBytes() {
        java.lang.Object ref = accessType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          accessType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string access_type = 2 [(.Annotation.allowed_values_key) = "edoc.access_type"];</code>
       * @param value The accessType to set.
       * @return This builder for chaining.
       */
      public Builder setAccessType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        accessType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string access_type = 2 [(.Annotation.allowed_values_key) = "edoc.access_type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAccessType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accessType_ = getDefaultInstance().getAccessType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string access_type = 2 [(.Annotation.allowed_values_key) = "edoc.access_type"];</code>
       * @param value The bytes for accessType to set.
       * @return This builder for chaining.
       */
      public Builder setAccessTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        accessType_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList users_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureUsersIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          users_ = new com.google.protobuf.LazyStringArrayList(users_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string users = 3;</code>
       * @return A list containing the users.
       */
      public com.google.protobuf.ProtocolStringList
          getUsersList() {
        return users_.getUnmodifiableView();
      }
      /**
       * <code>repeated string users = 3;</code>
       * @return The count of users.
       */
      public int getUsersCount() {
        return users_.size();
      }
      /**
       * <code>repeated string users = 3;</code>
       * @param index The index of the element to return.
       * @return The users at the given index.
       */
      public java.lang.String getUsers(int index) {
        return users_.get(index);
      }
      /**
       * <code>repeated string users = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the users at the given index.
       */
      public com.google.protobuf.ByteString
          getUsersBytes(int index) {
        return users_.getByteString(index);
      }
      /**
       * <code>repeated string users = 3;</code>
       * @param index The index to set the value at.
       * @param value The users to set.
       * @return This builder for chaining.
       */
      public Builder setUsers(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUsersIsMutable();
        users_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string users = 3;</code>
       * @param value The users to add.
       * @return This builder for chaining.
       */
      public Builder addUsers(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUsersIsMutable();
        users_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string users = 3;</code>
       * @param values The users to add.
       * @return This builder for chaining.
       */
      public Builder addAllUsers(
          java.lang.Iterable<java.lang.String> values) {
        ensureUsersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, users_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string users = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUsers() {
        users_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string users = 3;</code>
       * @param value The bytes of the users to add.
       * @return This builder for chaining.
       */
      public Builder addUsersBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUsersIsMutable();
        users_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList userGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureUserGroupsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          userGroups_ = new com.google.protobuf.LazyStringArrayList(userGroups_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string user_groups = 4;</code>
       * @return A list containing the userGroups.
       */
      public com.google.protobuf.ProtocolStringList
          getUserGroupsList() {
        return userGroups_.getUnmodifiableView();
      }
      /**
       * <code>repeated string user_groups = 4;</code>
       * @return The count of userGroups.
       */
      public int getUserGroupsCount() {
        return userGroups_.size();
      }
      /**
       * <code>repeated string user_groups = 4;</code>
       * @param index The index of the element to return.
       * @return The userGroups at the given index.
       */
      public java.lang.String getUserGroups(int index) {
        return userGroups_.get(index);
      }
      /**
       * <code>repeated string user_groups = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the userGroups at the given index.
       */
      public com.google.protobuf.ByteString
          getUserGroupsBytes(int index) {
        return userGroups_.getByteString(index);
      }
      /**
       * <code>repeated string user_groups = 4;</code>
       * @param index The index to set the value at.
       * @param value The userGroups to set.
       * @return This builder for chaining.
       */
      public Builder setUserGroups(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserGroupsIsMutable();
        userGroups_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string user_groups = 4;</code>
       * @param value The userGroups to add.
       * @return This builder for chaining.
       */
      public Builder addUserGroups(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserGroupsIsMutable();
        userGroups_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string user_groups = 4;</code>
       * @param values The userGroups to add.
       * @return This builder for chaining.
       */
      public Builder addAllUserGroups(
          java.lang.Iterable<java.lang.String> values) {
        ensureUserGroupsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, userGroups_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string user_groups = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserGroups() {
        userGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string user_groups = 4;</code>
       * @param value The bytes of the userGroups to add.
       * @return This builder for chaining.
       */
      public Builder addUserGroupsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserGroupsIsMutable();
        userGroups_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ObjectPermissions)
    }

    // @@protoc_insertion_point(class_scope:ObjectPermissions)
    private static final EDoc.ObjectPermissions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EDoc.ObjectPermissions();
    }

    public static EDoc.ObjectPermissions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ObjectPermissions>
        PARSER = new com.google.protobuf.AbstractParser<ObjectPermissions>() {
      @java.lang.Override
      public ObjectPermissions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ObjectPermissions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ObjectPermissions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ObjectPermissions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public EDoc.ObjectPermissions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ColumnProperties_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ColumnProperties_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ColumnProperties_CurrencyFormat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ColumnProperties_CurrencyFormat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ColumnProperties_GeoConfigProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ColumnProperties_GeoConfigProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ColumnProperties_GeoConfigProto_SubRegion_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ColumnProperties_GeoConfigProto_SubRegion_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FormulaProperties_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FormulaProperties_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Formula_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Formula_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Filter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Filter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Join_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Join_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RelationEDocProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RelationEDocProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TablePath_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TablePath_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TablePath_JoinPath_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TablePath_JoinPath_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Identity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Identity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Token_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Token_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ObjectEDocProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ObjectEDocProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_WorksheetEDocProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_WorksheetEDocProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_WorksheetEDocProto_QueryProperties_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_WorksheetEDocProto_QueryProperties_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_WorksheetEDocProto_WorksheetColumn_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_WorksheetEDocProto_WorksheetColumn_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LessonPlanEDocProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LessonPlanEDocProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ViewEDocProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ViewEDocProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ViewEDocProto_ViewColumn_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ViewEDocProto_ViewColumn_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ConnectionDoc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ConnectionDoc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ConnectionDoc_TableDoc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ConnectionDoc_TableDoc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ConnectionDoc_TableDoc_ExternalTableMapping_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ConnectionDoc_TableDoc_ExternalTableMapping_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ConnectionDoc_TableDoc_ColumnDoc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ConnectionDoc_TableDoc_ColumnDoc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ConditionalFormattingProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ConditionalFormattingProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ConditionalFormattingProto_Range_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ConditionalFormattingProto_Range_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ConditionalFormattingProto_Rule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ConditionalFormattingProto_Rule_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TableVisualization_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TableVisualization_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TableVisualization_TableColumn_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TableVisualization_TableColumn_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ChartVisualization_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ChartVisualization_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ChartVisualization_ChartColumn_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ChartVisualization_ChartColumn_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ChartVisualization_AxisConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ChartVisualization_AxisConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_AnswerEDocProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_AnswerEDocProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_AnswerEDocProto_AnswerColumn_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_AnswerEDocProto_AnswerColumn_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PinnedVisualization_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PinnedVisualization_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PinboardLayout_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PinboardLayout_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PinboardLayout_Tile_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PinboardLayout_Tile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PinboardEDocProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PinboardEDocProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogicalTableEDocProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LogicalTableEDocProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogicalTableEDocProto_RlsRule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LogicalTableEDocProto_RlsRule_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogicalTableEDocProto_RlsRule_Rule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LogicalTableEDocProto_RlsRule_Rule_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogicalTableEDocProto_LogicalColumnEDocProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LogicalTableEDocProto_LogicalColumnEDocProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogicalTableEDocProto_DbColumnProperties_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LogicalTableEDocProto_DbColumnProperties_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_JoinEDocProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_JoinEDocProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_JoinEDocProto_ColumnPair_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_JoinEDocProto_ColumnPair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogicalSchemaProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LogicalSchemaProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ObjectPermissions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ObjectPermissions_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nedoc.proto\032\014common.proto\032\020annotation.p" +
      "roto\032\023number_format.proto\"\343\005\n\020ColumnProp" +
      "erties\022)\n\013column_type\030\001 \001(\tB\024\222\227\"\020edoc.co" +
      "lumn_type\022.\n\013aggregation\030\002 \001(\tB\031\222\227\"\025edoc" +
      ".aggregation_type\022\'\n\nindex_type\030\003 \001(\tB\023\222" +
      "\227\"\017edoc.index_type\022\031\n\016index_priority\030\004 \001" +
      "(\001:\0011\022\020\n\010synonyms\030\005 \003(\t\022 \n\030is_attributio" +
      "n_dimension\030\006 \001(\010\022\023\n\013is_additive\030\007 \001(\010\022\020" +
      "\n\010calendar\030\010 \001(\t\022\026\n\016format_pattern\030\t \001(\t" +
      "\0227\n\rcurrency_type\030\n \001(\0132 .ColumnProperti" +
      "es.CurrencyFormat\022\021\n\tis_hidden\030\013 \001(\010\0224\n\n" +
      "geo_config\030\014 \001(\0132 .ColumnProperties.GeoC" +
      "onfigProto\022\031\n\021spotiq_preference\030\r \001(\t\022\033\n" +
      "\023search_iq_preferred\030\016 \001(\010\032F\n\016CurrencyFo" +
      "rmat\022\022\n\nis_browser\030\001 \001(\010\022\016\n\006column\030\002 \001(\t" +
      "\022\020\n\010iso_code\030\003 \001(\t\032\272\001\n\016GeoConfigProto\022\020\n" +
      "\010latitude\030\001 \001(\010\022\021\n\tlongitude\030\002 \001(\010\022\017\n\007co" +
      "untry\030\003 \001(\010\022?\n\013region_name\030\004 \001(\0132*.Colum" +
      "nProperties.GeoConfigProto.SubRegion\0321\n\t" +
      "SubRegion\022\017\n\007country\030\001 \001(\t\022\023\n\013region_nam" +
      "e\030\002 \001(\t\"n\n\021FormulaProperties\022)\n\013column_t" +
      "ype\030\001 \001(\tB\024\222\227\"\020edoc.column_type\022.\n\013aggre" +
      "gation\030\003 \001(\tB\031\222\227\"\025edoc.aggregation_type\"" +
      "e\n\007Formula\022\n\n\002id\030\001 \001(\t\022\022\n\004name\030\002 \001(\tB\004\210\227" +
      "\"\001\022\022\n\004expr\030\003 \001(\tB\004\210\227\"\001\022&\n\nproperties\030\004 \001" +
      "(\0132\022.FormulaProperties\"]\n\006Filter\022\024\n\006colu" +
      "mn\030\001 \003(\tB\004\210\227\"\001\022\014\n\004oper\030\002 \001(\t\022\016\n\006values\030\003" +
      " \003(\t\022\037\n\027excluded_visualizations\030\004 \003(\t\"\243\001" +
      "\n\004Join\022\n\n\002id\030\001 \001(\t\022\022\n\004name\030\002 \001(\tB\004\210\227\"\001\022\024" +
      "\n\006source\030\003 \001(\tB\004\210\227\"\001\022\031\n\013destination\030\004 \001(" +
      "\tB\004\210\227\"\001\022\n\n\002on\030\005 \003(\t\022 \n\004type\030\006 \001(\tB\022\222\227\"\016e" +
      "doc.join_type\022\034\n\ris_one_to_one\030\007 \001(\010:\005fa" +
      "lse\"\242\001\n\021RelationEDocProto\022\014\n\004name\030\001 \001(\t\022" +
      "\023\n\013description\030\002 \001(\t\022\031\n\006source\030\003 \001(\0132\t.I" +
      "dentity\022\036\n\013destination\030\004 \001(\0132\t.Identity\022" +
      "\n\n\002on\030\005 \001(\t\022\014\n\004type\030\006 \001(\t\022\025\n\ris_one_to_o" +
      "ne\030\007 \001(\010\"\204\001\n\tTablePath\022\020\n\002id\030\001 \001(\tB\004\210\227\"\001" +
      "\022\023\n\005table\030\002 \001(\tB\004\210\227\"\001\022&\n\tjoin_path\030\003 \003(\013" +
      "2\023.TablePath.JoinPath\022\016\n\006column\030\004 \003(\t\032\030\n" +
      "\010JoinPath\022\014\n\004join\030\001 \003(\t\"1\n\010Identity\022\n\n\002i" +
      "d\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\013\n\003fqn\030\003 \001(\t\"!\n\005To" +
      "ken\022\n\n\002id\030\001 \001(\t\022\014\n\004text\030\002 \001(\t\"\240\002\n\017Object" +
      "EDocProto\022\014\n\004guid\030\001 \001(\t\022&\n\tworksheet\030\002 \001" +
      "(\0132\023.WorksheetEDocProto\022\034\n\004view\030\003 \001(\0132\016." +
      "ViewEDocProto\022 \n\006answer\030\004 \001(\0132\020.AnswerED" +
      "ocProto\022$\n\010pinboard\030\005 \001(\0132\022.PinboardEDoc" +
      "Proto\022%\n\005table\030\006 \001(\0132\026.LogicalTableEDocP" +
      "roto\022!\n\005joins\030\007 \003(\0132\022.RelationEDocProto\022" +
      "\'\n\013permissions\030\010 \003(\0132\022.ObjectPermissions" +
      "\"\305\005\n\022WorksheetEDocProto\022\022\n\004name\030\001 \001(\tB\004\210" +
      "\227\"\001\022\023\n\013description\030\002 \001(\t\022)\n\006tables\030\003 \003(\013" +
      "2\t.IdentityB\016\210\227\"\001\232\227\"\006id,fqn\022\034\n\005joins\030\004 \003" +
      "(\0132\005.JoinB\006\232\227\"\002id\022\'\n\013table_paths\030\005 \003(\0132\n" +
      ".TablePathB\006\232\227\"\002id\022\"\n\010formulas\030\006 \003(\0132\010.F" +
      "ormulaB\006\232\227\"\002id\022\030\n\007filters\030\007 \003(\0132\007.Filter" +
      "\022a\n\021worksheet_columns\030\010 \003(\0132#.WorksheetE" +
      "DocProto.WorksheetColumnB!\210\227\"\001\232\227\"\031name,c" +
      "olumn_id,formula_id\0227\n\nproperties\030\t \001(\0132" +
      "#.WorksheetEDocProto.QueryProperties\022&\n\n" +
      "joins_with\030\n \003(\0132\022.RelationEDocProto\022\027\n\017" +
      "generation_type\030\013 \001(\t\022*\n\014lesson_plans\030\014 " +
      "\003(\0132\024.LessonPlanEDocProto\032B\n\017QueryProper" +
      "ties\022\025\n\ris_bypass_rls\030\001 \001(\010\022\030\n\020join_prog" +
      "ressive\030\002 \001(\010\032\210\001\n\017WorksheetColumn\022\022\n\004nam" +
      "e\030\001 \001(\tB\004\210\227\"\001\022\023\n\013description\030\002 \001(\t\022\021\n\tco" +
      "lumn_id\030\003 \001(\t\022\022\n\nformula_id\030\004 \001(\t\022%\n\npro" +
      "perties\030\005 \001(\0132\021.ColumnProperties\"D\n\023Less" +
      "onPlanEDocProto\022\021\n\tlesson_id\030\001 \001(\005\022\032\n\022le" +
      "sson_plan_string\030\002 \001(\t\"\323\003\n\rViewEDocProto" +
      "\022\022\n\004name\030\001 \001(\tB\004\210\227\"\001\022\023\n\013description\030\002 \001(" +
      "\t\022)\n\006tables\030\003 \003(\0132\t.IdentityB\016\210\227\"\001\232\227\"\006id" +
      ",fqn\022\034\n\005joins\030\004 \003(\0132\005.JoinB\006\232\227\"\002id\022\'\n\013ta" +
      "ble_paths\030\005 \003(\0132\n.TablePathB\006\232\227\"\002id\022\"\n\010f" +
      "ormulas\030\006 \003(\0132\010.FormulaB\006\232\227\"\002id\022\024\n\014searc" +
      "h_query\030\007 \001(\t\022I\n\014view_columns\030\010 \003(\0132\031.Vi" +
      "ewEDocProto.ViewColumnB\030\232\227\"\024search_outpu" +
      "t_column\022&\n\njoins_with\030\t \003(\0132\022.RelationE" +
      "DocProto\032z\n\nViewColumn\022\014\n\004name\030\001 \001(\t\022\023\n\013" +
      "description\030\002 \001(\t\022\"\n\024search_output_colum" +
      "n\030\003 \001(\tB\004\210\227\"\001\022%\n\nproperties\030\004 \001(\0132\021.Colu" +
      "mnProperties\"\265\003\n\rConnectionDoc\022\014\n\004name\030\001" +
      " \001(\t\022\014\n\004type\030\002 \001(\t\022\033\n\023authentication_typ" +
      "e\030\003 \001(\t\022&\n\005table\030\005 \003(\0132\027.ConnectionDoc.T" +
      "ableDoc\032\302\002\n\010TableDoc\022\014\n\004name\030\001 \001(\t\022\n\n\002id" +
      "\030\002 \001(\t\022D\n\016external_table\030\003 \001(\0132,.Connect" +
      "ionDoc.TableDoc.ExternalTableMapping\0221\n\006" +
      "column\030\004 \003(\0132!.ConnectionDoc.TableDoc.Co" +
      "lumnDoc\032P\n\024ExternalTableMapping\022\017\n\007db_na" +
      "me\030\001 \001(\t\022\023\n\013schema_name\030\002 \001(\t\022\022\n\ntable_n" +
      "ame\030\003 \001(\t\032Q\n\tColumnDoc\022\014\n\004name\030\001 \001(\t\022\n\n\002" +
      "id\030\002 \001(\t\022\021\n\tdata_type\030\003 \001(\t\022\027\n\017external_" +
      "column\030\004 \001(\t\"\314\001\n\032ConditionalFormattingPr" +
      "oto\022.\n\004rule\030\001 \003(\0132 .ConditionalFormattin" +
      "gProto.Rule\032!\n\005Range\022\013\n\003min\030\001 \001(\001\022\013\n\003max" +
      "\030\002 \001(\001\032[\n\004Rule\0220\n\005range\030\001 \001(\0132!.Conditio" +
      "nalFormattingProto.Range\022\r\n\005color\030\002 \001(\t\022" +
      "\022\n\nplotAsBand\030\005 \001(\010\"\354\003\n\022TableVisualizati" +
      "on\022E\n\rtable_columns\030\001 \003(\0132\037.TableVisuali" +
      "zation.TableColumnB\r\232\227\"\tcolumn_id\022\032\n\022ord" +
      "ered_column_ids\030\002 \003(\t\022\031\n\021show_grid_summa" +
      "ry\030\003 \001(\010\022\031\n\021show_table_footer\030\004 \001(\010\022\031\n\021w" +
      "rap_table_header\030\005 \001(\010\022\024\n\014client_state\030\006" +
      " \001(\t\022\027\n\017client_state_v2\030\007 \001(\t\032\362\001\n\013TableC" +
      "olumn\022\027\n\tcolumn_id\030\001 \001(\tB\004\210\227\"\001\022;\n\026condit" +
      "ional_formatting\030\002 \001(\0132\033.ConditionalForm" +
      "attingProto\022\030\n\020wrap_column_text\030\004 \001(\010\022\033\n" +
      "\rshow_headline\030\006 \001(\010:\004true\022@\n\024headline_a" +
      "ggregation\030\007 \001(\tB\"\222\227\"\036edoc.headline_aggr" +
      "egation_type\022\024\n\014column_width\030\005 \001(\005\"\361\003\n\022C" +
      "hartVisualization\022%\n\004type\030\001 \001(\tB\027\210\227\"\001\222\227\"" +
      "\017edoc.chart_type\022E\n\rchart_columns\030\002 \003(\0132" +
      "\037.ChartVisualization.ChartColumnB\r\232\227\"\tco" +
      "lumn_id\0224\n\014axis_configs\030\003 \003(\0132\036.ChartVis" +
      "ualization.AxisConfig\022\024\n\014client_state\030\005 " +
      "\001(\t\022\027\n\017client_state_v2\030\006 \001(\t\022\030\n\006locked\030\004" +
      " \001(\010:\004trueB\002\030\001\032}\n\013ChartColumn\022\027\n\tcolumn_" +
      "id\030\001 \001(\tB\004\210\227\"\001\022;\n\026conditional_formatting" +
      "\030\002 \001(\0132\033.ConditionalFormattingProto\022\030\n\020s" +
      "how_data_labels\030\003 \001(\010\032o\n\nAxisConfig\022\t\n\001x" +
      "\030\001 \003(\t\022\t\n\001y\030\002 \003(\t\022\r\n\005color\030\003 \003(\t\022\014\n\004size" +
      "\030\004 \001(\t\022\020\n\010category\030\006 \003(\t\022\014\n\004sort\030\007 \003(\t\022\016" +
      "\n\006hidden\030\005 \003(\t\"\376\003\n\017AnswerEDocProto\022\022\n\004na" +
      "me\030\001 \001(\tB\004\210\227\"\001\022\023\n\013description\030\002 \001(\t\022)\n\006t" +
      "ables\030\003 \003(\0132\t.IdentityB\016\210\227\"\001\232\227\"\006id,fqn\022\034" +
      "\n\005joins\030\004 \003(\0132\005.JoinB\006\232\227\"\002id\022\'\n\013table_pa" +
      "ths\030\005 \003(\0132\n.TablePathB\006\232\227\"\002id\022\"\n\010formula" +
      "s\030\006 \003(\0132\010.FormulaB\006\232\227\"\002id\022\024\n\014search_quer" +
      "y\030\007 \001(\t\022B\n\016answer_columns\030\010 \003(\0132\035.Answer" +
      "EDocProto.AnswerColumnB\013\232\227\"\007id,name\022\"\n\005t" +
      "able\030\t \001(\0132\023.TableVisualization\022\"\n\005chart" +
      "\030\n \001(\0132\023.ChartVisualization\022+\n\014display_m" +
      "ode\030\013 \001(\tB\025\222\227\"\021edoc.display_mode\022\030\n\014clie" +
      "nt_state\030\014 \001(\tB\002\030\001\032C\n\014AnswerColumn\022\n\n\002id" +
      "\030\001 \001(\t\022\022\n\004name\030\002 \001(\tB\004\210\227\"\001\022\023\n\013custom_nam" +
      "e\030\003 \001(\t\"\202\001\n\023PinnedVisualization\022\n\n\002id\030\001 " +
      "\001(\t\022 \n\006answer\030\002 \001(\0132\020.AnswerEDocProto\022\037\n" +
      "\027display_headline_column\030\003 \001(\t\022\034\n\024generi" +
      "c_viz_sub_type\030\004 \001(\t\"\201\001\n\016PinboardLayout\022" +
      "#\n\005tiles\030\001 \003(\0132\024.PinboardLayout.Tile\032J\n\004" +
      "Tile\022\036\n\020visualization_id\030\001 \001(\tB\004\210\227\"\001\022\"\n\004" +
      "size\030\002 \001(\tB\024\222\227\"\020edoc.pb_viz_size\"\342\001\n\021Pin" +
      "boardEDocProto\022\022\n\004name\030\001 \001(\tB\004\210\227\"\001\022\023\n\013de" +
      "scription\030\002 \001(\t\022\031\n\006tables\030\003 \003(\0132\t.Identi" +
      "ty\0228\n\016visualizations\030\004 \003(\0132\024.PinnedVisua" +
      "lizationB\n\210\227\"\001\232\227\"\002id\022\030\n\007filters\030\005 \003(\0132\007." +
      "Filter\0225\n\006layout\030\006 \001(\0132\017.PinboardLayoutB" +
      "\024\232\227\"\020visualization_id\"\343\005\n\025LogicalTableED" +
      "ocProto\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001" +
      "(\t\022\n\n\002db\030\003 \001(\t\022\016\n\006schema\030\004 \001(\t\022\020\n\010db_tab" +
      "le\030\005 \001(\t\022\035\n\nconnection\030\006 \001(\0132\t.Identity\022" +
      ">\n\007columns\030\007 \003(\0132-.LogicalTableEDocProto" +
      ".LogicalColumnEDocProto\0221\n\trls_rules\030\010 \001" +
      "(\0132\036.LogicalTableEDocProto.RlsRule\022&\n\njo" +
      "ins_with\030\t \003(\0132\022.RelationEDocProto\032\317\001\n\007R" +
      "lsRule\022%\n\006tables\030\001 \003(\0132\t.IdentityB\n\232\227\"\006i" +
      "d,fqn\022\034\n\005joins\030\002 \003(\0132\005.JoinB\006\232\227\"\002id\022\'\n\013t" +
      "able_paths\030\003 \003(\0132\n.TablePathB\006\232\227\"\002id\0222\n\005" +
      "rules\030\004 \003(\0132#.LogicalTableEDocProto.RlsR" +
      "ule.Rule\032\"\n\004Rule\022\014\n\004name\030\001 \001(\t\022\014\n\004expr\030\002" +
      " \001(\t\032\303\001\n\026LogicalColumnEDocProto\022\014\n\004name\030" +
      "\001 \001(\t\022\023\n\013description\030\002 \001(\t\022\026\n\016db_column_" +
      "name\030\003 \001(\t\022%\n\nproperties\030\004 \001(\0132\021.ColumnP" +
      "roperties\022G\n\024db_column_properties\030\005 \001(\0132" +
      ").LogicalTableEDocProto.DbColumnProperti" +
      "es\032\'\n\022DbColumnProperties\022\021\n\tdata_type\030\001 " +
      "\001(\t\"\260\002\n\rJoinEDocProto\022\014\n\004name\030\001 \001(\t\022\023\n\013d" +
      "escription\030\002 \001(\t\022\037\n\014source_table\030\003 \001(\0132\t" +
      ".Identity\022$\n\021destination_table\030\004 \001(\0132\t.I" +
      "dentity\022/\n\014column_pairs\030\005 \003(\0132\031.JoinEDoc" +
      "Proto.ColumnPair\022\014\n\004type\030\006 \001(\t\022\036\n\026generi" +
      "c_join_condition\030\007 \001(\t\022\025\n\ris_one_to_one\030" +
      "\010 \001(\010\032?\n\nColumnPair\022\025\n\rsource_column\030\001 \001" +
      "(\t\022\032\n\022destination_column\030\002 \001(\t\"[\n\022Logica" +
      "lSchemaProto\022&\n\006tables\030\001 \003(\0132\026.LogicalTa" +
      "bleEDocProto\022\035\n\005joins\030\002 \003(\0132\016.JoinEDocPr" +
      "oto\"s\n\021ObjectPermissions\022\017\n\007columns\030\001 \003(" +
      "\t\022)\n\013access_type\030\002 \001(\tB\024\222\227\"\020edoc.access_" +
      "type\022\r\n\005users\030\003 \003(\t\022\023\n\013user_groups\030\004 \003(\t" +
      "B\006B\004EDoc"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Common.getDescriptor(),
          AnnotationOuterClass.getDescriptor(),
          NumberFormat.getDescriptor(),
        });
    internal_static_ColumnProperties_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ColumnProperties_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ColumnProperties_descriptor,
        new java.lang.String[] { "ColumnType", "Aggregation", "IndexType", "IndexPriority", "Synonyms", "IsAttributionDimension", "IsAdditive", "Calendar", "FormatPattern", "CurrencyType", "IsHidden", "GeoConfig", "SpotiqPreference", "SearchIqPreferred", });
    internal_static_ColumnProperties_CurrencyFormat_descriptor =
      internal_static_ColumnProperties_descriptor.getNestedTypes().get(0);
    internal_static_ColumnProperties_CurrencyFormat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ColumnProperties_CurrencyFormat_descriptor,
        new java.lang.String[] { "IsBrowser", "Column", "IsoCode", });
    internal_static_ColumnProperties_GeoConfigProto_descriptor =
      internal_static_ColumnProperties_descriptor.getNestedTypes().get(1);
    internal_static_ColumnProperties_GeoConfigProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ColumnProperties_GeoConfigProto_descriptor,
        new java.lang.String[] { "Latitude", "Longitude", "Country", "RegionName", });
    internal_static_ColumnProperties_GeoConfigProto_SubRegion_descriptor =
      internal_static_ColumnProperties_GeoConfigProto_descriptor.getNestedTypes().get(0);
    internal_static_ColumnProperties_GeoConfigProto_SubRegion_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ColumnProperties_GeoConfigProto_SubRegion_descriptor,
        new java.lang.String[] { "Country", "RegionName", });
    internal_static_FormulaProperties_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_FormulaProperties_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FormulaProperties_descriptor,
        new java.lang.String[] { "ColumnType", "Aggregation", });
    internal_static_Formula_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Formula_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Formula_descriptor,
        new java.lang.String[] { "Id", "Name", "Expr", "Properties", });
    internal_static_Filter_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Filter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Filter_descriptor,
        new java.lang.String[] { "Column", "Oper", "Values", "ExcludedVisualizations", });
    internal_static_Join_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Join_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Join_descriptor,
        new java.lang.String[] { "Id", "Name", "Source", "Destination", "On", "Type", "IsOneToOne", });
    internal_static_RelationEDocProto_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_RelationEDocProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RelationEDocProto_descriptor,
        new java.lang.String[] { "Name", "Description", "Source", "Destination", "On", "Type", "IsOneToOne", });
    internal_static_TablePath_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_TablePath_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TablePath_descriptor,
        new java.lang.String[] { "Id", "Table", "JoinPath", "Column", });
    internal_static_TablePath_JoinPath_descriptor =
      internal_static_TablePath_descriptor.getNestedTypes().get(0);
    internal_static_TablePath_JoinPath_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TablePath_JoinPath_descriptor,
        new java.lang.String[] { "Join", });
    internal_static_Identity_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_Identity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Identity_descriptor,
        new java.lang.String[] { "Id", "Name", "Fqn", });
    internal_static_Token_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_Token_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Token_descriptor,
        new java.lang.String[] { "Id", "Text", });
    internal_static_ObjectEDocProto_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_ObjectEDocProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ObjectEDocProto_descriptor,
        new java.lang.String[] { "Guid", "Worksheet", "View", "Answer", "Pinboard", "Table", "Joins", "Permissions", });
    internal_static_WorksheetEDocProto_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_WorksheetEDocProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_WorksheetEDocProto_descriptor,
        new java.lang.String[] { "Name", "Description", "Tables", "Joins", "TablePaths", "Formulas", "Filters", "WorksheetColumns", "Properties", "JoinsWith", "GenerationType", "LessonPlans", });
    internal_static_WorksheetEDocProto_QueryProperties_descriptor =
      internal_static_WorksheetEDocProto_descriptor.getNestedTypes().get(0);
    internal_static_WorksheetEDocProto_QueryProperties_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_WorksheetEDocProto_QueryProperties_descriptor,
        new java.lang.String[] { "IsBypassRls", "JoinProgressive", });
    internal_static_WorksheetEDocProto_WorksheetColumn_descriptor =
      internal_static_WorksheetEDocProto_descriptor.getNestedTypes().get(1);
    internal_static_WorksheetEDocProto_WorksheetColumn_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_WorksheetEDocProto_WorksheetColumn_descriptor,
        new java.lang.String[] { "Name", "Description", "ColumnId", "FormulaId", "Properties", });
    internal_static_LessonPlanEDocProto_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_LessonPlanEDocProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LessonPlanEDocProto_descriptor,
        new java.lang.String[] { "LessonId", "LessonPlanString", });
    internal_static_ViewEDocProto_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_ViewEDocProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ViewEDocProto_descriptor,
        new java.lang.String[] { "Name", "Description", "Tables", "Joins", "TablePaths", "Formulas", "SearchQuery", "ViewColumns", "JoinsWith", });
    internal_static_ViewEDocProto_ViewColumn_descriptor =
      internal_static_ViewEDocProto_descriptor.getNestedTypes().get(0);
    internal_static_ViewEDocProto_ViewColumn_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ViewEDocProto_ViewColumn_descriptor,
        new java.lang.String[] { "Name", "Description", "SearchOutputColumn", "Properties", });
    internal_static_ConnectionDoc_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_ConnectionDoc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ConnectionDoc_descriptor,
        new java.lang.String[] { "Name", "Type", "AuthenticationType", "Table", });
    internal_static_ConnectionDoc_TableDoc_descriptor =
      internal_static_ConnectionDoc_descriptor.getNestedTypes().get(0);
    internal_static_ConnectionDoc_TableDoc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ConnectionDoc_TableDoc_descriptor,
        new java.lang.String[] { "Name", "Id", "ExternalTable", "Column", });
    internal_static_ConnectionDoc_TableDoc_ExternalTableMapping_descriptor =
      internal_static_ConnectionDoc_TableDoc_descriptor.getNestedTypes().get(0);
    internal_static_ConnectionDoc_TableDoc_ExternalTableMapping_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ConnectionDoc_TableDoc_ExternalTableMapping_descriptor,
        new java.lang.String[] { "DbName", "SchemaName", "TableName", });
    internal_static_ConnectionDoc_TableDoc_ColumnDoc_descriptor =
      internal_static_ConnectionDoc_TableDoc_descriptor.getNestedTypes().get(1);
    internal_static_ConnectionDoc_TableDoc_ColumnDoc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ConnectionDoc_TableDoc_ColumnDoc_descriptor,
        new java.lang.String[] { "Name", "Id", "DataType", "ExternalColumn", });
    internal_static_ConditionalFormattingProto_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_ConditionalFormattingProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ConditionalFormattingProto_descriptor,
        new java.lang.String[] { "Rule", });
    internal_static_ConditionalFormattingProto_Range_descriptor =
      internal_static_ConditionalFormattingProto_descriptor.getNestedTypes().get(0);
    internal_static_ConditionalFormattingProto_Range_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ConditionalFormattingProto_Range_descriptor,
        new java.lang.String[] { "Min", "Max", });
    internal_static_ConditionalFormattingProto_Rule_descriptor =
      internal_static_ConditionalFormattingProto_descriptor.getNestedTypes().get(1);
    internal_static_ConditionalFormattingProto_Rule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ConditionalFormattingProto_Rule_descriptor,
        new java.lang.String[] { "Range", "Color", "PlotAsBand", });
    internal_static_TableVisualization_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_TableVisualization_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TableVisualization_descriptor,
        new java.lang.String[] { "TableColumns", "OrderedColumnIds", "ShowGridSummary", "ShowTableFooter", "WrapTableHeader", "ClientState", "ClientStateV2", });
    internal_static_TableVisualization_TableColumn_descriptor =
      internal_static_TableVisualization_descriptor.getNestedTypes().get(0);
    internal_static_TableVisualization_TableColumn_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TableVisualization_TableColumn_descriptor,
        new java.lang.String[] { "ColumnId", "ConditionalFormatting", "WrapColumnText", "ShowHeadline", "HeadlineAggregation", "ColumnWidth", });
    internal_static_ChartVisualization_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_ChartVisualization_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ChartVisualization_descriptor,
        new java.lang.String[] { "Type", "ChartColumns", "AxisConfigs", "ClientState", "ClientStateV2", "Locked", });
    internal_static_ChartVisualization_ChartColumn_descriptor =
      internal_static_ChartVisualization_descriptor.getNestedTypes().get(0);
    internal_static_ChartVisualization_ChartColumn_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ChartVisualization_ChartColumn_descriptor,
        new java.lang.String[] { "ColumnId", "ConditionalFormatting", "ShowDataLabels", });
    internal_static_ChartVisualization_AxisConfig_descriptor =
      internal_static_ChartVisualization_descriptor.getNestedTypes().get(1);
    internal_static_ChartVisualization_AxisConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ChartVisualization_AxisConfig_descriptor,
        new java.lang.String[] { "X", "Y", "Color", "Size", "Category", "Sort", "Hidden", });
    internal_static_AnswerEDocProto_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_AnswerEDocProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_AnswerEDocProto_descriptor,
        new java.lang.String[] { "Name", "Description", "Tables", "Joins", "TablePaths", "Formulas", "SearchQuery", "AnswerColumns", "Table", "Chart", "DisplayMode", "ClientState", });
    internal_static_AnswerEDocProto_AnswerColumn_descriptor =
      internal_static_AnswerEDocProto_descriptor.getNestedTypes().get(0);
    internal_static_AnswerEDocProto_AnswerColumn_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_AnswerEDocProto_AnswerColumn_descriptor,
        new java.lang.String[] { "Id", "Name", "CustomName", });
    internal_static_PinnedVisualization_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_PinnedVisualization_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PinnedVisualization_descriptor,
        new java.lang.String[] { "Id", "Answer", "DisplayHeadlineColumn", "GenericVizSubType", });
    internal_static_PinboardLayout_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_PinboardLayout_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PinboardLayout_descriptor,
        new java.lang.String[] { "Tiles", });
    internal_static_PinboardLayout_Tile_descriptor =
      internal_static_PinboardLayout_descriptor.getNestedTypes().get(0);
    internal_static_PinboardLayout_Tile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PinboardLayout_Tile_descriptor,
        new java.lang.String[] { "VisualizationId", "Size", });
    internal_static_PinboardEDocProto_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_PinboardEDocProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PinboardEDocProto_descriptor,
        new java.lang.String[] { "Name", "Description", "Tables", "Visualizations", "Filters", "Layout", });
    internal_static_LogicalTableEDocProto_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_LogicalTableEDocProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LogicalTableEDocProto_descriptor,
        new java.lang.String[] { "Name", "Description", "Db", "Schema", "DbTable", "Connection", "Columns", "RlsRules", "JoinsWith", });
    internal_static_LogicalTableEDocProto_RlsRule_descriptor =
      internal_static_LogicalTableEDocProto_descriptor.getNestedTypes().get(0);
    internal_static_LogicalTableEDocProto_RlsRule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LogicalTableEDocProto_RlsRule_descriptor,
        new java.lang.String[] { "Tables", "Joins", "TablePaths", "Rules", });
    internal_static_LogicalTableEDocProto_RlsRule_Rule_descriptor =
      internal_static_LogicalTableEDocProto_RlsRule_descriptor.getNestedTypes().get(0);
    internal_static_LogicalTableEDocProto_RlsRule_Rule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LogicalTableEDocProto_RlsRule_Rule_descriptor,
        new java.lang.String[] { "Name", "Expr", });
    internal_static_LogicalTableEDocProto_LogicalColumnEDocProto_descriptor =
      internal_static_LogicalTableEDocProto_descriptor.getNestedTypes().get(1);
    internal_static_LogicalTableEDocProto_LogicalColumnEDocProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LogicalTableEDocProto_LogicalColumnEDocProto_descriptor,
        new java.lang.String[] { "Name", "Description", "DbColumnName", "Properties", "DbColumnProperties", });
    internal_static_LogicalTableEDocProto_DbColumnProperties_descriptor =
      internal_static_LogicalTableEDocProto_descriptor.getNestedTypes().get(2);
    internal_static_LogicalTableEDocProto_DbColumnProperties_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LogicalTableEDocProto_DbColumnProperties_descriptor,
        new java.lang.String[] { "DataType", });
    internal_static_JoinEDocProto_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_JoinEDocProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_JoinEDocProto_descriptor,
        new java.lang.String[] { "Name", "Description", "SourceTable", "DestinationTable", "ColumnPairs", "Type", "GenericJoinCondition", "IsOneToOne", });
    internal_static_JoinEDocProto_ColumnPair_descriptor =
      internal_static_JoinEDocProto_descriptor.getNestedTypes().get(0);
    internal_static_JoinEDocProto_ColumnPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_JoinEDocProto_ColumnPair_descriptor,
        new java.lang.String[] { "SourceColumn", "DestinationColumn", });
    internal_static_LogicalSchemaProto_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_LogicalSchemaProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LogicalSchemaProto_descriptor,
        new java.lang.String[] { "Tables", "Joins", });
    internal_static_ObjectPermissions_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_ObjectPermissions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ObjectPermissions_descriptor,
        new java.lang.String[] { "Columns", "AccessType", "Users", "UserGroups", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(AnnotationOuterClass.Annotation.allowedValuesKey);
    registry.add(AnnotationOuterClass.Annotation.compulsory);
    registry.add(AnnotationOuterClass.Annotation.unique);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    Common.getDescriptor();
    AnnotationOuterClass.getDescriptor();
    NumberFormat.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
